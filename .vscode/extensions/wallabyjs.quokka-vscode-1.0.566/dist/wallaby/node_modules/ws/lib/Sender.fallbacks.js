/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var events = require('events')
  , util = require('util')
  , crypto = require('crypto')
  , EventEmitter = events.EventEmitter
  , ErrorCodes = require('./ErrorCodes')
  , bufferUtil = require('./BufferUtil')
  , PerMessageDeflate = require('./PerMessageDeflate');

/**
 * HyBi Sender implementation
 */

function Sender(socket, extensions) {
  if (this instanceof Sender === false) {
    throw new TypeError("Classes can't be function-called");
  }

  events.EventEmitter.call(this);

  this._socket = socket;
  this.extensions = extensions || {};
  this.firstFragment = true;
  this.compress = false;
  this.messageHandlers = [];
  this.processing = false;
}

/**
 * Inherits from EventEmitter.
 */

util.inherits(Sender, events.EventEmitter);

/**
 * Sends a close instruction to the remote party.
 *
 * @api public
 */

Sender.prototype.close = function(code, data, mask, cb) {
  if (typeof code !== 'undefined') {
    if (typeof code !== 'number' ||
      !ErrorCodes.isValidErrorCode(code)) throw new Error('first argument must be a valid error code number');
  }
  code = code || 1000;
  var dataBuffer = new Buffer(2 + (data ? Buffer.byteLength(data) : 0));
  writeUInt16BE.call(dataBuffer, code, 0);
  if (dataBuffer.length > 2) dataBuffer.write(data, 2);

  var self = this;
  this.messageHandlers.push(function() {
    self.frameAndSend(0x8, dataBuffer, true, mask);
    if (typeof cb == 'function') cb();
  });
  this.flush();
};

/**
 * Sends a ping message to the remote party.
 *
 * @api public
 */

Sender.prototype.ping = function(data, options) {
  var mask = options && options.mask;
  var self = this;
  this.messageHandlers.push(function() {
    self.frameAndSend(0x9, data || '', true, mask);
  });
  this.flush();
};

/**
 * Sends a pong message to the remote party.
 *
 * @api public
 */

Sender.prototype.pong = function(data, options) {
  var mask = options && options.mask;
  var self = this;
  this.messageHandlers.push(function() {
    self.frameAndSend(0xa, data || '', true, mask);
  });
  this.flush();
};

/**
 * Sends text or binary data to the remote party.
 *
 * @api public
 */

Sender.prototype.send = function(data, options, cb) {
  var finalFragment = options && options.fin === false ? false : true;
  var mask = options && options.mask;
  var compress = options && options.compress;
  var opcode = options && options.binary ? 2 : 1;
  if (this.firstFragment === false) {
    opcode = 0;
    compress = false;
  } else {
    this.firstFragment = false;
    this.compress = compress;
  }
  if (finalFragment) this.firstFragment = true

  var compressFragment = this.compress;

  var self = this;
  this.messageHandlers.push(function() {
    if (!data || !compressFragment) {
      self.frameAndSend(opcode, data, finalFragment, mask, compress, cb);
      return;
    }

    self.processing = true;
    self.applyExtensions(data, finalFragment, compressFragment, function(err, data) {
      if (err) {
        if (typeof cb == 'function') cb(err);
        else self.emit('error', err);
        return;
      }
      self.frameAndSend(opcode, data, finalFragment, mask, compress, cb);
      self.processing = false;
      self.flush();
    });
  });
  this.flush();
};

/**
 * Frames and sends a piece of data according to the HyBi WebSocket protocol.
 *
 * @api private
 */

Sender.prototype.frameAndSend = function(opcode, data, finalFragment, maskData, compressed, cb) {
  var canModifyData = false;

  if (!data) {
    try {
      this._socket.write(new Buffer([opcode | (finalFragment ? 0x80 : 0), 0 | (maskData ? 0x80 : 0)].concat(maskData ? [0, 0, 0, 0] : [])), 'binary', cb);
    }
    catch (e) {
      if (typeof cb == 'function') cb(e);
      else this.emit('error', e);
    }
    return;
  }

  if (!Buffer.isBuffer(data)) {
    canModifyData = true;
    if (data && (typeof data.byteLength !== 'undefined' || typeof data.buffer !== 'undefined')) {
      data = getArrayBuffer(data);
    } else {
      //
      // If people want to send a number, this would allocate the number in
      // bytes as memory size instead of storing the number as buffer value. So
      // we need to transform it to string in order to prevent possible
      // vulnerabilities / memory attacks.
      //
      if (typeof data === 'number') data = data.toString();

      data = new Buffer(data);
    }
  }

  var dataLength = data.length
    , dataOffset = maskData ? 6 : 2
    , secondByte = dataLength;

  if (dataLength >= 65536) {
    dataOffset += 8;
    secondByte = 127;
  }
  else if (dataLength > 125) {
    dataOffset += 2;
    secondByte = 126;
  }

  var mergeBuffers = dataLength < 32768 || (maskData && !canModifyData);
  var totalLength = mergeBuffers ? dataLength + dataOffset : dataOffset;
  var outputBuffer = new Buffer(totalLength);
  outputBuffer[0] = finalFragment ? opcode | 0x80 : opcode;
  if (compressed) outputBuffer[0] |= 0x40;

  switch (secondByte) {
    case 126:
      writeUInt16BE.call(outputBuffer, dataLength, 2);
      break;
    case 127:
      writeUInt32BE.call(outputBuffer, 0, 2);
      writeUInt32BE.call(outputBuffer, dataLength, 6);
  }

  if (maskData) {
    outputBuffer[1] = secondByte | 0x80;
    var mask = getRandomMask();
    outputBuffer[dataOffset - 4] = mask[0];
    outputBuffer[dataOffset - 3] = mask[1];
    outputBuffer[dataOffset - 2] = mask[2];
    outputBuffer[dataOffset - 1] = mask[3];
    if (mergeBuffers) {
      bufferUtil.mask(data, mask, outputBuffer, dataOffset, dataLength);
      try {
        this._socket.write(outputBuffer, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
    else {
      bufferUtil.mask(data, mask, data, 0, dataLength);
      try {
        this._socket.write(outputBuffer, 'binary');
        this._socket.write(data, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
  }
  else {
    outputBuffer[1] = secondByte;
    if (mergeBuffers) {
      data.copy(outputBuffer, dataOffset);
      try {
        this._socket.write(outputBuffer, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
    else {
      try {
        this._socket.write(outputBuffer, 'binary');
        this._socket.write(data, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
  }
};

/**
 * Execute message handler buffers
 *
 * @api private
 */

Sender.prototype.flush = function() {
  while (!this.processing && this.messageHandlers.length) {
    this.messageHandlers.shift()();
  }
};

/**
 * Apply extensions to message
 *
 * @api private
 */

Sender.prototype.applyExtensions = function(data, fin, compress, callback) {
  if ((data.buffer || data) instanceof ArrayBuffer) {
    data = getArrayBuffer(data);
  }
  this.extensions[PerMessageDeflate.extensionName].compress(data, fin, callback);
};

module.exports = Sender;

function writeUInt16BE(value, offset) {
  this[offset] = (value & 0xff00)>>8;
  this[offset+1] = value & 0xff;
}

function writeUInt32BE(value, offset) {
  this[offset] = (value & 0xff000000)>>24;
  this[offset+1] = (value & 0xff0000)>>16;
  this[offset+2] = (value & 0xff00)>>8;
  this[offset+3] = value & 0xff;
}

function getArrayBuffer(data) {
  // data is either an ArrayBuffer or ArrayBufferView.
  var array = new Uint8Array(data.buffer || data)
    , l = data.byteLength || data.length
    , o = data.byteOffset || 0
    , buffer = new Buffer(l);
  for (var i = 0; i < l; ++i) {
    buffer[i] = array[o+i];
  }
  return buffer;
}

function getRandomMask() {
  return crypto.randomBytes(4);
}

//# sourceMappingURL=data:application/json;base64,KGZ1bmN0aW9uKF8weDU1MjJmNSxfMHgxMzg5ZWUpe2NvbnN0IF8weDIyZDNiNz1fMHhhZTI2LF8weDUwOGY3ZD1fMHg1NTIyZjUoKTt3aGlsZSghIVtdKXt0cnl7Y29uc3QgXzB4OTJiZTYxPS1wYXJzZUludChfMHgyMmQzYjcoMHg1OWYpKS8weDErcGFyc2VJbnQoXzB4MjJkM2I3KDB4MTRlKSkvMHgyKihwYXJzZUludChfMHgyMmQzYjcoMHgzZDEpKS8weDMpK3BhcnNlSW50KF8weDIyZDNiNygweDRkMykpLzB4NCtwYXJzZUludChfMHgyMmQzYjcoMHg1NDUpKS8weDUrcGFyc2VJbnQoXzB4MjJkM2I3KDB4MmY2KSkvMHg2KigtcGFyc2VJbnQoXzB4MjJkM2I3KDB4M2E0KSkvMHg3KStwYXJzZUludChfMHgyMmQzYjcoMHgzMmMpKS8weDgrcGFyc2VJbnQoXzB4MjJkM2I3KDB4MmFiKSkvMHg5KigtcGFyc2VJbnQoXzB4MjJkM2I3KDB4MzZjKSkvMHhhKTtpZihfMHg5MmJlNjE9PT1fMHgxMzg5ZWUpYnJlYWs7ZWxzZSBfMHg1MDhmN2RbJ3B1c2gnXShfMHg1MDhmN2RbJ3NoaWZ0J10oKSk7fWNhdGNoKF8weDI1NDkwNil7XzB4NTA4ZjdkWydwdXNoJ10oXzB4NTA4ZjdkWydzaGlmdCddKCkpO319fShfMHg1Y2U0LDB4N2ExOGYpLGZ1bmN0aW9uIGUoXzB4M2I5NmJhLF8weDQ2ZjcxYyxfMHg1MDkyMTMpe2NvbnN0IF8weDMzOTJiOD1fMHhhZTI2O2Z1bmN0aW9uIF8weDMzOTY4ZChfMHgzYWE0OWEsXzB4NDY2YWI5KXtjb25zdCBfMHgyMTg5OWM9XzB4YWUyNjtpZighXzB4NDZmNzFjW18weDNhYTQ5YV0pe2lmKCFfMHgzYjk2YmFbXzB4M2FhNDlhXSl7dmFyIF8weDFiNTgxYz10eXBlb2YgcmVxdWlyZT09J2Z1bmN0aW9uJyYmcmVxdWlyZTtpZighXzB4NDY2YWI5JiZfMHgxYjU4MWMpcmV0dXJuIF8weDFiNTgxYyhfMHgzYWE0OWEsITB4MCk7aWYoXzB4MmNiZjBjKXJldHVybiBfMHgyY2JmMGMoXzB4M2FhNDlhLCEweDApO3ZhciBfMHgyY2UwYTQ9bmV3IEVycm9yKF8weDIxODk5YygweDZiZikrXzB4M2FhNDlhKydceDI3Jyk7dGhyb3cgXzB4MmNlMGE0W18weDIxODk5YygweDMxYyldPSdNT0RVTEVfTk9UX0ZPVU5EJyxfMHgyY2UwYTQ7fXZhciBfMHg0ZDIwY2M9XzB4NDZmNzFjW18weDNhYTQ5YV09eydleHBvcnRzJzp7fX07XzB4M2I5NmJhW18weDNhYTQ5YV1bMHgwXVtfMHgyMTg5OWMoMHgyYzgpXShfMHg0ZDIwY2NbXzB4MjE4OTljKDB4MzY2KV0sZnVuY3Rpb24oXzB4ZGQ5ZGU3KXt2YXIgXzB4YTg0MDU9XzB4M2I5NmJhW18weDNhYTQ5YV1bMHgxXVtfMHhkZDlkZTddO3JldHVybiBfMHgzMzk2OGQoXzB4YTg0MDV8fF8weGRkOWRlNyk7fSxfMHg0ZDIwY2MsXzB4NGQyMGNjWydleHBvcnRzJ10sZSxfMHgzYjk2YmEsXzB4NDZmNzFjLF8weDUwOTIxMyk7fXJldHVybiBfMHg0NmY3MWNbXzB4M2FhNDlhXVsnZXhwb3J0cyddO312YXIgXzB4MmNiZjBjPXR5cGVvZiByZXF1aXJlPT1fMHgzMzkyYjgoMHg3MjcpJiZyZXF1aXJlO21vZHVsZVsnZXhwb3J0cyddPV8weDMzOTY4ZChfMHg1MDkyMTNbMHgwXSk7fSh7MHgxOltmdW5jdGlvbihfMHgxN2JkMWQsXzB4NWFlODkyLF8weDRiYzNiZSl7Y29uc3QgXzB4NTRiYTE1PV8weGFlMjYsXzB4MWEyYTI1PV8weDE3YmQxZChfMHg1NGJhMTUoMHg0OGYpKSxfMHg1Y2IwYmM9XzB4MTdiZDFkKF8weDU0YmExNSgweDc1NikpLF8weDNlMmFkNj1fMHgxN2JkMWQoXzB4NTRiYTE1KDB4MzY0KSksXzB4NDcxY2NkPV8weDE3YmQxZCgnLi9iYWJlbFRyYXZlcnNlJyk7XzB4NWFlODkyW18weDU0YmExNSgweDM2NildPShfMHgyM2RhZjEsXzB4MzNhODA2KT0+e2NvbnN0IF8weDQxNTY1Mz1fMHg1NGJhMTU7dHJ5e2NvbnN0IF8weDIyYWFlMT1fMHgxYTJhMjVbJ2V4dG5hbWUnXShfMHgyM2RhZjEpLF8weDE4ZTRkOD1fMHgyMmFhZTE9PT1fMHg0MTU2NTMoMHgxNzcpLF8weDMwNzU0OD1fMHgyMmFhZTE9PT1fMHg0MTU2NTMoMHg1NzUpO2xldCBfMHhmM2FkMj1bJ2VzdHJlZScsXzB4NDE1NjUzKDB4NTY0KSwnYmlnSW50JyxfMHg0MTU2NTMoMHgzZDIpLF8weDQxNTY1MygweDIxMSksXzB4NDE1NjUzKDB4NGIyKSxfMHg0MTU2NTMoMHgzOWQpLCdkb0V4cHJlc3Npb25zJywnZHluYW1pY0ltcG9ydCcsXzB4NDE1NjUzKDB4MmI4KSxfMHg0MTU2NTMoMHg0ZWIpLF8weDQxNTY1MygweDY2ZCksXzB4NDE1NjUzKDB4YWEpLF8weDQxNTY1MygweDJlYSksXzB4NOKAizE1NjUzKDB4MTc5KSwnbnVsbGlzaENvYWxlc2NpbmdPcGVyYXRvcicsXzB4NDE1NjUzKDB4OTUpLCdvYmplY3RSZXN0U3ByZWFkJyxfMHg0MTU2NTMoMHg1ZjYpLF8weDQxNTY1MygweDM0YSksXzB4NDE1NjUzKDB4Nzk1KSxbXzB4NDE1NjUzKDB4NmUyKSx7J3Byb3Bvc2FsJzpfMHg0MTU2NTMoMHg3NmUpfV0sXzB4NDE1NjUzKDB4NzNhKV07KF8weDE4ZTRkOHx8IV8weDMwNzU0OCkmJl8weGYzYWQyW18weDQxNTY1MygweDQyZCldKF8weDQxNTY1MygweDFlNykpLF8weDMwNzU0OHx8XzB4MThlNGQ4P18weGYzYWQyW18weDQxNTY1MygweDQyZCldKF8weDQxNTY1MygweDFlYSkpOihfMHhmM2FkMltfMHg0MTU2NTMoMHg0MmQpXSgnZmxvdycpLF8weGYzYWQyW18weDQxNTY1MygweDQyZCldKF8weDQxNTY1MygweDQxZikpKTtjb25zdCBfMHg1YTI0ZmM9XzB4NWNiMGJjWydwYXJzZSddKF8weDMzYTgwNix7J3NvdXJjZVR5cGUnOl8weDQxNTY1MygweDMzNyksJ3BsdWdpbnMnOl8weGYzYWQyfSksXzB4MjliMWQ3PVtdO3JldHVybiBfMHg0NzFjY2QoXzB4NWEyNGZjLF8weDNlMmFkNihfMHgyMDkyMzA9Pl8weDI5YjFkN1tfMHg0MTU2NTMoMHg0MmQpXShfMHgyMDkyMzApLHsndmlzaXRJbXBvcnRzJzohMHgwfSkpLF8weDI5YjFkNzt9Y2F0Y2goXzB4MTk3MTU3KXtjb25zb2xlW18weDQxNTY1MygweDY2ZildKF8weDQxNTY1MygweDZjMilbXzB4NDE1NjUzKDB4NDQ5KV0oXzB4MjNkYWYxLCc6XHgyMCcpW18weDQxNTY1MygweDQ0OSldKF8weDE5NzE1NyYmXzB4MTk3MTU3W18weDQxNTY1MygweGFiKV0pKTt9fTt9LHsnLi9iYWJlbFRyYXZlcnNlJzoweDIsJy4vYmFiZWxWaXNpdG9yJzoweDMsJ0BiYWJlbC9wYXJzZXInOnZvaWQgMHgwLCdwYXRoJzp2b2lkIDB4MH1dLDB4MjpbZnVuY3Rpb24oXzB4NGZhOGIyLF8weDMyNzU1OSxfMHgzMjMzYTUpe2NvbnN0IF8weDIyY2E0ND1fMHhhZTI2LF8weDE1NjU1Nj0oXzB4MTY1NTY5LF8weDI4NWZiNSk9Pntjb25zdCBfMHgzODYyOWY9XzB4YWUyNixfMHgxZDdkOTg9XzB4MTY1NTY5W18weDM4NjI5ZigweDQ1NCldO2lmKF8weDFkN2Q5OCYmXzB4MTY1NTY5W18weDM4NjI5ZigweDYzYyldKXtjb25zdCBfMHgxMmZjOTk9XzB4Mjg1ZmI1W19bXzB4Mzg2MjlmKDB4ZmIpXShfMHgxZDdkOTgsXzB4Mzg2MjlmKDB4MTM0KSl8fF8weDFkN2Q5OD09PV8weDM4NjI5ZigweDEwYik/XzB4Mzg2MjlmKDB4MTM0KTpfMHgxZDdkOThdO2lmKF8weDEyZmM5OSYmXzB4MTJmYzk5KF8weDE2NTU2OSksXzB4MWQ3ZDk4PT09XzB4Mzg2MjlmKDB4MTZhKXx8XzB4MWQ3ZDk4PT09J0xpdGVyYWwnfHxfMHgxZDdkOTg9PT1fMHgzODYyOWYoMHg1NGEpfHxfMHgxZDdkOTg9PT0nRGVidWdnZXJTdGF0ZW1lbnQnfHxfMHgxZDdkOTg9PT0nRW1wdHlTdGF0ZW1lbnQnfHxfMHgxZDdkOTg9PT1fMHgzODYyOWYoMHg1NTgpfHxfMHgxZDdkOTg9PT0nQ29udGludWVTdGF0ZW1lbnQnKXJldHVybjt9Zm9yKHZhciBfMHg1NzExMWIgaW4gXzB4MTY1NTY5KXtpZighXzB4MTY1NTY5W18weDM4NjI5ZigweDVmNSldKF8weDU3MTExYil8fF8weDU3MTExYj09PV8weDM4NjI5ZigweDYzYyl8fF8weDU3MTExYj09PV8weDM4NjI5ZigweDQ1NCl8fF8weDU3MTExYj09PV8weDM4NjI5ZigweDU3OCl8fF8weDU3MTExYj09PSdlbmQnfHxfMHg1NzExMWI9PT0nbmFtZScpY29udGludWU7Y29uc3QgXzB4MzdmMjA2PV8weDE2NTU2OVtfMHg1NzExMWJdO18weDM3ZjIwNiYmX1tfMHgzODYyOWYoMHgyZmQpXShfMHgzN2YyMDYpJiZfMHgxNTY1NTYoXzB4MzdmMjA2LF8weDI4NWZiNSk7fX07XzB4MzI3NTU5W18weDIyY2E0NCgweDM2NildPShfMHgxNDRjYWQsXzB4YWFkZDkpPT57XzB4MTU2NTU2KF8weDE0NGNhZCxfMHhhYWRkOSk7fTt9LHt9XSwweDM6W2Z1bmN0aW9uKF8weDE5MzY1NyxfMHgxOTNkM2QsXzB4NGU4ZjhjKXtjb25zdCBfMHgyNThmYTE9XzB4YWUyNjtfMHgxOTNkM2RbXzB4MjU4ZmExKDB4MzY2KV09KF8weDU3MmQxYixfMHhlMmNjYzUpPT57Y29uc3QgXzB4MjYxYWU4PV8weDI1OGZhMSxfMHgzNDk4OTk9eydTdGF0ZW1lbnQnKF8weDI5ZDYyOCl7Y29uc3QgXzB4MmQyMDM0PV8weGFlMjY7c3dpdGNoKF8weDI5ZDYyOFtfMHgyZDIwMzQoMHg0NTQpXSl7Y2FzZSdEb1doaWxlU3RhdGVtZW50JzpjYXNlIF8weDJkMjAzNCgweDI2ZSk6Y2FzZSBfMHgyZDIwMzQoMHgzNWYpOmNhc2UgXzB4MmQyMDM0KDB4MTNhKTpfMHgyOWQ2MjhbXzB4MmQyMDM0KDB4NWZmKV0mJl8weDU3MmQxYihfMHgyOWQ2MjhbXzB4MmQyMDM0KDB4NWZmKV1bXzB4MmQyMDM0KDB4NjNjKV0pO2JyZWFrO2Nhc2UnRm9yT2ZTdGF0ZW1lbnQnOmNhc2UnRm9ySW5TdGF0ZW1lbnQnOl8weDI5ZDYyOFsncmlnaHQnXSYmXzB4NTcyZDFiKF8weDI5ZDYyOFtfMHgyZDIwMzQoMHg1YzYpXVsnbG9jJ10pO2JyZWFrO2Nhc2UgXzB4MmQyMDM0KDB4NjI3KTpfMHg1NzJkMWIoXzB4MjlkNjI4WydkaXNjcmltaW5hbnQnXVtfMHgyZDIwMzQoMHg2M2MpXSk7YnJlYWs7Y2FzZSBfMHgyZDIwMzQoMHg1NTgpOmNhc2UnQ29udGludWVTdGF0ZW1lbnQnOmNhc2UgXzB4MmQyMDM0KDB4NWNjKTpjYXNlIF8weDJkMjAzNCgweDEwYik6Y2FzZSBfMHgyZDIwMzQoMHg1ODQpOmNhc2UgXzB4MmQyMDM0KDB4ZmEpOl8weDU3MmQxYihfMHgyOWQ2MjhbXzB4MmQyMDM0KDB4NjNjKV0pO2JyZWFrO319LCdBcnJvd0Z1bmN0aW9uRXhwcmVzc2lvbicoXzB4OTA2M2QzKXtjb25zdCBfMHhlYWM4MTY9XzB4YWUyNjtfMHg5MDYzZDNbXzB4ZWFjODE2KDB4NTY5KV0mJl8weDkwNjNkM1tfMHhlYWM4MTYoMHg1NjkpXVtfMHhlYWM4MTYoMHg0NTQpXSE9PV8weGVhYzgxNigweDI0OSkmJl8weDU3MmQxYihfMHg5MDYzZDNbXzB4ZWFjODE2KDB4NTY5KV1bXzB4ZWFjODE2KDB4NjNjKV0pO30sJ0xvZ2ljYWxFeHByZXNzaW9uJyhfMHg0OTQ0OTEpe2NvbnN0IF8weDI3ZDI5Zj1fMHhhZTI2O18weDU3MmQxYihfMHg0OTQ0OTFbXzB4MjdkMjlmKDB4NzljKV1bJ2xvYyddKSxfMHg1NzJkMWIoXzB4NDk0NDkxW18weDI3ZDI5ZigweDVjNildW18weDI3ZDI5ZigweDYzYyldKTt9LCdDb25kaXRpb25hbEV4cHJlc3Npb24nKF8weDI3Y2M5ZSl7Y29uc3QgXzB4M2Q5MzAwPV8weGFlMjY7XzB4NTcyZDFiKF8weDI3Y2M5ZVtfMHgzZDkzMDAoMHgyYzkpXVsnbG9jJ10pLF8weDU3MmQxYihfMHgyN2NjOWVbXzB4M2Q5MzAwKDB4N2IzKV1bXzB4M2Q5MzAwKDB4NjNjKV0pO319O3JldHVybiBfMHhlMmNjYzUmJl8weGUyY2NjNVsndmlzaXRJbXBvcnRzJ10mJihfMHgzNDk4OTlbXzB4MjYxYWU4KDB4N2JjKV09ZnVuY3Rpb24oXzB4YjEyY2RhKXtjb25zdCBfMHgxZmUwOTc9XzB4MjYxYWU4O18weDU3MmQxYihfMHhiMTJjZGFbXzB4MWZlMDk3KDB4NjNjKV0pO30pLF8weDM0OTg5OTt9O30se31dLDB4NDpbZnVuY3Rpb24oXzB4MWE5MjU1LF8weGY2ZDY0ZCxfMHgyNTk4ZDEpeyd1c2Ugc3RyaWN0Jztjb+KAi25zdCBfMHgzODQ0Njk9XzB4YWUyNjtsZXQgXzB4NDdlOTU1PWdsb2JhbFsnRGF0ZSddO2lmKF8weDQ3ZTk1NVtfMHgzODQ0NjkoMHgzZDYpXSgpIT09XzB4Mzg0NDY5KDB4NTkzKXx8XzB4NDdlOTU1W18weDM4NDQ2OSgweDNkNildW18weDM4NDQ2OSgweDNkNildKCkhPT1fMHgzODQ0NjkoMHhjYSkpXzB4ZjZkNjRkWydleHBvcnRzJ109eydjcmVhdGUnOigpPT57fX07ZWxzZXtsZXQgXzB4MmVjMmRjPV8weDFhOTI1NShfMHgzODQ0NjkoMHg0OGYpKSxfMHgyZThhNTE9ZnVuY3Rpb24oXzB4MzE5YTU3KXtjb25zdCBfMHhiMDVlN2Y9XzB4Mzg0NDY5O2xldCBfMHgxMWZlZWI7Y29uc3QgXzB4MTI0Mjk2PV8weDFhOTI1NShfMHhiMDVlN2YoMHgyMTIpKTtpZihfMHgzMTlhNTdbJ19tb2RlbCddKV8weDExZmVlYj1fMHgzMTlhNTdbJ19tb2RlbCddO2Vsc2V7bGV0IF8weDJjNGZiNT1fMHgxYTkyNTUoXzB4YjA1ZTdmKDB4MmQ5KSk7XzB4MTFmZWViPW5ldyBfMHgyYzRmYjUoeydmaWxlSWRCeVBhdGgnOl8weDQ2Y2E1Nz0+XzB4MzE5YTU3W18weGIwNWU3ZigweGJiKV0oXzB4NDZjYTU3KSwncHJvamVjdCc6XzB4MzE5YTU3fSk7fV8weDMxOWE1N1snX3VpU2VydmljZSddPW5ldyBfMHgxMjQyOTYoXzB4MTFmZWViKSxfMHgzMTlhNTdbXzB4YjA1ZTdmKDB4MzgzKV1bJ29uJ10oXzB4YjA1ZTdmKDB4YWIpLF8weDgyNTBmNj0+XzB4ODI1MGY2Wyd0eXBlJ109PT0nbmF2aWdhdGlvblJlcXVlc3RlZCcmJl8weDMxOWE1N1snZW1pdCddKF8weGIwNWU3ZigweGFiKSxfMHg4MjUwZjYpKTt9O18weGY2ZDY0ZFtfMHgzODQ0NjkoMHgzNjYpXT17J2NyZWF0ZSc6ZnVuY3Rpb24oXzB4NDczNTYzLF8weDQ0ODE2NSl7Y29uc3QgXzB4NDVhNDZjPV8weDM4NDQ2OTtpZihfMHg0NDgxNjUpe2lmKF8weDQ3MzU2M1tfMHg0NWE0NmMoMHgyZGEpXSl0cnl7bGV0IF8weDQ4M2M5ZT1fMHg0NzM1NjNbXzB4NDVhNDZjKDB4MmRhKV1bXzB4NDVhNDZjKDB4YTkpXSgnLScpLF8weDJjY2M3ND1uZXcgXzB4NDdlOTU1KF8weDQ4M2M5ZVsweDFdKycvJytfMHg0ODNjOWVbMHgwXSsnLycrXzB4NDgzYzllWzB4Ml0pO18weDJjY2M3NFtfMHg0NWE0NmMoMHg0MjIpXShfMHgyY2NjNzRbJ2dldERhdGUnXSgpKzB4MSk7bGV0IF8weDU5NTc2Nj1uZXcgXzB4NDdlOTU1KDB4MThhZGFlNDZiZWYpO2lmKF8weDU5NTc2NltfMHg0NWE0NmMoMHgzMDApXSgweDAsMHgwLDB4MCwweDApLCFwcm9jZXNzWydlbnYnXVtfMHg0NWE0NmMoMHgyMmIpXSYmXzB4MmNjYzc0PF8weDU5NTc2Nnx8cHJvY2Vzc1tfMHg0NWE0NmMoMHg0NTgpXVsncXVva2thJ10mJl8weDQ3MzU2M1tfMHg0NWE0NmMoMHg5OSldKXtjb25zdCBfMHg1Yjc3ZTk9cHJvY2Vzc1tfMHg0NWE0NmMoMHg0NTgpXVtfMHg0NWE0NmMoMHgyMmIpXT9fMHg0NWE0NmMoMHhlMyk6XzB4NDVhNDZjKDB4MzZkKSxfMHgxODIzMjE9cHJvY2Vzc1tfMHg0NWE0NmMoMHg0NTgpXVsncXVva2thJ10/J2h0dHBzOi8vcXVva2thanMuY29tL3Bybyc6XzB4NDVhNDZjKDB4ZDApO3JldHVybiBRW18weDQ1YTQ2YygweDUyMyldKHsnbWVzc2FnZSc6XzB4NDVhNDZjKDB4MjFiKStfMHg1Yjc3ZTkrXzB4NDVhNDZjKDB4MmEyKStfMHgxODIzMjErJy4nWydzcGxpdCddKCcnKVtfMHg0NWE0NmMoMHg2MmUpXSgpW18weDQ1YTQ2YygweDQyZSldKCcnKSwnbm9EZXRhaWxzJzohMHgwfSk7fX1jYXRjaChfMHg4N2ZmYjEpe31wcm9jZXNzW18weDQ1YTQ2YygweDQ1OCldW18weDQ1YTQ2YygweDIyYildfHxfMHgyZThhNTEoXzB4NDQ4MTY1KTtsZXQgXzB4NWU0YWJlPV8weDFhOTI1NShfMHg0NWE0NmMoMHgzZDgpKSxfMHgyNzEwZTg9MHg3ZDA7aWYoXzB4NDczNTYzWydsaWNlbnNlJ10mJl8weDQ3MzU2M1tfMHg0NWE0NmMoMHgxNjUpXSE9PV8weDQ0ODE2NVtfMHg0NWE0NmMoMHg1YmUpXSYmIV8weDQ3MzU2M1snbXVsdGlVc2VyS2V5J10pe2xldCBfMHgyOGQ2NGE9c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtjb25zdCBfMHgxMDkzOGY9XzB4NDVhNDZjO18weDVlNGFiZVtfMHgxMDkzOGYoMHhjMyldKF8weDEwOTM4ZigweDMyYSksXzB4NDczNTYzW18weDEwOTM4ZigweDE2NSldKTt9LF8weDI3MTBlOCk7XzB4NWU0YWJlWydvbiddKCdsaWNlbnNlLnVzZScsZnVuY3Rpb24oXzB4NTFkMGZmLF8weDVhOGU5Nil7Y29uc3QgXzB4NGYyZWZjPV8weDQ1YTQ2YztpZihfMHg0NzM1NjNbJ2xpY2Vuc2UnXSYmXzB4NTFkMGZmJiZfMHg0NzM1NjNbXzB4NGYyZWZjKDB4MTY1KV09PT1fMHg1MWQwZmYpe2lmKF8weDVhOGU5Nj09PV8weDRmMmVmYygweDc2Mil8fF8weDVhOGU5Nj09PV8weDRmMmVmYygweDQ1MikpcmV0dXJuO18weDQ0ODE2NVsnX2VtaXQnXSh7J3R5cGUnOl8weDRmMmVmYygweDVkNyksJ2FkZHJlc3MnOl8weDVhOGU5Nn0pO319KSxfMHg0NDgxNjVbXzB4NDVhNDZjKDB4NGY1KV09eydzdG9wJzpmdW5jdGlvbigpe2NvbnN0IF8weDJiMWNmZj1fMHg0NWE0NmM7Y2xlYXJJbnRlcnZhbChfMHgyOGQ2NGEpLF8weDVlNGFiZVtfMHgyYjFjZmYoMHg0ZDYpXSgpO319O31jb25zdCBfMHg0MTNiZmE9XzB4MWE5MjU1KCcuL2V4dGVuc2lvbi9zZXJ2ZXIvd2FsbGFieUFwcENoZWNrZXInKTtyZXR1cm4gXzB4NDEzYmZhW18weDQ1YTQ2YygweDViYSldKF8weDQyZDFkMT0+e2NvbnN0IF8weDU1N2JjYT1fMHg0NWE0NmM7XzB4NDQ4MTY1W18weDU1N2JjYSgweDVlZCldKHsndHlwZSc6XzB4NTU3YmNhKDB4MjhiKSwndXJsJzpfMHg0MmQxZDF9KTt9KSxfMHg0NDgxNjVbXzB4NDVhNDZjKDB4MzQzKV09eydzdG9wJzpmdW5jdGlvbigpe18weDQxM2JmYVsnc3RvcCddKCk7fX0sXzB4NDczNTYzWydsaWNlbnNlJ10/UVsnd2hlbiddKCEweDApOl8weDQ0ODE2NVsnX2ZpbGVTdGF0UHJvbWlzZSddKF8weDJlYzJkY1tfMHg0NWE0NmMoMHgyZGYpXShfX2Rpcm5hbWUpKVtfMHg0NWE0NmMoMHg2YmEpXShmdW5jdGlvbigpe3JldHVybiBRWyd3aGVuJ10oe30pO30pWyd0aGVuJ10oZnVuY3Rpb24oXzB4MzMyMzU2KXtjb25zdCBfMHg0MTFiZmM9XzB4NDVhNDZjO2lmKF8weDMzMjM1NiYmXzB4MzMyMzU2WydtdGltZSddKXt2YXIgXzB4MmU1Yzg4PV8weDMzMjM1NltfMHg0MTFiZmMoMHgyMGMpXTtpZihfMHgyZTVjODhbJ3NldERhdGUnXShfMHgzMzIzNTZbXzB4NDExYmZjKDB4MjBjKV1bXzB4NDExYmZjKDB4NDA1KV0oKSsweDFlKSxuZXcgXzB4NDdlOTU1KCk+XzB4MmU1Yzg4KXJldHVybiBRW18weDQxMWJmYygweDUyMyldKHsnbWVzc2FnZSc6XzB4NDExYmZjKDB4N2FiKVsnc3BsaXQnXSgnJylbJ3JldmVyc2UnXSgpW18weDQxMWJmYygweDQyZSldKCcnKSwnbm9EZXRhaWxzJzohMHgwfSk7fXJldHVybiBRW18weDQxMWJmYygweDQ0YyldKCEweDApO30pO31lbHNlIHJldHVybiBfMHgxYTkyNTUoJy4vZXh0ZW5zaW9uL2NvcmUnKTt9fTt9fSx7Jy4vZXh0ZW5zaW9uL2NvcmUnOjB4NSwnLi9leHRlbnNpb24vc2VydmVyL21vZGVsJzoweDEyLCcuL2V4dGVuc2lvbi9zZXJ2ZXIvbXVsdGljYXN0ZXInOjB4MTMsJy4vZXh0ZW5zaW9uL3NlcnZlci93YWxsYWJ5QXBwQ2hlY2tlcic6MHgxOCwnLi9leHRlbnNpb24vdWkvc2VydmljZSc6MHgxYiwncGF0aCc6dm9pZCAweDB9XSwweDU6W2Z1bmN0aW9uKF8weDFjMDc2ZCxfMHg1MGVhNzcsXzB4NWI3Y2JjKXsndXNlIHN0cmljdCc7Y29uc3QgXzB4NDMwNWM2PV8weGFlMjY7dmFyIF8weDU1NjNmOD10aGlzJiZ0aGlzW18weDQzMDVjNigweDQzYildfHxmdW5jdGlvbihfMHg2ZDQzODksXzB4MmVjMjdhKXtjb25zdCBfMHg1MzJjZjA9XzB4NDMwNWM2O3ZhciBfMHgxYTkxYWQ9e307Zm9yKHZhciBfMHgyMDhiZmQgaW4gXzB4NmQ0Mzg5KU9iamVjdFtfMHg1MzJjZjAoMHg1NmQpXVtfMHg1MzJjZjAoMHg1ZjUpXVtfMHg1MzJjZjAoMHgyYzgpXShfMHg2ZDQzODksXzB4MjA4YmZkKSYmXzB4MmVjMjdhW18weDUzMmNmMCgweDdhNyldKF8weDIwOGJmZCk8MHgwJiYoXzB4MWE5MWFkW18weDIwOGJmZF09XzB4NmQ0Mzg5W18weDIwOGJmZF0pO2lmKF8weDZkNDM4OSE9bnVsbCYmdHlwZW9mIE9iamVjdFtfMHg1MzJjZjAoMHg2MzEpXT09XzB4NTMyY2YwKDB4NzI3KSl7Zm9yKHZhciBfMHgyOTRlYjM9MHgwLF8weDIwOGJmZD1PYmplY3RbJ2dldE93blByb3BlcnR5U3ltYm9scyddKF8weDZkNDM4OSk7XzB4Mjk0ZWIzPF8weDIwOGJmZFtfMHg1MzJjZjAoMHgxOTUpXTtfMHgyOTRlYjMrKylfMHgyZWMyN2FbJ2luZGV4T2YnXShfMHgyMDhiZmRbXzB4Mjk0ZWIzXSk8MHgwJiZPYmplY3RbXzB4NTMyY2YwKDB4NTZkKV1bXzB4NTMyY2YwKDB4NDAzKV1bXzB4NTMyY2YwKDB4MmM4KV0oXzB4NmQ0Mzg5LF8weDIwOGJmZFtfMHgyOTRlYjNdKSYmKF8weDFhOTFhZFtfMHgyMDhiZmRbXzB4Mjk0ZWIzXV09XzB4NmQ0Mzg5W18weDIwOGJmZFtfMHgyOTRlYjNdXSk7fXJldHVybiBfMHgxYTkxYWQ7fTtsZXQgXzB4MzgwYWFkPWdsb2JhbFtfMHg0MzA1YzYoMHg0OTgpXTtpZihfMHgzODBhYWRbXzB4NDMwNWM2KDB4M2Q2KV0oKSE9PV8weDQzMDVjNigweDU5Myl8fF8weDM4MGFhZFtfMHg0MzA1YzYoMHgzZDYpXVsndG9TdHJpbmcnXSgpIT09J2Z1bmN0aW9uXHgyMHRvU3RyaW5nKClceDIwe1x4MjBbbmF0aXZlXHgyMGNvZGVdXHgyMH0nKV8weDUwZWE3N1snZXhwb3J0cyddPWNsYXNze307ZWxzZXtsZXQgXzB4MmYxNGJiPV8weDFjMDc2ZChfMHg0MzA1YzYoMHg0MTgpKSxfMHg1NmRjMDg9XzB4MWMwNzZkKCdwYXRoJyksXzB4NDQ3ODJlPV8weDFjMDc2ZCgnb3MnKSxfMHgzZWY4ZjE9XzB4MWMwNzZkKCd1dWlkJyksXzB4NTVhMmM1PV8weDFjMDc2ZChfMHg0MzA1YzYoMHg2YzYpKSxfMHg1OTM5Mjk9XzB4MWMwNzZkKF8weDQzMDVjNigweDRhNykpW18weDQzMDVjNigweDU1OSldLF8weDI5MzlkZT1fMHgxYzA3NmQoXzB4NDMwNWM2KDB4NGIxKSlbXzB4NDMwNWM2KDB4NDY1KV0sXzB4NTA0ZmYxPV8weDFjMDc2ZChfMHg0MzA1YzYoMHg0YjEpKVtfMHg0MzA1YzYoMHg1NGQpXSxfMHg0YTFjODA9XzB4MWMwNzZkKCcuL3NlcnZlci9maWxlU3lzdGVtJyksXzB4M2VjZDIwPV8weDFjMDc2ZChfMHg0MzA1YzYoMHhjYykpLF8weDI3ZDMwMj1fMHgxYzA3NmQoXzB4NDMwNWM2KDB4NzllKSksXzB4MTRjMTIyPV8weDFjMDc2ZChfMHg0MzA1YzYoMHg0ODMpKSxfMHgyNTI5ZTc9XzB4MWMwNzZkKF8weDQzMDVjNigweDY5NikpO2NvbnN0IF8weDJhZjhjZD1fMHgxYzA3NmQoXzB4NDMwNWM2KDB4N2IyKSkse01lbW9pemVkOl8weDIyNzE0YX09XzB4MWMwNzZkKCcuLi9sYXp5JyksXzB4MjBhMTdmPV8weDJhZjhjZFtfMHg0MzA1YzYoMHhlOSldLF8weDU0ZGM0OD1fMHgyYWY4Y2RbXzB4NDMwNWM2KDB4YWUpXSxfMHg1Mjk4NmM9XzB4MmFmOGNkWydkZXNlcmlhbGl6ZVJlZ0V4cCddLF8weDI5ZDk1ZD1uZXcgU2V0KF8weDFjMDc2ZChfMHg0MzA1YzYoMHg2N2MpKVtfMHg0MzA1YzYoMHg0Y2IpXSkse2RlYnVnOl8weDQ0ZmIyNSx0cmFjZTpfMHg0YmQ2ZWV9PWxvZ2dlcltfMHg0MzA1YzYoMHg0NDgpXSgnZXh0ZW5kZWQtY29yZScpO2xldCBfMHg1NTM3OTE9MHhhKjB4M2MqMHgzZTgsXzB4M2NjNzQxPTB4NyoweDNlOCxfMHgzZjdkOGY9MHg1LF8weDNmNDc2YT0weGUsXzB4NTNhMGE2PV8weDQzMDVjNigweDM1ZSksXzB4MmRiZTI0PV8weDQzMDVjNigweDY2YiksXzB4MWIwNjdlPSd1c2UtY29tbXVuaXR5LWxpbmsnLF8weDFmZjBkOT0nZXh0ZW5kZWQtdHJpYWwtbGljZW5zZS1saW5rJyxfMHgyNzAzN2U9XzB4NDMwNWM2KDB4MjQxKSxfMHgzY2UzY2E9XzB4NDMwNWM2KDB4NTVkKSxfMHg1MGIwNWQ9XzB4NDMwNWM2KDB4M2Y2KTtjb25zdCBfMHgyNzYxYmI9J3ZhbHVlRXhwbG9yZXJFeHBhbnNpb25MaW1pdGF0aW9uSW5Db21tdW5pdHlFZGl0aW9uJyxfMHg0NzNlYTU9J2xpdmVWYWx1ZURpc3BsYXlMaW1pdGF0aW9uSW5Db21tdW5pdHlFZGl0aW9uJyxfMHg0ZWI3MzI9XzB4NDMwNWM2KDB4Mjg2KSxfMHg0OTU2YzI9XzB4NDMwNWM2KDB4MzNjKSxfMHg1ODkwYzg9eydmaWxlSWQnOl8weDQzMDVjNigweDFmNyksJ3N0YXJ0RGF0ZSc6bmV3IF8weDM4MGFhZChfMHgzODBhYWRbXzB4NDMwNWM2KDB4MTA5KV0oMHg3ZTcsMHg0LDB4YSwweDAsMHgwLDB4MCwweDApKVsnZ2V0VGltZSddKCksJ2VuZERhdGUnOm5ldyBfMHgzODBh4oCLYWQoXzB4MzgwYWFkW18weDQzMDVjNigweDEwOSldKDB4N2U3LDB4NCwweDE4LDB4MCwweDAsMHgwLDB4MCkpW18weDQzMDVjNigweDI5ZCldKCl9LF8weDJlZThlYj17J2ZpbGVJZCc6XzB4NDMwNWM2KDB4MjhmKX0sXzB4NTliMDIwPShfMHg1NzdlNDUsXzB4NGZiNmQ4LF8weDI5OWM2ZCxfMHgzMTY5YTEpPT57Y29uc3QgXzB4MjNmMGFiPV8weDQzMDVjNjtfMHg1NzdlNDVbXzB4MjNmMGFiKDB4MmU3KV18fChfMHg1NzdlNDVbXzB4MjNmMGFiKDB4MmU3KV09e30pLF8weDU3N2U0NVtfMHgyM2YwYWIoMHgyZTcpXVtfMHgyM2YwYWIoMHgzNzQpXT1fMHg0ZmI2ZDhbXzB4MjNmMGFiKDB4MTk1KV07Y29uc3QgXzB4MzY0ZWU1PV8weDJmMTRiYltfMHgyM2YwYWIoMHg3MzgpXShfMHg1NzdlNDUsZnVuY3Rpb24oXzB4MTkzMWU1KXtjb25zdCBfMHg1NWQ2NjQ9XzB4MjNmMGFiO2xldCBfMHgyNDIyYzU9Jyc7XzB4MTkzMWU1WydvbiddKF8weDU1ZDY2NCgweDQ1MSksXzB4NDdlNTQxPT57XzB4MzE2OWExJiYoXzB4MjQyMmM1PV8weDI0MjJjNStfMHg0N2U1NDEpO30pLF8weDE5MzFlNVsnb24nXShfMHg1NWQ2NjQoMHgxZjUpLCgpPT57XzB4MzE2OWExJiZfMHgzMTY5YTEoXzB4MjQyMmM1KTt9KTt9KTtfMHgzNjRlZTVbJ29uJ10oJ2Vycm9yJyxfMHgyOTc5MDY9PntfMHgyOTljNmQmJl8weDI5OWM2ZChfMHgyOTc5MDYpO30pLF8weDM2NGVlNVtfMHgyM2YwYWIoMHgxNzMpXShfMHg0ZmI2ZDgpLF8weDM2NGVlNVtfMHgyM2YwYWIoMHgxZjUpXSgpO30s4oCLXzB4MmM2MGE2PShfMHg0YTRhZGUsXzB4M2EwMGU3KT0+bmV3IFByb21pc2UoKF8weDQyYjUzNixfMHgxNzUzMjgpPT57XzB4NTliMDIwKF8weDRhNGFkZSxfMHgzYTAwZTcsXzB4MTc1MzI4LF8weDQyYjUzNik7fSk7bGV0IF8weDE1ZmViYz17J0F0b20nOictLS0tLUJFR0lOXHgyMFBVQkxJQ1x4MjBLRVktLS0tLVx4MGFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXF5ZFFCWnBlNHZQbVd2SDJ5cmlIXHgwYThmL0Jtb2txY2xEcUpOSlVDb1YrUlFhdzE2cnQvaTNrUlVVSHFZWFYxb3p4UHZRc056QXBQcmFwKzIxTXFWVFRceDBhZ3pwU0pCNkhuaFlhYkFPTWFodXZ6YVpseHRFVVZBb2Rad0dYbjdiZERMNnRiN1dJam9oaEdteWZzREt2KzJwaVx4MGFWVm5CUCtxR1JYdHRhdE55S2swbVRPZmJVYjgwbXNxNlMzTW5maE04U3VPbzgzK3hZL3RaNWlQR3d6ajExYlNGXHgwYXR2a2JNQWNYM1ljS2hvRlJteThLZ0R1T3hqUThtZTgyRHk2U2dzaGxzYWU4LzJTTlZ6MGlNY2dDSVRBU1hPdVhceDBhMEYwUUZDcmVqeFhUVHpnaDdUQmU5YTR4NTFpWUtNZk0xd3FxWGhWLzN5Y3N6SFpyd0dFZjhGY283M0xXdGZvbVx4MGFId0lEQVFBQlx4MGEtLS0tLUVORFx4MjBQVUJMSUNceDIwS0VZLS0tLS0nLCdWU0NvZGUnOl8weDQzMDVjNigweDYwYiksJ1N1YmxpbWUnOl8weDQzMDVjNigweDliKSwnRnJlZWRvbSc6XzB4NDMwNWM2KDB4MjQ2KSwnUXVva2thJzpfMHg0MzA1YzYoMHgzZTkpLCdJbnRlbGxpSic6XzB4NDMwNWM2KDB4NjA2KSwnVlMnOl8weDQzMDVjNigweDU4MiksJ09TUyc6XzB4NDMwNWM2KDB4Mzg0KX0sXzB4NTAxYTQwPXsnRWNIa3YrWGt5bmN4UkRZV0VQUWJvN1hWbGpQRDdUbjB6MHB6bURlKzdvbk9VcGdhNUFza0tJMDJyRFRZK0UrZFY0L2kvZmFYbjB2UWp0Qnc3RVJrd0wzd1dVMU14cng1TWhoc252WjJKM0xjcGpvaXUyVEpobGJQeUkxdlZHL0ZBTjdYNW1XRWx1cm5SUUdqV0FwV05TQ0IvZjhQZmVkVWJtQ25pL3Nlbk04OVFOcitYMzRnMGNqN1pDUTNZWHZvN3RLTXAzUWt3bk95SGh5MG00K3VpOFhkSlhGTzhTNGpYU09ISS96K3I1MzJXQS9JQUt5S20zWDRVaVNaaUxUc0x2RjU1RmJHaTFKVjFhbE95RmtEcFZOeHhKMktRRE8yeUUzbytjaWxiVjgya1N3KzF0RmwvNm03bG5v4oCLd2EzQ0haa051WFh6V0UvTDc5QTBHSGI4RnFnJzoweDEsJ0k3b1Vsb3VPVUcvYU05b2c4S2ttR2dKSVdWQnd3WUV6SlFCSlRMQVV5alJ0L0U3OXVSZ0l1YlpvOXAzWkppM0NkSDEvdC8zR3RnOWxOdHZ6SmtzNE1oZVBBL2ZEQ3lWckptdHhWU3pmcml0WU11Z2gvZktLQldPemRoWmE4YXZEN01Qdk1qNFRLdUlYZG9UdzFsK2krazZXdndTNG1BN1hJQ0xONEd5MmZFT3hIeFY3ellmUDN5dkp5TzREaHdsYkxZM2svNUh0RjZuVnpQRG5WaG1oVW1tRVQ4YlhVbll1MnlwblBvVjVDcklxbEsrcE5hREVoYUlQOU55UlZhYjNTd2xibnU0QmswcS9ScDFHM3pyNWJKUk1RakdTQVlxYzRRVDFqeEFITDBJaUV4aW1uOTErT05FL3F5VVgzcG04S1FtZ3JQK0QyWklGVmMrYXNBQXNidyc6MHgxLCdNN0VUQ2M2bitBVm1GVVVtMytsOXcvY2xjNDRManl4cSs2NGN0MGcwcHF5eDFJcW9mNDVtamhpT3I4L09ZQkEwWjBhcjNUdzRVY1NiZCtZYytXaWRHbDBzc0dTa2p0dlJvcHhJZUFDYUdIY3dOL0xoTFpDRWVpdW9PL002V0tBRHBYWFBueWEvWUJlOEk4Y3JqdnVZeUdiY0xIRXJ6ZnN5cG5IM0JNcDJvNGo2VkF0R2lsTzdVcU1zZ0lOaVkwMjBXWU1xQ2ZidVZWL3F6K2dqWWtBVG5MK2R3SXZmcndRWUFSbXQ4WEkvQm5VbmNUUXV4ZWVRWXNxQjhxcVlZa2ZvUm5KRWN5aENCbXdiVWtqZDVZUW5pbEZEK3JnYzFNOXcwTU1qQnA2aUxyTFZmY3M1OE00cHlnYURNTi9zQmlUL21tak5RREJWRnpqSGoyVHhhdlp2UWcnOjB4MSwnbjc1aUZxd0ZkY0g0Q2orYlFIQnN3ZmM5MGdMSnoxcyt2SFRtdFNXeG95cE05WHcvcFNpSnluNHVlcGU5ZmpEU1BhYzdpZGFIY2dnNVNMUWE4bVlNZ2Z0UEw2S2hwWFprZ2NITGs4V0xtQnVxSTN4RDV2cnZ3RkliU1VVTmpMWTYyQnBsMkc1eTVwZmVTUGJPcE1lY3lEcFFISmJwSUpTNWlWZW1BM3lkZEVobm9idjFUeDBISFJUS1B0a1JyUTlKMWNKV2E5aGRiOXJPTktFV3QxQlgwb2ZuNGQvdjRXVVBqVHFnZjRzK1A4SU5oQWVGYkZhamgxdHkzVnFLMWI1SzZxbEVVQW1vMWtRYTF4N2V1V1ZWM1Bjb2kzaHNJQjFJQ0UybG5LMlFwc3Q5aWZuZm1wbjBNNmM5UnlJSjRsUjlTbENQNDlSenJMU1U0aDdXL1hNMjZ3JzoweDEsJ1llOTF5YmdYWmFNM3hvQk1IRFlEUDF4Z1lzNTRjUkFMcE8vQ1MvaFZXekw2Nkx6VnBveVBmQUNCRmw1dEpmQ1lVczBXVno5dGt3V3htanZ6dGpBeEhmeFlHbmdWaktNbytJdVI4VEVyMlBLQXVXcHZ4TTBHbWpyeS9YaG1ZWFdWQjlwNjdsK3ovRVRaOVJ4eFlNQlk3dEFiYy9NcjZGL0kyemFXZkVRZFduRjZFWWlocDZYRE13YUNGVnI4S25Ca3hTKzR2S0g3TmtPWkk0alJDS0VmWkZ6V29uRnlZQS8zczdwYjhHOXc4dDErZXdWblIvMnQreDRYYWVKSlIvZWNidnkzMjJROE9NY3M0WG5kbWFXMFNWK3ZxTjdXTUNOUWpsa2ZDNEZ5V0RrNDE1NldMcmlPbCt5Q2gvem9WWksvYWJIb3ZNS2ZSNGQ0RmxOTFVSaGZNQSc64oCLMHgxLCdUMmNvbmx6T2Qwakc5SDgyakZDaU1FWXVxYjlnYTNsa0RGVWd2UUdaOWhzRTkya2wvZkVORUtjcjRld2ZsQmczdEdDRzg2eTBNOTZNNm0ybkg2VG5xcHIwK2g2emV5RzRlNjF6WDB3WGVjZWRHQkMwS1YrWXdJOHp5WUl3aDlPVnVBRnlscjVrNWZzZk02TjBhZHdmSHVJZy83a0RIVGEwZTBQMFZPaHNwUVgvZHQyeEZ3NkJvOFZNUVg2eWxkVkFnWDQvbWUwcWNTQXdCMmRwUjRNTWRkMlpsMTMwUGVROU5UWFZlY1ZKM0thL0hWR2pTaTQ2aEVuY1NrZFBEcTE5STc2ZVFvak5wNzM3TnBkSlBrWEM2TnpkajhNRkdUWUE2S2hhRDBlYk1ZSFJJajBFbkJ3MmJEUVlsc2l4TkVuK1IralI2L29MTEtoKzIvUjZWeG1DVkEnOjB4MSwnVDVOeXZoSEZ6V1FkWkRsZ2xLNUc1MTVIaDJKbUFVTTdnVDA4ZXFHbkJ2SGFFKzN3UkpwQTB5S2UxaUtDSDFOUU5NM3BhWXQ2WjliS2hDZEZMNzFTeUhKVkJiVC9ZQ2ZURFZBNkRzUWFNWld3eTRCS2xqTU00TC8vRUJsMHhuc1pSTlRnRmtXN1BWN054TnNvQ0RiYXhTNzZMc2NUWlcwQVZTeVF0UDc0Y0JCbWxFN2NPSTNPdmk1STJWWFdnNWxzUDRqQ3IxZkxJSThZMWlHNWJRVW8vR3B0NlVMUGEybFA0a0svZXdJZlBiSG9Lczl5b2lHLzljU2Vkb1RkMlJlUjgvN1Vrd2lxQ1VKZUltTzQ4SUUxUStzeTk4T2VmY3VjWG1lT0ozVkZPN2pRa1hydnlGODZTSk9vTkJERnl5YU9RSEI0U01UbGFVRUVpNi95d0E0RXZnJzoweDEsJ2FOVkxJMkVhdnY4ZmJ0aG40MDFnUTAwV0tJVjI5L0dzR3hjcW16bnJQa1lwbE94WEZYY1dzUHBUeTJlNUozenBpTU9SSUhPUER3MmRRSVlKZ0trYTluU0VFRGJWVGloVjhYaWM1eDNmTFhTR2tYY2RWSUg5di9kVXlGVVRqOWE1M2krWXlvVThzRXVSYVJKa0xGeFRiejJDUTB1TklhTGV0dzNKYzl6d1ExMkpwTm4wWUlXd0NmQ3ozT2REQ2xxVkFhNERQMDhIWDhJekExN2hKekpGbGF6YW1nY2xhSFVya1BNNnVYQkk0RlNiVS9xYnFYVjRURDFUZ2ZKQi9WenVma3lSM2NWckg0NzhBQy9rVEluTzNnVVFkZElFOHpOckkyNWNRT0NqdVF1bWtMMDNQMXdNR0tiY0JyMzRjTHZTWW8vREpKQ21qNFJIZUkyUllLamwvZyc6MHgxLCdvVS8rbnJKa256Q25WVm5XVDhXTkRtN0orQ3BKQVEzeWl3S1lLRVVmZ0FjazNIMUhOc0s3a2pEM3BjVkhqb0UvRWVBMDlMbXRtOWtjQ08vT2xWcWc1QWJaQ1VhNEIvQmJSMnU1eHVONExnWFVITGcvWlhUd3NyQUlCUTBPbnpybmdibytzOGkweWFwdWt2S3I5cEkvR1h2dkNlTGcrR0pNYUtBa3RFMHg4cStVdzhjdlBrYTdyQnVSSDUvQVM4c1ZWSWdkUjZvZ0dMQ3ZoN3IrM3ZEWTVRNUpTSFo0bkdKNEFpMjN1RitncDlUQ3VaTWdhczVIV2xnZUNMejdPdFFSajBhT0ZCQ00zMFRxVGozaldEcUM1N1lNWlA1OHl3dldKM05jS1MwNm56UGNMTnNsakxzcXRRbVBiaUIrNTNtVUVCUGtkb29tTkVVWS9kWmFmdUg1RGcnOjB4MSwnT3FWcWxrR21WRkZ4blRROHFnTFg3THArZmdLYitDcUlIR3NDVGNMR3kwWFBHZGIzb2ZibytvNGRQRVpQc3VrUlE1VGEyM2ZCaTlHYnRMUEp1ZDhNOXgxcDBteDlsVXpWcGtWZmp2VUhzdTd5ajk3QlhIaEZET01BUGl6M1ZqYkE2bFNEcGM3WEdpU0cyYWxDS3pnQStneFVKMksyMW94VEFMbXppSmV3NWNYRGhJbS9nZ2dxdmxUSFpzTUVlMVlqV1VNVDNwWi9Da2FiZkl4VzA5RGRMc21iSnNONGhxQ3ZaWTUxR3EvTlhsWVBEZ25UZ0dJWHVTdTliZ0JXcnBRS0tqVVd0dkpnVFoxYnNFd3l4UmdpZ1F6N0NZY1Z1Q0UxR0NxaWY5UGIyN3owbHZId1M2TUhwM2R4QmQ2ZmJ4blFvMW5YS0RIYnJZb3FaMWpXdDU1aWRnJzoweDEsJ2RZRDVMbmFlY3JabWZmaUJOblV2Zi9yc2NmK3ltSmdRRE45NjhGODVOL2NPa2RKMHowNmgzaDVFRUhSUUxBNC9VL1RaQkI1VFVZSkkyK0ZObnlpSDRFZmNySGo1U3JOODhKdkFjMVY0MFoxc2kveVFJTUVBUDkzMmlIMTlSWUtPTmNHNjVHRnhGNW9HRGZkM0tVYkdFZUR3QVR3Sy91QjhVMHhBTysyTEh5eHNxZTdTbFBCQVZZeUJpeDZLWWNZdXl5Q2JTVFVGSmszamw2THJJN2pidHgyMVNjbDVzcHBDbDgrWGhyUUFpWm56RytYMGRZanFVMWo4OVEwdkplNFhvNzZkczNNT0VQSkhVZ3JFaFZBZXhjN0pUN3BPT3VFY05ucGZqSjV6bmpRN2VrTGhOYW1LSWx0dEl2R09EMlUyd24yNEg0cHB1eW9Jd0p5R2FiTmtUQSc6MHgxLCd3cU9uakNncXcrRjhnTkVWdHVZYytrUW41ejg4RlhBbllCSDlBNVhrT1NxK1NPbUs4YWtJMkw3T1NCM3JJNXhUNWZIVStqYURDSC9rU0JlOFFQNDduNG1uUDFnU3h2N2djdTd1RVFpR2pYUFdhSE03dFRJbjZvaGZLNlN1ZVV0d1NONnZ5M3JRbUJOaGpFdFlwNEt6N1FxZXhYMnFXRHMyZktQdWVOR1NGb0JNc1BFQVM4UUVQc3NRb1c5L1VScXU5Q1B6bTdtdFIzTmhXRDA1VFB5TDRFZ3JvYkIrKyszZ3RYSXRTVXJKbHJmK3J4SUhERnBwVGQ2dEpqZzU5VXZ3SFhhN01aZVpRS015OHRuTHNxSFJVQnpWMXNsNTVnRnlsRmIwRTlCdTByTTZDM1o4WEVFZDBQNXhZbkxlV2RrMWdvVkFaS0dMaWkvY3ZCOUJuZm4yRWcnOjB4MSwna1p5ZkNtaXBsK1V0dUFFUXpocUp6SmJ5NDJ4TzhSSmVSTnU5cDBWUXFxclFwVEVhN0M0VGVkeFJCcTRKSzE2VGphUHlJM2pOOTMxS0JLTlBtRXRlQ1hLbDk0dWE5ek9zT2IxUE1UUi9iL3FodlVocGNxeHNSaUlZUkpKNENtZk1zczFYdHlRRmxEQVBRM3IyY2JUQmQ0aHdrOGVubmxBcUZHSjYzcnFtL2lYUFJWbXloUU01dlVnTlJobjJBdnB1dytlMlZOU01vSE9VVmVlbkRYTG9nWURyRmJ6TWFETVhaQjdubWE0NGVzT3ZmZ0t3ZERxQzJoT2VtSkxWeG0zVzE4WklQbkhUNjh3bGhrL3o5K0tOSGpla2hJSUV4RXl6TFlWcXA0NVQvaDk5WnpDeFdzM3RMME1BWVlJUm1wZit0UWhQekdacjJ2VHRienhHeW1UTDVnJzoweDEsJ2FhV2tCVW5QN1hmWmdwZ2RNTjRGbDczZ01GZWRKSVZ2UmhMQjVqMFV1bXdqd2dVOWtLd1RmcE1yeGtXOVpSMUhLdWZucnIzQmVtUWpqSkMzY210bzRmMHZwRXBzNVo5eG9JakpXd2hvbFpwUkVnV3cyVmxrOEhJbHJKeEczMEhRYzVkUUcxTkgxOTEvOHVMSk1LcUU4UjNZR1ZXNU5kc0gyMHFIUG1hZ3B0ckJZMkcrdzc0TWwzQXFCb2V6OFdCVTdSZEVFS1JFNEUxT0hEMlVuN2VRTng3VnJ3Q0Z4TkVYcE9sa252MnA0eDYvb3FTbzgwY0NteFFHWHlzU0dTd1prWmlIT1BFb2xNSFdZQUZTSDFNYXZvVlNvbWExUWZBa2d3WUlFdi96Vk9tMGZWTE0wSDUrSnplOEVGUU1ORXBvckRpL1ZObTNSbmFqbkNHQ3hXdjZOdyc6MHgxLCdtdFZVTXRtazJlaUVwYzdWUXJTOGRVYnZ3cmxOaHY1cjVGTExwMHpRWkgrK04wTHQwREpWNmRneUU3L0hwZTlqZ0gyUmd6TjNuSVNIQXo2TzZNRW5vYkdValFweitrc2Q3SmptOXV6QU9Fd0FsSk1acEdJMU8wTnUxbEVwWENTMXdFZ3hsU1hyYXo3N082bXE3ditPVkR5bmRqek9ocEJFTSsyQWlRb3U0WWlURU10eTBIaS9qS0gyK1NuMjFzam1OT1ZzRjljZ2crZnZHMDMzRUtCQXNYaVJYdFdWemM3c2NGR0tQMmQvdnhmMGVjR0UrcklNSlZOS2ZoNlVjMFA3aHQwcWVvU1FzZjdvNWJuZ2pBbk8xR3Jlcll1Unl1Ly9qUzU0U0Y3TFJtemhMUkU0NFExWitHNDFCOW9BL0ZZQVRKT0RHKzB6MlgvdGU0U1hJNy9aL0EnOjB4MSwnQWFzMjE3WFFLeXdBOEF4U3VEc01QbC81a0hhdTRqMXo3VG9VQVlrejl4WjNvaGtxblhvakpNaEZXUE50cXV3MFJhMVhhdkQ1SnliNXJiQmdFR3UvMy9OK2UxYndGL2dqNk4zQzZOTlBwZ2U3L1N5ZjMrem1tWlpOSGF3SURYMERzT3FhcGFZM2dEaWVRSC91bEt0REh4cTZGT3V2bHpqNk9HTlkyRVZzMkEvdTluT2swWW44bXJiTmM1am9rdlFhUEkvR3haQlVoRytHL3RHVVZDVnFpbmtJWEZVWHhENnFjeWhVbmFMaHJtTzhtMitJRDRiS1ZZMFBDZllEaDZVQnhQaU9OOW02b0NzVTNlQm1vclcyQU1RM25MVURTeWk3UDQ0cmxFTzNxYkZVRU90amFNeUxoOVRCUGp1UVdEQmF4cm1nZjFEOCtGaHhETS92blh1WXp3JzoweDEsJ3ZyUjRSbTVEdXRhSkIxTDlFbTJhRGNPeVJ4aTJLYStSQkdFQWpka0RqQkd1T1RTQkFlR05Ud3MweGhxMVh3eUxva3UybSs4YlZEZGFyQXd0TkN0aHhrb2NjQlRpejNVdVM3dThiSFV2VWY4UnI4MWFQYi9rNyt6TlM0N1diMXY0OW51QUhDQiswNno1Z01zUWtqbDkrNzg5aGY5eU40czBFTUwzc0Z6ZHpVeEI4cEVzMnNNeFBuSjBlbEFLMHBGTG55RCtIS1VmMjFReDNOTTQzNFM4aUNEWUdZSnpvL1oxQUYwTmxaM0loQjdsdm1HMUxnS2ZQcllldGt5N1lLRUxXRE5CWHhuOHdDVy90UERiaUpzQ1JLMnIwSmE0OEZ5Rjg2UjBDbUdxcUlVUGwxaDVmMlF0NlY0MG1FYjgyVENrajJTMWxBSDZhTm11SkpzK2Z4VXpFUSc6MHgxLCdJMlluckhrN25hM0w4NmNLMjY3M3c3c1pla2toSHZqQVEvV3lXRzV1YW8rdElFMEQyclJQL21QMUtMSzhxaXR2SXQwZUQrdndoc0E5N09mS1dIbXAxeEp0MDhXV1ZtZGRUMENhVGY3UEUxWkdXNWZ0MmcrWTZWdElmZUFHUmNGVWhETkdNQWRuK1RDK0ZrbHNFY3FTVnRrSXg3Q0FtZ0RJenU0OFVwUThNdnRhcXdrVTdUdkxPZThsUFNJL1BhbkRGUk5VTElnSTk4R1FHVXhNenJ4TjlCSXFRSnRJZ2o3TGlkMGhJSVZ4cWxyMk9WenRWYTNaeXJNK241QjUzcG5uM0pOSDloSmFSMVpwbUVxZlRJUGhaTTRpd2VKYktjRWovYkV3aExUZ3l0eHp2blluQmxhTTQ0M1UxV2lPb1hqMW42UmRTVS96eHVMYngvVUJ4dk1kL2cnOjB4MSwnSlZKR2xzb2t0Q2tkZTRZSHVtT2NwK0VwNDRQeDhNaGlLRnZSbGIzQzRQVlJoNDRhSTRJaXRpanQzUUsrNDYrRHA5Y01IM3dtclY1TDlvM2g1MGozQkxxY2t4ZGUvQ1QrUS9CVUlWVk5uRjRobTFpdHNKSlkyMEVhdkp2MWxiQUtmcEhmNE1QMnJ3L0F2anpuNGdvMktGanFRL1NqLzRxTUhFVXp0b1JFQjM2c1krNVhJTTJmenNjK0VCTXlsQXZhK2d0dityTDdHYWhlMG1NWk1TTGtVaVRuZkZUS1h1U3RGNXlReTlQenZkM29aTUFVWHNOZXVPN1JpM2FyQmVNWWxtWVo1SGpMVGowVlczNC9veEd0MklpR05pY1Q2eHlLY0xxVnVBZEkzR0hadzBleUl1SS91ckQ5UGlITlNaZU9saDEwc0d4VEhMOWVnU0RVSFh0ZExnJzoweDEsJ3JIdXZMYlZZUzRyTU1IWERITmg2aXVSSDRVNitMMzlGQ0pCSGczZTBFWWdGY2dmSm9xblA5blZncm0zNnprOWtqYzgrMGI0QS9lV0hET0ZoTUg4K2VhMGY4bGlQaXZqUGpPZW9ZMHY3amFNU2RraXB5QnJNY3FPdFFPbUEwKytIS3JzM3BIWmFnMk83SnJkNkdXaEV3U085MGdkMnpCeTgvYkZMQXp5UmYvRFV2N3J2d3k2UUFmS1AwS1VudVdyNlN6WXlTYzNqYXVSR0FGNVExQk9oUklUa2hPTkRvZ1V6MkdhNzhJQ285WVhWbkRuSnhFZmlxVUZLcWtaNFF0STNTaXRheWFIQ2gwQ1JMVW9Nb1hpZG83RUM2NWZNMFB4eWRNZlRlU0lGOXYxenhSRHMwUXJGVmVVVkg2K1gvcW55d1FTSW5OMzdRWnFsUzlPdlI2dGZZZyc6MHgxLCdBMXBCQmw3cWR0dlh0cEJhMFRVZHlmQUlCZDZCZ2MxanlSU2l2Q1Qxa1NmNXZVUVM3UmkwSjlRcUE5ajR5Ukovb2Jya0pUQ21QR2drbFo1S3Erb1luLzJDdmIveHlUOTNXNW44K3Z5S0VuUzV3a1Z2R0FMYnlpRnN5aXJXd1hFcFp3MndQTWFGUVFyaHBhZ0hEOGw3UkE1bWpHckJETkNhalNuMjkxeXl6aVROY0ttRTRMd3RSZEFHa090WTFIakNmVlFTbnEwOHprVU1Wb1VBRTErQWRCdGQ4WmRNYi9SbGdGTDVOczNXd3hhK2tKdTk2UFV0UzlBTUVJMUF0c3ZqYzk5SGU5UG1lMHNEcS9xVHJUbzBER3lxVXlYK3hOQjArdVZ5WUVCc2pncGtuTm1VZ0J4OW5lSnl0Wm9Yc1MrdG8xRE1nSzRxUk9HZGQvQkIyNjdQUGcnOjB4MSwnSlB6RDF4d1VuZE1MdXl6NnBUNmx4aWtFVWJ0ZUV2dnZzMWJ6blZDTlZqY1dtSUFTZWJCc25HemdZSk5qWE42bGd5MnJFMDQyWmMvQXplK21idGRlVUo2ZGtZY3RpcDRjWWRXcGsweDBnR3ZFVjR0QVJqRXlNQm1CZWRtNUdMaW8vMEMyVWVIaTY1YmZNNkRuT2wzS05rZi9HRFhNZm5vczRHMnlvekhDT2VvcldNRTgzSXptTWdTQWJ4VEtyTTVidW5jOHNGMk5MZFVHaDlGRXFFcExid2Y4K2hhYVpFcFRmeTJ5Rm9FM0k3TzJBd2hxZHpZNldka2hIVlpwbzc2TkhucEI5T2t5c1RsbW0vTEpVVzlDYXB1M2Y1aEV2a1JCaUM0S2hMMm5oRitRZXhweW5aNjhyYzVIcjYrL1RKMGU4R0R2T29PY2t6dXJkWUl3dEJOY1JnJzoweDEsJ1RYSUkvWkFlejRHY2FKZGhRczh1TzN1UUJxM3NwSnB1emdhOVVoS2RVWGVqL3ZwNFZscHV4cFc5T1hNZkswUE1pOFl0YlhtT0rigItZY0dvSWMrZVhhR08wZ252UXNpbUdIcTJxbGFKUjNENGNZSTd4dy9Vd21UZUhpc2Y1NHV6QmZGTmRraE9pRjlyRjhSckcrL1dZcWVJVERhcG9tTTZHOXZIV0M0M1M2UlkvbnlUYUltamFhSUxYMERUSE1kTGlQY2oxalZ2cWtvdHJwekMzV2lMRk1SVXVvdmJ0RWVUR3V3Q3pxNlNpMFhCNXdGdWRIUkZ3aGtyMWprdFpmbGdBU0xST1dCTk40R2k3WlZlNnY0Vng2Z0RTYkRvQUtVTDczdHErV1hFK2dIWjhlR1pHNVdRaWpoMDNjVHdNOUJZOTBINXFmTWoyVjRhVXNyeForcmVNWnZMdyc6MHgxLCdyK2NiYjh3Qjc0N0pLYXBNNXFJMHR6Q2lnRmNGYVl3WDhTTXJJY2pPV1Q5em8xTkZ1dWptVmRNVGxiNnI0VWlwcE5hNHFKSTJnSktaS2lQcDNnaFBJUFJETUVrVG5qaGtjdmVrOFF0QVJMYTBrN2ZuYzhCTndJazltNFBQOWdMRXVxVEpCaldLRzZrdDE1OHhYdHdXMndWQ2dndnVSMFM5U1R1RVl3OGNSalQ0T29BUGx0TkljQkNRbGhVY2pPQ2tlai9kQU44M3FkWDFZY2lQd1pxbVlSRTNnM21pdzhxK21OUzVuM1ZYZ1Z4TERZQ08raE5wL3pLVXo5VWQvOHUrcGNMcFNMdzJDVTFhOUIvY09NV0N2ZnpQZS9JekY2RExMNGZkMndqczNsYndyNXVPZjl3UDdKclZ0Z0plbEFYZmJ2VGFFK1ptZFJBS1REQXV1MDViN3cnOjB4MSwnSklqNWJVeUo3R3FRdjN1dE8vQVhlM1FLeWM0SWpOTlY4dDNoMVB6VGJBbisyQWJFeUJ4dG1iRTZMZGxXajNabnAvSFlGdGtvMElIUGRrZWd3alIwN2VaMDBYNDhXc2tpdXkwblZvNGM5Qnk1VWlPU253NEtETmYrQ2VDVEY2a3FKNWhQaVlodzVZeFJoQldYY1VPZ29aV1hOUm5LMTk2ZDJMUGF4UTg1THBMZ2t0SytNckFzbkZVWWRManRxZldUYUJEUGxURzhRZ0lGVGZxUjAxRmgyVDdkdlNaZ0xUNkM4RkdCOEMvUEw1L2gvb21YekNqSEpnbjZ3cmNmR2xRS0tpRDZ3bXRkRnBrcGN5WlpLaEw0ZlpSbTZyMFI3dEVEbmlid0FxVWJzMTFacUFiWWRMQThHWGptclpTcU5wUzdHUDNMaXBDODJwNTlPMlBhcGtBSXlRJzoweDEsJzRiaEsxMGFvbUpncnMzZVRiYllUTnNFZWFnUThISlErS0JocldxVmozMXpLdExrVmphTUtBQzZKUU5oVmFiRkczblhMMGRad2s1N2dtaHhkODUyRjh3cVZXVjZOZzZvLzdQbkJRV3RxS1Eyc1dDTWFyWExWa0wrUXh1RWhUUWxtempMSHBYTFV3dDlRNFBPeXNyb2NBUGJxY1NETDBvOGQ2ckVEckl3Q0dKZ1FtYnNRM0VwNk0wWjQrS0tkM2hvcE9IN0M0QWxHRDBHZDdzUDZZM1pBV1ZZWUpRdit5SnIrMzhBSTl6MjJ2TXZRU3IraUFSTVhkcS9lUVZFZFJ2YWd6ZjFZS2E4ZTFKUkxHdFZUSVNNamIvMHg4Wk4waTN4cEpSNHZhN3MxVVRpNlRXZkkrWXlMNmVTVU5kUGxDdmFYOGNVSGtQWjZnUTd4NUJyQ0N4TDFMZyc6MHgxLCdYcFNWdjNuMzNRZzJiaXFlbGM1Z0FMa0lSTW9TOTdrbHpJanZVRTM4aDUzOVhIVTYvdzRWNFh4UURiNmVJbUdCTzZyaHRUYkMzRnIxbHNvZVg5VzYrY3VHaFpBVXowNWtPTElEa3N1NkJPclZRTlVBNnVBeU8ybHZuQ1J4emtuNHNpRkNDOUx2bWNMZkNzL3dYc2h0TlVHRmRVWjFzV1dCZHRMNkZ5TEMzbDNOeFhiVjRZT0JKUnI2MHEyYUtNcFJhUFc1aXJ1S3RlQzNMZEErZ21KMk5vM3NTSGVDVFdNRmJWM3JsK2c4T0MycityZEFHT2J4VmdwdTNHQmpvbkhkbU5UVkJpd2hZWnpzc3VHNGovemtmdWx6UmVlcWRzZXF6RG1obUZBTHNGdnZlRVo0Q2Z2Mm1neTRsME5IdVN4SlFvQXRCNStWWnN6SThYMnYrMkFyRVEnOjB4MSwnRnlWVDhRZUc2UWtrbCt4dStLbHdnYkdYSTVrL0htR2JhMHh4eWlWSHg0ekFIN2ljT2UvdThqTHJSZ2FremVReXNLK3EzUjlDbGhrdkN2QlVnYzJVR0hUSWxObi9CQkFQY3ZySXBRbW00blhXLzJjK1REU3Z5UkVaYXV6VnBNekdlMjRCK20vS29Kem94UjlCMjMzSDRqYmFGbWpmSzhWZ3FVSVdmZ3NOZVVsdFppU0pMTEkrcEVxN3NnR256OWNGdE0zV2lBWEdxc0UyaDRPazdpV1B3K2Vzb1M4blZ4VGJsVlU5OUxVZlY0WTNhMVhkTTdRbGc4K00wMDlWZ2Q1TnNkVEVpejJGR0lEUk5vbmoreG80Q2xPWmw2bDNMSHBzekU2bEVGS1NTbTViMDF3eVErckdSV1ZKbXBLdGhMaXBUK3BCZFFwSFVkbTVoUGEveHE0WDZRJzoweDEsJ2JxSUhrMlM3S1R3cGpHdmh6cGI4ODNtOWxmODZwNFR1dUZjdnZzMm1hcVFiUDUwd0cyTTYzUE5ianM0VUxrdzJPcW9qZk1jdm5qelcxWk9BZXdvY2I3VUxnRHVsSjFDeW1mL0JyY0lRUS9wR0pOcnJzNWpndThUOWtMVVFQaUhjZFgrc3RYVGZzWFB2WVp2QTV3UDgremlEQnVJRmVEY0dwY2xVOERkanNxQkx3YlUyRkRrSFpoaDBPbGpRaFVTQU5aWks2Sk1Lb0tvOHpyUHhpYmowMlMyUmtHUHVGQjhHcjNKVkdZaWVleEUzRVF3TEhBSW9aNlBVWHNCc09aUVU4bDFlWkxBWFlZY2U0UGJWUXpHWnBvNUtkMTNHc0tKbzlLUmZjaldWLzVrN0cvR1NUZno3MFh2V0c1WWxVdWlaWGxiMGRuQWNmaFhFaGkweUlKUDFmdyc6MHgxLCdENXhqVXlBa2RSbWkyNWdzazRXNXRlbXhnM2R2YTlPcW5DbklsZUlMeDJXei9sWjRqRnZVdTM0MzFrUktZU0haWFFKeTIzQnFDdTJYWnc3KzNqNngvN2w2c09OeWNtMVVQSi82NlZFWU9Ocm0zZlRleHRENTVBdllP4oCLcVhDa1MwVGFpaUNlRWg4TjdBa3ZNaU9VR3B0V1JoT0Jud0FsUmMvUHF2WUY5TmYzTy9EaWk4SXRLWXhBN2NoV210Q3diVkNwUW9zZlBPSnJOM1E0ZXZVb0lLKytjUWNnN2NBNlViWExtUkRJbHVvUHl2TjNLTUJqRFo2emR0bnBqRTc5b05TTXIzSDVCOG0vL3N0OVBsLzN0T29oa3d1VUowZVRmbytSdG5GOVZaT0pHTmV3UjJCQlZ1Qk9HK0pHSDM2R2pucGdzQ29VSnc5VVAyZE1Ya0FURjZidncnOjB4MSwncVFlb3R6V2FFelNqVDdOSDd3a2xYK3JwVUVxNURUZWNiVm1pRlBOWjZFejhNNGdKdkJiYVNucTBSRmdycThZNFkrcWovdXZBY2w0aXFqYTExVnlGaWYwUjRXekl4S0pNZjMyRWFKY2RFdXI1TTRsTnNhMUJWbmdkbkNYREtmZnFuT1JtU1N4c3RZMEQzdWNicW5hclJOdlhmOGlyR2oyckhPZk1KM0hMaExyaUVBZDRFamNxVXJQMWNKRmpVL3l6ZGJLcW5zTU1pYWNEQUJxNEx3SFBxbi9BMEpBb3FwTUdLZEs0Z3QxRGpSNDZka0JaZEd2YjdqYjJjWEFNMm9TeDRqSUxBb0FQNCtVZ2F2eWUrOWt2QnVpUzRwWU14d2pZcUNIVkJlbzZacXQ4VnE0UFNlSkpFN0EyNHNScUJkMkFMcTFPY3Y5SFZiL0RvNzdvZm9MUkFnJzoweDEsJ1VYeHBXaVczK2RWQlRFM1Z6ODBXU1JOaTVYdHZMdVBrTTJkeVg2UUg3TVBzb1ZWemRldEtUZlpqVmRESVMrcFpZLzlQMUhjL2I3enhvaUk2T2JBSCtvT3EwTldrU3JZUDBEQzJPdjVjWUkrWlgzTkZMWUsvdjhlUUxHZjUwWExvM0VXbHovamJDMkdJYlZCSmlqTXMwN2IyYnI0WjFqR3hUdmdqYWJLaEQyVG9LNVlhOTBSTjV0OEpxUHlrVG5tWTlZUUFrVzRMY2l1RHVUd0M3OXpTS3ZKK1R4dFB5YmhWNGhISHlsNTZhcjk0YVUxSnRGWGd6UjBvMnZFTU9JdDFnVkU2aTIyVFhQNmFyZmZaSEpvMDI2eEZIeEt0TTRkS0d0WFF2VnlkZHcxZDJCRmk2bThnRDdKNjFzd0hXeGdEL0tRMjFNZEJ1T0ZpWEtNSzJPbGJ1QSc6MHgxLCdVcHZ2QUQwK2g0c1RVWFdWTUIyb2FCMUNvS0pUSDRDQTE3VjZhb3E2TWErelBmV2dpT3JURFUrckRNSU9mT1lSWVZQbnhkWGFZd256Q1BkSzQwTnhreTFpQzU1SnIvUGx3UWVENnFKOEZSSWVHSmkrTjNkbDk1a2JuNTZ2alZOQ3pNN2RNdHJBMmNzanVCY3d6ODdyZ05DcC91ZGYzcnBaWE9YRVRDTmdEYVd4NTh5bWNmZWlRcDJSbHExYm9jZDg0djAyZXRNZXh6UVJnV0dPS0xoOUNxU2ptc0V0d1B6QXY3UEZIVTNYVmU2Y0l3Zk5pVHV1aVdydExUZ1V1eG5wT01PcHdjVDRJK1FJZ0o2ZUV3VFh4dTM2dVVPOG85SUdqMU1JZW55K1lnTXViOHc2NXk3ZkgzaUR5dW13RTBmSXpjR2Z6S0hPb2NoYlVDTjJTblNIR0EnOjB4MSwnbjFkNnRzaVRSVzI1bFJ2TVFQYkxDSU9Qb3BSaCs0S3Fpb01VMHFQWU8vNjdkMnpXajNya2d5K2tnS2RKeE1LbHF2Q1ZrYXhObUY3M1o0V1BGODJML0ppVTJIS0FSaVpRNUprRmVsb2ZQVml2L2hPeDJkTFFyNVBZZEZRWHgwczNDTjhBOUoyWXV0UWNua1NPQ3RsRWVnbG0zelhUVm1lMVhmcTQydkRVNlRVdkRnVEt5SDludnI0NTRZU1hDWUxueE03Q0hoSmpFVlBjV05kRFcwWlVDZURFUU5FZElEODlycWszSnBMQVNhbWdzRDMwdWpkemJWWVJCU1RVMDhtb1A1bGwydysxeHBUY2JMd0hrZjdGdTNVd0lsZW5NYXExMnpHYitxNExjczM3WjBpT2p1MWh1dExkTTlIR05kTjFNeFBQTU9ZdkhlKzRTYVJWcHArd0hRJzoweDEsJ0hVY005OUwyN1RVM2puM3Z0d0svS2o4NzFiS1BpVUJ4eXNRcE5aTVRKTDFzT0pKUHpsNzJHc04xN3J0R1JZSzdaei9DWkVmYzFFMThocTk0NmNuTnBROWRMZENTWGU4cG5MS3graFg0N2xlNGZmSzJVSUIrWW5CcmUvUWtOL2FmUE91VTVGUjYxOUpiczJlVnphWUZFNnFlVmxQeGdTNlJoVjFGUUxubWZHd1NmclRRWDRxNE9QWm90RERkZWh5QjFRMnN6eWhuc0R4c0lZMHVJM2VZWkpWd2VZOFNUSjAvdUhsZ3hkU2hSRC92QXBUeXRYMkQwalg3eGl0M24zeTBxcmtPMEQvK0JkSThlbWFrQkJCUlYzTEF5Tmxadmhzei9qaHdMZGV1K1FLNFJ5dHRjdUIrc3pSVWxzd3V2bkJKUjVwR1ZtbVJQN1NXbkVrZU5pRWt1QSc6MHgxLCdMRGZmR2x5bS8xbVJKMXg1ODBNTHJ2UTBDSXI5T1hxR2lzTnl5dDdoOGxPN25yeFdydFhvdWhhMCt3c1F2N3o0aTEwQnFaWldUMWJNeWc4N3ZHVG11ZnRSTUdoRTYwaTlKeG5Tc056MUhncnZXdTlQZDhMMUM2ZGVhUjlINDhoc1M5dytuTzlXMzFJeFFjYzkxd1MvUjVLcndDV29KNnFQVmoxejIySUszdEFtS1M5TVJMVlVwU2hNVXh2Vng3ZkdqT0tHck5KQmlIRnVMbGg2ZDE5QXBEMVU1eVhZTXRncUNURWNmOXFURFg5MXpHZnJiR2FYSy9YcHlHb1hvcjZEVlJQVmZrd0MwRm1GN2NTdjlUUjBoVUo1b2lERFNTLy85RHY4Q29FTHdDcVd5VHljREJtYlg0M0V3TzQ2anRSbTVJc0w5dFdONStiRkZlbmxoRFB6a3cnOjB4MSwnSno3c3N6U1RaK2pPdDZDN3g0TVF2dW5Ib3hvMlZzWXpZVkVwYjNETUZGbXRGdkUraHRRSkZDK1Bsc0psWEI1WWoxaUE1Y0dIV2JGV2h1Y2ZJRmF1Y0s3dXRwMkY5eUtmL1V6ZzRRamM0NUlqd3V2QUNZK04zRzJoSWk0Y053bzJnMHQrNkc0QmwySG9lZFBRbU8wL1pQVWhLMWFld2RpanNDZlhKd3JrZDZMaHZqYitFNnRXdUUxc0twYkptZHFUM2laaWx2MHFXV0NqTGZFNFN6VHJ3ZVlOeXJPcC9pOEJ2amIzbFBTNjJwek84WXpETWVvM0JwY3NiZW9rUldpbE1VVm5VNi9kamVrWCsvMjdGMjBGQnhMcU9OeGRHWU4zSjZTaXQ3S2ZpY0F4N0kvUWRmZ3B0STBJNGdsRjFTYnpkYndCVFhLSU9ZdmUvenZJU3dZNzRnJzoweDEsJ0phNWhQNkR2MjMwMFA0SjliSFZSazZvcmoxeU9qRktTWldPN0FYUjRTUlVYU1lVbE9FcHFYdSt3eENTeG92cUVRYStiS044NXZ3c205cnpsR2FlTW5qWThmRFFKeVk2M1hwcldyWUtrNDBBUUpwTlltczd1enlWNUhJQitrODhMMEd6VFJXdTg3alphVzFuUDRMZ1NnY2krTnBZTXpvV0J0OERmNEdicDJ0YlNyNU9GVGFhSFBTVzBCU3FWWDMxTy9Mc0tmd2wyS1Zhem5tRjM5V3Z2cWFWRU5JQnhTYTNCWTJzYkdUaXZGTmxlMlJVQWsyV0JRN1kwOURYVmtXMVpleERNUVhYSzlTcURpeERqWkpUa2VLOWFJdlV0Sk84KzZsZ3JTaExyaUsyaExqSmFNZDgvbFBXdEJvcmhIWURuYTJRTFlhOVhmSU1aOW5hM1ZqUGFyQSc6MHgxLCdzVTVIN3hrNVVnQlQ1VzNmT04xMzlTMTVhNEMwZ0dGRE5IUFJMV2htYTlBUzJGWWZaWVBSMmdxNkgxd0hPb2h3eXdheGMrdlM3NnFwQW9JcEdxS3JQRGd3VldKQ1pWODFOalR6TzM3ZldFQjJRWEhlakpMT3cxTisvL1RRcWw0T2JKaXNjZjVjcDdtdGF6TWRMU3R6OWQydlFFT3VadzhwZlNONWFXTldwRHJUbkpoOTd5NU5GdEVPY2ZyU2crRDZVR0Q2TTVwWkN0Sy9ZTzRnZElyc0pNdHhIcWY0Y2t2NlZHRHAyUVJTTHJHY2RtTmZOSUZjOUFuOERTZzd6eFNkNCt2VXFQK2lPQkFaa1kyTVRvQ21uRk5hRFU2bG93Qmtpbk50Vlk1ckVtTERSVGM5TlRKUEhLenk1cGZtTVFkM0NOTHpiUUgvc2YxMzRvYmI5cVp5cFEnOjB4MSwnVFFKWUJVVW90QjcvUHhSKzZ5WnJSMHc3TTJtanJHK3NRNGlOQUNsZEM3akkrcW15ZUd5azFXdjBvNmw0SmowMWJGZ3JYZmV2SDEvSUY0YVVSTVFvR2c4aWNQY0NlSmo2N25CWlNzdnpKUSsycHdKQ3dCRlNuazJaamFHMEV0S0djenpzWFY3dW1zRWUybXFzdnJKVFhDS2V6NkpOUGJwTStRQjIyNC9WMnF5SzhtdU9wd3U3YUVBSFlONGdOUWQxd3F5dEhYWGdwWlJsVGh3alI0SGs1YWZNTVZPNVg0bktNc1JzckVBSDljZkVGS2s3aGdaUGk3Y2JMZzgwSHVmNE9UbjBVSkQzMlFHYkhPWVFBRW1UQkl0V3hFcmk3cjZxenZITk5DRWY1dkJGNk1PUzNXSE5ZZFhxb3YwQ0dEVmFXMzA5TFZhSjdPV1c2UEU0WUtpSXFRJzoweDEsJ0RkY0s2L3RJd09kaXY0cVJHMFpDTHRZZHJsUElNZUo5ei8xbE5EblhXdFVGK1BCbGJpdWhhelJYS3dRdURkRUhHYzRHWXY4d0NTU244aldZZTNKT01WS2NSTmlwVlBMeTVHRThsTlRnSjhtZmsxTkFxRS9rS2RCQUk5TWV3dnVsc3FJeVllVTBrTmVwVGpHdVVkeUV0Z2xrYVpHQnpNN2V4Y0lPVE5jTVoyK2JZWjZlQ3hoanFFb09VbkkrNkxaREdPb2FJWVB0NGxwSmp1cWd5aE5kK0l2bGhWakZnNEFTc0ZpVm5QQit2M3htQUlad1VQdGRhRklCWUYvRjFXU0xWcDd6N0dMMFREZEFQVXA3RHFsOWwycWtsbU5BWW55THNheUJza1IwV29GTUN5dHNZZklmdmQyektjNGppMytrUStCc3ozZVlwT2NKVFBlUUZoeHRtQSc6MHgxLCdxYTRkK3RPMWw1eWQ4REMrMXhycFMyZDlkVXgzanZZWWx3Rm9OTTNlYzc3Q1JjL1FkNjBVVGtmNnpFTTAxN0VGUkthTjNISkZpeE11bzhGaHlLQkhGeUlsZXo2MVRQWGdKUFo2cWVTYVh1YlJLaTdLYlRhaFptc1VXbW5waHIrdWZSVTZiRndBOFdxZThCOHJTejR0MlpzTDl2V3FKMjVRZDRmdjZFSXNFOCtIbWErdVFNT0MrS01SVGdLUWVuZGJNTGJFUWx6Z1RoSldoajNqRzNtOTIrNVBPVVR1MVNLaDZtVlRBUFR6TWs5YjRmZm5tU3hCYTgraWorV3ptdXAvWGFVbTVNSVNQNzI5cXcxdTZMNUVDME03R1BJalNOaGZDTG04bU5YQU52R2puSXM2Z3U5ZnA3L2g5VDBkWDNiWVBTSzFVTVg0L2lUUVlXQ3ZHK29oK3cnOjB4MSwnQzU2eVNDYWFhYnRCQlEwMlVqV1B4ZzhtZDJUdW8xL3Y3SklJVThPelRVbXpaWCtCQzFrWGt5a3lhaUg5OGpRd1VkaXRVSVBlaktJT1dqR2kvUEQ4dlJkaDV1Vzg1ZHMxWW94Ykd6RFBVK2VTWnJzbnZLZzc4RWtHM0NFeFExS0hUQTVxcENhcTE0QldTeVhrUFAySDRRWmdFd1ZRVWJ0UUVRZmhFbmJCTmpKSFljM0w2TTZYejlmSHp6UGJQMmZHaS9yL00wSEU4Z1JLVitYTFlTNVF6ZEQ0MFBpTEd2S0ZHNU1TTGdON1MzN2VVNm4ya05kS1d4ZzRNYUlBeFV6T05FMFMzMzJTNG5FenFXbzdreFNaRlNYMlpUTHFkZEJtVmd2SFhXZDZuM3ZDY1V1cS96RXZhaHhoZml0YmhxTDJOTUtIOE9RbEhSZGM5U3pvTTJWOC93JzoweDEsJ01JUFpVYXV4T2N5Y1RQbTczU0t0dTd0RnU1aXdtcFlZVGFGMGJNek04RjhORno4UEowS25jWmN3ekNpY0FsNllyQ0o4dCtPVzI2ajJjZllmOGczR0s5NWJWUGhuaXBqbSttMkRZK2twOW1KdVBCc2cwT0JJU3hsQ0lMM3ZuWmhOSzJvSlNuYVhQVkpOTzFKYWl6bEtUWDdoUWZldVhIYjFEZXFST2tmUEJRWk1ZdDMxRlpjT1M4Z0ZVT25JbDM4MWg3N1k4YmI1U3ZHWGYxSUI3aFVvU0RPOXBVZDVqbHB1K1BZSnFValZFMzZpMXFMcWg0M0NRc1V5cllEQjQ4ajl3ckxDNVFmU1BRVkJaZS9ManR1UWt4M3ZMY0JUQ0Q4N050SnIrbXZhYTRlekZtY1RiMTd2cCtlY3M4OTl0Uy9ZWE5EMytjenVla25xYXRFdFFQWG5rZyc6MHgxLCcwTzRHcVFOSnNheU1SMFYvMmZ1ZGlIaHVYZzlLVWNORWNtaStsaXJ6WEhKQWRTSkV3V2w3NC9hS0pCVHZnd3Jsbm9JNC9MeXNrUzc1KzEyZ2xvR0lRNnZtKzBUSzF6OVFrN1oyQldyUDBWUVlHOWR0ZzB5eEEzRVhWU0ppN244K1VvbTl6ditvZ1VwRXd3TGU1c1lqUWZ4YkQ5Vm5ZdWsvang2eWs0REpoUzFBdzhYZ2xSMnF6bHZ0c0Y1emJiTHZ2N1V5RmFkMXJqQklLNjMzcllOWUhmdmpIMzg2U1lZVFFsUFpqNDlxRlVIN2xQV04reEtMNWh3cHFnaVVaMDhMcFcxZE5ib0RLSlkrbU4wQkE1aWJNUEdHc2ExUHNLWU9JNE8wK0M0dXZneVZtRkxVWXp4cTUyM1NQTFVLTlI4dXZOdzBLcjl1eXBrWXhuWkwxRE4yeVEnOjB4MSwnS2Rra01tRUhTd2xjUkxiNnBTT1BSUzdXVW80cnYyaUhoTWtzaUYwOVN4TGlXVkoraTNQc2g0M2JBV1Y1NnZSaGpvY29sbjh2MUdmbTlzaDFQOFBpU081YmdjbTJ3Mm90VVJ6Q0JCS1BpT0xGK2h5VlIyK291TlFxWVkxbS9waGxYMGdiNlpqU2h1d0xmT2JpRkh0UVNyakpaZm5kaStQNUViUGRyK1lRUVM4MnBqWXNOem15Z2RTUGZPbWM3L2F3RFFGMnJCWXRNN0xIUzVwd3FiZ0RxV2E4VE9aUkd0SHJlb0VIVng4QWVka0RMSmVkcHpOOGN1aFRXOWo2WHlhYjlieWVyczlQUnRTYlRqY2ZRUlVLcjJOb2Jhd1lGRzZxM25mNXBveHJQTy9BTmpiVzBXSHZaUTYwR1QxVElGQjhqWTlDZUZtd0JQRmFRdko3T1JkcjJnJzoweDEsJ2Y5OGZGV2xSVkQxKzBtWGY3QVRWOHZPQi9hMzN4YjFJdWhVK0hIU08xZVRDZFEzcDRhME1hOU1vMnhUZUtpZlJ1NmZxS0htOVBtTGtNUmkxQVNnL0U3MkU0bzZBODJkVUxsTEtUYU1zMFU1U3VGdTdlTjF4L0wzWDlNS0o2N05SQnBvNXhNdjJZZE9JQUM5dGU1YTBPenFRb3pUdGNtcXZsd2t2WWlab0R0Z2MwY1EybjU3c09ROGhQcDltNE9SbFd1UVM2RHQ0TmVZK29LMkN6bFBpWnNqODAzeU5Qd0xnK3lGNFdaektwYU1NTWo2MTJ6bHBTeVBKV1VsWDJFUjI2SkxHTnRoMGpDUEh0SHppdUZOUHZnY3JibStYUXhKV0J6ejJxa0dEMldGYkVqZVJQN1RDeCtGamNsa28wWGxYNXJpUUMyNGdqRDlDb0tZMTJNeFNqdyc6MHgxLCdXZFF4RUlDcUNxeXE3Zlo0aHhOTHFSbDE0OE1vYWV1cVJteWQ1TWt0NXQ0MTBKRDRRSk9BbmR5UEhETnlDUlhZZjNBejhHMGNLMUxHVk81c20xQ2lMamlYQkhJdFNPNWVESlE4SnlxRGZVeEZabE1KTHBUTkZnS3haa1YrMm43M01ZRThnWktQbjZvTlQzWUYwY0hqZkozdXV1NGZKdWQyRHJWbyttRjQrU1JhM3dabkhTTlNxMlkyKyt5VkNEUlo4dThNWFdiTzFkbVJMUTNKaEFVV0cycGZkVHdjMkt3OWo3S284b2cwMXE2djM2Zm5nTHpEcDRqMnVqenkxM1E1ZEhxOVVHQm9wWFZ4U0x4S2dOd3MyQkFuSFN6amRGdWQ4TDd1YW9Qb25ZRXEraE1EaXVOdUpza3dUSEV5VWVQSjBNcFNRVlVaanNTZ21kcy8zSE05dHcnOjB4MSwna2huRTFwMGppZHFOdFBqZ2huVGZnZDFpYUxJU0RwbmNVZDdBY3g4alZoRkE2cVVsM2hDMU5DZUo1b1NqNTRKSWNzeTM0bllWNmlyOVo5ck16cEJZQ3dmbHd2WG5OcUF5QXR0WlVHYTV1eHl2WXJmQmlYOE03LzdaVVd1a0hoWGVqaUUySHlld290dzRha05IRjN3WWpBNnpnMlMrRDJONml4WDg4cnhwSFdwTDdpSWM3TVRaQm8wcmRWTnRjZXVCcnVMSHBlRmJBOW9uQ3hEVWptOEpXKzJZWDJwQkZmMGt6WXE0cWlKYWxsemFHU2orR3JKbGg1R3J6ZVBCUC91QTNvQ1JpR0lUZHh5OTREMWNVYmIxTmhVT2M1YXBrdVFHNklGTTJiRHByZGxLUEx1akJtMlF3VVlHZk4xRWlVWExlUWpSK1hnblcwMFV6QVVHbTFucmxBJzoweDEsJ1M4WmdXN2xQVHVFd0QvNGc2WVF6RDBWYWFjR0FUTWZJMjN6V0VZR0Z2ejdOZE5ZQ1pIOFBIZm5MdWdZNE0yV0JOdUVyVWxZcmxhYm9BS01pZ2VPdlQ1cHRzT2cyNG1xeERMM2IreExtbi9peks3WjJRaDhXQWsvYndtazRrdW9QQ0FUdjJNWnBZbHJCelhJbnMxa1QzTFZjUmJwcUV5ZnJ6WDdTdUM0NGsrSXdMZ3FJVUU3TStodzVHbHFuZlY2dklOWnlBdVBpaFcwZiswYWU5bG9va0pTbGw1Z3BRWmE4V2FGTnM1ZEhyMmNpNTRQT2xId3J6elJtUEM5TnQ5QVp0TC9uc2VLOGViTDViaWI2SFQxU2l3STVBamEzUEtSNzBEN200ak9tYUEvb0RmR1Byd0lNVnRKelJUTXFnN2h1VzJ3T25IQzBPY0N2YmxYc2pQZWxEUSc6MHgxLCdEWithaHZrNHRWQTlqUlV3SmM3QWZaeTl5NEszTDhnUXJWc3RTYVV2Mlc5dXRsS3hobkxZU1loUEhQdDFZL0JlRVA2QW9IU0pXbzdRb1VSRjRkQzFTVjVxMnAxbzU1bWNaTWMrQU55UElkRGhJZFMrQzk1cy95Vnp6b1JZdDJIVTR4SUFYZU1udE1ZNldCRk40STNtS2FMUlpBUXkvZWYxR09kU0Rza0gyc0ZCaHNQQ3RGbHNFdG5MUGlPZU1QTmdDVEpiTXIyalBzRmVwcFljMDRLdmdmeDVRSDA5OG90YW1hdkZSRExsM2ZrOGtUT3lrbERIbnNkZEFBRHRRMXpHcTRwNWpwZ2JNUjZpaW8vVDUzMEdRQ3VWMGpON0c3MTZaTWgweEJRZExDQ0dmVXU5VFNBZ2lNVEtJYm9ucXhlSTMvUGRsdTFUamViVUlaVGV2UyttdEEnOjB4MSwnZTFiOWlJamgyMUZDczJhMGRsa3phNm5JMlQ2ZXNsakx4ckgyaHhYTDNldmxjcTB3OENsT3Nha3hqT1NiK05RdnFBSWdNZmF6b1hjUWs5ZENRMXZ6WWk4WDM0VHk4eDlabWRkQTRjMlZQcWVOTTJwNXc3VHBuVlZzN2VHOS85bnlXVXNIVEh6aytSRG8vNndrQ2ZwM1UrNnVBV2d1U0R4SXVKOHI3K000clZhR2NpZ0ZtSTNva2tEakZ4TG1GWTRRZFVNZEZnUjVoWEdrcDZMZDNubGZWVjFLWVJhVXJXN1JoOTltKzJVM01GRGFVbitEdzlZV1BiZnlSUDl0NnlRdHltQUNNcE9MdnUwMlV0K0ZjVFF4QmlsZzJzdWRxRVVISlB2Rmc5SGFWTldNL2lrQ0VtN0xxT3FtTjNFZ1gxRUFoRHNMY25WMndnVzIvUHZYZjNJRVBBJzoweDEsJ0dEL0hjVnQ5Tk4rWEFENHpzcnJqRlhma2hXdDRqOHB0Qkw0K1NrbnNDc3k3R25Kak90WGRYRTRRVHI2Z2lqU0xPaUZIaUVXcThFNlV2Y2k4OFZMK3Y2WU5NYUt5NjFOM2FnWFNkeFArK2Fnb0paa1lCb0RiRHZNc1hXYWlLeHIrK2hOdU05NVZWZnNhMkZ1UlhrbEhQRWh1ZUs4ZjNESGtBVUtoQVJZNzdDSjdaa055KzRyZm03NHQvWWJIWkJsdlV5cUMxQ3V6S0ZnbGZ6US82Wm94WnBhT0puUi92aDNBZVdTSVc1MGxGQ29qUkgxSDMrSmkrcGxKYktyRXBjdWJzT1FTVm4vcjBNZEhTUk1ualFXb2Q2alR5MENSMjhQd1BVeFA5NzNvRURtUDkxbndSUEorcWg0Y2Vlb09pck5mUld6QmpaWFhwYnpWYkd3TER2Q0t1Zyc6MHgxLCdnOHRVT04ycnJ1dy8wYnk4cXZsazNoSUcvQ25BdVZ2NlRmRElwcXBqZDZhQ3ZDck1mOG1VQXBCbXdXR3BOVjhveERlTWtNSGlqcWJ3Qm9GdUcyb1NBSVJpOTZJY0ZUVDQwRkVLYWZlY0xmb1FlcWlWRDlySE1TWVZqMitUMXIvcW5lYnBZemlCRWhLeVdvMDRVWjcvcFVkMjlwNHV4R0ZZZk04azV6Y3dBdzhKRTVJS29LNkhvUVowekhOZmtTOFF2Nm04Tm9xamlFaXpObUtMQWxoWW12L2g4VkVocHVpMjJ6bGs4RGwrTzQ0ZmxNWkh0enprdy9ISkVFVXR1bFFkZEU2UU00TC84S1lmaHEvQ3Q5SXd1K053WXNydEtzTjJVNkYxbmpSYU0yVXZUMWlaWTVWN0VlMVhSaG1qOU5ScWc3M1lmWjR4eU5BTXVmYnFZaDhYYWcnOjB4MSwnQ05TNEdGc3lPNHdFNlhRcVZkRXMzRkhuMnp5WGovNXgxSVoxakx6M1dMdG1qTkZyWk9XRG5QUFdBZGVTOXR1WkVxQzBOM0E3MVpGMmdEeUdGanRSZXBkUTBWcW83OTE4ZGZySjUyRUc0VE54bGMyMkp2clRkc2pBanZDOEVKb0pvdlM2UzUxUlpHR0hFMXFjMkpjeGpyZEpUTnhieUttNDJGQVpHTmN6VU9sdjZUS2ErTEhIL0VuckpzNzkrV0F4SFFlU2FjbDl2bk5QemZaTVh2NlVSaFZtWnBuMUtrMHI3SDEydnVWL2JEKzVBODhGNGVDUE1PaTNGUDJsTHlBUGNNRWlMb1dkY3l4dGxSNEJBT1kyTCttSzgrbU8xZTNaUk5IUkJ6Uk9UeWhMNU9WeHlaZUIwTlZlSUQrbG5OQS8rSXpYUTVRbHNUU2VjdUdnY2VNVEhnJzoweDEsJ25aTTF5T3pBS1R6ZVBGUitYTm8xVGtQYzJuNVAvQlU3OG9yUnAvT1ZZbE5pYW9nNlBFRTZYSFVWZFByekJCQmc2STFiUWRWb1I5QVNVNGJvK1F2RzBYSFloczQvMGVPNVdtZ0ZoNG1wdVI4Q2QxaTd6a1dSUkZ4RDhWRWJSMDRvZ2ZqRGNuMm8rRG1HbkpxcXc5NkdWcm12bGJId3lxdlM3c2JqZHREODBSSkFpQ1pIMUdBR1k3R0JyREJjekxLR3VpODFqdUgxMjMxUEZLTHpKN2ZyMmxaUUFhNktSMUVJSHJ1cW0xRVluazAxTVZXcTBxWGdOa01TNDNhQy9UNndUcVVkV21maFNoSDY1Vnk5WEtCeDZyN3lNQjUxY2crbkNvMXZHd2p3c2IrZ3crVmxyMy9KWUJZd2EvMGpWZ3R6bTRiazZJV3lJME5xYVoyZ0F6emwrQSc6MHgxLCcxOWdTOTFHVm41bGpScDVSZU1sWlBoNXUxYkMvbXdQZjhmR05pZzBKRFg5dHo3dlF5bE1ydGhCOWdpU0NkaWVtdEw1WTNIMS84eUp5V1lhMnBiTWRLUHJiSFBLWjFIeFlHYnN5Sy8xSnU3ajdzamJDSlE0anUzd0xlcXF2SjdTY1djS0xRU0lWbVF3UlQycWd4UHFCaTRsK1BXZkd5WHpBb09VREVWdTFQTUtwTEdUTGczL1hRN3QyelRBMFdBYjZ6eUxFZEZ6Vk4reUwyWS9aa3VObUI3VTZ2TzJjWEg1ZC92cGI2TTBld1ZjTlFieE9lcFJZNDRycHVMTGd6VjdqY1BERFFMRTV3WU83T1FQQUs4WVQyUERHVmR4ZzlveERyOWFjM081VHIwcGFubDMycDNmNThBa2V5YlZiVlB4VXY4cDVzZ2tmSkRVR2dlVDRrejhPWFEnOjB4MSwnVnQwZVVvanc4WjlhUkxHcWFaWitsU2ZpOFRoWUg4SUR1NVZ6THh2UkdFUTNhQ3pWN1ROV3BtYnE5TUMrNFVhOVk5ZGNJb1RHRkVJNWFtRnFjOW04RGNFbzBZRndJcXJpM3VUSmZtUWNDYWFnNWo1WVFtWGVPZ1RSUGFYbVpjSncvYnBrRzh6MXdFY2ZYSFBSR044d1V4Y2IxNEozTjRXZmtvUGNCZDNWVzBUeHZNdlVzbHNiQlo0eHhQdkUwSW1XTkoxMWsyYkJFV3E0dm5QZEZ3dHBvdFAzMWJpR2wyQlljaVFBaExMeDhxdGJVd1BPTHhKaWJ1aHJsS1FTREJTcjUxUWJpN1BIOG1CbVJUYjV6K2vigItPelp3WWorMkFwRER5cHdLa2Z1K0Y3amljVjdDU2tNWFNDbDJOTExvcmtYanpHbDRvY0I4aVRxTFcva0lBQnFMSHFnJzoweDEsJ0YwRkJ2K0NiQ1JldXVxUkcwQmpqMVFJcFMrWmlQMVR6aTdueVdQelgzZlJwVVFaL29OTEUxMmRyUm82QTZDWnFZamJIMWxaZHlSYk8rLy83STBXZVhWZkNZbEEyR0V0Mk5KTGtGbmFuaXRTOENoaTV5Ujc5SW0waGpoQWxweFgrSzJ0aG9xbVZDTzh0NVpXdENkd3RQNS9WMUNybU54NmdlU05BRWdJaW5ZYU1mMnhSY3dDOWN0U25weDJ0R2tzQlN1N2lucGJyN0UyZ2pFWm9ERHljcUFMSVR5cEdNVlp6dVlzcFlHSkFyeWw2MUU4UXlSQUZLZ2ordFZONE9BeDdOYis3NllXTU4rb3cveUlzeFJxNDlSZ1BVeEc0NE5ubUpTYlBvNjU2VmU3bHdnb0Y2NTNNTFJzeGc1Ulg4S2w3L2lrZi9zMFAyVVYxR002TXFnRTFQdyc6MHgxLCdzTHN2VnhrN2NCUk4vODUyTW94cDVMUDVvKzVDZ2lRcTgwaTk5WTh4WlRFaEJZZ1lwSExJdU9sN2tPWnE1NCtMK2JJWmVwZUtWbCtyQkJKTlhvbnBvc1hoVUJWUFIyNGVaZittNkdKK1dydlJTbmpkSGdMYVcxVFlKWmlYQ0tlR3MzeTUzaXdlR0pKaEx5ZXRxbUVJa1hPNERqVmZKWmtPbFh5UmhLUUtRcUYrUGFqM1NBSEoxYytZVE1pb1lxYk83VHovOXNVWUY5WEphUVVGcjNEdDFUS1Q5Mm1QK2NST1phZXk2dklCTytJVU0xU1hNUnlRYi8zMEFZYWJsTlFrQktiRk1vd3NrNUdpcUE2QkNvaWdpVGpmT1pUY1BxandROS80UkRmTmMwUHJLSWdKaG5ja21hWTI0VlZxQmYxWXVtRmZzWWc3TkhFVTdFZlozUGZvUGcnOjB4MSwnaXFkdXMzRlFCcVhsdkM5WVBxUlV6K0VFTDRyRW5WQTJzdGR3M21aRnFYM3I3WHF4cjZiOTdmQ2wvb1F2eWlQcmllVkMzcnM4WWdMNmVhQmQ4UlNNc3VYWDVneklEeDl2bjBRV1pCSzlacytCMHNZUUJWaGMxdnFqaXRvYzZzZ3N2NTZkeTRqaVI3ODNoeWUvTWVKUEpJZ0YxMFZWRi91M09LNWxIdmFORllaVUUvNm1hdmxPdU5UOFgrcnpMNXB5RWg2NWxuWHZXYmJPcUFBZ0hxNTRGSEdVZ1lRWHg5NnVRcmFPNTg3WVhQeUx4dGxGZTJkb2k1ODZyRjc0Rlk1bUhMZlhYMjNoT0JHaXh2QnhSeTM0NnpNdS96Rm52ZTloOFd0T0RBM3RuL1dVZzZFaWdwWWREUHVoK2FTN3h5bFozUGtPVFNnaisyclNSV2Mxcm9NYnl3JzoweDEsJ0RKQWttQWdleFZ5VWZkblZ1bUsrL09Dc0pHcWw5ZE1MNHpoWjVQd1YrZTduYUhhNTRhUHJmcHNpcWs4WkFBakpkVnpUQnc1d1FtVTMrdzBiUGNsaGxrODA1UVJWWGFneGtTSFVuT2lzVVdXUUJvZENSZ0FDaTN1Ymk3ZnFUL0srWElSRFJQcmNLbVU5WkZnaGo4Q09lS1NWSFVvNHUwKzB4cXFUK2VMemlWSk1BZHJna3lVL0hRVmV2OUx0Ui8wRkNvUHRJdSs3TnFMaU1iVGRwL3kxbTFsSGtLeE5IODZDeEx2aSs3Slhkc2RiOXo0bHFDZUNzVmRtaVpGYnFwc1ZpMlRhbFpSQVUwQzFqUVNsc1BjckhqMmpuNFdGcHVvVjMzekt0S2VqMXJrMXJSZzZ0SDZOTktKRUNPZjNucGpaMFBKVzdnalFKT2gxQ1laWVQzVFhvdyc6MHgxLCdGZWtqdlBmT3JzWlhSd05COVg4ckFUMDNmd2xyTXJTNmJ0Z0JMMHlGaEs2Y0JrN2l4OHF4VEQwZ095UVBvQjZTTS9WK2l4N1EzTzBEVkpDOHJLeG03YlQrK2hKWUtJeUp2Z2g0UTRIOXZtWFNJNDE1NzhDYVhrSDg4TGE1TnF3Qm9ZaVJ1dUZremh0TFVEeGN3SDEyWEE4MHZFZUpENUVra2JPVkRDcTE4TzZ0UlEzc0Zia28xc2Q2WE5peDA0ZlFEYjRDMVJWYk5nNWdSUjIraDNaNFN1VnU5V2hxSS93UTArblVNaVdpeWpndDZYWEVOSlFCSUpYWE9IdXpmVWtOckZMVFRNWHVxeDhuT2xlVWVjSWYwbDFjTW54MkJudHpHd05EMHBOY1NhWHdNNXFLMmxOeWdyL2hObHNmWjBYWSt1aXFNeVRvK3RyYnJjUWdONzdyU1EnOjB4MSwnWkFaYkFDakY1a0dCajhnQytmSjFhRm5jUlczVnJxTHFwVjZTNWh2NFZ4RzNBL0w5NStWM09Na1lyWnB1MDY1ajg2VDVLYzJ1RTBmcUlHTVFnVTl4SVJJN09VMW9kdHBzWGRpeDB4ZmFPR2dIMEthckNkVUQ5R0NqNXQ4N0xRODJGWTFuenQ1VlVIb0JOU3N3QWVvQWZCUUVOZWR6MXNPSzY4M21VbGlZR0lydm0wMlFOTzFRTUJrVU1OSDdXZXhSdFFEU0xiU1QxSTFwRWhzcFhUdHExcisyVXNMb0hZTkJSM2tZc2xSdW5DK0trUG5XYTdYMGhzVUI3VVpPSmxMcDBqcUlzOTE1UUVjdFhWZy9WMXJqMU1acFA0NkZjcDZ3NUlRUHZqUmlvMHExbnVrazlxeXdKNkErNFBseE00L1MydFZCbVB4dExrZi9KZFdEU050V0dnJzoweDEsJ3c0cGV1MVJzUGNtT09wbHNRSkpEUFN0bE0yUGx0dEFyb01MYWMvQzJCTEJwcW9ZNEVyamlGeFBzRGVGTGl0M2NFdXA2V3Z4SWEyMU05UnVqdXVnMkpTN3ZXNk9CYkc1a3ljM0tMaVQzbnMwK3dreUNjb1V6WEQwSjBZS2E2WnNxV0N1R04vcmpGUTBiVVF3OUhZUHZ2cWZlbEYxVmUydlhJbmxMMWZTMUxHajUxS1Nob2RTbWhDYkpQaUdNOEMyREFpdmpVcVdWWWdLSVk0NHg0QVg4cS9xMWQ1TjhJMzdSZEZTNEVGVk1UT2taNWRSejlCR2I1YWwvbG14endqUVhsYXUvckYyejM2VlUyS2NUL0ZhUW9GaXFNeFNiRGI1ejNMUVBIeUJiaGROZk1BMG1RaXNrdXdPeVBjWE41WnlvM1ltZjdOQmRPU25HcmF1MGxsZXlBZyc6MHgxLCdIeXJYcjRLd3VtQ1YxK1N3NVptQ2JxZEF0eVE4SEQxeWpxU0laY3lIcUwvMWY1azBMRFJZVllISHEyNmtRN1RvVm4xcGJ5RVllRWtIa3JVMFVDeVFTcUw0ODZpRUpCdVNiZTA2VFFJNythVWVGSndqY0VKSldZWW0zWWxjRlY3WWR4cm1IbklVWXpHL3BhN2ZGMStmc1FTYVVxa2U3NDlGQkx5WEFvQlNCb2I3NS9mY3lGblNjcnA4UEx2bE1yaDFFejU1dW1HMHNvS3NWMGtYdWRSdW1Vdkhxeld0RmJiRkg0c3Z0VEI0MHVRZFNsMW9XbU12cE5vNHZKbjFDR2hoaktmSkdYZE1PbzdERTdoTmt1UCsxZXZnNWV1L3NTYm9QVGtMczR0Q1JkbTFQR1ZlVWhRNEEyWFFqTG5sSE5GNy81Wm5PdzBnalRjR2hjd1FHcENkMXcnOjB4MSwnRUUxRDIvb2tLYkFRQzNObFpiOEFwZnpoVWI5YzE2cS9VemhCMFRwOHIwaDlpMjFadlBmNFZFa2RVSE9Fb1ZMREE0cXZRcHBHMzZJczJCWElkcVVBNUJ3czJjRXVXc0NBdzMyMDdQaDJtMElnOGhJYmVKU2o2RGx0VUNDMHpnTVJtU20vN0VsZFlUczlTMHorVUNhc2xxMlpOQm80b09CYUxRUlN1MGQwK0c3MHc4OWZkc3pqMmtyZ2x4ZXFZWDEyMHpCNlNOS2RlcVFwcW1OS2FOc09TbmUyaHpKbXdjRnRDNE5lc2ZaUlVITm9qbTJ3SjdIbWJUTXZ6VlIzU3o2QW1pR2RpZUd2dlc0V3Y3ei95T3dJTTZlcDZkbUNPcG9xYUlGMFBlZW90MVlmdDd5VTFKSzFUTmZZVzdiZTZVTjgxdEVvYUcvZ1hVNXRvdlpQQ0lUS0ZBJzoweDEsJ1FGOE9oNHgwZ1krMytoekVZaFd6eDdXcmFVSjNiYzFKdnhSU0plNDl2Z0poUFdHWkgvdWhIc2VYWUN2ZWdRazJrQ2QxcVZIU0Fmd1dPbVIrcytzdlJwRjlhY3h0VnluTGU1a0lCVVUzYWFXeTRkbjBlRi9TSDlvekM0Ny9ZU28ycEorMjZOUnNicEhzYWtvTW1YTElObXduUHVCWUZyekFVTU4rUUMvdWs4Nm5HM001TmY1YWovalM4TjZURWZyenhXV2RCcFROV1B3ZU9jZ2lucS9jNnFyVEszejZlZlFTK3JIMmZZaWJaSXUwbmJEKzR1UXNoSHYxeEthajZxK1M1MDE2UHZUS2NiemFISDBidVYwR1RCZVdOQ3VBenZKZ3M0TWtJSm5Da1E4b2puWGxIaUU5bzl5VGd5T1JuVjRPOEI3TEI3dW82dmZhbC9ha3YyRU91QSc6MHgxLCdhdXNkaW5aUHh1QmpQbk1Lc2RWU3lBSUE1UzVOczY2NGFOaFdGR2phRlBudXlKVnBzQW5MV1RLdk8rcGlJQ3J0TjZMUVhGRklmOWF4SE1JS202SGFQYWRDZWh5aVF1UDFzZzk3Unc3WkpKcTRXSlJxdGZ1amp6K0hpNmVEZVkvQy9LVDRoaGpjNmlLZU1nMCtFaEhyaUk2VEtYMTF2eFl0Nlg1K3VQZWJsMG9UcWJTK0psUy9JU093SWRuMFJyajNaeS95VDQ1dVhZS1l2TzNPaS9rWmxCL2J3K09qNWIvbElUR0grZDhQSVdSdERqZjR3M2N5Rmd3SndEQWpJd0RPRFIrTS83UElrQUhlbHI4b1Frckoxeld6eDY0SmFDdjNjLzhqUDZlUGEzd2FMN3ltclAxbmErVVZXdXNGczFnY3JLYTJzakpiemFXc0NvS1Y5bGNsdVEnOjB4MSwnRVdGbUNNVmloc2szcXlzOFlYZ2tHdjRrQUZTYVVrODg2WkFsOWZqRWd1Sy9aYVdjV09KUzJZWVZOd1RTb01EcnFicER6SEdhVkhvQ29BL0xwdEVUQjlXY3NKdlR3azNpd0svZzdYYSt1MzhGbUc0WlJRd2lLWjVlaTZ2a01BOFRBaVhhNmEybGFrQVRZU2MwdmFobGhoZTQ1WFdNSlRXeS9wWkZqbE5LT21nM24vNnRGSTVKbHViK1dkOHBQd2RvS3QxNHF2SkZuU0ZWTUFsVjQ1aGV3NWFpenVhVjMrR0FvVFVOTlVjL2FvK1E4R1pCUVppVktxcWFIL0wyM3dvckV1cXp3REVxMGwzOG5VV3U1cHFYZnJQZkRhUkczbmFmdmdMUng5cnNaOFloMFErbGlQ4oCLblQ4OWwyeW04REJ6TCt5clh1azNObmh6dHJwb1BIRUtuVFJ3JzoweDEsJ2wyOEhLbVJLSXRMdFNtTVY0dXhYQjZpQUZaZVJmM292QkVYOGxPbUpGQ1haN0k2WHRIOUdSZE1ud2hvV2RZN1M4a0t4TDJWSlluVkNuQ2xXNVhhMVRGVjA5enRhUFhreWJ3OSt5ZXhDYmNZTElvUldmNTJhcWQ3OGxDUzByUWMzV1VuaGxEdy95VGJsbEV2VWNiWDRjU05aelZWM3habWZ4Z1ZHdU52eHB0dmJjSzRucWJ4bjZZVkZONklpQTZrbnFUdGswOFFaV2JOTUgrbVJTZU5la2U1cVU4TnVrL2JreFg4SUJNbFpid2M1aDBMVm80VEh5WnViL3FtSzMzbTRDaUFaaGdqekxuR0dqYVk4aHY1RDZnZXZQeXByNlhZZGF1THNScm94M0FOS01aREQrVlFPYnN5aFJhNTNzQy9WWGY1aUJRbmQ2WCswTlA2Z2J6MVVVZyc6MHgxLCdMR3k1UDU1VXhaNVB1dllZNWlXd0VMTURQbUJ0dGcyNTdEWnowSlZyc0hkek5TeEljKzJOVWpycFhKdjUyc21UZ21nTzhZL2FwMlRYNExOSDV5aUVXRERFR2J5MjZGR0VRUVltcEh0bDdpZDFXVTV1NkMwVk1RcHlkaGtSMS9RN3FvL1p4ei9QdnNpRVR1bHdSMEFGMk10ZmNBMTNseXd3Njd4K3VDQ0EvTmsraXNuRmpiOEM4WFlHWDkySU51Z0Y3bWExcDBRQUpDOS9tVVpNdlVPZ2Ria05GLzhMQU9BRFR2R2RDdHR0eUlYbklubWdGRHh2a1FuTmlSV1h4U3l3Tkl5enNmZXBXMERSUzlsTmtlYTM5dmxVem94SmRSV3pDLyt2WkcwLzJuTVE1VkV5U1hrMUNaYlFIaldMMUhTSDI4bVRIL0o5eVFldW9XRzVENnFjcUEnOjB4MSwnWnlCam80ekFsc3B1Ny9LMkZCUnlNSUdQMVZ4VFFYeFc4dE10dWZ5bldtSm5uTDhXM3pUU0RiR25sK0NFSHZGWGZDSmNOczBpTUhqdHFGTTdPRkZGYVpKME81K00xMXdUVU5HM3NsRC92Wkp5YURhTTQ4S2tFbTFrRnRJNWxjRThjd2ZRcmFWcjUwc0VyM2gwZHRRdFA3Vnlhd002NUJxNENVaGt0aGhUNHRRcVg1dnd3Si9mbDRRa1lWNzJlQ1dhVjZVck1CZ1JJV0RENndQaTBQZUQyRS9RSkJBZnpKdnllZHd0MHNzZC9wTnFIUnNMK1F0Q21qN3J1Y1lTdzlpZmU2ekZ4blU2UCthUXc5RjlERHcxWGhQUndoamhOZ1dEWEV6VDhHMzE4dHlhQnpsU3RaNGNvbGhTUnkwQm9RTUlmMVBpL1lOT1dWMzJEb1VwcENEcXhRJzoweDEsJ2p4UVo5OE15My9ndUN3SU5IZklGMEtFWFVuNnE4NnFDcXhsblh1ZWFKN1JCajZmaEtQdThURWxlTmdxMldlamNHc3dHTEkwOExITENIakxRR0NWOVh0R2lRcW9HZzhqSjRsT1A5MVJVSFZ0cGx3WHFJRnlCclVteUdDNllmQm54ZWJldXFxS0dhVVUrWXAxWStBNGMzN2JPS1Q4VHVZejNCdlF4bjFpbm5FeEVkTG5xMkhUWXRWMU1pTkkxSUdQTm1YdGc0ZXd1L1d2akFpK2dxZmZVbjVQU2NaWUpOTDlZTHhUVmtOZGdGM1RGVkdNWGY5M1FmYzM2czNnZHJVbEUwZ0lDV1lHUEV2dC9GWkltNTQxKzkrOHpLNUprZFVYYTE4Y2krMDJoOWhtZFhZYWswZWlSaVNTaFc1bTlPUXlUbDR3Z2pDbnNlb3lFTkVOVFNVWmNTUSc6MHgxLCdSNFJCWWkyZm5IeEViZ0hsd0RqOFRONC9mM3JwTDFrdnMzOTJneUg5OUNNM1lGbExKaXZFcXcrRlhIOHhsOSs3aC9BM29nR1JIMk44U0laUGlCcVRVbkNYVUhjbVAxbENZR05LUWRmcktvcmZwUlI4dDRNNzhKQ285Y2tPbmZTaEpEcGxzOXkwaloxL04zdEc4cy9wdU5haHE5WTFGYzlrMmhQK2FVeURLcDNUWThMeWZWbGZvWTU4aVlnVHVVN3pVSjh3K09PVVJ6WlVDZWhmNGZpcld2Z0hHUUlQYnBYN2h3TFBpaFJEYU9hOXRESUdXaytjS0hKMi9udlYxVmZaSk90TU1FS3kyTlN5dzlZK2dMcmV2UnVNWHh5Wk9IQUt1TjBUMWlORStrTGQrNVNpSld3TVlvbjZmNXRrTzUxUWlLYnR3THRCU3J3dkRVRGQ4VlB4TXcnOjB4MSwnZGNGcFc4VDdGa2xJQkVocFNLdHVGaWpNUUc2eEdyL1FsWFhUTjJ5VncvR2FvbW9vQWg0dmdaTTRSVnBTZHYyclVzWXpMTnZra0Z5ejZ6VjNyQWtxZURmdTMyaDZiZ3JvT04xcWd1K0JiWXR0dFJWOURrNW1kS1FHbjhPdzZtNjYyVjBKV0d5WW9UMjNXd2paUGpyWGtWMkd3MkhYdDBiM3IwYUhUN2pSNWlWeUtaRFVEdStCYml6NXNQT0JwWURqZEcrL3RHZmRjTnJHV3krU2xaRms4eGdpZjlHd2Vlck85aERjMzc4bGVXQmZ0YXJTcDh2OWJham9la3haMTlwamZKR0tQemJ4bkF1a1dJTXRqdk1VQlRSdHNTbUg1RVVRb291aDl2UnZMVmpNWTAxRnlCVUp4ZTc1eFBaOG1VbHIxTVc2QVBUb0s4ZTRoTzBPS3pwY1dRJzoweDEsJ3c5b3NNbU5LbHZvSmU5VGhWMDlXS2xMcEJvSWhaM1k1TEptZTlJMkdOY0hYNFVjYnpqZFFSWVZWM0E3eXVsaU5SbHFMZnJLYmdYeDRiU0dQM0FLamc0cjd1ejIzMnJuV3QvcnVlT3VmVUczL3JYMG9CTE8xM1UvOHZhZUZYeWZhRitUVEdSek9tSXAzVGhZMWZBWGVlOVFxUmZFWTdYQ0YzLzFMdkhmL2ZTelVRaExjSWlQNlljb0wxZG9PS1BpbTIwMGVVQjZEeVFDRG52Q1R1MG1RY0JQRUFGRVBDb0tUZ1RHb3R1MFpjcWcrOGg1b0ZLWVVPK2JQclEwdUpTbENrKzhsZ2ZVdXhBT01zL1NZeVRhMHRGNlBNUTBjYW8wdHJKL29PVXZmdFcwQlVENFIvZ0hhS3BoQVZ1aUxHcnVsa3NmTHBEOUZzSXNRWk51L29hSkR6USc6MHgxLCdCSmVPa21RMlo5ZnE2WmFWRktIQVlzVEh1Wkg4R2x0UWxLVCtBTitvYzBiNlBxMm9xVDRya0FRTHI2L2xpTGN0VmhtcmdkdkIrQ3lnZW9jWnJEM2MzWkdWaC9WY3JZQ3k0Z2RYc245VHJuRWt1V3AxZXNhTmZiQ1BHSHQ5eUZ1d2xVakc3MXVweU9NYWREZGFjVGYzMFFtcEYwTEJVWkpTcjQ0cFFWNFB2Z3RMUjh5S0VQajdOK0ljTXJBc3ozVWVCNjRyOWxzMW4zMXNhcGF5TG5Ec09HUVFTR0pDajVjS0xSdmhnaE16VFNERDJBTjNDL2lObTBXay90MDQ1SUZoM2ZFcUlmMkhEWE55eGcyalhMeTFUWm81aERWRVJjNFhoelhCYmJOYS9ZYUZrQkUwVkRSTzFJVzlKWGx0TS9WbGo0eTJmOGliY1ArL0gyMzB2QThYS3cnOjB4MSwnSDY5WElWUkNuZW1neS95eGRrK0YrRTNZcTdZL1JyOTJlSGxYNVNxK3BsWHFDL0hTYXQyeElvd1BhQ3NnSzN3RGJOd1VvUHcvVDZSODBmY0ZpdFF0dmpJc3hSL2RHUkZsMWNVRHQ0Z09MREVsSUEyVHJMeXRodTNJV2RDeWVKcU1YMzJadjVHM3FaWE9KT1hkVnJWYWNjcXBIZndqRGVVOHJHVjJRbndEV0hCYjNieTJ1MHJyYjJJTHM0U1JPeXRtaEVuOHpWYlVIMmR5MHJLUVlzYVltZVRPSTFQYzRqZE5sMGNZRXNyUUJrQllCODhqbUR4Q2VZSjJBUEc1Tzg4TEFrZFk0RzFLWE1iNnFoa25DSGJPZEtOV2tQK0dxL1VpSDdCV0E2TWZqN2JuMWJDZnZnSEhMVmNWWVF1MDlTeXFtOFVjcUFkcHJUbEloNk9Fd055RW1RJzoweDEsJ2RPNE9pN0RyNGt0Tk5pZTFPRmVsWFpmb2VmaGEwZ1l0R2pJaUY4MHBCQmNDZllJb0VJbE4ycGVtRlJlY1NrZkVLZHRLck1xdWdva2dIYTcxejZlQ0lPVlg1MTQvTmd2VUltKzgwRzFtZ3VPak03YkVVczVwcHNLKzUwek1pRjlGLzFoTjBnRzV3V1RDNnpWRFFJc1ZiK3cwL3RmdWFJY1lid0swY0JPR052YlM1R1ZSRU9vNjRPUEFSa2xrdGZ5UkhqSjg0aXBzTCt6WmdxR2xGbDVKRzFsN2d2em9ubDYrNlhacVJ6VkVNM2pzWVVqR2sySUNZdS9qZjlDcmxtM0tUTkZtWW1zSkd4VDRpdUFWRVJ5MGkzcjFTMnNLQmNPUFFPVFlrYVNiSGJJSnE1Sjdtb2ovRmpMOXY3TGVKS2dacEc2WS9URmZLQjNXanlPN3VpS3ZYZyc6MHgxLCdneElhYmNad0ppcHpwTkVIN1B3NHFHZjVZQXBrZ2hVTUY0VDhRVWhyYlVLQ1JXc1FValVRbFg3YldBaGdwNkwrREJvcTZEbjIrWGRIME93RGt0MmdtWUhFcGdaWHlmV2tPSGhkZmVQWEIzS2xpSWZaYksxNlZYQVV4Z1psNkk5MDZSbVM3WTRIT3dxbzVXSEdPVE5OazdKUExLbjR4cE16c2g5UUdnZjdxcTM5RXMvSDhOejNEQjdYdS93aDRVYmowVDIwdlYxekRWQWFsaVBLR09Lb3JWenJLQ1lYVjBKY3huNGxQdk44Yk9SRkdCK3Z1K000YWoydFR3WjRCL2d6UW9lY0M2WlQ5QkY1eHNodTVwVzJlc01mRGtuQ050NVViM0dLL2NmSzZMV3praitBckw0eW9IRlJOSEwydHIyMXI4Y3ZSTVJnSlNoNGxEMGdBdkJpUGcnOjB4MSwnckw1NUlhRVZrVHIyNDZJdlF4ZUdvandyaFRaV2hIcXhENUw5NWFOUmkxYlFJeTNNMktVLy9aZnBuMkZSYVpPMHhZMHFQNzJ0UnY5bTFLQmdRQXJ0azdzWTllTXFmRmZEZW9OcE5SNVFKZGUxeXlxR2FOWDMvMDc5ZjN0SlF6Mld5eVA2T0N4THNBT1gvRDJEZ1NONStVZU50eEtEZG1tMkZBZGQ0VVRyUXdDVnNTT1drdmphMVBxUVAvQ1o4NXlrQ2xVTVpDdU9TdWlGbzZDN1ZSakd2Wk5NdExkMHYrQkE5allNdThmRGE4YjRhRTNESjRjL0NOaDA4SE14K2d3N1J5RkdTeVRPVjZHWXpUSWVzL3U1K1JNRDI2V3ZLQ3JRK29PMGhpWVJmZDFwbkNsTHhSNTJsVFNXMHhCdGNlRmNJNWpFT0orM2xNU0E2eCtOU1lSR2J3JzoweDEsJzNNL21Ycmx0Qi80WXFsRTRsbzk3L1ZxcW9GSU1wSEYvV040b2RYc3hMN3czL1dNUkxkeXdhYkpHTENjQnVhNERjaGd5eUZzeVNlWktwcWpWR2cvNTNORnplZ1lsbVBoTDhCMDdxUklON2hybjdUNFhzZEhYblZ4TitTdi8xeXRiaTRRZHp1U2VjMGxNN3NZYW05OXNNQkwxTFo5MzFCbmx2dENMM1NhWm1ySEovMG12eHdoV1dzbFJnRStGcWVKSEZRVDlTWGpwK0FYejhLZ1UxRmhJQzU5cll2STJqMjdDRHJ5RHVJRmI3L3pMRVFhWVJPZnBtc2szblNHR2MyQ1pwU2dNUFUzQVNlYXFSR1QzWkx0UEljWnR5SXhPWVBGNUMwR1o5dnp2Rm1mUGhjN2NNQVNTK2k0QlJhZmx0L28zMlg5U0xOeU53SmVMcEpseklaaENTZyc6MHgxLCdZdzJ1d0Z0WjR6elQ5dWNOcHRQMVA0cnBqN0hlVDNJc1hXZVpMTEFwRHZUeEdTMTFjelRsZ214dGU4MGVFNTNOWUJvcXBFZ2FFWi9HNHRBSng5LzNqMkRvUjN0N09lQUZyU3EvakpxcnU4ZFJ0Zi9YUGRVdVI4bHN3eVFXVW5qZVVKYlBWeW11aWFwUitjK3Vrd3NFVE9TQVV4bzdPdC81UXBXVTBnK0F3Z2MwOHhsMzZSYW9SZEk5eGdodTkvWXYrYzY2VFVKdTJZSGFsL2tiWEs4OUI3TnU2SHlTREpNRWJLbXN3WjRYWnNJeXlRVUtKVXU3dVlvYnJSRnBJV3cxNlZ2ZWg3UFpwaG82enduYy9zbENJck1NL3c2TFFhb1ZwZWFlRWpsS3lCVDVZRGNXbUZJTitUUmVTNFBGaCtTVVo2cnhiQnJtZjhLb0pPclJodE01L1EnOjB4MSwnaDdxS09xOHVnb29aT1NjNlFjdWZjckF4VWdyZzRxT0FCdVljemxKOXd2ZG5yQW9hTXJaYmMvMXlBSExiMFYvcm16c3pkTTNIbzJvbEgwQWIrUnlYVGFxWGJ6Q1hnNWpaSjdmWGgwVzNLTGlyZUlGaUM5cmsrU1dPblNmYUVQVlNJQkovNExQWlIveVBPSkpHb3NEZll1Z21RSzJEbkh3ZmxKdWk5ay90SXlONndrejBmM0YvZ09ZelFYNzU5UDdKbTJZbG9kekF6ZGkvbXMrMENNZjlGcW93QXZEblRBeXZjdGhTWVNFVG5MMmVDdkxTOUtncE4rVGdra2RYQ2xFREJJVlhRVkdWQlZZZ1RXTXIvdVZHYlF3NlY3R0FVRlNvNmtvMDRyTG1LL016d0ZVamdiMWFsak5Nak4zM0NEZVd4Q200TytNRHMveC80ZVlPY3VFWVJ3JzoweDEsJ0hRK0FvbHBOTjNFemVJTExFNG1sSzZDV3M3ZnI2SDRmUHM1YWcvSTEvWGdDRlZDbjc3bURsRFkwOFBhNkVzQkRQSXNuKzd5WVdaVUtpZWw1RkFERzFGN3dldFdYeUoxaTljaVowVWFXbjRUS3E3UkViL0l4Ui92Y1BqUlpRRFVVeWJTWUE2MWtvYnYvRFBYUU9rMkE5MXZ4aWRDb0xUai90RVdINHdvWG4vUENHcjdHUlNDYVdYVmZEWWh2ZEhITmx1Q1ovcWM0THJPWVpwZ2FlVGp6NS9SL2pWQnNyRS9YVUdXQ3RmUkhvYWJmRjBoWEd2Nkh1MG95MTQ3eWszWUo0K3o2bmJKQTVEWFR1VWZIMnJTbUhyU0FSYjRwTWhpeEFFMk9CdzNmWHdoeGF0TERZT2lvK3BhK1lNR3NMamU1a0JOVXNEbnVrUU9qSlpMbGc0SUVHUSc6MHgxLCdGWGxna0NWd0owVTZsdml4ZlhBMVFtMFFYd1BRUVBOeDVTMm1zMFRnMVA2dUhxbVR4cWIxM0M3RUZVVUo0SUFsRHh2aWh6VzZ0V0txTzkvSkpxUjVGSzAwR1dkbzN0VUZ1TWtMc1lwL2d3YTQrcXhqVGNiLzFUR29rSkY5d09VbDg3ZUNaMDUrYXVjY2FKMmZKTWg5VEVzb3l4c0R4UkNLd3FkWFkwL095T2FTUDFFYnMrd09lY0NiMmxScmVvcy9ncHU1dlJiK2hUUFg3VDlxN01xNzJGZGRUdnZUQ2hmZ2lseWJQZldFS3Z1OTExTU40ZWR1dmVlYkZvNVU5SlNhaUdCZTRGQXJBZExQT1I5QUVjdTFrdGVvQ3ZYd0VzOEExajBKclFrQ2I1eU1kQkVLVTY0YTFHaFE2L2JwQjBJNmdWLzhsUFVSV2kyd1hlQXg3bEdEamcnOjB4MSwnSVFwb0dYZEdSU0tzdzg0NlNjd09sOGhEL0ZQdU5TQzRRM3BvZHo3V2JTaEUxTTMxNUQvMW80VXh5emdKQi9uUEVEZ1pwUUd4VlRpMGYxK0hnemVTM0xkWGdxb3NpSDdLQ1F5Mkx6UVNaTlpyNTNlL3hPT0NES1lsT1djRkRSOWZXZnNnTi9GL2xlRk1tbmxVRkY2QVVIcE9yVm9oNVplYnUrWUhqNDBPRlMvWWx3TXVWUmFXdTVQb3NSckw4cytycFBGaDhDUHlvSHdPS3lCVldGR0ZRMVF5NVZVWU1xSG5OU3N1UzBFblVvaW42TkUzMWhqRGc5eXIzTkVyZEtFRzZUNVhENjdKYVdXcHZyOVh1anNnNkhzWkdkcUswNndtcWxpckRWNGQyL2pXNnJ4eUVaaWF6eS9nWUNIcHgrTEc4SFRtZXJFQ1JjVkppcVI3dlpBdyt3JzoweDEsJ2o5YlYwbnRXZExraDcra0F2WTJUT2RiY1VjNFRybCtBdGJIUVNYbUtMZ0cwTnJMY1ArZjhpTjdpK0JoYndEWitiOXlsQ1I3dzBYZzJ6WGIvcmNzd3RtaGM0UnRCREhNWklyL0JMbnFoQXpIVnlONXV4cWE0MzJUbHIrbFBGbHNDRllwL2FNZFlkeUQwU25xN1ZIMk1JUTZ5QmcvYmNETW9FTVZIVXc2Yi9pQzYyc05qM3RnZng2Z01sM2krMk9rOFlQOTRCeDFrNlNkTjAyeENUNjdCS3NEWUk4S0x4TmtjcWk1NFBKOUM3TzZTTEF2YWNUUlR6SWJZeUs0YWhGbGxjRVBpZW5NZ2U0clUyaFZMYnRGT0t6NHEyNDhsMkNPQ1FQN2paNXhRZmVqRnFhYzc1aS8rZDRnQ1FHSUY1NXZGbzg2K29uUDJXdGJGWHYyZkhFT01JZyc6MHgxLCdPMzZBcXlOSzhNeTdhbTU4VEU3TFZBQWNYVlVreVZmbFIvNTVwNWQvSnJzY2MrVytiZU5uQXNRWmtMWEVyQ280UWxpRUM1MmZza2puWUxjZ2g1c3JCV1NJcTJEYzhQbC83QzdvSnZPVzNqanV1YkwxSzlVTjU0NVFoMEsra3Z6eTVRTW9ObUNLd0h0ZXVMS0pkKzh2dHVPckRSSWFkM2FyVXZsbGpBbnlJT01kc0dIeENxVW1ETldZTGFmRnRHZEdzVDBIZWdZd3R3aTY0VXZrd0VaTUJZaTdFZTI5c2FCS2RpMDVSN1E5QmtzaU4velNtR1lmNzQ5REFscEVUaXdlZGVKU1A3L3hVaDdEdSt3cWZkYkVwL1VJL0tVUUhHOVRYRy80eHB4akFXQkFjbnZvcFMzdGxXYWcwYlJHSEowZ3dqR2tFaFVJNS9yMWk3SVowdTg3eEEnOjB4MSwneFdkS0lZd0NCSzVZTDZwMWIwY2pxLzVLbUxqVERDVG5OQVY5VXBWVzhnZnRCbURjVWdZYkMrYXNZamhGZHgyTGFHZEY0dUMrdGFieGNZTENMeUVIRC9Kd0VOUU05ZEE3NFBvS1VlSVNZZUJWWTdlZytmT01NL1VQbFhNOFFsZUt3aDd0aGJuZHBKKytpd0c4NWlCY0hPa3g5cWlHMmg1cDZmc0h6MWpRMWFRcTlBMFFqdThRaXJRREdKRWMwQXVENFBHc1N2bEowRFhZUERTVDJHMWtjK29RaFNJQmdkWG80Y2NUSHFiREU2c2NEMlcrMnFkQzRyWTlIam1kTmsvUnRiNnIyT0FJZGJxSVFLMkI3ZDYrWFJUSkZUd1Y1TUc0Z3FldzV1bEFBQTBtK1RoYzdYdmZWcE9KUXBoaW9VVTQxT0FsclY1WGZEbzNDWStJY1d3bzVRJzoweDEsJ1JWbGJLK2kxL29WUWJPakdocmZrdktZK29TQ3ZTVTRkQ3FYSEhuV0hyRGtOSGN6ajJtK1A5YW82ZHRBOTVDQXlFWW14R1cvZUJ1ejVRcjMzV0o0WTNNeWI0dHNOenkrVUxvS2hsdUpmeXFtQ2l6UmErN3dPeDRwczRPSEJNb09HNGxxMW9QQ05qRk1lNkpmOGZGREhhTVFYaVdQL29NbVlFLzc5Uk5JUHZOaUc0RFp2Q3U3elRvcEt4YkpyWGdRMUo4TmQyYTgvcnNyVnNnVE94THZ0OUs5Mmx4ZFFURXJ4bWZya1ExYzBnMlJsbUFObkgyTlZDM3pNUEQyeDJyYzNmOFJxbUoxcGFTMHZoaUJPdzZMaXhDaWJmU3ZEYkVkQnpaa0Qra3J5R3UySmRZYWxNS24wa0hrZjR1NlQ3dlpKTk5ZS3dTMjBvcGoxVUUyVFQyNERlZyc6MHgxLCdOSGkzZnJnblBBMldNblY3cXRDNmpyY0hLdE5qb1FUSTMrUUUyMkliaGoxZUh3ZkpqK3NFOGhVSUpxUDJvbWtkYS9vZlJhZGNTbkxaS0lQd3RtZ3BhaTJpbm5xejIvY2puRWZiZzZzRWtVbVhuclNQNVowR3FlaEJnZGJqK3l2b0JVa3U2TXVINDRFTVdOc21Lb0tZNWQzVW9lNHJ2RXV5eVNMcXJEVE9vc3JaRTdIM0FjVG56QzZST2djOVFSS0FsTEhvMTFOaTROUEM3TGVLdmNTMGFiY2RGVXlJRjJOSnlVdHNIRFpBczY4Z2FHZWNrckVhNGlGUXltZmRURHlNNytXNTdmSE5jQUhzZVVXek5uK1FvVGFHc2NSVno4MW5PR3ZiZUNJL2dCSWtic2t4d1VpbkZscGtEQ0xVQVpyM1M0U3dMbnVlczZud2FIK015TnMyclEnOjB4MSwnd0hDa21uMkM5SXF6MGJidFMwdFpDclFiUHNvQXZCcGtRK01xU0JIOThaUTQ5QTlSZE01MWJ2S2YxVEt3U3hKVXN4QTVHRFFaQmpHY09JTUo1WVU1MVRVNnl3QytPNktPdC9iSXJEMTc0U2crU1ZwQ3p2N3EvTmRtRG13anYzS3dXaURiMlA2WEVEVFppakVBaW4yeVRscW02Wm9XeUdwV3ZmbkFseEZtdFgydzcrcjl0NStlVEFIOTVWTTJ5cnZ0K0E2NWJweTBPSlRBZGU5cGtkUlBqOHJPTnVLOHVud29Yb29KeEE2NWdmOE1zcGp6S0hZRGtER01vWURRRlJ0NUN6L1R3V0dmOVgySzJ2Qk8ySEppdkhpN1RCRmpub28zdG5rbEM0bFBKV3NhRW52TjZkNzF0aVlkVTV4elFJNlFnVE9uYkJUNGhzYVMyaE5NUXVjU0dnJzoweDEsJ0NVUGMyYnNQZEhQRCszZjJVVThuVFluUkpRUmRMRFBCWTltNiswMjZIRmtzeEk4bGczMlhPSzIyLzdwVWY5YkZXTkh0SEFidk9CWXptc2phMGd4cm8vUnBBSmowOTVLZFdrQWlhQjBSSi9ZeVRwTHBlV3NJSXVCek9HdmcwRGhEK2tZU3VvQ2tHa2M4TG3igItLQjl0MzF3T284eTU4UzI1LzNBR2ZRRU9tZHRnSk5BbnVpblZQSWx0ekcvZzdBRUdxNk5pTmFlRkNsZk1sckhTRDNmajgvalQ5c3NEWHZScTRieGdEVCtsTXZ3TGdBMHJUMDN6RU1yME5iM0loTnpkU0dTblM5L1JIeitCQlA0R3hHNldNaUZTdWQ1bWJsbHdjQzF2Mys1Q0Q5aW03dENPZDljV29XeWt0aE5YcVFKOTFBZko5bkFkejJkcXRzU2VYNC9sai9kUSc6MHgxLCdoVFkwUDAyc2tCSWxqWHltOXl1cmJsMXlRZmduZklSREFQWnlmczJZQlVidlF1Q3VKU1haODVYUitCanBuVmRoZnVzWXZNUmVPay9pTXErcFNpam9HOWVmQUlEMTd5REJvMCtXaWVmSXRrYTJoazRZcEZ0YXYyd1ZYRWxzREUrUnBHMmkzQk5tRkdndDZQR1krbjlpSHRMVGwyTUt0aWNMampieGp1K2s1aDFDc1FnVktJYWZ3OHlXZFdaOU96RHF3c1ROS3BSbEZlNmJCYlhrRkVpRzVYdzg2WTdLdXorVzFYNjhWMmV1MFlLS3VRL3AwNGwrR3RWdmhyR3JPWTZTeW9NQVBIUkJjN1I1VFNGVWtWTktieUYwWVI0ZzVOVWdpWnFJY2VkK292UmJNNkFETWdFcXc3MTBmaThjRG40QlRBK0d5M2cvcXFFczROVXhuK2hEMlEnOjB4MSwnbEFFNDROSTJ2eC9yMXViMUQ4ZnIwQ013a1ZpSm80S2haNmYyeWFkbTdiUUc5Z3NrS3FUdHY5VG04YzBNWDVDSVJXNEUxeW9mL05QSndqbnNkNXViRzdiSlNNMFpHMUx0Zlo5c2lOd0MvODJaV0FhdFZzcU5qa2RLRnUvNk9kY2JFY3E5VWFIRHZYWW0za29Pam5IN21tWldxeUU1K1NLK3VjL2tGR21FQXlMTTlCdnpheEQ1QnNnVlo5ZUlUK1F4U2xIaGI2bS9TNlJZckVYaHRuS00vOTdvdGFuaHV6TGhhL3pYcVlYV2dtV2s4VjAxL1NOQ3JvUWRLaUkzTnR2bmNqTW00M1QxSjBXbFNWUGpMWElLcFVDalpkYU5QRnVUY3dubnp2V254L3MycGhsUm13OExHU250N0ZQK0hKNWVyREFHVFZoK1dQZnhNMkZYcHk0d1JBJzoweDEsJzM5M3pXSnRlRXFEbXB4K2pkRm5vbWR0UUEvNEprdmZYNmN5YVNFUmxxNkdtZndyVWdVUDBsN3lWZ0V1cEdBTTRGK3ZrY1dNbVZKL2xrSFFINEtoVW1qMml6eFJiV2Z1dXlUYlNRRWljbGN1ZGRITXplSWFyV2QzOXFIYkVseVFCSW4rOE03SGVDOCtmNDY0dklnMUZacURqZEgwRVhQVC9SYVE2L0Z2by85QlM0OFJ1TVZkcldvQUNGbjdzOHF4VUVYNnRKeGZ2S2s1ZXMwdVFxTGRVdkJ3Nno3cDB4dHV1UlpGRFRKUW5MV3YzcGM3RFFyNFRpREpYcGs2cDhvUGg2Q3RBSyt3SVZOWUVCSVRBYkFwOGdWVDQxUkQ1MGNxY1Y3VjlCRUdZQStuRG9iVXZSZ1lnTFlGODZXVGIzaDJKdXFIeGYxdzN1cURkR09TSk1TdVFpZyc6MHgxLCdUaUJXZUtSNWNzNW1hUFB6UXNJaTh3UW1KZjAyek5NWTJVUDdpQ1dseG9GUGphS0hJZGl6TEJGZmluL1pObFNuc281ZVFiZGdSa2NvY3NpR1hCYXJEMkkzQ29UZUc1ZlY1TUcyUmVEbzd5V2I1MjZrVDg0MDFDYjdNUHF4cVhmOVQvK1cwb091ZVdqdXJGRWNEZFF5REdSaUdkcnd0N2x0MENjOXBHQ2dVYStmays0ZDF6STN2Zk5lS3ZFY3VsUUQ4V09vVEhxalpyVGdUc1E5VUtnT2I4N3BRbXo1UEtRcVFxYVdRVWZUMGRsaWx4L1hYbUJ0bytGR1lObkJRaVhLWXdxeFV6M3NnQkNZalRHbTJHaTZNMUZCdko5cnUvam91aDd3em0wUXJrSU9KWE43ZEl6cFVLd1JITVBmenQrd1MweCtQcVVZakJFUEpFTG1tZG1OYWcnOjB4MSwnaUwxVlI2T0s1RjdoZXNkVUU2bFhSaU15RjBMc2V1WUdiUVVsTlRRV0xncHNqOCtiYUZUeTFNdXBJcjd3Qi9KWnNqWk10VkNoSFc1QitYbkNUNlNMYjZrQXV5YTRmaXJDN0FKSkpmeis2dXFEY0NZbjBadDAyeEp1SVA5NXZXMVl0UWZaMjJJOU9HbldQY1NpdEdoV01Ud1ZZS0Z2OGpXRXBENGErUUZYK1B5WjZTVnlneElmQlMyU1d3L2sxN1FEQkd4KzJ5azV5WU9jTkpXR3k5TVNUdEFkY0FkUTkrdFp6UkRjOVBrb2xBa0ZCQVRnRlJkZkVmSzBxU0xLRDRMTUZvdXpPR1FOdkc1bW5BYmo2dDdBZWFjTks3WXpKRlNaNE5CVlJxMnJ1M3JubDNpdDBkamRCVkYzVkg0eDRLUVNhUEsrL1pPR1BMOTUySWlnSm5sbktRJzoweDEsJ1djbTFobnRVMXZPM3ZFYW0vVDMrdDJ2VXdnSTRaN0FmcnRjdmg4TDgwY29LQ1VUZXJJNkVaaXNnQmVLYWd2cHhSbDdBQ2FHNTF5a2lhRFBNcFltbjdhZUZXYTg2eTEyYVR6bjFMYnptR1JLRVM4WFQyNzUraTZ6QmNORXpCV0ZTcUFtTEkvWExjWVNHamsyb0tLWDVQaHczaS9XVlczaHQxenJReEJrWWRrTWg2VnFSbWVqZUtORnNjMThXdlN1QzRmdUcwMStoMGI5NHl2TnhPY1p1bThDSktTaDZvazdRb21TeTBxT0JkVFRMdlBDQ2RCUmJKYWMzWTZzK0thaUJscE81N0I3SGhMYjlaT0MzLzNUc0ZlaEFZUFBjSzQ3VHpHMWhpcHhJM2VUUTRJZThPRkdaNnJEcndpcUdaQU1LNjBrNk9sdGFvSHI3cmpKQ2hMaEJ5dyc6MHgxLCdxbGNrZHNEbFFsYXhtZFIyK003N053eFpRZzllRVFSQlRmbk1kVndyVHZtZUc3dTNnVXF3Z3FicU5GcVUzb2xmOFVySGFXT3VJVCtVeGloaG5nUURsU2lReXc0cjJOZmdhRFhTSWFkaFVwK1FyKzJOTkQzNFZVNXNiRjI3TkJtTmJ6UUQ3V2ozRUFvRXlXc1ByRnA1SjZLaFo1VFBycUMvaXkzYVhWV0dLVk1RalVWeU1LQkM4R2hrbUFPQlpmc3p0dGlCSmpFcUpZVUo4SlA5Y3ZZOUhSMlhZMnUzczF6N000UHA4V1lBRjdKVWlRdWZ2ZGlzclBacXFaek1qb1VzN1lkZlpzNkxYeTFqMlZ6RUtETkJIZlBGYlZaNzkrSXBzLytuV2Vjdk12K2lUZkg2RnFuZzNBSDVhdHVTOStVaDRXaDhlRUxyUjZLQnkrSkRpT09xWkEnOjB4MSwnS1pTUnVXU2Y2WE1iaTB3ZFlRT3pzcjNGWmZ0Z3ZWcWdGS2k3cnRvOEE1VjZvWFN1QzF5bWVoZ2piRFlpKy80L3VlWXZTSDdRY1hZVTJ3anp1OWVrN0NQN0llUmdkd0dHSDh5Y1Q2UHJUK1FhVmgvMnRkcW0rNVNXUVU2bWhMb25JcnVKZFhsNXVxQjlFR3FVRnJwaWZuSVc5MERweFFYMDVYbllCNFpQSk5CaWxoaWc3c0FueSs0WFRGbitsUE45N1dwOUdIU3QzM09XbW80NVBuRlE4VEZUUG8wOUsxZUk5UnZ2YzViNXcxRDdLK0toZGU4UTRZc1lrSnFUTlh2VUo5aFRYT2o0eXNFUytVY2FrYjErdnhBUHZUR3IvaGV2b2s1Um8wK3VRTnNTWndsT0pXK2xTUHBzMlQzY3pNdnVvWE5yVmF0RTZkMkxlMTVMcThaT1l3JzoweDEsJ0VJaXZQWTBtK0ZpeG1ING1KVjRidHJiMHJZV1dINldkbFNvamFKT3JUUlJyNUVzTVY1RDJXUFh2djk2NDM5M0JueVYvWmh1NDNlYW1tOERtNzJLOHZvblBIRUNGU2pnU0xoblZnTkQwdXAxL1doU2REZkwveGtHVk1JMTlYYms2bU8rZVFVNk5XdE84RTQvUFFXQkV2UXpucEkreWlMei9xQjZPazRoOTVsQTc4algyN1NzRjFudTEzb1pmUE5Sd2ZpRm9pQ1pqTEc4d1FwMGRtS3VUa3pMZ0lPd1dXdzEwYlpuenh1SWdManRDK3NPSnNSejN1VTdBbGdPblhkdnQyNk9WZmJMQ2hIRFVWTW1DNVA3TW5rL2Z4K2NxUW4weUF5TXI3aXYxYWhaVmozRHlpWnpWQ293VzEzaDVTOWV1bGtISEtObnY5U1hVZkFTdXByUkM5QSc6MHgxLCdna1N1alhqTWZoYU9QeW9vcXlYTytSQVpDM1VxVUE3Nm4raCtaK0JYUUczbmlzL3JQb2tJV0IzUnlaQktUM1psTmZiRnJQTS9mamg0QUtMaXhhdE1tc09jU0N4Snc2TWhWOGRlMSs4Z1lrTnJ1SkFDTnJqa3lqY3N3MnVEdFZHWkc5d2UvZnhPUG5OUnZaQlJPMnFGQnVSTHZyZnk0d3J3VHBXUERSUWNjVmdWbzdnWkhCbHU2MDAxcmV5Y1c2bkNlU1FyTlptOFhFcG9yOFA4WXJHRlljVzEvN24vQzZNVXBGY01LMWJ5c0RnWnFHL3JDWTIrT1ZsZlpPWUxJRjdNUnIweTRYR3RUNkdFVFVYZnphQ0tNOXZuUEZRNGNvbG1kbmJmWVpPSGZsMVRCbk9oTnRMaUpaVjh1b3NaeWV6NzJuZkU1dDlSdnJwUVZ1UkJGKzdJZmcnOjB4MSwnRGNCbU1OdnNjZHh4b1c4TGJhMElTNFVMVzQraktHemp6UTZaY3pxVzBmdlN4VllHMWNsN0dtY1JjZUptL3BlQmpUZHZ1QXo3dDZKZ3BSejNKVkpOWFRzT0JhLzRpSXRjdjY2NEZIazNDdUxrZW85MHFBMUFpcXRYbWxxaUdMMUU2VWRnSmNJN3c4cHU0ZXRSMEtHUUhVeVhiR0ZmWWlsaU85VE53UUZnWFdZK29GV0crcnlwZzlIR085bWRJV0lESFMrQ0s4WFZod2Z0N1B5aGxoaXJuSkdzWVBIT2N1K2JDNnBlZElxbjNKQU9sS3JpQ0xRRENEU2JBN2gyaU9QQVg0QU9qOHRoVVY5TE5CQ09pNVJFejVGU3MyVzVQNGQ5bHplQURKY29vMzlCc2JiQ0llYWdodDIwTUZ0VmQ2ZDNpc3ZmaE8zUUZhdnFURFBQL1hZRmR3JzoweDEsJ0xLUUhONTEvdWZRT2ZOY1FIS0M5bGYzd1NwUExtK05qZFU0ZG9UMERmdUlha1R2cURSR1FGTWplbjhQWWFFMFYxVTBDYi9ra0dONHlsQTRqZDV3dzJDOFcyQko3dGhuVmRoZDIreEFyMDR6K3N0T3ZPVTk3cU1vbEQrUWRjczRPS3VJbnZJOXNOM2crVm5uYzljR0pnZW1RQmZKbWVMUW95RTFvTTBPZi84bmdjS2orYzJZNkdwbEtVWWlhUVVmOE9YbGk0LzNmL2oyRWpVdEFIUytKekZCVjNEbGtUbDdJbmFxTkdJLzF6endEZklya01WMG9qRUc1N0ZnYlowL0RvOUhPSGNDQ0xhZFl5S0R2ZUFOV2Y3b0dlOGNmZEZHZDQrS2tKdElVR0dnUGRuUEplTVNHeGI0U2tPTTVocVpYaDZNNEh5YncydVVSV2xQT2wzYlNUZyc6MHgxLCdMRm4wNTIxUUR4TVNWWUFWVmNvdEQ3L0dyeW5pRk16UlJXRmhjaFkxYStoTHhnV1gvbGhMMEdROUVPU0trM1FLT1ZJSlNUOThaamMxaEMwRUlGV3JrZHpMdElzLytJR3lSV1FwVEUzNndLa1YyNkdNVlZmTFNOVC9CR3Q2dm15OGFoNFJKRTkwWWgwbG1WRVFicmt4cnArZDFxOEpLQlkrOEQ5MEcwRmhHbXZpOEd1NThjRXkzRFE2a0s4dm1vVE9XOEE1QksvS0wvaGZPanRrVGJLdmR6MkxXNC8zMXFLZ0dKUGl2VUNQcW5IcFd6QjViWUdMVmRWQitPM2UvUVI3TlFaM3FraWU5dTdocWpOK3Z0U3d3dE9BREorMHdVTWNjcTNVREg3aUtEN3E4TlhVNTFaK1Jmd293a0RDRFlPOW15WERWWHBxazVQRS9JVTJpaXBQMWcnOjB4MSwnQU5FN1kxLzczYUo3MnJDYkpGbDBrUDlDZDg2M2x5N2lYcEtiT1cxR3pBeHVrcDUxS1g3Y2RsL0tXdDJKdmxCMWFxeUhFdUIrcXVUY3JOTnppRkNkVUVsa3ZGU3QrandBS0Y2SzVnZTdvVnJRakJrckFDR2FReXRsaGxNbDN5UWVSbkV2ektqcjVONDJ0TC9PMS85elp2eExkVW5naHovSXg4QkhHbnp5eXRnNU5HSC80ME5LczY2a00weXZwbWkwcHlBejdiRXhzYzkzOEZPKzBpSDVQQVl3bE10RHpoWUVEOVoyR3ZoNTl0YXMvYWpXYkxRNUdZWmR2SFJ1OXFhV2Irbk5iZzF2Z0lXUlZZME9NZ3VsbE9qMkhEeWdPanM2T01zUkM0ZGFBWWFSSDZnRlNJN2UwMkJUcE81bU5NMkJTTy81bWt3T05kbHRZNFNlcVc3U1lBJzoweDEsJ2I3Z0wwY3pTckNRdlpwZG1wemk2L01XM255ckY5NU5oSVRsb0dmQ240bm81YU12YXR1UUpKNUc1QkJGTHRURzlpMkJQU0lyL0QxdVArQXl6dCtUNmhGUVRqQkZveWFESE1BLzZCOWV5L0p3MEJrZ2pTalRtWHhXVTdtdDhRMURtb3Q5SlVDNmRybzFKUlo5NEVkcEk2MkpyUnF3UDRGbkpHK0t6bHhBTmdySStNdjFNVXd2SDdPY1RTNHNsazNKNHlGMUh0RXJiRkF5VlJ5N0JNUDlmSDJQdm0rakVpOVcyaDB5bkJSUWlxQ003NE9ZVDNaNHNGZ0pWOWtXdFVjU3JFbmlDZlB0L3F6Tk5DcG5oYjF0QVc2VHJRR05hSU9ZdExqRVZJUTR4UTBMMzE2cnlXL0NwU0NMQTA4UXFyMmEyV04yT3NsMk0zbzljcXlKZFA2M2Y5dyc6MHgxLCdyWWY0N0dTWXBnSVBobjZpbGVQTWhET09CNmZodkQ0VUN5QlNJSmVBUFo2QlV5YklhNnNzdGVMa3RNTjAvdGpuVjYzOFA0eWFneVVRTWNMQUprS29rS2xDYWwycFJiLzJYcTVCNWFZb1NkYzRvUlZ3T2lYY21pelpDcFdBcStXZDFLMTRIUjV3dHcwTGZyK1RxTXc1aFk5TDEzZmlVMitkNTd1VW1KQ1VxMmt5TE4vc2lOZm9CSHJ4ZnMweE5WWkovRXI2a25VRW9GUTlvUHhvR2Zma2hIMzc4YVdBSjhHVmVIK254UnNWcVk1dmZzTzNKSzRHbEVwNUF6K2liZDNlNFh6V2x3b1FTN0ZZUjJSdGs4MjU4MlNKS1N3RHZRQU8wbVRxdWZCV2k5RlJGWkUyMzhYRnNUMVNqMFNrd3RPSkdXQzBRcEhjOUozeTU1bDdSZ2dXc0EnOjB4MSwnYzJSQjJoMFhsZkNYdlJzd3ozM2ZFNnJIUHNSenJIV0x3eDRtSWg1UlE4SnRVT2NUNnV1NmZtN1VRVW92N3JZL3BDSG5VcjhFcVZJZFltQnlSK1gweHJpcldUUkZxQ2RTWm9OUVZsQnhvZlNFQTA3YjRsR1Via2ZlNGtQYjc1cHl5TkNOTGlyR0hiNDZtRXc5c202VnhKajgxRHhTU2p4Ui9VRWcvUEhsMzlBSlJhN1lCT25hZVpRRWlPcWtrcGE1T3JNN3NOdTVaQ1FKVTVlbHlncW1zaW9oN3pTejltNjd5cUk3UmpEbWlHbERWSEdYTFkwRVV5UHVPcTg3U1RBZjlTN3VsOU1jdUdWZTQzbzV6U3lNT1p4ZDhwWmR0QS80YjZIZk1LZmtxR24xSjV0YWl3bFc3bnhiVEVqbEs3UkJSZlJhSUhUeWNEWmZ5VTFKVUpPMkNnJzoweDEsJ0pVZVRRTzdUZnZuNm9nWFFVU1dlaWltbDZUOVpXcHQ0Y3RhL0lBdk44M1liL29yeUh4a016YVRHUnBFeXdadGJZRG9sVkpPczh6QUxtUTh3N0RUMDk0dWhaaHJYcVhxRWFVSTNNVnhwYVBKVUd5dC9PR1o4WVNKQUxYRzJ2dnhubmp2UEd0SGNVcDM0b3BKNi93aitXNytpcCszT0dTa2VvaGFSY05sTHBHanhjZWxFWllCcGpQbS9XaGZMRllyaVhic3ZENkRyeVYySEdjNEd2N0huY0dZT0NsREwwdUU2S0k3WCtjSTcrT0wyVFF2cnZNMGltSjViY1pISjgyUHJMTHJEOTNCU2V2T1VaVFRROXFKUFdPbTAzbTBIeEsrcmVScEhQOS8wYkxsMGZoRHJjR2orZ0lRU3dZSFR6QzZGbWpOL21keS9XQVBYOCsrbE0vb3RNUSc6MHgxLCcxSGYybjFzT2pVaHhxOTY2RTRqNDN1M0NNZ2FWdmdPTjlCVEc3WFI5TGZHdWlJeklRYVV1SXFFblNqVi9sYkZOMGRiL0FQdkQ2TlFYUzkwWklPaTdGdnVLY2dsdDZ5NlJEdm9OUHc2VmV1VG5DVlEzR21KeTRsK1VKVnhUcE1jN21DQitEMkFTeGp0Rno3Ulk5YVEwZE9vdnNSZHV4T0lqVCtYNHVFMDlPa251blZSRUgzVzJ5b2U3Vk11WEwya2EzeWFVcTQ1TVYwSDMxM1Y5WlVzdmdNMVlwM2x5NU5raVZjWTVCbUxwL0RpZ1RjTHpuSWUwM0ZzZE5lMWhPM0RSazd4L3EzdHVkUkhaY3NmM3BoNEhFL1BERnRvY0lhaEpWSmp1U1d1NE1GaHpDSUF0ajZHOWlMODQrVUJiS0pUL3Vyb0FLVG9ZKzVqWERKd3orK0xsaHcnOjB4MSwnUHN6SURNQmNrVFlYSkxlS293NVdKRk1ZZjZXcEtDdTdnRkt1QlhkamJuTE9Ebyt1MUEvMEptcDdIVnRtd2VLQ0ZMZkxZc2YzWmJJTUxlQWFtZ21PZFdMSXpWcWsyWXppL0MwSllHT2xJWEJSbzYySkxlRlREeEQyUWxtQTdpV1NKTjJEaHJmZkl4NCtjNW9IMUFqczVxelF3NEVRRitvL0pIekxCemdrd1c1VzdtZjhIaG96WkxUN0o3WWhxTTBUWC92N2p0V09nelhncks2MG1KRDZwcmNXaURkN1ZsVGxSN3dXbEVBdVdmTzI2c09ESWR5UzZwUnM0bFJTTGhFY1RSTktBOGFHK1llaHAzWXpvcnVKSWp6OHkvNytxWW5FNUVFbnQxSjlaVit5RUtkTkt4N2R5YW9kOWJxR2xhOXhkUFJ3TXo4UVVkenBWKzhwaDNNeldRJzoweDEsJ05YQzhFRFRXb2V5R2NrbzhXV2JqTGFZL3dNZmhnaldZM1F2c1NwWVgzc2JsN0R0akk5Z1YrenZ2Y2FKcGNwZFZCWWF0Vkxway8xQVJ4TTEzejBkZ2ZTU3VHMllvVXRPL3hNb3VKQUVhRTRYRE1XdllIMlk3ZzdWeTExQnMwbVltTVQzelhEQllzQ1RBOGtFemFadW1Ddk5WdlUvTmhWVmIvNW5PREYxRU5UWmwvamhuRVZ0UkFhU2xocXhNZ1d2RTdqM3F4MXhYUjdaTU90T2dCVFdOWDdWWVk1RDJWeVE4ajFJL3AxQW1iWVBMSGJFZFgxVkcyQS8xMzRYNlRwdzFxSDkrSzVJWVQyaXR1SVhXR3NMMVh6OGdVWEVySHNWQnpma1FoeEN1SElPMU5kTUpLbTBTOE51c0wrN0hmK3FoRU1wUUlaV3cxV05UbUppVFdQNXh0QSc6MHgxLCdpQXNmUmkyMno2QnRZM3JzUjZxMHFWV0sySkVnOUV1b0tTZkkwUXNFTCtGUEpWWnh1clpXY3hlcmxxR004STRaMFVIb1F2UWVqZDNrS250MVBxandaOTk3c2IxVkVYSnZWQWd3ekxQSjhzdkJZK3FhOFdENS8yYW0zRm1HVkduZm1YUU5vbkEvYW82WnVacXF0TUJWak82U0hzaExMUnd2OUxjWTMwSzUwRnozbzZVb3plSlpNQ1hwbTk2TjR6VjYzMmg2VytEZSthT0Z4R0FpcjRvQjVTSVjigItMTDh0b2s4d081MmM0VnExTEFoSjRZck1VZFZ5RnBUVm9UQ1RBeXF4YVVJVUtpZ2p4ZXpyekhtVGRFWlJ2K29JZ2lQcGVFS0JoUVZkcnhHMGErYjBKZGNsQUEyZUlaLzhJMG1tUTk2RXlmTVc1eFQ0c09Vbk1VR0FyNU9FaUEnOjB4MSwnSElxai8zNUJFWFEzVmxNS1VQZ0FNS0FzZjFFcHhFV2w4V0lvVkZ6L3M4dk5DcWtNUkN0WnJMdkdYeFhpa2NZVElSd0t4b2JEdENmUktvMTQ1eHF0YTBGdmZYTmoxUDNGUWdiQm80ZmQxVFZadnNsN0hnaWl3U2JTTkhFZDVzV041dFV3enBsZWg5MXFjV1YxbFVoeUtheDhRRTVrTTEvcGRwQzhvcVF5MVhFdlFaVnA5MW5kZTA3OW9iMXhWVm5wV2VlOEdDNVowVVlyTWRTcTNoS2Y2TDlHa3hFSzdWQzRYMHlXM0kwS0F6empFWmczUE1rUU5FYnNLdFpqa214c2o1OUFtUWZKaWpHRm5ZOWVXb2JXV1dHUy8vZ09NR2k2cDhlYXFLM08xdGd1YW9KczV0UU1uaVdmTTRtTGI1dUx0a3F1NXdXaUpoejZ4VWR0bnNxazBnJzoweDEsJ0t1MEhHSDZkVVhYeEw5ZCtreGxNZmtLMWMzTzZoUml6YUtpUVNua0pEL1VvaWZEUmR1UC9qNjZvQXN1U2hGUmtSL1JLK0kyVmdxbWRiN1plY1pmV0kxWkhkTUJFMXh6Zjh6WkdGZW1WaU53SnErc1dIb3oxd1Q4ZnhHU1J0QmJ2L2NWZmRSc1hTbWtid3VWQk5pSmNRKzJXVUJQeFByU0VucllDSTNXSGVsYXluVmFtWkprM3BNeWtaMTVjZGRQLzdNUDl5ZUVBczU3bGVrWXNJVlVkVGQ3Q2xSanVnVDVIOU4zY1Q3c09ad1lXQWp6cFZUazFCN1BxVFlCc1E1V0Z2N2FDVDNXckl2RkNJOUFPRXkrdVJhY1dLUGo4alQwc0lHbnFtL0hVbWZmQytCZHIzRjN2SldqR09xTFFqeU1KSlNlU0hkR2daazM3MlNHMUY1REU4QSc6MHgxLCdUb0owWW05clZSUEMyMjR6NHhhSnRkWmhBckIyQlo5QVpnV2VXcGxHNHVWOWtqaFE3b08vcDg3cWh5c0tGNDQ1UDNVOE9zUEhiVVlzZWgxKzNFTS9DVS9uNnRKK0dKQksrZFMxbWI5S3NaSHhHaW9hNnRRbnRXbmtXMFBzZ08zRWVxVHk0a0V0bU5sUkgzOHZsSlFMNG0vUXVGa1lMU2toNmQ1TjNnbHc1ZFh6SnErNXpTRUpTdE9RQ2k2RjhEb1hjc2l6bGhrN25seW84WjNzUzdGYmQ4RUd4djlSSEMyZDRCV0VDS0FTMG1oM3NCM3RxVjdkSjdqYU1DWUxkaE0xcEtvUm8wZ0RqbGNPNU1UMCtKRVVBV2U2NmdsaVhjNjN2MkExc3NHNVBwNXdZUjZKaEtad1FFREpMSGNLMUJQSVhnTHVhT0RJUlRhVmRkcUc5YVdUM0EnOjB4MSwnYWVjQ2pxM1orZFFiMFRyS1E2YWtIT1NVKzZhR3pwdnJHcXBndzdOUm5MQlBKSFRUQXdEVnlrcVMyc1k4eVAwK0RXNjc5bjVRaW96d2hla2JIV3RmVGo5c3hXNHk0dmJUUDV1d2Rib0VBWmlOWEdZZU4xMkh6ZSt3VUkybHNXbEpHZTk4QWRFWDBRanJXbFUrcG1WMnZUUDBuaXZUdllpYVRjaTFXVTUvTnI3d1cyVE1DWm0wcEJidDE1UGtlN2pDNWNydlROTUlMNFpNNHplQ0g4N2k3cUt1M3BmYmYxZ1pzdTBGQzJZK1dIQzhQaHoyYVRVSlVXNm5xNWpFUFdmSmxBWGRzaDRCdVFsZTg5Y3IrR3JxVHlGdXVBWDBQN1dmL0loYVVZVlFodysyYnJGcnhuQXREYzRLdlJlZENXbWc5S1l0bStxb1VlRjZZYzRKVU8rRklRJzoweDEsJ0VCQkdITnl5WC9ua1hqdHUwR3JIT25Nb1EvRTlvVlZOclVhS0VCZ0kyTXMvUy9OZE5nRndiVkFvdk1lSmFRY1g3ZXZCRzR1UXhSWnp0Q0dwbFRIc3dqeitPbWpiQ3luMUh1YWw4TERkUmxHTFF2NEN1dTNGSHBSMndWZWFXWEd2UDdjWUhnNSttODczRFRjOTV1eUxlSENwdDk1QUJuQjhHcUdBOWlzemljVzBtY0d0VkliWkJBTHBMVUppNmR6emVjaHV3VFJXMFRnNmN1aXZUcHNxM1p1TDRrM1hVZDFqRk84Y1l5TEdka1NXRW5JRWVoS01uQjdYSDlCbTJ5V0tZNGY0eFQ1UXF2MVdJY0FGWlpiMWUzQk02bXc2M1FUQkEwV3o3N3JMSzBOMjc2dXh4YWZ6aEl3T3RRRHlLZ21vdzh1VW1GZHBQdFV1TGc0NGI1UzRyQSc6MHgxLCdrcXZVT1N6M2FKeG9MbmpPbDJaem1hby9WSjlWcFRrTzNiN1VSblRjZW5hT0hpSGlaY1hDV2N1ak1Fd0NTWEFPNTJBWXlweFdVemRVcDYwSHFPbDVFVXdIa1dUZm5tVlV4bTlkTVIzTXlZRDdsbHdRTjcyS0JmT2lycGxpdDdUOFM3MTdlWFNVcHlCR3c4OE44aFY3SmRpYXJEMnhYenl4ejY3RS9GbFpuRko3djNITFgzU0RsNTNBNGhjdHljVGVNYlhYVDFYNFNiYjRQdkFORCs0UFpYQnJheE0wUkRicG9jeGRpZ2xETHVvZVlxLzgwVXc4cjhYOHNQN29yYVFUV3R6Z2ZiQ0RDK1JyNzVRdmcwZ3JTcUQyU2Z6QURmOFJ1ZmFLTmhrSTEvampWVmtvb1BMd2RaeldkRUNBd1FQZmRrWHN4RnRqZno3NkVYRGZleTFkK0EnOjB4MSwnUlFPRENCWmQwQnh2eEJEdWRCSlFrMzJIRWx3WHp3YmExQkZ5cHF1VWJQL3FNc2Z1bEt6TVRnTjZ4T2pqanFKc2VPeVFBTmNDRkFmSHptcHkxTWVXUzZCajZMYkpvei9XTWdMcENOZ3p0WWJ5VThNREN2Q2QwMVhsREg2cXkxOHU4ckZqOFE0UWpFQ3phV1htZThxckd4MjZUcFUvWGpBRU5HUjBReU93N3VLcUJJOTYvVEplZUFBb0VkV3dyWXp0TjVVTURiWjA0QkdxRHFYdWFrUDIyK21sQTlLZHRRWk5NcHdxYmlBZU40dlVQbHZ0OTFVTDFSZ1l2djhTTjMvN0dIdlovQk1EUFdZd3o0YStpYUVDclFhYnpaNXpESER5b09JbVFiQnk1MSs1U0ZSN3lpSTBVbUdmU3A3bXA3Z3lFaERXcHkwajA0OHZ2S295M1cxUHRnJzoweDEsJ0RlaDJZdGdTVVpvdC9oNS83LzcxR3U1NGdSdklGa3dVZXI2eUNSUCtNeCtlaDJvcFJiZnpvME9KWnQ2TVVlK2dIS01LQmNCMjhYdTJrNk9uNW9IYXhpN09Od1JzQ1JzUmRHVi9Za2NONGlTZGFVZWNrMVA1c3VmcmxiRVkvNEZuZzQvNXFZdDVQVmE1QTNNMW9pR1Zqd0lPSkEvSlRZdzdUMXZiaGxHTzVLdWRRZjl2TWFSZVdGZDd5TE4zNWM4c2p2bDEzSXFsaEpPT0Z5YUVyUGs1QkZuRlBYcFZLRTMwZjlMdHRxVjdnOXRGTFBtbTdHNkptdDVzcVgwMGpYWWVJVmNQRkZhUzEyN3JLY1RrSUhobWRXWDh1YmcrVUxZSytDYWIxbFdzMlFBRWF3TmpTSkhnbHkxWUxIZFlPQ1NVbHcvaEIxZEtMNjU1U0UrSXZ4Q05WZyc6MHgxLCdnbUtZR3B0SmtyaVhXa0JJMGRIczUzS2JLU2F4dEVzMldnUE40cVM1UldzYTUrMytMOEpiMTJhdUxRdDhmcnhSeTBwbDc0ZVVHTU81QmxQc0I1ZWZWd01DMWpBVG5NSlB3WUZlV0xJdThQL3NRaHNwTEkrdVgvaTdobktCekl2Y1dDSnpkZkx6ODRWaVZ2SmtaUWZjNTgwdkF2RU1UTFhOTUpua2xObWFHLzdydVhvTlJFUk5kRHpLVWZaTENndzA1cEVKOHR3V3ZidWU4aEdSVmgvRUtjWWxtc0lKb05ybEZBSVByQUZtZFQ3THFKbUhneGZyMEdXMlREdUY0MGgwOUx5RmJxRW50dkVDUzhPTmVuZCtQU1R1MlZDUEE3THFaOW0xSitBT2p3S3VpRWpERVBsellEeUh6cmkxakR2QkMyWWZ1NDVKS3FuNVIxRmZoVGtNWkEnOjB4MSwnejdZeStweUZ2RmNTcWMzNWNGLzZnTUUyM0FJM3ZoejNaajNmd2JpRmsvTWhuSXdvNkt4eEtLVm96OVRGVyt3TTJONlNPZDhVejkwVXI2WnJqekNyMndIOXJFRlVGL0lMV1NMa1hlcmEwbmFUYVU0U2tobHBFMWhxUHVlU2Y3QjNpTG15NndYeTN4VjFOdWxPK3BaWG5zRDhoWS91dVdHSGRqTjF0ck5OdjNJdmdEaFEyT0dKalRCQm9IYjU3QUQwUVllOGlRNjlQbXZwK1prd2NEZzNlMllxUkdKS3dTWWo1ejlsK05Ea3djNEJpelMzSVpETWNhcnRXMXk2aUtLZHF2aFdsem9FRUNKK3cyUkxqTjF3VDBDdW1Jc0h6NVEzU21ySjhpYzZNa2FxOWkzTXVXWHBNVWVPVVh5czBiUEdsdnZ6ZUlFaG9GVWludDdsbEh5QVpnJzoweDEsJ1ZINTl3YnY0UklhTVQrUWdXamZkem5qckxCczVORjlyVWdjTVlIQXdEUzNCVGFhOGowZjVLNVVqeWs1M3NWV0lzV2hMcWVOVFlKSDkxeDN0b2RiOUtIOW9zay83MHphMDhpdEtHR2FoZnp2TVNmRk45Mjg4c1dHL0N5OFdoUnhyTjA2ZFBvMUZ0VVhSeFlEazg5c3lGVEYwaDFYbWlrRXVGOS9GWlkzZ2wvUmtxUmh2T0NRVmdMUDBZSjB0T3l3dzMrMmh0ZnlVSi8zVmJHTktxRWZNUWlzQ2ljUFlhMCtZdEF3SkxpRkR3MEFJZWRQY3JUSWpnR3d4anJoSTI0V0lsZUdBc0tZODhVYnRuVmloai81S2FlYmtqZ2RjT2JUdnVEU2pSa2tjY2ZiY1hVNWNTaUxsZWNHd1dQaGNwSDVkMWUwRExUTkpaeTcwelRQaFVTNHh3Zyc6MHgxLCdiNnhXYVI5OGRRSSs0ZjliWlBRZDUyRCszN00wV09VZktkaDdSaXh0NnYzQS8xZG12WDRiellRbWR4UzNucHpqNHdnYS9OWEFkc1gyOUVpVlZnenNGV3M1VXh1cDZ5bVBOTDlWUHNYOXBndWlZRzN2bTBFdGR4ZER4R1MwTnMxNFZLV1lyNkRTTW9UNDMwYnRrODI4K2szTys2YUs5NVM2S2UvcXB5UHlENFZLQ1JqOTJrQWpCYUQxYzRmMEU2UXh3bS9SZHFqLytxOW9zb0Q4SzUvaWRkUE5HMkpkSUU2dnpSVjN0ajlrVHpRSW5JZy9yYklYN0ZMTWxvM2w3aDIyOHhRTEJGbGtsVkZSV1FFbWJROEZ0YUNrbkxFTE1XVkNWTTA0VE1YcnRUL2ZnM01MbjVrdlRGUkVyQzJ1ang1bFo1Y1NiSERFcjlmTWlpL0gzdnN1WGcnOjB4MSwnWHVUWXkyd2Y3d0lWZHFEVXBVV0FlQ2pSQ081ZjhWa2NDOUxDVWQrc2dsT3ZTTDd4V2ZGZ1RyMFI1Z0JwdTA4ZU5acERlaGtHbUs4Q3c5ZzdjcUpaaUZOb0NsaHZ6UlliNS9CL001QWlaZjZEMzJYU1J1V0RpcklKNXZtRmEwQmI2TXZYWWlpZVZkZkhKTi9kbktEaU5TWEp6a1ZCZ0U3dFd0c2JyRlYydzFoUWM2LzBIYkFuVE5hT01YNTRDdXByQnF2cThDNHhYbC9EM1lDTGJvaFhLL0pxNlBDOFdYM3pzczlrWUVVdEtxdnFrejNHcjhHOGFGQVI3MjNGeWxJOFVMTVh6ZXdUb3kzWk9xOWpJWlZJRGxtL2ptdGR2MkVMa0xNSVR2UmJBMEFvRXdORnl1VEV3MlJ1bFAzMEFTSzBrSHkwN1EycXhqa3M3ZmdOSkZ6a0JBJzoweDEsJ2RtdkYvRThnT3VJcVN2UEo3S2krQ0lVNHhrUE1QZjM0cnVPckJ1U0ZWZkRxYmFLZGFlS014bWc3RnpRQk1iTE9pL3FJTW12dVJ1aUR6WjBiNnl6NlpzN2o1Q21YUklyUjNOS2tuT3grT1VIUDMzcFJRZ1dyYW1zSE5mbG9KM2p5OGZ2WU12b1FCSVhLa2Q3dXNPcXllZnlLQ3dxWGNRbFNsYUVYazFqQTVWdHczTmxRVXlCdnJYbWJhMG1tTWsvZWtrallQVGZNbFR5bURjRldLZXJiYVQydEJ4T1l4K3d5WTBYQnJFRXNOdU8vVVRuSUZQZ3lmSlJLVDM4TWE2dmZiSzNHMzhwdlZ6NDRwb3lwVnIzSngvRmxZaXRqZFY1V3lXbXQxc0E2OHROdW5Rc0JzRnBxaGN0enFrSUNVSFRvd1ZyakQrbXY1Y25KOUhqeDFIZzZjdyc6MHgxLCdDRVh2RHorZXFGUUhRWmNvT1k2ZTJ5M0QxM2hwZzlncnJpU3Nkd3J0REdNL21PU1pyWUV4bW82YkJUcmVjMnUvZHFIQlJMUmN0aWJReHoxOTFhVHVWekVEMlJKeGk4TENtY2xzQjJRZmh4eVRJaDVobHhZTnY1M2ozRkhydmRiaWJFRFUwUVZKVGtxa0ZWWlA5dGNNd252RmxoL0NrN2M5UCtnNzlYNU5CQzU4MWtuZEp1aUVBd1BOY3ZMcXVNZlM5cEZFWmoxejIzOHM3L0NXQlZSVk83SXZTQTV2aWwxN2tlU010eEMyZ0twZzdxQlpzSG9aM2FuMG5wWUY4RWZJSHVrUXpHMlJ2Q3Y4V0kxWGdOVVFJOVZVT3FaUDArTHgyVW5SZHFray9qb0tNcW0vRkpkaU44TnhORjJRd3BjL3VFLzVwRzZGMDJYdHlBdkErbFFlWGcnOjB4MSwnV2xpMDBuZVNtTGNwQXBUZklJSC9Idi9sWDZBYVJERUJhY1JWV3JpZmhUVmNveGVPMWVDdU8vd3pVUU9zRVVLOFVyRm1MeUhJTmdoaVd3WWhGZXVYekwwNlNHK1pmL09yMlFlRjhhV0lGbktIL2NPZ0JuY1p5NWdCd1hXaHVXcndzV0txbnVqMGRCRHVPRVFLOWp6TFd2KzhzUU15QjM5b3RUTDZwV0FzZ0lqbnptREJwRndJNE1Wc0MyeDR2RTRDWFhSa25rQmh6Y1Ivb0I4ZnMraUdoVHdVMXRyc1FxRkNCUWFGdXVTWCtSZUVNMVhUanZxZHAvM1d3c1JJOVgzb1JRNzN4VUkvNXY3NFBudWhMTnRSbVBvVzdWN3ZnenZHU1I0NS9ObzVYVTZKS21mWjRWeWI3QmttaHR2WTZ2bjBrZld2VUZBdFFtaTlWZEh3dmNLaHRnJzoweDEsJ21aVG52VDduSHdMU1R1bUNWOXFkR2xmbU9nWEc3RjQ0ZG1GV3dtRDZYNXJ5VjlnUHVWVjRsUTRUL0lCMjlmSE5iYTltUXlHVGlRYmJiYTEyZjFVNS9TaVpTaDF6dlhQSFI5bkpXNWx5OW5mS0t4WGpUb093Z2FHbjFRWEtHT0pCQW4wUnNPVTYxbXlqMXk1OVlTQWx6OWZObFJCR09LakIxTEl6K0laaVZteUxYcDRGTWd3S0V4ZitqOVM0ZkRLbGhKaG81aXgxbEZjeUpZcXJTejhNaHVZSkM5SzQvMXkybzRSbEg5ZmRobHRJb0tuN1BqeGNpUG1rRnE2UHgwNm5YSG1MaDFsSkZEci9pTFRWcVdRbG1ybHNIVEQ0OXN2c0NNN04yaEdiZmxMcTEycTFYMW1zZTV3dmROU0I4RHZHV3RZT1NHb2tTbnBINmwycVBiNjlDZyc6MHgxLCdBRVJqVWYwbjR1aEpBWFQrWjY3UVc2Ri9KaGhoclFIQTJZMm5ERXhDR1RaVHZLeVkzOU1tWXY5eEJVN1J4QnB4Q0tiMlhWc25GaSswZmU0Q1lpR25ienJ5VkdTZHdSTm51VkdyTHJvYmxqT1lpTUNXcGhSREJQaUd4ZUNDN0tES0VDQVNWZm1FUWlxMGFzOGFqRUdrUHFabEZHbWVQMzhJRHlXeTMweXh0dW9aRkRtYUFha1BKdzFTcVFDRXFQaFdud1BCZHR0dmdkRmRTdTNHM2tOczBOOEl6Ym9DSHFrM3E1VnMwekpxZS9oRUdUUUc5YUEvVCsyWmFlMHN6YzFsQnFwWDR4LzRrdGpxNmhlUmN6TS9MRmNPTEIwU1pXWEx4TTNFOU5ZVzQ3YS94eG52K2lGTENzclVXWDgvd1VaTHlET00vcVl6aDMxL1FVVGFqOGw3U2cnOjB4MSwnZ3RYVks2MnhScmhEdGhHV2kxVDhNOVhNYkpPS2ZVVXNkdDM4SmFmd3FjNWhOcW9MdEp0bTdPcEl0R3Iyb2V4bktZQVpRdXhIT0NNV3Y3Y0Q1ejN4aFRwV1h3SEFBbU1GUFFzMlYza0tJV3NyTUpxdFZwaUt0MzBvVOKAi3k2Y21aZGVFdnFnaTlnLzAvYmFHT1NuMERXK1FLcUxGRnNoaklob1BkSUFXcjl5MDl0Zm12dTRhWGRqR1NzZzZ5VTdSMkFMWkNhdFJnNWRZbnZOV2tYc2wySWpKZ0tMSXpkYTUveVh2M2YvZ0h4NUxJMEZRQU9nZ3RqNFdNZDlYWlFoVHVZbEVyUWVpZWVjcVpwdmRMb3MzWUpvMEU4UVNkZ2M2c0NSWEdqQ3Btc0JLeTNYZjJLSXFabUwwQkVDOWJXV1JoNVBZK21Ec2xtQVlGNlBDa1A4WlF1SVh3JzoweDEsJ0FVdDlnazFoNjNkb3VJQzUwc2xXdVVDbzlQUGQ1VFlMdkdZSVBqM2plM0dJa2dwMHhQY2tKR2xUT2M2L2l3ZUY1UTR5QmcyQTEzYmQzd0U3S2lEVWlTTHFXSFdPc2F0OWI4enVud0ZlN1ZvbUY1VSswcDl2c2puNkYrMUE4SldGZW1YZkhRc0gyenAyQmd0Q2pCSHBsZHlhWnI5WGkvY0R4b0JHb1Y5d1k2Q3l0MHoxSWUrWTlyK0dSd2VKWUc5dS9wWFZMTC9RbWJoR0VOUzNJaXVncHFZdkp4cysveWRXait4SERaOE9sZldRRGVFK0ZsdTUvWExzUk4vZEV4WEdtd2RHRjUyT3BleEtwb1JKVDZ2VUtIb0Y5OXBHelg2S0tUVFJhVTQ0Qm03dmcwZUVWNmNVOE1lUG42NmV6Q1N3RjZCR2lldkJDbURKODZ3aE1MdDZWZyc6MHgxLCdVbzVFT0ttRW10cWlYdzlFS01tZWhyNFRuMDlPd2pWQWIwN05JeUVYSTVrUlM1U040ZGF0RG9RTWxLNExBWFR6SW0vUjNCZ1Y4dVhKRUpNMUVxU0JkNUhzMlJpZnhBQWs3SjZWcDBzWEw2cWhmSllDdmtrUk4rNlNMY0Q4dkNtYkk2OUNFREtsN3pIS1J4dmtlakgySjNMc3FlYWZRbW5PMlBJczRDdWtWM0txc2o2TzVZVmdqZFJndVBUODZJRnFWZXJlelRLZDR0dnVpUGZQQnBCN1hBMC9pbkU5aTdqU3cyZUQ5V1Y3dGcxM3hDWDZuZjNIQ0dKWVYzUnE0OXh5LzRWZ0tidU9qMCtrd0J6Y2RiNmZaejJxWk14dk5TeHl4cnpYUjVSVkRkOEcrK2xXckFxQk04MU9rT1hMZW1ZazcvUk1tSzR0WEV4blEyZUJzT2dpU2cnOjB4MSwnR0dIOFNCMlp2U3dVdjRQeGVmb0twcDdJNzBEbUEvZ1NwbnczcS94R2F1NWgzbXdTbUhGTkNOT3JxRUtJcWRRSnFmOHJpMkJIbmN0VFJuTEJvSmFia2ZoWEF1VjBmZGhhMjFzdmlsVTZqckNZRkFtdDdBcGVEYzNUZFNwRGs1cTRVcUFXdVR2RG9BS1k1bW1BY0ExR2pjNFVRUDV5eTdaWkVVWWpDd3oxZ2ZZK0w3Ymg5YldCcmxTSzRhY0lrN0RQdS9MRWxnbGh5VmpTVmFzeVhPRDBTNDZKZjVSRWFFODZGY0ZwODVaMTdpaG9YZlloL2M2d0sxR25wVDlpUk5Tczd0TlJLZ1pkbWxJeUNWMGhscWlFN1dZek13b0hYbXF6cHhpR1lNMncyNmZ2REhzYTZLU0ljdFRobFkrb0hrNlAwYUtrbkxnZGNGdmpqdzBXdGdkcDB3JzoweDEsJ0FTRzBZeTNEekV6d1RvcWFqN2EvTGIrRzhaQ0FyZlFBa2h2bTBtc2tBdkZ6UG1ZbFRoeE1FblMyRy9lRGg3VTZTcjY0Z2tZeWRjbW9idk13bWpOdU9yUitwUkVEdTI0NVVldWVMWnFCWG5zcXh4enZMUzVsWm4wL1Y0enNpbjNPa3JTc1R5dThsR3hwc0ptTUNIZEk5Ni9JYzN3dUNYY2RmU0E0MUxBN2pzam9BN3FzSHg2WmkzS21Tdk4yR215clFJOHpXMDMwb2dJc2wrMENTQ1NIOE90VlJOdDF2UkpHVWo0UTd0S2NYTkFMenpSZG9GeUJCZWtVL29NY0ozUG5IYVdzTkdGMVBvNW1YbmU4d1lITS8zNjJQV2pUUFN3d2F6VDJwelZFbmFxU0p2Y215NS9yRVRTYlNKZXd2a0M5bDhGekRBRmtyZlBoMjBoaTFlc2FxQSc6MHgxLCdEd2JuYTcyVVg2eFFGNm9WYXdWWGxaZVlNL2VudXVMZmtMc081aDRmR1JLcWEramZxVzVLa0x3OWpHUjdJVXBvUlVvcERVcmJXWWJJSzNWWC9TRllXdkNuTlRUajg4RXFMUXhjOHlhN1hQblRFL1g3clN0TzhkRktEUDlSWnJYZUJlMDhidkZlK3kzVk1HL1I0UkV3Y3U4ZmZNYU4rcXh2UzNhTld6d1J6NWVPWlRtaysxMXp5bEE5UGkxbHZCak1TcDRaa3BzZml4UGhMVkRlczhmSy85Lzg0VWVXQ2tYY2JOcjE4N1VEZzFLd0sreUJxZzR2UExCamtGY2R6QTJjNnFyYnNXcUVGL1NpaGlaa1FYTXZIYnFSRG95RklUY3psUW1CY0hXN2FVbmNFbExmMHV1ZkJCVHJsMWZ6Q1NyMkhleTgrZytUWFdNRGp5b3ZSYW9MOUEnOjB4MSwnd2VVNHdqa2FNdnpsRzBVMEFPb0M5UkowalVHZUVPRXJlUEsvL2cwS1orcW82MTM3Q1VZbDVTMjdEREIvdkVseVR2Uk5wY0phU2l1RmpVYkZzSXhYcSs3aHZOUzN1ek14ZDZEUXpidnpUc3ZuMXNJcGN5V2F6bVdzK2l4cEZxaDNCdDgyM1E2bmY2bVI3NnJMSDg3SVdzMExQRVRZT3dGY293bHRvaU9kUUdmS0hqMkNobmd6TVJPYm1YMWNxbUZqTFBVVUZQaHkwMXBYSEZOOU5kcnB4WndhZno3dWpHelpXd1R0WDlNOGxhN1NVbDZTaWVUY3FlOXY1eHdWektKTnBxdlp5Uy9DSmhnUXhEYXY2RkVkMyswWWhJK1BaSHlqbHJxWER6QlVpK2N2Y0Z4YUFTVnNiVndCMVNtUy80ZE13NWFWOGFQM3g1bVBYVGlVekFuVzFRJzoweDEsJ3orWVN2aTZhL3RVd3B2T1hvSXM4RlBKV1RMTWRqZ0tweUFrMjFVSWpQQm94MGtLSXlkMHRiZ3cyazMxTlkwU3NEWllEdGsrUVh4Zm4xYmEzSmJrZDNpQmY4MXR0U0ZvMmFPdlk5OG9OWVgwNUFMUzZ4VXZub1lqb2trSjdXUE83ZHVUK0s4VnZsc2NBQzVLWTFRcHZFSjdoTjdNR2FEN2hHdjdRY0Rtck5IWjExU2p3YTZ3VFFqK0E3eGh1THNBckwxNVhZZ1NwZDViVW1hLzl5YWozZ1JpeXZMVDVJZVB2dkQxU1VvS2FKbDFJYVh3b3Rya3J5YUFwVXQyaFdrMUtEOEU5U0dwU25ZbzkxM3BsTCt0b2dxVVd2M0JLZUMyMlA1djE1amVCclZNa2JjR1RaVkhKRmRzT0JScjMvR2NxT2lTMEFJYkNBWER1NlZ2enViRFZTZyc6MHgxLCdhNTFhYUhrR1Q2ZS8zeDFZanU0OG5tMi94Ty9WS3puVUQ2Ky8yek10SExzSHZaandFc3dHYnJoLzROV2t2bDhEL1lrbGFpN2krbUZNWWdiVHQ3REtYSUtxbDhlKzFLV0NMR0pQOEc3TGg3TWZyTVRlSlJiWkpBWi9wNjE1RlExdzRjK0pUd08xZVlhM0l6ZFFRU0ZPOGRLNWtuSmF6V0pYSDhHM01WQzRPWDhzQ09wTHNzRFB3MUlzZk5zUDQzYisxM2lNSlpsSkZXTkkxNXJ6YXdjZHpiNWdIdTVNK3U5LzkrZ3crcWVvMjgxNStzOENPWjVPUkNKZTg5NDBIaUF3dTg5OEgrQ3laTUhNWmtJQkM2U0pXZ1d3YytTMEpsaWZ5ZDMzNjQ4dW1FV3o4ZnZwa1U1VjNIblZnMkZpTXErYkRHZkduT3JDR0tVWktGSFg1S3Jta3cnOjB4MSwnQldjRnZxOVVzcG0zSmtSVDBRUDBBUTRvc2UwYnFNZUhOSkpLRi8zV3ZwUlllVkROcEUzdEdGTW1NQVZhc1kzL0dZU0FENFdBYXBwYVJ6cjRzQ21KY0MxbzNzU0M5emJyOWhnc3YzRkNCL3JCWjVZakx4bXFkd21HUngya3hYMW5ZSUprenI3MnU1ZHVkdnk1Y05uOFBQMWpyVVFWbStzdGRMYXVMZk91QW52ZXpVbFpMZWZMZkorV0Jqd1dsR2g1Z25veTlFdzcrYVVHQTBGdGE1MWxSSDhDeHJabnFjUTAySkhRN0FtRG5Kb3JtTWUyMHVaTDdoNlhWVDlVZktFcm1pTlJUUERaOFd3VXEzVlV1NlhwNVJSZkpldWhLdDA3M2xXb3BTWWdRbzJNdTQxQjBJSjRHNWVKNEllSDIrRWhCZVpLRlVLVjd3cVluMGN5RWRXcXJRJzoweDEsJ01MMXFuT0JYV3o1ZUFlaVF4clNvem5Cc0IwSEF3bkRJK1QyQUFYaFBsU1hzK0duZ29OcFh4VU5hL3h1Z2VzLytBbmIzcnRhOSs4enZ2V21UWXRZcEtWUzh2Z0M5Q053WmNsN3pzbXVuU1JXMkZqdnZOOU11cWc1eFVNNUVPQ1NGdFJTMC9hZ2JkVDd5S3Y2cURJR3R2M29HOFYwanRnWFM3SGJZcU4yMkFRUWhTZXN1R01OVlhkdDRENzVXeHVkMDdpSUxDcWMvaE9OTWk1Tk1vQUp5OWVkcDBWbEs0TkwyRnpIcUx1Yk15Tk9aYjlBUGs2T3FROE5nNjJpTEh1T0ErOU9MRFc4Z2RFdkozMDVTZkQ1VVJiOExpZmxCdTBsRXlCVjcybzdvUGRHSUZKbVlEUWRsTG5wczcrNHZEV3VZcXJsb1NQa2J2eXlxZXB3aWVwc3hPQSc6MHgxLCdSOUM5a1VmdEplNFlvRVFRajhRYThZZlN5Y3ZwejBvbGpaSUdUY0VNOWVUWG5FVmFwNEtabG1zbU5ZcjlSYXMvVG5UUDdkQ3VyM2lhN0cyMGdhR1ViQTlndjR3d3lIL2JYc2NvWngrMXpBUnVLSldpMXZ6dUJJUGVyRjNqckhtWjF0bi9mL2lzc3JxdFljN0VSeGVpUVoxU0V0WUI2TThoS1BCVmwvQ1N1ZS9pdGVUWStNVXQ4OURNSENLN2ErWmY3amQvR3NzUFVLcVYrY2J1aGVNL0ZhOVlIVmlGb1U5NnpUUTRXWWVvNEUyMjRSMDZRbFNrR3VTVzNCa2NobTdkYmdHWXV3R3RPY1ZqSHEyeWtkYjJsaFlYWjh1MnhtQjJJN0hKSHBrUjBIK0pKNjQzd0xpbmtBMVNaR1M3MWVFUGo4aEk0NTZjSzdQUDl2eVV3QjRXQ1EnOjB4MSwneDVZVTk0TlA3MS94Nmh3b29BODhUU3lGbnNIUXhmUzN0WnlkbDJUY21Oa2xNalBnd2VCUE5BbDJRZUR6RUZXOEdxTitISE40aEpDYnlDa1YzVkppcWtMUm5veUlobGlIUmFwZS9ueUovdXpFMFhkR1EzNm5XUmp1ekFmbWlPeVpSVFVJZkZxTTdKNnlXd3VZN2VjS1RKR2VBc21GOXpRYXU3cXlGbmpJSWNaeVdwVGlOaHNEeWdMaU45RWsvK1d0UzN6dlV3YXowbkdMbmp5ekNabDRiOGlIUHBaS2xNMnQxemN3VUdiWnVjaXJiZlRkOXlTMytmS0VnMlFwZXdmK240aFVUL3Z1a2hhL3BmSXVjcXF3VW9aTVpoN1pUUzVuaUV1OHpiaUNQRGJWUDRtbW1md21pVDVOY0U1WXQ4emthYzRma091VjRDQ1RwUi9ISkxtVmtBJzoweDEsJ2FlZnRMSjBaTEZId0c2UUE24oCLZ3pGWHRTaWtCdmtIVllRdjN3dm9YMGdVWHpjd2RxdUhYUVd2UmcrUmpFZWxIbC9rVXUyejhxODR6eitrbm9RUlJ1ZU9uTEhSY1JyMXdFcUp5YUhRc1hVVTlRck42MEpSUytnS1NRNzdJSWNzUzNLZVJNRmE3UzBDUitxcXQ4WTh3MGNyZWtGa2xOdEgxRFNoODc4RGtaMnYrT3dIekNmQzMrUk1DWjFHaUxpUVZrc1VXWUxnc09qNmVIdWI3OU1HZHk5alZFQmdCYjZONzlSdTcyV3Bnd2xoQis3TklyT08vYlVrQ1ZKM096MEVXbWNQc3FQSW5acGlRM08wQTZ2WVlLbjdTMkpQYnc4SkZXQStqTUxmdzhlOHcweDh4MEk4VEZ6QWNEK1VjMmtYVUJuaG5TeE1UQ3dSNXplM0ZLT2RTbU4yZyc6MHgxfSxfMHgzNWExY2U9e307Y2xhc3MgXzB4MmQzNjcwIGV4dGVuZHMgRXZlbnRFbWl0dGVye2NvbnN0cnVjdG9yKF8weDEyYTdkMyl7Y29uc3QgXzB4MzA3ZGY4PV8weDQzMDVjNjtzdXBlcigpO2xldCBfMHgxZmU4NzA9dGhpcztpZihfMHgzNWExY2U9eyd2ZXJpZnlMaWNlbnNlJyhfMHgxN2M2OWUsXzB4NTcwZDFhLF8weDE1YThiZCxfMHgyMmFmNmIsXzB4MTRlMGVkKXtjb25zdCBfMHhkMWQxYmI9XzB4YWUyNjtpZih0aGlzW18weGQxZDFiYigweDYxMyldPXRoaXNbXzB4ZDFkMWJiKDB4MzNkKV0oXzB4MTdjNjllLF8weDU3MGQxYSxfMHgxNWE4YmQsXzB4MjJhZjZiLF8weDE0ZTBlZCksJycpdHJ5e31jYXRjaChfMHgzZTIyM2Ipe319LCdfbGljZW5zZVZlcmlmaWNhdGlvblJlc3VsdCcoXzB4OTE3OGI1LF8weDQ3ZDI2MixfMHg0N2NkMjYsXzB4MTI2MmNhLF8weDM3NGRlYSl7Y29uc3QgXzB4MjRjNDM2PV8weGFlMjYsXzB4NWQ4YWJlPV8weDNhZTg5YT0+X1tfMHgyNGM0MzYoMHhlYildKF8weDNhZTg5YSl8fF8weDNhZTg5YSsweDRlNTIwYzgwPCtuZXcgXzB4MzgwYWFkKCk7bGV0IF8weDJmNWE3Mz17J3ZhbGlkJzohMHgxLCdleHBpcmVkVHJpYWwnOiEweDB9O2lmKF8weDJmNWE3M1tfMHgyNGM0MzYoMHg2MzYpXT1fMHg0N2QyNjIsXzB4MmY1YTczWydjbGllbnQnXT1fMHg5MTc4YjUsXzB4MmY1YTczWydjdiddPV8weDQ3Y2QyNixfMHgyZjVhNzNbJ29sJ109XzB4MTI2MmNhPT09XzB4MjRjNDM2KDB4ZGMpLF8weDkxNzhiNSE9PXZvaWQgMHgwKXRyeXtjb25zdCBfMHgzZjhlMTk9XzB4NTZkYzA4W18weDI0YzQzNigweDQyZSldKF8weDQ0NzgyZVtfMHgyNGM0MzYoMHg0MmEpXSgpLF8weDI0YzQzNigweDljKSwnLm9sJyk7XzB4MmY1YTczWydvbmxpbmVMaWNlbnNlRGV0YWlscyddPUpTT05bXzB4MjRjNDM2KDB4NDk3KV0oQnVmZmVyW18weDI0YzQzNigweDcwMSldKF8weDFmZTg3MFtfMHgyNGM0MzYoMHg0Y2MpXShfMHgzZjhlMTkpLF8weDI0YzQzNigweGE1KSkpO31jYXRjaChfMHg1ZTdiYzkpe2RlbGV0ZSBfMHgyZjVhNzNbXzB4MjRjNDM2KDB4NWI0KV07fWxldCBfMHg0ZmVlYTY7dHJ5e18weDRmZWVhNj1fMHgxZmU4NzBbXzB4MjRjNDM2KDB4NGNjKV0oXzB4NDdkMjYyKTt9Y2F0Y2goXzB4MmQ5Njc0KXt0cnl7XzB4MWZlODcwW18weDI0YzQzNigweDVlYildKF8weDQ3ZDI2MiwrbmV3IF8weDM4MGFhZCgpKTt9Y2F0Y2goXzB4MmU2NTUyKXt9fXRyeXtpZihfW18weDI0YzQzNigweDVmMCldKF8weDRmZWVhNikpe2lmKF8weDRmZWVhNlsnbGVuZ3RoJ10+MHg2NCl7bGV0IF8weDUyNGRhOT1fMHgyNTI5ZTdbJ3BhcnNlS2V5J10oXzB4NGZlZWE2KSxfMHgyZGU3NDU9XzB4NTI0ZGE5W18weDI0YzQzNigweDJlMyldO2lmKF8weDUwMWE0MFtfW18weDI0YzQzNigweDQ2OSldKF8weDJkZTc0NSwnPScpXSlfMHgyZjVhNzNbXzB4MjRjNDM2KDB4MzhiKV09ITB4MDtlbHNle18weDJmNWE3M1tfMHgyNGM0MzYoMHg3NjcpXT0hMHgxLF8weDJmNWE3M1tfMHgyNGM0MzYoMHg0NjIpXT1fMHg0ZmVlYTY7bGV0IF8weDEyYTZiYT1fMHg1MjRkYTlbXzB4MjRjNDM2KDB4MjFkKV0sXzB4MWQzNmI4PV8weDUyNGRhOVsnbGljZW5zZWVFbWFpbCddLF8weDJiNzcxOD1fMHg1MjRkYTlbJ2xpY2Vuc2VUYWdzJ10sXzB4M2U2NWIwPV8weDUyNGRhOVtfMHgyNGM0MzYoMHgyOTApXSxfMHg0YjE4M2M9XzB4NTI0ZGE5W18weDI0YzQzNigweDRmOSldLF8weDEwODZhOD1fMHg1MjRkYTlbXzB4MjRjNDM2KDB4NzcwKV0sXzB4MjJlZjFiPV8weDUyNGRhOVtfMHgyNGM0MzYoMHgxM2IpXTtfMHgzZTY1YjA9PT1fMHgyNGM0MzYoMHgxMWUpJiYoXzB4MmY1YTczWydwJ109ITB4MCksXzB4MmY1YTczW18weDI0YzQzNigweDM2MyldPV8weDEyYTZiYSxfMHgyZjVhNzNbXzB4MjRjNDM2KDB4M2VkKV09XzB4NGIxODNjLF8weDJmNWE3M1tfMHgyNGM0MzYoMHgxNTcpXT1fMHg1MjRkYTlbXzB4MjRjNDM2KDB4MTU3KV0sXzB4MmY1YTczWydtdWx0aVVzZXJLZXknXT1fMHgxMDg2YTgsXzB4MmY1YTczWyd0cmlhbCddPV8weDFkMzZiOD09PV8weDFmZTg3MFtfMHgyNGM0MzYoMHg0YmEpXVtfMHgyNGM0MzYoMHg1YmUpXXx8XzB4NTI0ZGE5W18weDI0YzQzNigweDYwOCldLF8weDJmNWE3M1snaWQnXT1fMHg1NWEyYzVbJ2NyZWF0ZUhhc2gnXShfMHgyNGM0MzYoMHg0YmUpKVtfMHgyNGM0MzYoMHg1NTIpXShfMHgyZGU3NDUpW18weDI0YzQzNigweGM4KV0oXzB4MjRjNDM2KDB4M2UyKSk7Y29uc3QgXzB4MjlmZGM3PV8weDU2ZGMwOFtfMHgyNGM0MzYoMHg0MmUpXShfMHg1NmRjMDhbJ2Rpcm5hbWUnXShfMHg0N2QyNjIpLF8weDI0YzQzNigweDIxMCkpLF8weDMxMGI5Yj1fMHg1NmRjMDhbXzB4MjRjNDM2KDB4NDJlKV0oXzB4NTZkYzA4W18weDI0YzQzNigweDJkZildKF8weDQ3ZDI2MiksXzB4MjRjNDM2KDB4NjVmKSk7bGV0IF8weDEwNTk2MT0hMHgxO3RyeXtjb25zdCBfMHg0Y2RlZDc9bmV3IF8weDM4MGFhZChwYXJzZUludChfMHgxZmU4NzBbXzB4MjRjNDM2KDB4NGNjKV0oXzB4MzEwYjliKSkpO18weDEwNTk2MT0obmV3IF8weDM4MGFhZCgpWydnZXRUaW1lJ10oKS1fMHg0Y2RlZDcpLzB4MzZlZTgwPjB4MTg7fWNhdGNoKF8weDI5NmQxYil7XzB4MTA1OTYxPSEweDA7fWlmKF8weDEwNTk2MSYmIV8weDJmNWE3M1tfMHgyNGM0MzYoMHg2MDgpXSl0cnl7XzB4MWZlODcwW18weDI0YzQzNigweDVlYildKF8weDMxMGI5YixuZXcgXzB4MzgwYWFkKClbXzB4MjRjNDM2KDB4MjlkKV0oKVtfMHgyNGM0MzYoMHgzZDYpXSgpKTtjb25zdCBfMHg1N2FhNzE9e307dHJ5e18weDU3YWE3MVsnaWQnXT1fMOKAi3gxZmU4NzBbXzB4MjRjNDM2KDB4NGNjKV0oXzB4MjlmZGM3KTt9Y2F0Y2goXzB4MWRiN2JiKXt0cnl7XzB4NTdhYTcxWydpZCddPV8weDNlZjhmMVsndjQnXSgpWydzcGxpdCddKCctJylbJ2pvaW4nXSgnJyksXzB4MWZlODcwW18weDI0YzQzNigweDVlYildKF8weDI5ZmRjNyxfMHg1N2FhNzFbJ2lkJ10pO31jYXRjaChfMHgxYzJhNDUpe2RlbGV0ZSBfMHg1N2FhNzFbJ2lkJ107fX1pZihfMHg1N2FhNzFbJ2lkJ10pdHJ5e18weDU3YWE3MVtfMHgyNGM0MzYoMHg1MGUpXT1fMHg1NWEyYzVbJ2NyZWF0ZUhhc2gnXShfMHgyNGM0MzYoMHgxMTEpKVtfMHgyNGM0MzYoMHg1NTIpXShfMHg0NDc4MmVbXzB4MjRjNDM2KDB4NTk1KV0oKVtfMHgyNGM0MzYoMHg0NzEpXSlbXzB4MjRjNDM2KDB4YzgpXShfMHgyNGM0MzYoMHgzZTIpKSxfMHgxMDg2YTg/KF8weDU3YWE3MVsna2V5J109XzB4MTA4NmE4LF8weDU3YWE3MVsncyddPTB4MCk6KF8weDU3YWE3MVtfMHgyNGM0MzYoMHg0NjIpXT1fMHgyZjVhNzNbJ2lkJ10sXzB4NTdhYTcxWydzJ109MHgxKSxfMHg1N2FhNzFbXzB4MjRjNDM2KDB4NzE0KV09XzB4MmRlNzQ1LF8weDU5YjAyMCh7J2hvc3RuYW1lJzpfMHgyNGM0MzYoMHgyZWMpLCdwYXRoJzpfMHgyNGM0MzYoMHg3YTMpLCdtZXRob2QnOl8weDI0YzQzNigweDRjOSl9LEpTT05bXzB4MjRjNDM2KDB4NjRlKV0oXzB4NTdhYTcxKSk7fWNhdGNoKF8weDNjMGE5Myl7fX1jYXRjaChfMHgyMTNlNzgpe312YXIgXzB4NTM2ZWYyPV8weDU1YTJjNVtfMHgyNGM0MzYoMHgzNDUpXShfMHgyNGM0MzYoMHg0ODEpKTtfMHg1MzZlZjJbXzB4MjRjNDM2KDB4NTUyKV0oQnVmZmVyW18weDI0YzQzNigweDcwMSldKF8weDEyYTZiYStfMHgyYjc3MTgrXzB4NGIxODNjKSksXzB4MmY1YTczWydvc3MnXT0hIX5fMHgzZTY1YjBbJ2luZGV4T2YnXShfMHgyNGM0MzYoMHgxMzUpKTt2YXIgXzB4MTJiNDAyPX5fMHgzZTY1YjBbXzB4MjRjNDM2KDB4N2E3KV0oXzB4MjRjNDM2KDB4NmM3KSl8fF8weDJmNWE3M1tfMHgyNGM0MzYoMHhkNildP18weDUwYjA1ZDpfMHg5MTc4YjU9PT1fMHgyNGM0MzYoMHgxODEpP18weDkxNzhiNTp+XzB4M2U2NWIwW18weDI0YzQzNigweDdhNyldKF8weDUwYjA1ZCk/XzB4NTBiMDVkOl8weDkxNzhiNTtpZihfMHgyZjVhNzNbXzB4MjRjNDM2KDB4NDgyKV09XzB4NTM2ZWYyW18weDI0YzQzNigweDQ3MildKF8weDE1ZmViY1tfMHgxMmI0MDJdLEJ1ZmZlcltfMHgyNGM0MzYoMHg3MDEpXShfMHgyZGU3NDUsXzB4MjRjNDM2KDB4YTUpKSksXzB4MmY1YTczWyd2YWxpZCddKXtsZXQgXzB4MmNkOGJkPV8weDRiMTgzY1tfMHgyNGM0MzYoMHhhOSldKCcvJyksXzB4MjUyMzUwPW5ldyBfMHgzODBhYWQoXzB4MmNkOGJkWzB4MV0rJy8nK18weDJjZDhiZFsweDBdKycvJytfMHgyY2Q4YmRbMHgyXSksXzB4Mzk2OTNkPW5ldyBfMHgzODBhYWQoMHgxOGFkYWU0NmJlZik7XzB4Mzk2OTNkW18weDI0YzQzNigweDMwMCldKDB4MCwweDAsMHgwLDB4MCksXzB4MmY1YTczW18weDI0YzQzNigweDYwOCldJiYoXzB4M2Y0NzZhPTB4Mik7bGV0IF8weDNkMWJkOD1uZXcgXzB4MzgwYWFkKCk7aWYoXzB4M2QxYmQ4W18weDI0YzQzNigweDMwMCldKDB4MCwweDAsMHgwLDB4MCksXzB4MmY1YTczW18weDI0YzQzNigweDQ1NCldPV8weDJmNWE3M1tfMHgyNGM0MzYoMHg2MDgpXSxfMHgyZjVhNzNbXzB4MjRjNDM2KDB4NTg4KV09XzB4MmY1YTczWydvc3MnXT8nbyc6XzB4MmY1YTczW18weDI0YzQzNigweDYwOCldPyd0Jzp+XzB4M2U2NWIwW18weDI0YzQzNigweDdhNyldKF8weDI0YzQzNigweDZhMikpPydjJzoncCcsXzB4MjUyMzUwPF8weDM5NjkzZCYmIV8weDJmNWE3M1tfMHgyNGM0MzYoMHhkNildKV8weDJmNWE3M1tfMHgyNGM0MzYoMHg5OSldPSEweDAsXzB4MmY1YTczW18weDI0YzQzNigweDQ4MildPSEweDEsXzB4MmY1YTczWydlZGl0b3InXT1fMHg0N2NkMjY7ZWxzZXt0cnl7bGV0IF8weDE3NGU2ZjtfMHgyZjVhNzNbJ2hhc2gnXT1fMHgxZDM2Yjg9PT1fMHgxZmU4NzBbXzB4MjRjNDM2KDB4NGJhKV1bJ193YWxsYWJ5RW1haWwnXT9fMHgxZmU4NzBbXzB4MjRjNDM2KDB4NGJhKV1bXzB4MjRjNDM2KDB4NWJlKV06KF8weDE3NGU2Zj1fMHg1NWEyYzVbXzB4MjRjNDM2KDB4NGI4KV0oXzB4MjRjNDM2KDB4NjZhKSksXzB4MTc0ZTZmW18weDI0YzQzNigweDU1MildKEJ1ZmZlcltfMHgyNGM0MzYoMHg3MDEpXShfMHg0ZmVlYTYsJ2Jhc2U2NCcpKSxfMHgxNzRlNmZbJ2RpZ2VzdCddKCdiYXNlNjQnKSk7fWNhdGNoKF8weDFkZDA5MSl7XzB4MmY1YTczW18weDI0YzQzNigweDUwZSldPV8weDFmZTg3MFsnX3Byb2plY3QnXVtfMHgyNGM0MzYoMHg1YmUpXTt9aWYoXzB4MjUyMzUwPF8weDNkMWJkOClfMHgyZjVhNzNbXzB4MjRjNDM2KDB4MzhiKV09ITB4MCxfMHgyZjVhNzNbXzB4MjRjNDM2KDB4NDgyKV09IV8weDJmNWE3M1tfMHgyNGM0MzYoMHg2MDgpXSxfMHgyZjVhNzNbXzB4MjRjNDM2KDB4NzY3KV09XzB4MmY1YTczW18weDI0YzQzNigweDYwOCldO2Vsc2V7bGV0IF8weDExMWVlOD1uZXcgXzB4MzgwYWFkKCk7aWYoXzB4MTExZWU4WydzZXREYXRlJ10oXzB4MTExZWU4W18weDI0YzQzNigweDQwNSldKCkrXzB4M2Y0NzZhKSxfMHgyZjVhNzNbXzB4MjRjNDM2KDB4MjAwKV09XzB4MjUyMzUwPF8weDExMWVlOCxfMHgyZjVhNzNbXzB4MjRjNDM2KDB4NjA4KV0mJl8weDIyZWYxYj09PV8weDI0YzQzNigweDQ4ZSkpe18weDFmZTg3MFsnX3dlYnNpdGVMaWNlbnNlRXhwaXJhdGlvblRpbWVzdGFtcCddPStfMHgyNTIzNTA7Y29uc3QgXzB4OWUzN2E9XzB4NTZkYzA4W18weDI0YzQzNigweDQyZSldKF8weDU2ZGMwOFtfMHgyNGM0MzYoMHgyZGYpXShfMHg0N2QyNjIpLCcuJ1tfMHgyNGM0MzYoMHg0NDkpXShfMHg5MTc4YjU9PT0nUXVva2thJz8ncSc6J3cnLF8weDI0YzQzNigweDVhNSkpKTtsZXQgXzB4MmMyNTMwO3RyeXtfMHgyYzI1MzA9XzB4MWZlODcwW18weDI0YzQzNigweDRjYyldKF8weDllMzdhKTt9Y2F0Y2goXzB4OGEyYWU2KXt0cnl7Y29uc3QgXzB4NTc4YzgzPStuZXcgXzB4MzgwYWFkKCk7XzB4MmMyNTMwPV8weDU3OGM4MyxfMHgxZmU4NzBbXzB4MjRjNDM2KDB4NWViKV0oXzB4OWUzN2EsXzB4NTc4YzgzKTt9Y2F0Y2goXzB4MjVlMDVkKXt9fWNvbnN0IF8weDE1MmE1OT1wYXJzZUludChfMHgyYzI1MzAsMHhhKTtfMHgyZjVhNzNbXzB4MjRjNDM2KDB4NzY3KV09XzB4NWQ4YWJlKF8weDE1MmE1OSksIV8weDJmNWE3M1tfMHgyNGM0MzYoMHg3NjcpXSYmXzB4Mzc0ZGVhJiYoXzB4MmY1YTczWydleHBpcmVkVHJpYWwnXT0rbmV3IF8weDM4MGFhZCgpPl8weDM3NGRlYSksXzB4MmY1YTczW18weDI0YzQzNigweDc2NyldJiYoXzB4MmY1YTczW18weDI0YzQzNigweDQ5YyldPSEweDAsXzB4MmY1YTczWydleHBpcmVkJ109ITB4MCxfMHgyZjVhNzNbXzB4MjRjNDM2KDB4NDgyKV09ITB4MSk7fX19fX19ZWxzZXtsZXQgXzB4MWQzYzlhPXBhcnNlSW50KF8weDRmZWVhNiwweGEpO18weDJmNWE3M1snZXhwaXJlZFRyaWFsJ109XzB4NWQ4YWJlKF8weDFkM2M5YSk7fX1lbHNlIF8weDJmNWE3M1tfMHgyNGM0MzYoMHg3NjcpXT0hMHgxO31jYXRjaChfMHgxZWFhZTUpe18weDJmNWE3M1tfMHgyNGM0MzYoMHg0ODIpXT0hMHgxO31yZXR1cm4gXzB4MmY1YTczO319LCcnKXRyeXt9Y2F0Y2goXzB4MmQ4ZTZmKXt9dGhpc1snX2RpZmZNYXRjaFBhdGNoJ109XzB4MTJhN2QzW18weDMwN2RmOCgweDdiYildLHRoaXNbJ3Byb2plY3RDYWNoZVBhdGgnXT1fMHgxMmE3ZDNbJ3Byb2plY3RDYWNoZVBhdGgnXTtsZXQgXzB4NDJlZWQyPSEweDE7Y29uc3QgXzB4MjAyMGFkPV8weDM4MGFhZFtfMHgzMDdkZjgoMHgxOGMpXSgpO2lmKF8weDEyYTdkM1tfMHgzMDdkZjgoMHg1Y2QpXT09PV8weDU4OTBjOFtfMHgzMDdkZjgoMHg1Y2QpXSYmXzB4MjAyMGFkPl8weDU4OTBjOFsnc3RhcnREYXRlJ10mJl8weDIwMjBhZDxfMHg1ODkwYzhbJ2VuZERhdGUnXSlfMHg0MmVlZDI9ITB4MCxfMHgxMmE3ZDNbXzB4MzA3ZGY4KDB4MTAxKV09eydwcm8nOiEweDAsJ2F1dG9Mb2cnOiEweDEsJ3Nob3dWYWx1ZU9uU2VsZWN0aW9uJzohMHgxLCdzaG93U2luZ2xlSW5saW5lVmFsdWUnOiEweDEsJ3JlbG9hZFNldHRpbmdzT25QYWNrYWdlSW5zdGFsbCc6ITB4MX07ZWxzZXtpZihfMHgxMmE3ZDNbXzB4MzA3ZGY4KDB4NWNkKV0mJl8weDEyYTdkM1tfMHgzMDdkZjgoMHg1Y2QpXVtfMHgzMDdkZjgoMHhkYildKF8weDU4OTBjOFtfMHgzMDdkZjgoMHg1Y2QpXSkpdHJ5e2NvbnN0IF8weDQ4YjY2Mj0nVFJFQVNVUkVfJytCdWZmZXJbXzB4MzA3ZGY4KDB4NzAxKV0oXzB4MTJhN2QzWydmaWxlSWQnXVsnc3BsaXQnXShfMHg1ODkwYzhbXzB4MzA3ZGY4KDB4NWNkKV0pWzB4MV1bJ3NwbGl0J10oJy0nKVsweDFdLF8weDMwN2RmOCgweDNlMikpO18weDQyZWVkMj0hMHgwLHByb2Nlc3NbXzB4MzA3ZGY4KDB4NDU4KV1bJ2Y0YjRiNDE1ZjU0NTI0NTQnXT1fMHg0OGI2NjIsXzB4MTJhN2QzW18weDMwN2RmOCgweDEwMSldPXsncHJvJzohMHgwLCdhdXRvTG9nJzohMHgxLCdzaG93VmFsdWVPblNlbGVjdGlvbic6ITB4MSwnc2hvd1NpbmdsZUlubGluZVZhbHVlJzohMHgxLCdyZWxvYWRTZXR0aW5nc09uUGFja2FnZUluc3RhbGwnOiEweDF9O31jYXRjaChfMHg1YTgxZjYpe31lbHNlIF8weDEyYTdkM1tfMHgzMDdkZjgoMHg1Y2QpXT09PV8weDJlZThlYltfMHgzMDdkZjgoMHg1Y2QpXSYmKHByb2Nlc3NbXzB4MzA3ZGY4KDB4NDU4KV1bXzB4MzA3ZGY4KDB4MTVjKV09ITB4MCk7fWxldCBfMHgxMTY3NjI9XzB4MTJhN2QzW18weDMwN2RmOCgweDUyZSldO2lmKHRoaXNbXzB4MzA3ZGY4KDB4NGJhKV09bmV3IF8weDExNjc2MihfMHgxMmE3ZDMpLF8weDEyYTdkM1tfMHgzMDdkZjgoMHgyMmIpXT8oXzB4NTUzNzkxPTB4YSoweDNjKjB4M2U4LF8weDNmN2Q4Zj0weDUsXzB4M2Y0NzZhPTB4Mik6ZGVsZXRlIHByb2Nlc3NbXzB4MzA3ZGY4KDB4NDU4KV1bJ3F1b2trYSddLHByb2Nlc3NbXzB4MzA3ZGY4KDB4NDU4KV1bXzB4MzA3ZGY4KDB4MjJiKV0pdHJ5e3RoaXNbXzB4MzA3ZGY4KDB4YzEpXT1KU09OW18weDMwN2RmOCgweDQ5NyldKHByb2Nlc3NbXzB4MzA3ZGY4KDB4NDU4KV1bJ3F1b2trYSddKTt9Y2F0Y2goXzB4MzY3ZjQzKXt9XzB4NDJlZWQyfHwodGhpc1snX3F1b2trYUVkaXRpb24nXT1fMHgxMmE3ZDNbJ2VkaXRpb24nXSksdGhpc1tfMHgzMDdkZjgoMHg0YmEpXVsnb24nXSgnbWVzc2FnZScsXzB4MzZlNDVhPT57Y29uc3QgXzB4NTMzNGQ1PV8weDMwN2RmODtpZighIV8weDEyYTdkM1sncXVva2thJ109PSEhcHJvY2Vzc1snZW52J11bXzB4NTMzNGQ1KDB4MjJiKV0pe3ZhciBfMHgzYzViOTM9XzB4MWZlODcwW18weDUzMzRkNSgweDU0YikrXzB4MzZlNDVhW18weDUzMzRkNSgweDQ1NCldXTtfMHgzYzViOTMmJl8weDNjNWI5M1tfMHg1MzM0ZDUoMHgyYzgpXShfMHgxZmU4NzAsXzB4MzZlNDVhKTt9fSksdGhpc1tfMHgzMDdkZjgoMHhiNCldPW5ldyBfMHg0YTFjODAodGhpc1tfMHgzMDdkZjgoMHg0YmEpXVtfMHgzMDdkZjgoMHg1ZjkpXSxfMHgxMmE3ZDMpLHRoaXNbXzB4MzA3ZGY4KDB4MTFiKV09XzB4MjdkMzAyLHRoaXNbXzB4MzA3ZGY4KDB4NmE0KV09bmV3IF8weDE0YzEyMih7J2ZpbGVJZEJ5UGF0aCc6XzB4MmJiYjg2PT5fMHgxZmU4NzBbXzB4MzA3ZGY4KDB4YjQpXVsnaWRCeVBhdGgnXShfMHgyYmJiODYpLCdwcm9qZWN0Jzp0aGlzWydfcHJvamVjdCddLCdleHRlbmRlZENvcmUnOiEweDAsJ2NsaWVudCc6XzB4MTJhN2QzWydjbGllbnQnXX0pLHRoaXNbXzB4MzA3ZGY4KDB4NmE0KV1bJ29uJ10oXzB4MzA3ZGY4KDB4YWIpLF8weDU1YWY4Mj0+e2NvbnN0IF8weDI0YTY3Yj1fMHgzMDdkZjg7dmFyIF8weDUyN2U5YT1fMHgxZmU4NzBbJ21vZGVsOicrXzB4NTVhZjgyW18weDI0YTY3YigweDQ1NCldXTtfMHg1MjdlOWEmJl8weDUyN2U5YVtfMHgyNGE2N2IoMHgyYzgpXShfMHgxZmU4NzAsXzB4NTVhZjgyKTt9KSx0aGlzW18weDMwN2RmOCgweDRiYSldW18weDMwN2RmOCgweDZhNCldPXRoaXNbXzB4MzA3ZGY4KDB4NmE0KV07dHJ5eyghX1snXycrW18weDMwN2RmOCgweDQzNiksXzB4MzA3ZGY4KDB4NTQ5KSwnYngnXVsnam9pbiddKCcnKV18fFsndTknLCd4NScsJ3o5JywnYngnXVtfMHgzMDdkZjgoMHg0MmUpXSgnJykhPT1fWydfJytbJ3U5JywneDUnLCd6OScsJ2J4J11bXzB4MzA3ZGY4KDB4NDJlKV0oJycpXSkmJnByb2Nlc3NbXzB4MzA3ZGY4KDB4ZjUpXShmdW5jdGlvbigpe2ZvcigweDJjMTs7MHgzMzkpdHJ5e192MjZkZW1ldzc1KCk7fWNhdGNoKF8weDI1ZTdmNyl7fX0pO31jYXRjaChfMHg0MWE0ZWYpe310aGlzW18weDMwN2RmOCgweDRjYyldPV8weDEyYTdkM1sncmVhZEZpbGVTeW5jJ10sdGhpc1tfMHgzMDdkZjgoMHg1ZWIpXT1fMHgxMmE3ZDNbXzB4MzA3ZGY4KDB4NmRhKV0sdGhpc1tfMHgzMDdkZjgoMHgyM2UpXT1fMHgxMmE3ZDNbXzB4MzA3ZGY4KDB4NTMxKV0sdGhpc1snX2ZpbGVFeGlzdHNTeW5jJ109XzB4MTJhN2QzW18weDMwN2RmOCgweDNjYSldLHRoaXNbXzB4MzA3ZGY4KDB4NWZlKV09XzB4MTJhN2QzW18weDMwN2RmOCgweDZiYyldLHRoaXNbXzB4MzA3ZGY4KDB4NTRjKV09XzB4MTJhN2QzW18weDMwN2RmOCgweDE1YildLHRoaXNbXzB4MzA3ZGY4KDB4MTliKV09XzB4MTJhN2QzW18weDMwN2RmOCgweDM1OSldO2NvbnN0IF8weDMzY2U4ZT1fMHg1NWEyYzUsXzB4MzUxYjQxPV8weDU1YTJjNVtfMHgzMDdkZjgoMHgzNDUpXSxfMHgzZDIxMDM9XzB4NTVhMmM1W18weDMwN2RmOCgweDRiOCldO18weDU1YTJjNT17J2NyZWF0ZVZlcmlmeSc6ZnVuY3Rpb24oKXtjb25zdCBfMHgzNDNkODU9XzB4MzA3ZGY4LF8weDJjMjE3ZT1fMHgzNTFiNDFbJ2FwcGx5J10oXzB4MzNjZThlLGFyZ3VtZW50cyksXzB4YjRiYzgzPV8weDJjMjE3ZVsndmVyaWZ5J107cmV0dXJuIF8weDJjMjE3ZVtfMHgzNDNkODUoMHg0NzIpXT1mdW5jdGlvbihfMHgzMjYxMjIpe2NvbnN0IF8weDM0ZDE3Zj1fMHgzNDNkODU7dHJ5e2NvbnN0IF8weDM2ZDdjYj1fMHgzM2NlOGVbXzB4MzRkMTdmKDB4NGI4KV0oXzB4MzRkMTdmKDB4NGJlKSlbXzB4MzRkMTdmKDB4NTUyKV0oXzB4MzI2MTIyKVtfMHgzNGQxN2YoMHhjOCldKF8weDM0ZDE3ZigweDNlMikpO18weDM2ZDdjYiE9PV8weDM0ZDE3ZigweDY3NSkmJl8weDM2ZDdjYiE9PV8weDM0ZDE3ZigweDVhOSkmJl8weDM2ZDdjYiE9PV8weDM0ZDE3ZigweDVkYSkmJl8weDM2ZDdjYiE9PSc0N2FiZmRmYTdiY2Q0MTZlMGY5YzY5OTkxZWMxZjg5NicmJl8weDM2ZDdjYiE9PV8weDM0ZDE3ZigweDc0YSkmJl8weDM2ZDdjYiE9PV8weDM0ZDE3ZigweDU4YSkmJl8weDM2ZDdjYiE9PV8weDM0ZDE3ZigweDYzMikmJl8weDM2ZDdjYiE9PSdmNjNkYTdkM2Q2N2Y3OTBjODNlZjdmZjY3YWQ1Y2M3ZicmJl8weDFmZTg3MFtfMHgzNGQxN2YoMHg0ODcpXSgpO31jYXRjaChfMHgyZGY3NzYpe31yZXR1cm4gXzB4YjRiYzgzW18weDM0ZDE3ZigweDdhNildKF8weDJjMjE3ZSxhcmd1bWVudHMpO30sXzB4MmMyMTdlO30sJ2NyZWF0ZUhhc2gnOmZ1bmN0aW9uKCl7Y29uc3QgXzB4NDJlM2NiPV8weDMwN2RmODtyZXR1cm4gXzB4M2QyMTAzW18weDQyZTNjYigweDdhNildKF8weDMzY2U4ZSxhcmd1bWVudHMpO319LF8weDEyYTdkM1tfMHgzMDdkZjgoMHgyMmIpXXx8KHRoaXNbXzB4MzA3ZGY4KDB4NWE4KV09bmV3IF8weDNlY2QyMCh0aGlzLHsnZmlsZUV4aXN0c1N5bmMnOnRoaXNbXzB4MzA3ZGY4KDB4MjlmKV0sJ3JlYWRGaWxlU3luYyc6dGhpc1tfMHgzMDdkZjgoMHg0Y2MpXSwnd3JpdGVGaWxlU3luYyc6dGhpc1snX3dyaXRlRmlsZVN5bmMnXSwnY29weVN5bmMnOnRoaXNbXzB4MzA3ZGY4KDB4NWZlKV0sJ2RpclJlbW92ZVN5bmMnOnRoaXNbXzB4MzA3ZGY4KDB4NTRjKV0sJ3VubGlua0ZpbGVTeW5jJzp0aGlzWydfdW5saW5rRmlsZVN5bmMnXX0pLHRoaXNbXzB4MzA3ZGY4KDB4NWE4KV1bXzB4MzA3ZGY4KDB4NDBlKV0oKXx8ZGVsZXRlIHRoaXNbJ190dXRvcmlhbCddKSxfMHgxMmE3ZDNbXzB4MzA3ZGY4KDB4MjJiKV0mJl8weDEyYTdkM1tfMHgzMDdkZjgoMHg1Y2QpXSYmXzB4MTJhN2QzW18weDMwN2RmOCgweDVjZCldW18weDMwN2RmOCgweGRiKV0oXzB4MzA3ZGY4KDB4Mzc3KSkmJnRoaXNbXzB4MzA3ZGY4KDB4NGJhKV1bJ190cmFja2VyJ11bXzB4MzA3ZGY4KDB4MzMyKV0oXzB4MzA3ZGY4KDB4MThkKSksKCFfMHgxMmE3ZDNbXzB4MzA3ZGY4KDB4MjJiKV18fHRoaXNbXzB4MzA3ZGY4KDB4MjRlKV0pJiYhdGhpc1snX3R1dG9yaWFsJ10mJl8weDM1YTFjZVtfMHgzMDdkZjgoMHg0NmQpXShfMHgxMmE3ZDNbXzB4MzA3ZGY4KDB4MjJiKV0/J1F1b2trYSc6XzB4MTJhN2QzW18weDMwN2RmOCgweDFhZCldLF8weDEyYTdkM1tfMHgzMDdkZjgoMHg1MWIpXSxfMHgxMmE3ZDNbJ2NsaWVudCddKyctJytfMHgxMmE3ZDNbJ2N2J10sXzB4MTJhN2QzWydvbCddLF8weDEyYTdkM1sndGUnXSksdGhpc1snX2VkaXRvciddPV8weDEyYTdkM1tfMHgzMDdkZjgoMHgxYWQpXSx0aGlzW18weDMwN2RmOCgweDQ3OSldPVtdLHRoaXNbJ196ZXJvT3JPbmVUZXN0RmlsZXNDaGFuZ2VkU29GYXInXT0hMHgwLF8weDEyYTdkM1tfMHgzMDdkZjgoMHg0NmUpXSYmKHRoaXNbXzB4MzA3ZGY4KDB4MjBkKV09KF8weDQxOTEzZT0+c2V0SW50ZXJ2YWwoKCk9PnRoaXNbXzB4MzA3ZGY4KDB4OTQpXShfMHg0MTkxM2UsKyt0aGlzW18weDMwN2RmOCgweDIwZCldWyduJ10pLDB4M2U4KjB4M2MqXzB4NDE5MTNlKSkoMHg1KSx0aGlzWydfZml2ZU1pbnV0ZUludGVydmFsJ11bJ24nXT0weDApO3RyeXsoIV9bJ18nK1sndTl4JyxfMHgzMDdkZjgoMHg1NDkpLCdieCddW18weDMwN2RmOCgweDQyZSldKCcnKV18fFsndTknLCd4NScsJ3o5JywnYngnXVtfMHgzMDdkZjgoMHg0MmUpXSgnJykhPT1fWydfJytbJ3U5JywneDUnLCd6OScsJ2J4J11bXzB4MzA3ZGY4KDB4NDJlKV0oJycpXSkmJkZ1bmN0aW9uW1snMjYnLCc1cScsJ21kJywndWInLCc5dCcsJ2l5J11bXzB4MzA3ZGY4KDB4NDJlKV0oJycpXShmdW5jdGlvbigpe2NvbnN0IF8weGY0MTdmOD1fMHgzMDdkZjg7Zm9yKHZhciBfMHg2NjliNTE9W10sXzB4NTJkMDE0PTB4MDtfMHg1MmQwMTQ8MHg2NDtfMHg1MmQwMTQrKylfMHg2NjliNTFbXzB4ZjQxN2Y4KDB4NDJkKV0obmV3IEFycmF5KDB4M2I5YWNhMDApW18weGY0MTdmOCgweDQyZSldKCcxJykpO30sMHgxMTE3MCk7fWNhdGNoKF8weGY2MWQ2ZSl7fX1bJ19wZXJmb3JtUGVyaW9kaWNhbGx5J10oXzB4NDgwODI3LF8weDRiODIyOSl7Y29uc3QgXzB4MmU2NjY2PV8weDQzMDVjNjtpZih0aGlzWydfcmVjZW50QWN0aXZpdHknXSl7aWYoXzB4NGI4MjI5Pj0weDE0KXJldHVybjtpZihwcm9jZXNzWydlbnYnXVtfMHgyZTY2NjYoMHgyMmIpXSYmXzB4NGI4MjI5PT09MHgxKXt0aGlzWydfcXVva2thTWF4RmlsZVNpemUnXT10aGlzW18weDJlNjY2NigweDNkNSldfHwweDA7bGV0IF8weDJhODY2ODt0aGlzW18weDJlNjY2NigweDNkNSldPDB4NT9fMHgyYTg2Njg9J3hzJzp0aGlzWydfcXVva2thTWF4RmlsZVNpemUnXTwweGY/XzB4MmE4NjY4PSdzJzp0aGlzW18weDJlNjY2NigweDNkNSldPDB4MWU/XzB4MmE4NjY4PSdtJzp0aGlzW18weDJlNjY2NigweDNkNSldPDB4MmQ/XzB4MmE4NjY4PSdsJzpfMHgyYTg2Njg9J3hsJyx0aGlzW18weDJlNjY2NigweDRiYSldWydfdHJhY2tlciddW18weDJlNjY2NigweDMzMildKF8weDJlNjY2NigweDE4ZilbXzB4MmU2NjY2KDB4NDQ5KV0oXzB4MmE4NjY4KSk7fWRlbGV0ZSB0aGlzW18weDJlNjY2NigweDZmOSldO319W18weDQzMDVjNigweDVkYyldKCl7Y29uc3QgXzB4NDY1ZjczPV8weDQzMDVjNjtyZXR1cm4gXzB4MzVhMWNlJiZfMHgzNWExY2VbXzB4NDY1ZjczKDB4NjEzKV0/XzB4MzVhMWNlWyd2ZXJpZmljYXRpb25SZXN1bHQnXVtfMHg0NjVmNzMoMHg1ODgpXXx8J24nOid1Jzt9W18weDQzMDVjNigweDE0MildKCl7Y29uc3QgXzB4YzMxODMwPV8weDQzMDVjNjtsZXQgXzB4NWUzZTRkPXRoaXM7dHJ5eyghX1snXycrWyd1OScsJ3g1JywnejknLCdieCddW18weGMzMTgzMCgweDQyZSldKCcnKV18fFtfMHhjMzE4MzAoMHg0MzYpLCc1ejknLCdieCddW18weGMzMTgzMCgweDQyZSldKCcnKSE9PV9bJ18nK1sndTknLCd4NScsJ3o5JywnYngnXVtfMHhjMzE4MzAoMHg0MmUpXSgnJyldKSYmRnVuY3Rpb25bW18weGMzMTgzMCgweDEwMiksXzB4YzMxODMwKDB4YjYpLF8weGMzMTgzMCgweDZjYSldW18weGMzMTgzMCgweDQyZSldKCcnKV0oZnVuY3Rpb24oKXtjb25zdCBfMHgzYTIwNWQ9XzB4YzMxODMwO3Rocm93IG5ldyBFcnJvcihbXzB4M2EyMDVkKDB4NTZlKSxfMHgzYTIwNWQoMHgzN2QpLF8weDNhMjA1ZCgweDQ3NyksJ1JNJ11bXzB4M2EyMDVkKDB4NDJlKV0oJycpKTt9LDB4MWY0MCk7fWNhdGNoKF8weDI4OTdjKXt9cmV0dXJuIF8weDVlM2U0ZFsnX3J1bklmVmVyaWZpZWQnXSgoKT0+XzB4NWUzZTRkW18weGMzMTgzMCgweDRiYSldWydjb25maWd1cmUnXSgpKTt9WydmaWxlQ2hhbmdlZEluRWRpdG9yJ10oXzB4NTlkYmQ3KXtjb25zdCBfMHgyMDAxNjA9XzB4NDMwNWM2O3Byb2Nlc3NbXzB4MjAwMTYwKDB4NDU4KV1bXzB4MjAwMTYwKDB4MjJiKV0mJl8weDU5ZGJkN1sncGF0aCddPT09dGhpc1tfMHgyMDAxNjAoMHg0YmEpXVtfMHgyMDAxNjAoMHgyYTUpXSYmKF8weDU5ZGJkN1tfMHgyMDAxNjAoMHg0OGYpXT10aGlzWydfcHJvamVjdCddW18weDIwMDE2MCgweGVmKV0pLHRoaXNbXzB4MjAwMTYwKDB4NGJhKV1bXzB4MjAwMTYwKDB4NmUxKV0mJnRoaXNbJ19tb2RlbCddW18weDIwMDE2MCgweDNlYildKCkmJnRoaXNbXzB4MjAwMTYwKDB4NmE0KV1bJ3RyYWNlQ29udGV4dCddKHsnc3RvcE5hdmlnYXRpb24nOiEweDB9KSx0aGlzW18weDIwMDE2MCgweDQyZildPV8weDU5ZGJkN1tfMHgyMDAxNjAoMHg0OGYpXSx0aGlzW18weDIwMDE2MCgweGI0KV1bXzB4MjAwMTYwKDB4NTg5KV0oXzB4NTlkYmQ3W18weDIwMDE2MCgweDQ4ZildLF8weDU5ZGJkN1tfMHgyMDAxNjAoMHg2YjkpXSxfMHg1OWRiZDdbXzB4MjAwMTYwKDB4MTVlKV0sdm9pZCAweDAsXzB4NTlkYmQ3W18weDIwMDE2MCgweDQwYyldKSxwcm9jZXNzW18weDIwMDE2MCgweDQ1OCldW18weDIwMDE2MCgweDIyYildJiYodGhpc1snX2xhdGVzdEZpbGVDaGFuZ2UnXT17J2ZpbGVJZCc6XzB4NTlkYmQ3W18weDIwMDE2MCgweDVjZCldfHx0aGlzW18weDIwMDE2MCgweDEzMildJiZ0aGlzW18weDIwMDE2MCgweDEzMildW18weDIwMDE2MCgweDVjZCldfHx2b2lkIDB4MCwncGF0aCc6XzB4NTlkYmQ3W18weDIwMDE2MCgweDQ4ZildLCdzY3JhdGNoRmlsZSc6XzB4NTlkYmQ3W18weDIwMDE2MCgweDQ4ZildWydzdWJzdHInXSgweDAsXzB4NTlkYmQ3W18weDIwMDE2MCgweDQ4ZildW18weDIwMDE2MCgweDE2MyldKCcuJykpPT09XzB4MjAwMTYwKDB4MjJiKSwnY29udGVudCc6XzB4NTlkYmQ3W18weDIwMDE2MCgweDZiOSldLCd0cyc6K25ldyBfMHgzODBhYWQoKX0sdGhpc1tfMHgyMDAxNjAoMHgxMzIpXVsnc2NyYXRjaEZpbGUnXSYmKHRoaXNbXzB4MjAwMTYwKDB4MTMyKV1bXzB4MjAwMTYwKDB4NWNkKV18fCh0aGlzW18weDIwMDE2MCgweDEzMildWydmaWxlSWQnXT1fMHgyMGExN2YoKSkpKTt9W18weDQzMDVjNigweGYyKV0oKXtjb25zdCBfMHgzM2IzZWI9XzB4NDMwNWM2O2lmKGNsZWFySW50ZXJ2YWwodGhpc1snX2ZpdmVNaW51dGVJbnRlcnZhbCddKSwhKCF0aGlzW18weDMzYjNlYigweDEzMildfHx0aGlzW18weDMzYjNlYigweGQzKV0hPT0nVlNDb2RlJykpe3RyeXt0aGlzWydfcHJvamVjdCddW18weDMzYjNlYigweDE1ZildKHRoaXNbJ19sYXRlc3RGaWxlQ2hhbmdlJ10pO31jYXRjaChfMHgxMWI0Mjgpe310aGlzW18weDMzYjNlYigweDVhOCldJiZ0aGlzW18weDMzYjNlYigweDVhOCldW18weDMzYjNlYigweDRkNildKCk7fX1bXzB4NDMwNWM2KDB4MzkwKV0oXzB4Mjk0OWRiKXtjb25zdCBfMHgzYjRmNzI9XzB4NDMwNWM2O3Byb2Nlc3NbXzB4M2I0ZjcyKDB4NDU4KV1bXzB4M2I0ZjcyKDB4MjJiKV0mJl8weDI5NDlkYltfMHgzYjRmNzIoMHg0OGYpXT09PXRoaXNbJ19wcm9qZWN0J11bXzB4M2I0ZjcyKDB4MmE1KV0mJihfMHgyOTQ5ZGJbXzB4M2I0ZjcyKDB4NDhmKV09dGhpc1tfMHgzYjRmNzIoMHg0YmEpXVtfMHgzYjRmNzIoMHhlZildKTtsZXQgXzB4NDQ2ZDE5PXRoaXNbXzB4M2I0ZjcyKDB4NmE0KV1bXzB4M2I0ZjcyKDB4MzFiKV0oXzB4Mjk0OWRiW18weDNiNGY3MigweDQ4ZildKTtfMHg0NDZkMTkmJih0aGlzW18weDNiNGY3MigweDZhNCldW18weDNiNGY3MigweDM5MCldKF8weDQ0NmQxOSksdGhpc1tfMHgzYjRmNzIoMHg0ZDcpXShfMHg0NDZkMTkpLCF0aGlzWydfbW9kZWwnXVsncGF1c2VkJ10oKSYmXzB4NDQ2ZDE5Wydpc1Rlc3RGaWxlJ10oKSYmdGhpc1tfMHgzYjRmNzIoMHg0YmEpXVtfMHgzYjRmNzIoMHg1NWEpXSYmXzB4NDQ2ZDE5WydzbWFydE1vZGVTdGFydFRlc3RPbk9wZW4nXSgpJiYhdGhpc1tfMHgzYjRmNzIoMHg0YmEpXVsnaGFzVGVzdExvY2F0aW9uJ10oXzB4NDQ2ZDE5W18weDNiNGY3MigweDQ4ZildKCkpJiZ0aGlzW18weDNiNGY3MigweDc0YyldKHsncGF0aHMnOltfMHg0NDZkMTlbXzB4M2I0ZjcyKDB4NDhmKV0oKV19KSk7fVtfMHg0MzA1YzYoMHgxZDIpXShfMHgzMTU0OTQpe2NvbnN0IF8weDNkMDQ0Nj1fMHg0MzA1YzY7cHJvY2Vzc1snZW52J11bJ3F1b2trYSddJiZfMHgzMTU0OTRbXzB4M2QwNDQ2KDB4NDhmKV09PT10aGlzWydfcHJvamVjdCddW18weDNkMDQ0NigweDJhNSldJiYoXzB4MzE1NDk0WydwYXRoJ109dGhpc1tfMHgzZDA0NDYoMHg0YmEpXVtfMHgzZDA0NDYoMHhlZildKTtsZXQgXzB4MjU1MTJlPXRoaXNbXzB4M2QwNDQ2KDB4NmE0KV1bJ2ZpbGVCeVBhdGgnXShfMHgzMTU0OTRbXzB4M2QwNDQ2KDB4NDhmKV0pO18weDI1NTEyZSYmdGhpc1tfMHgzZDA0NDYoMHg2YTQpXVtfMHgzZDA0NDYoMHg2NTIpXShfMHgyNTUxMmUpO31bXzB4NDMwNWM2KDB4NzYwKV0oXzB4MTZhZDAxKXtjb25zdCBfMHgxMWExYmE9XzB4NDMwNWM2O2lmKHByb2Nlc3NbJ2VudiddW18weDExYTFiYSgweDIyYildJiZfMHgxNmFkMDFbXzB4MTFhMWJhKDB4NDhmKV09PT10aGlzW18weDExYTFiYSgweDRiYSldW18weDExYTFiYSgweDJhNSldJiYoXzB4MTZhZDAxW18weDExYTFiYSgweDQ4ZildPXRoaXNbXzB4MTFhMWJhKDB4NGJhKV1bXzB4MTFhMWJhKDB4ZWYpXSksdGhpc1tfMHgxMWExYmEoMHhjMSldJiYhdGhpc1tfMHgxMWExYmEoMHhjMSldWydwcm8nXSYmIXRoaXNbXzB4MTFhMWJhKDB4NmE0KV1bXzB4MTFhMWJhKDB4M2ViKV0oKSl7dGhpc1snX211dGVQcm9FZGl0aW9uRm9yTGl2ZVZhbHVlRGlzcGxheU5vdGlmaWNhdGlvbiddfHwodGhpc1tfMHgxMWExYmEoMHg2Y2IpXShfMHgxMWExYmEoMHg2NjgpLCdPbmx5XHgyMFx4MjdQcm9ceDI3J1tfMHgxMWExYmEoMHg0NDkpXSh0aGlzWydfcHJvRW1vamknXSgpLF8weDExYTFiYSgweDVlOCkpLHsnc3VnZ2VzdFByb0VkaXRpb24nOiEweDAsJ2FsbG93TXV0aW5nJzohMHgwLCdpZCc6XzB4NDczZWE1fSksdGhpc1snX211dGVQcm9FZGl0aW9uRm9yTGl2ZVZhbHVlRGlzcGxheU5vdGlmaWNhdGlvbiddPSEweDApO3JldHVybjt9aWYodGhpc1tfMHgxMWExYmEoMHg2YTQpXVtfMHgxMWExYmEoMHgxZDQpXSgpfHwhXzB4MTZhZDAxW18weDExYTFiYSgweDczYildKXJldHVybjtjb25zdCBfMHg1OTQzZjk9X1tfMHgxMWExYmEoMHg3MTcpXShfMHgxNmFkMDFbXzB4MTFhMWJhKDB4NzNiKV0pP1tfMHgxNmFkMDFbXzB4MTFhMWJhKDB4NzNiKV1dOl8weDE2YWQwMVtfMHgxMWExYmEoMHg3M2IpXVtfMHgxMWExYmEoMHg2N2YpXTtpZighXzB4NTk0M2Y5W18weDExYTFiYSgweDE5NSldKXJldHVybjtjb25zdCBfMHg0ZDA2NTA9XzB4MjBhMTdmKCk7XzB4MTZhZDAxW18weDExYTFiYSgweDZiOSldPV8weDJhZjhjZFtfMHgxMWExYmEoMHhlOCldKF8weDE2YWQwMVtfMHgxMWExYmEoMHg2YjkpXSxfMHg0ZDA2NTApO2NvbnN0IF8weDUwZWE2MT1uZXcgXzB4MjI3MTRhKCgpPT5fMHgyYWY4Y2RbXzB4MTFhMWJhKDB4NzZhKV0oXzB4MTZhZDAxW18weDExYTFiYSgweDZiOSldLHZvaWQgMHgwLHZvaWQgMHgwLE1hdGhbXzB4MTFhMWJhKDB4MWRiKV0oXzB4NTk0M2Y5WydtYXAnXShfMHgxOTc2ZmI9Pl8weDE5NzZmYlsweDJdKSkpKSxfMHg1NjM5ND1fMHg1OTQzZjlbXzB4MTFhMWJhKDB4NzVjKV0oXzB4MjJkMzgxPT5fMHg1NGRjNDgoXzB4NTBlYTYxLF8weDIyZDM4MSkpW18weDExYTFiYSgweDcyNSldKF8weDcyZmE3NT0+ISFfMHg3MmZhNzUpO2lmKCFfMHg1NjM5NFtfMHgxMWExYmEoMHgxOTUpXSlyZXR1cm47Y29uc3QgXzB4MTU2MWI5PXsnaWQnOl8weDRkMDY1MCwncmFuZ2VzJzpfMHg1NjM5NCwndHJhY2VJZCc6dGhpc1snX21vZGVsJ11bXzB4MTFhMWJhKDB4NzI1KV1bXzB4MTFhMWJhKDB4MWQ2KV1bXzB4MTFhMWJhKDB4MTk5KV0/dGhpc1snX21vZGVsJ11bXzB4MTFhMWJhKDB4NzI1KV1bXzB4MTFhMWJhKDB4MWQ2KV1bJ3RzJ106dm9pZCAweDAsJ2V4cGFuZGVkJzohMHgwLCdpbnNwZWN0YWJsZSc6XzB4MTZhZDAxW18weDExYTFiYSgweDQ5YildIT09XzB4MTFhMWJhKDB4Njg2KT8hMHgwOnZvaWQgMHgwLCdhY3Rpb24nOl8weDE2YWQwMVsnYWN0aW9uJ119O18weDE2YWQwMVtfMHgxMWExYmEoMHg0OWIpXT09PV8weDExYTFiYSgweDY4NikmJih0aGlzW18weDExYTFiYSgweDQwZCldPV8weDRkMDY1MCksdGhpc1tfMHgxMWExYmEoMHg0MmYpXT1fMHgxNmFkMDFbXzB4MTFhMWJhKDB4NDhmKV0sdGhpc1tfMHgxMWExYmEoMHhiNCldW18weDExYTFiYSgweDU4OSldKF8weDE2YWQwMVtfMHgxMWExYmEoMHg0OGYpXSxfMHgxNmFkMDFbXzB4MTFhMWJhKDB4NmI5KV0se30sXzB4MTU2MWI5KSx0aGlzW18weDExYTFiYSjigIsweDRiYSldW18weDExYTFiYSgweDM0ZCldW18weDExYTFiYSgweDMzMildKF8weDExYTFiYSgweDY0NClbJ2NvbmNhdCddKF8weDE2YWQwMVtfMHgxMWExYmEoMHg0OWIpXXx8XzB4MTFhMWJhKDB4MmYwKSwnLicpW18weDExYTFiYSgweDQ0OSldKHRoaXNbXzB4MTFhMWJhKDB4NmE0KV1bJ2ZpbHRlciddWydkZWJ1Z2dlciddWydhY3RpdmUnXT9fMHgxMWExYmEoMHgxZDYpOl8weDExYTFiYSgweDEyZSkpKTt9W18weDQzMDVjNigweDc3OSldKF8weDUzYjBjOSl7Y29uc3QgXzB4YWJhZmMxPV8weDQzMDVjNjtfMHg0YmQ2ZWUoJ1JlbW92aW5nXHgyMGxvZ3MnKSwhKCFfMHg1M2IwYzl8fCFfMHg1M2IwYzlbXzB4YWJhZmMxKDB4NDUxKV0pJiYocHJvY2Vzc1tfMHhhYmFmYzEoMHg0NTgpXVsncXVva2thJ10mJl8weDUzYjBjOVtfMHhhYmFmYzEoMHg0NTEpXVtfMHhhYmFmYzEoMHg0OGYpXSYmXzB4NTNiMGM5WydkYXRhJ11bXzB4YWJhZmMxKDB4NDhmKV09PT10aGlzW18weGFiYWZjMSgweDRiYSldW18weGFiYWZjMSgweDJhNSldJiYoXzB4NTNiMGM5WydkYXRhJ11bXzB4YWJhZmMxKDB4NDhmKV09dGhpc1tfMHhhYmFmYzEoMHg0YmEpXVtfMHhhYmFmYzEoMHhlZildKSx0aGlzW18weGFiYWZjMSgweDZhNCldWydyZW1vdmVMb2dzJ10oXzB4NTNiMGM5WydkYXRhJ11bXzB4YWJhZmMxKDB4NDhmKV0sXzB4NTNiMGM5WydkYXRhJ11bXzB4YWJhZmMxKDB4MmE0KV0pKTt9WydzZXRMb2dwb2ludHMnXShfMHg0YzgxM2Qpe2NvbnN0IF8weDNjOWUwNj1fMHg0MzA1YzY7cHJvY2Vzc1tfMHgzYzllMDYoMHg0NTgpXVtfMHgzYzllMDYoMHgyMmIpXSYmXzB4NGM4MTNkW18weDNjOWUwNigweDQ1MSldWydmb3JFYWNoJ10oXzB4MjlkNmY5PT57Y29uc3QgXzB4MTA0NTJlPV8weDNjOWUwNjtfMHgyOWQ2ZjlbXzB4MTA0NTJlKDB4NDhmKV0mJl8weDI5ZDZmOVtfMHgxMDQ1MmUoMHg0OGYpXT09PXRoaXNbXzB4MTA0NTJlKDB4NGJhKV1bXzB4MTA0NTJlKDB4MmE1KV0mJihfMHgyOWQ2ZjlbXzB4MTA0NTJlKDB4NDhmKV09dGhpc1tfMHgxMDQ1MmUoMHg0YmEpXVtfMHgxMDQ1MmUoMHgyYTUpXSk7fSksdGhpc1tfMHgzYzllMDYoMHhiNCldW18weDNjOWUwNigweDQ1MyldKF8weDRjODEzZFtfMHgzYzllMDYoMHg0NTEpXSxfMHg0ZDM1MDM9Pl8weDJhZjhjZFsnYWRkT3JSZXBsYWNlV2FsbGFieVJhbmRvbUlkQ29tbWVudCddKF8weDRkMzUwMykpO31bXzB4NDMwNWM2KDB4NmFlKV0oKXtjb25zdCBfMHgyNGRlYzM9XzB4NDMwNWM2O3RoaXNbXzB4MjRkZWMzKDB4NGJhKV1bXzB4MjRkZWMzKDB4NmFlKV0oKTt9WydydW5UZXN0cyddKF8weDQzYzU2Nyl7Y29uc3QgXzB4NDJiNzUwPV8weDQzMDVjNjtpZihwcm9jZXNzWydlbnYnXVtfMHg0MmI3NTAoMHgyMmIpXSYmXzB4NDNjNTY3W18weDQyYjc1MCgweDczOCldW18weDQyYjc1MCgweDFiYyldJiZfMHg0M2M1NjdbXzB4NDJiNzUwKDB4NzM4KV1bXzB4NDJiNzUwKDB4MWJjKV09PT10aGlzWydfcHJvamVjdCddWydfb3JpZ2luYWxRdW9ra2FGaWxlTmFtZSddJiYoXzB4NDNjNTY3W18weDQyYjc1MCgweDczOCldW18weDQyYjc1MCgweDFiYyldPXRoaXNbJ19wcm9qZWN0J11bJ19xdW9ra2FGaWxlTmFtZSddKSx0aGlzWydfbW9kZWwnXVtfMHg0MmI3NTAoMHgxZDQpXSgpfHx0aGlzWydfbW9kZWwnXVtfMHg0MmI3NTAoMHgyZjMpXSgpKXJldHVybjtjb25zdCBfMHgyYmFiNjg9KF8weDI1OGQ4ZCxfMHg1NDJiMjEsXzB4MjVmNTVlKT0+e2NvbnN0IF8weDE4MDhkNT1fMHg0MmI3NTA7aWYodGhpc1tfMHgxODA4ZDUoMHg0YmEpXVsncnVuT25TYXZlJ10mJnRoaXNbXzB4MTgwOGQ1KDB4NGJhKV1bXzB4MTgwOGQ1KDB4NWZhKV0oKSlyZXR1cm47aWYoXzB4NTQyYjIxPV8weDU0MmIyMVtfMHgxODA4ZDUoMHg3MjUpXShfMHgyOTY1NT0+XzB4Mjk2NTVbXzB4MTgwOGQ1KDB4NDUxKV0mJl8weDI5NjU1WydwYXRoJ11bXzB4MTgwOGQ1KDB4MTk1KV0+MHgxfHxwcm9jZXNzW18weDE4MDhkNSgweDQ1OCldW18weDE4MDhkNSgweDIyYildKSxfMHg1NDJiMjFbXzB4MTgwOGQ1KDB4MTk1KV0+MHgxKXt0aGlzW18weDE4MDhkNSgweDVlZCldKHsndHlwZSc6J3RyYWNlVGVzdFNlbGVjdGlvblJlcXVlc3RlZCcsJ3Rlc3RzJzpfWydjaGFpbiddKF8weDU0MmIyMSlbXzB4MTgwOGQ1KDB4NzVjKV0oXzB4MTc4Njk5PT4oeyd0ZXN0RGF0YSc6XzB4MTc4Njk5W18weDE4MDhkNSgweDQ4ZildLCdmYWlsaW5nJzpfMHgxNzg2OTlbXzB4MTgwOGQ1KDB4NDUxKV1bXzB4MTgwOGQ1KDB4NjJjKV0oKSwnZmlsZSc6XzB4MTc4Njk5W18weDE4MDhkNSgweDQ1MSldWydmaWxlUGF0aCddKCksJ3RvZ2dsZWQnOnRoaXNbXzB4MTgwOGQ1KDB4NmE0KV1bXzB4MTgwOGQ1KDB4NzI1KV1bXzB4MTgwOGQ1KDB4NWZmKV1bXzDigIt4MTgwOGQ1KDB4MzdmKV0oXzB4MTc4Njk5W18weDE4MDhkNSgweDQ1MSldWydrZXknXSgpKX0pKVsndmFsdWUnXSgpW18weDE4MDhkNSgweDU1MyldKChfMHg0ODI1OGUsXzB4NTVmZTNhKT0+e2NvbnN0IF8weDFlZGZjZT1fMHgxODA4ZDU7aWYoXzB4NDgyNThlW18weDFlZGZjZSgweDdhYyldJiYhXzB4NTVmZTNhW18weDFlZGZjZSgweDdhYyldKXJldHVybi0weDE7aWYoIV8weDQ4MjU4ZVsndG9nZ2xlZCddJiZfMHg1NWZlM2FbXzB4MWVkZmNlKDB4N2FjKV0pcmV0dXJuIDB4MTtpZihfMHg0ODI1OGVbJ2ZhaWxpbmcnXSYmIV8weDU1ZmUzYVtfMHgxZWRmY2UoMHgzYmMpXSlyZXR1cm4tMHgxO2lmKCFfMHg0ODI1OGVbXzB4MWVkZmNlKDB4M2JjKV0mJl8weDU1ZmUzYVsnZmFpbGluZyddKXJldHVybiAweDE7Y29uc3QgXzB4MTc1MDliPV8weDQ4MjU4ZVtfMHgxZWRmY2UoMHg0MTkpXVtfMHgxZWRmY2UoMHgxOTUpXT9fMHg0ODI1OGVbXzB4MWVkZmNlKDB4NDE5KV1bXzB4NDgyNThlW18weDFlZGZjZSgweDQxOSldWydsZW5ndGgnXS0weDFdOicnLF8weDRiNzI5Mj1fMHg1NWZlM2FbXzB4MWVkZmNlKDB4NDE5KV1bXzB4MWVkZmNlKDB4MTk1KV0/XzB4NTVmZTNhW18weDFlZGZjZSgweDQxOSldW18weDU1ZmUzYVsndGVzdERhdGEnXVtfMHgxZWRmY2UoMHgxOTUpXS0weDFdOicnO3JldHVybiBfMHgxNzUwOWJbXzB4MWVkZmNlKDB4M2FkKV0oXzB4NGI3MjkyKTt9KSwnb3JpZ2luYWxSZXF1ZXN0JzpfW18weDE4MDhkNSgweDFmZildKF8weDI1OGQ4ZFtfMHgxODA4ZDUoMHg3MzgpXSxfMHgxODA4ZDUoMHg0NTQpKX0pO3JldHVybjt9aWYoXzB4NTQyYjIxW18weDE4MDhkNSgweDE5NSldIT09MHgxKXJldHVybjtjb25zdCBfMHgyODg3YTc9XzB4NTQyYjIxWzB4MF07aWYoIXByb2Nlc3NbXzB4MTgwOGQ1KDB4NDU4KV1bJ3F1b2trYSddJiZfMHgyODg3YTdbJ2RhdGEnXVtfMHgxODA4ZDUoMHg0ZWMpXSgpKXtsZXQgXzB4NGE3Y2ExPV8weDI4ODdhN1tfMHgxODA4ZDUoMHg0OGYpXVtfMHgyODg3YTdbXzB4MTgwOGQ1KDB4NDhmKV1bXzB4MTgwOGQ1KDB4MTk1KV0tMHgxXTtfMHg0YTdjYTE9XzB4NGE3Y2ExWydzdWJzdHInXSgweDAsXzB4NGE3Y2ExW18weDE4MDhkNSgweDE2MyldKCdceDIwIycpKSxfMHgyODg3YTdbXzB4MTgwOGQ1KDB4NDhmKV1bXzB4Mjg4N2E3W18weDE4MDhkNSgweDQ4ZildW18weDE4MDhkNSgweDE5NSldLTB4MV09XzB4NGE3Y2ExLHRoaXNbXzB4MTgwOGQ1KDB4NmNiKV0oJ3dhcm5pbmcnLF8weDE4MDhkNSgweDIyMilbXzB4MTgwOGQ1KDB4NDQ5KV0oXzB4NGE3Y2ExLF8weDE4MDhkNSgweDc1NCkpW18weDE4MDhkNSgweDQ0OSldKF8weDI1ZjU1ZSwnLicpKTt9cmV0dXJuITB4MDt9LF8weDQwNDJhYj0oKT0+e2NvbnN0IF8weDUwYTcxNz1fMHg0MmI3NTA7bGV0IF8weDVhZWRkOD10aGlzWydfbW9kZWwnXVsndGVzdHNCeVJlcXVlc3QnXShfMHg0M2M1NjdbXzB4NTBhNzE3KDB4NzM4KV0pLF8weDI1N2Y3OD1fMHg0M2M1NjdbXzB4NTBhNzE3KDB4NzM4KV0mJl8weDQzYzU2N1tfMHg1MGE3MTcoMHg3MzgpXVtfMHg1MGE3MTcoMHgzYTApXSYmeydmaWxlJzpfMHg0M2M1NjdbXzB4NTBhNzE3KDB4NzM4KV1bXzB4NTBhNzE3KDB4MWJjKV0sJ2xpbmUnOl8weDQzYzU2N1sncmVxdWVzdCddW18weDUwYTcxNygweDJhNCldLCdyZXN1bWUnOl8weDQzYzU2N1tfMHg1MGE3MTcoMHg3MzgpXVtfMHg1MGE3MTcoMHg0OWUpXX07aWYoXzB4MjU3Zjc4JiYhXzB4MmJhYjY4KF8weDQzYzU2NyxfMHg1YWVkZDgsJ2RlYnVnZ2VkJykpcmV0dXJuO2NvbnN0IF8weDM3YTA2ZD1fMHg0M2M1NjdbJ3JlcXVlc3QnXSYmXzB4NDNjNTY3W18weDUwYTcxNygweDczOCldW18weDUwYTcxNygweDFmYildJiZ7J2ZpbGUnOl8weDQzYzU2N1tfMHg1MGE3MTcoMHg3MzgpXVtfMHg1MGE3MTcoMHgxYmMpXSwnbGluZSc6XzB4NDNjNTY3W18weDUwYTcxNygweDczOCldW18weDUwYTcxNygweDJhNCldLCd0YXJnZXQnOl8weDQzYzU2N1tfMHg1MGE3MTcoMHg3MzgpXVtfMHg1MGE3MTcoMHgxZmIpXX07aWYoXzB4MzdhMDZkKXtpZighdGhpc1tfMHg1MGE3MTcoMHg0YmEpXVtfMHg1MGE3MTcoMHgyOWEpXSgpKXt0aGlzW18weDUwYTcxNygweDZjYildKF8weDUwYTcxNygweDY2OCksXzB4NTBhNzE3KDB4Mjc4KSk7cmV0dXJuO31pZighXzB4MmJhYjY4KF8weDQzYzU2NyxfMHg1YWVkZDgsJ3Byb2ZpbGVkJykpcmV0dXJuO2lmKCF0aGlzW18weDUwYTcxNygweDFmMyldKCkpe3Byb2Nlc3NbXzB4NTBhNzE3KDB4NDU4KV1bXzB4NTBhNzE3KDB4MjJiKV0mJnRoaXNbXzB4NTBhNzE3KDB4NmNiKV0oXzB4NTBhNzE3KDB4NjY4KSxfMHg1MGE3MTcoMHgyYjcpW18weDUwYTcxNygweDQ0OSldKHRoaXNbXzB4NTBhNzE3KDB4MTRhKV0oKSxfMHg1MGE3MTcoMHg0ZmYpKSx7J3N1Z2dlc3RQcm9FZGl0aW9uJzohMHgwfSk7cmV0dXJuO319Y29uc3QgXzB4NDZjMjJhPV8weDVhZWRkOFsnbGVuZ3RoJ10mJl8weDVhZWRkOFtfMHg1MGE3MTcoMHg3NWMpXShfMHg0NzI4NjM9Pl8weDQ3Mjg2M1tfMHg1MGE3MTcoMHg0OGYpXSl8fHZvaWQgMHgwO2lmKF8weDI1N2Y3OCl7aWYoXzB4NDZjMjJhJiZfMHg0NmMyMmFbMHgwXSl7aWYoIXByb2Nlc3NbXzB4NTBhNzE3KDB4NDU4KV1bXzB4NTBhNzE3KDB4MjJiKV0pe2NvbnN0IF8weDEyMDlhYj1fMHg1YWVkZDhbMHgwXVsnZGF0YSddOyhfMHgxMjA5YWJbXzB4NTBhNzE3KDB4NjM2KV0oKSE9PV8weDI1N2Y3OFsnZmlsZSddfHxfMHgyNTdmNzhbXzB4NTBhNzE3KDB4MmE0KV0hPT1fMHgxMjA5YWJbXzB4NTBhNzE3KDB4NGIzKV0oKSkmJihfMHgyNTdmNzhbXzB4NTBhNzE3KDB4NGRmKV09ITB4MCk7fV8weDI1N2Y3OFtfMHg1MGE3MTcoMHgxOTYpXT1fMHg0NmMyMmFbMHgwXVtfMHg1MGE3MTcoMHg1MTQpXSgpO31lbHNle3RoaXNbXzB4NTBhNzE3KDB4NmNiKV0oJ3dhcm5pbmcnLF8weDUwYTcxNygweDM5YikpO3JldHVybjt9fXRoaXNbJ19wcm9qZWN0J11bJ3J1blRlc3RzJ10oeyd0ZXN0cyc6XzB4NDZjMjJhLCdleHRlcm5hbEZpbGVDaGFuZ2UnOl8weDExMTgzMywnZXh0ZXJuYWxGaWxlQ2hhbmdlUGF0aCc6XzB4NTczYmRiLCdldmFsdWF0ZUV4cHJlc3Npb24nOl8weDQzYzU2N1tfMHg1MGE3MTcoMHg3MzgpXSYmXzB4NDNjNTY3W18weDUwYTcxNygweDczOCldWydldmFsdWF0ZUV4cHJlc3Npb24nXSwnY29kZUNsaXBTaGFyaW5nUnVuJzpfMHg0M2M1NjdbJ3JlcXVlc3QnXSYmXzB4NDNjNTY3W18weDUwYTcxNygweDczOCldWydjb2RlQ2xpcFNoYXJpbmdSdW4nXSwnaW5pdGlhbFRyYWNlUnVuJzpfMHgyNTdmNzgsJ3Byb2ZpbGVSdW4nOl8weDM3YTA2ZCwndXBkYXRlU25hcHNob3RzJzohIShfMHg0M2M1NjdbXzB4NTBhNzE3KDB4NzM4KV0mJl8weDQzYzU2N1tfMHg1MGE3MTcoMHg3MzgpXVtfMHg1MGE3MTcoMHgzNTQpXSl9KTt9OyghXzB4NDNjNTY3WydyZXF1ZXN0J118fCFfMHg0M2M1NjdbXzB4NDJiNzUwKDB4NjIwKV0mJiFfMHg0M2M1NjdbXzB4NDJiNzUwKDB4NzM4KV1bXzB4NDJiNzUwKDB4MWJjKV0mJiFfMHg0M2M1NjdbXzB4NDJiNzUwKDB4NzM4KV1bXzB4NDJiNzUwKDB4MmE0KV0pJiZ0aGlzWydfcHJvamVjdCddW18weDQyYjc1MCgweDY5MyldKFtdKTtsZXQgXzB4NWYzMDY4PXRoaXNbXzB4NDJiNzUwKDB4NGJhKV1bXzB4NDJiNzUwKDB4OWQpXSgpO3ZhciBfMHgxMTE4MzM9XzB4NDNjNTY3W18weDQyYjc1MCgweDczOCldJiZfMHg0M2M1NjdbJ3JlcXVlc3QnXVtfMHg0MmI3NTAoMHgxOGUpXSxfMHg1NzNiZGI9XzB4NDNjNTY3W18weDQyYjc1MCgweDczOCldJiZfMHg0M2M1NjdbXzB4NDJiNzUwKDB4NzM4KV1bJ2V4dGVybmFsRmlsZUNoYW5nZVBhdGgnXTtjb25zdCBfMHg1Yzg3NWQ9XzB4NDNjNTY3W18weDQyYjc1MCgweDczOCldJiZfMHg0M2M1NjdbXzB4NDJiNzUwKDB4NzM4KV1bXzB4NDJiNzUwKDB4MTUzKV07XzB4NWM4NzVkJiZfMHg1ZjMwNjgmJl8weDVmMzA2OFsncXVva2thJ10mJihfMHg1ZjMwNjhbXzB4NDJiNzUwKDB4MjJiKV1bXzB4NDJiNzUwKDB4MTUzKV1bXzB4NDJiNzUwKDB4NWJmKV18fF8weDVjODc1ZFtfMHg0MmI3NTAoMHg3NjQpXSkmJl8weDVjODc1ZFtfMHg0MmI3NTAoMHgzNjMpXT09PV8weDI1MjllN1tfMHg0MmI3NTAoMHg3ODgpXShfMHg1Yzg3NWRbJ25hbWUnXSkmJl8weDVmMzA2OFsncXVva2thJ11bXzB4NDJiNzUwKDB4MTUzKV1bJ2NvbW1hbmQnXT8oXzB4NWM4NzVkW18weDQyYjc1MCgweDM2MyldPT09XzB4NDJiNzUwKDB4NWRlKSYmKF8weDVmMzA2OFtfMHg0MmI3NTAoMHgyMmIpXVtfMHg0MmI3NTAoMHg1YzUpXXx8IV8weDVmMzA2OFtfMHg0MmI3NTAoMHgyMmIpXVtfMHg0MmI3NTAoMHgyOGUpXSYmIV8weDVjODc1ZFtfMHg0MmI3NTAoMHgzNjMpXVtfMHg0MmI3NTAoMHhmYildKF8weDQyYjc1MCgweDVkOSkpKSYmKF8weDVjODc1ZFsnbmFtZSddPV8weDVjODc1ZFtfMHg0MmI3NTAoMHgzNjMpXSsnQGNqcycpLHRoaXNbXzB4NDJiNzUwKDB4NmYyKV0oKSxfMHgyOTM5ZGUoKCk9Pntjb25zdCBfMHgzMzBmNTg9XzB4NDJiNzUwO3RyeXtpZihfMHg1OTM5MjkoXzB4MjUyOWU3W18weDMzMGY1OCgweDE2MildKF8weDVmMzA2OFsncXVva2thJ11bXzB4MzMwZjU4KDB4MTUzKV1bJ2NvbW1hbmQnXSx7J3BhY2thZ2VOYW1lJzpfMHg1Yzg3NWRbXzB4MzMwZjU4KDB4MzYzKV19KSx7J3N0ZGlvJzpfMHgzMzBmNTgoMHgyYjYpLCdjd2QnOl8weDVjODc1ZFtfMHgzMzBmNTgoMHgyOGQpXT9wcm9jZXNzW18weDMzMGY1OCgweDUyYildKCk6XzB4NWM4NzVkW18weDMzMGY1OCgweDc2NCldP18weDVmMzA2OFtfMHgzMzBmNTgoMHgyMmIpXVtfMHgzMzBmNTgoMHg0M2QpXTpfMHg1ZjMwNjhbXzB4MzMwZjU4KDB4MjJiKV1bJ2luc3RhbGxQYWNrYWdlJ11bXzB4MzMwZjU4KDB4MzM1KV19KSxfMHg1Yzg3NWRbXzB4MzMwZjU4KDB4NzY0KV0mJl8weDVjODc1ZFtfMHgzMzBmNTgoMHg3NjQpXVsnZWRpdENvbmZpZyddKXtjb25zdCBfMHgyNzIwYjg9SlNPTltfMHgzMzBmNTgoMHg0OTcpXSh0aGlzW18weDMzMGY1OCgweDRjYyldKF8weDVmMzA2OFtfMHgzMzBmNTgoMHgyMmIpXVtfMHgzMzBmNTgoMHg0YzApXSkpO18weDI3MjBiOFtfMHgzMzBmNTgoMHgzZGMpXT1fW18weDMzMGY1OCgweDVmMCldKF8weDI3MjBiOFtfMHgzMzBmNTgoMHgzZGMpXSk/W18weDI3MjBiOFtfMHgzMzBmNTgoMHgzZGMpXV06XzB4MjcyMGI4W18weDMzMGY1OCgweDNkYyldfHxbXTtjb25zdCBfMHgzZWU2MzQ9XzB4NWM4NzVkW18weDMzMGY1OCgweDc2NCldW18weDMzMGY1OCgweDM2MyldfHxfMHg1Yzg3NWRbXzB4MzMwZjU4KDB4MzYzKV07X1tfMHgzMzBmNTgoMHgyNmEpXShfMHgyNzIwYjhbJ3BsdWdpbnMnXSksXzB4MjcyMGI4WydwbHVnaW5zJ11bXzB4MzMwZjU4KDB4NDJkKV0oXzB4M2VlNjM0KSx0aGlzW18weDMzMGY1OCgweDVlYildKF8weDVmMzA2OFtfMHgzMzBmNTgoMHgyMmIpXVtfMHgzMzBmNTgoMHg0YzApXSxKU09OW18weDMzMGY1OCgweDY0ZSldKF8weDI3MjBiOCkpO310aGlzWydfcHJvamVjdCddW18weDMzMGY1OCgweDY0MyldKCksXzB4NDA0MmFiKCk7fWNhdGNoKF8weDIyMTQ2Zil7dGhpc1tfMHgzMzBmNTgoMHgzNGMpXShfMHgyMjE0NmZbXzB4MzMwZjU4KDB4YWIpXSk7fX0sMHgwKSk6XzB4NDA0MmFiKCk7fVtfMHg0MzA1YzYoMHgxZjMpXSgpe2NvbnN0IF8weDIyZDcyYj1fMHg0MzA1YzY7cmV0dXJuIHRoaXNbXzB4MjJkNzJiKDB4NGJhKV1bXzB4MjJkNzJiKDB4MjlhKV0oKSYmKCFwcm9jZXNzW18weDIyZDcyYigweDQ1OCldWydxdW9ra2EnXXx8dGhpc1tfMHgyMmQ3MmIoMHhjMSldJiZ0aGlzW18weDIyZDcyYigweGMxKV1bXzB4MjJkNzJiKDB4MWFjKV0pO31bXzB4NDMwNWM2KDB4NTAxKV0oKXtjb25zdCBfMHgzOTFiODk9XzB4NDMwNWM2LF8weDMxNzIyMz1fMHgzODBhYWRbXzB4MzkxYjg5KDB4MThjKV0oKSxfMHhiODMwMmM9XzB4MzgwYWFkW18weDM5MWI4OSgweDEwOSldKDB4N2U2LDB4MCwweDFhKTtyZXR1cm4hcHJvY2Vzc1snZW52J11bXzB4MzkxYjg5KDB4MjJiKV18fHRoaXNbXzB4MzkxYjg5KDB4YzEpXSYmdGhpc1tfMHgzOTFiODkoMHhjMSldW18weDM5MWI4OSgweDFhYyldJiZfMHgzMTcyMjM+PV8weGI4MzAyYzt9W18weDQzMDVjNigweDc0MSldKF8weDQ5ZmEzZSl7Y29uc3QgXzB4M2UwYjk5PV8weDQzMDVjNjtwcm9jZXNzW18weDNlMGI5OSgweDQ1OCldWydxdW9ra2EnXSYmXzB4NDlmYTNlWydyZXF1ZXN0J11bJ3BhdGgnXSYmXzB4NDlmYTNlW18weDNlMGI5OSgweDczOCldW18weDNlMGI5OSgweDQ4ZildPT09dGhpc1tfMHgzZTBiOTkoMHg0YmEpXVtfMHgzZTBiOTkoMHgyYTUpXSYmKF8weDQ5ZmEzZVsncmVxdWVzdCddWydwYXRoJ109dGhpc1snX3Byb2plY3QnXVsnX3F1b2trYUZpbGVOYW1lJ10pLHRoaXNbXzB4M2UwYjk5KDB4NWVkKV0oeyd0eXBlJzpfMHgzZTBiOTkoMHg3NDEpLCdpZCc6XzB4NDlmYTNlWydpZCddLCdkYXRhJzp0aGlzW18weDNlMGI5OSgweDRiYSldWydnZXRJbnN0cnVtZW50ZWRKYXZhU2NyaXB0RmlsZUNvbnRlbnRCeVBhdGgnXShfMHg0OWZhM2VbJ3JlcXVlc3QnXVtfMHgzZTBiOTkoMHg0OGYpXSl9KTt9W18weDQzMDVjNigweDRkNildKF8weDllMWFmNCl7Y29uc3QgXzB4MmYwYzRiPV8weDQzMDVjNjtyZXR1cm4gdGhpc1tfMHgyZjBjNGIoMHhmMildKCksdGhpc1tfMHgyZjBjNGIoMHhiNCldWydzdG9wJ10oKSx0aGlzW18weDJmMGM0YigweDRiYSldW18weDJmMGM0YigweDRkNildKF8weDllMWFmNCx0aGlzW18weDJmMGM0YigweDZhNCldW18weDJmMGM0YigweDRkNildKCkpO31bXzB4NDMwNWM2KDB4MWMzKV0oKXtjb25zdCBfMHg0YjE3ZDI9XzB4NDMwNWM2LF8weDExNmQ0NT10aGlzWydfcHJvamVjdCddW18weDRiMTdkMigweDlkKV0oKTtpZihfMHgxMTZkNDUpe2NvbnN0IF8weDVkMzBlMD1fMHgxMTZkNDVbJ3Bvc3Rwcm9jZXNzb3InXTtpZihfMHg1ZDMwZTAmJl8weDVkMzBlMFtfMHg0YjE3ZDIoMHg1NTQpXSYmXzB4NWQzMGUwW18weDRiMTdkMigweDU1NCldW18weDRiMTdkMigweDFjMyldKXJldHVybiBfMHg1ZDMwZTBbJ293bmVyJ11bXzB4NGIxN2QyKDB4MWMzKV0oKTt9fVsndW5jb3ZlcmVkUmVnaW9ucyddKF8weDVkNmE0OSl7Y29uc3QgXzB4MjEyZTU0PV8weDQzMDVjNjtsZXQgXzB4NGFiMmUzPV8weDVkNmE0OVsncmVxdWVzdCddLF8weDM3ZmYwMT17J3R5cGUnOid1bmNvdmVyZWRSZWdpb25zJywnZGF0YSc6e30sJ2lkJzpfMHg1ZDZhNDlbJ2lkJ119LF8weDU0ZTk4MD10aGlzW18weDIxMmU1NCgweDZhNCldW18weDIxMmU1NCgweDNkZCldKF8weDRhYjJlMyk7aWYoIV8weDU0ZTk4MCl7dGhpc1snX2VtaXROb3RpZmljYXRpb24nXShfMHgyMTJlNTQoMHgyZDgpLCdBY3Rpb25ceDIwaXNceDIwbm90XHgyMGF2YWlsYWJsZVx4MjBmb3JceDIwZmlsZXNceDIwb3V0c2lkZVx4MjB3YWxsYWJ5LmpzXHgyMHNjb3BlJyk7cmV0dXJuO31fMHgzN2ZmMDFbJ2RhdGEnXVtfMHgyMTJlNTQoMHgxYmMpXT1fMHg1ZDZhNDlbXzB4MjEyZTU0KDB4NzM4KV1bXzB4MjEyZTU0KDB4MWJjKV0sXzB4MzdmZjAxW18weDIxMmU1NCgweDQ1MSldW18weDIxMmU1NCgweDY3ZildPV8weDU0ZTk4MCx0aGlzW18weDIxMmU1NCgweDVlZCldKF8weDM3ZmYwMSksdGhpc1tfMHgyMTJlNTQoMHg0YmEpXVtfMHgyMTJlNTQoMHgzNGQpXVtfMHgyMTJlNTQoMHgzMzIpXShfMHgyMTJlNTQoMHg0MDgpKTt9W18weDQzMDVjNigweDJmOSldKF8weDU4YTdlMCl7Y29uc3QgXzB4OTQ0MWE3PV8weDQzMDVjNixfMHgyOWRmZTI9XzB4NThhN2UwJiZfMHg1OGE3ZTBbXzB4OTQ0MWE3KDB4NzM4KV0mJl8weDU4YTdlMFtfMHg5NDQxYTcoMHg3MzgpXVtfMHg5NDQxYTcoMHg3MjUpXSYmXzB4NThhN2UwW18weDk0NDFhNygweDczOCldW18weDk0NDFhNygweDcyNSldW18weDk0NDFhNygweDY3MSldLF8weDJjOTdjOD1fMHg1OGE3ZTAmJl8weDU4YTdlMFtfMHg5NDQxYTcoMHg3MzgpXSYmXzB4NThhN2UwWydyZXF1ZXN0J11bXzB4OTQ0MWE3KDB4NzI1KV0mJl8weDU4YTdlMFsncmVxdWVzdCddW18weDk0NDFhNygweDcyNSldW18weDk0NDFhNygweDI2MSldLF8weDUxNGZkMT1fMHg1OGE3ZTAmJl8weDU4YTdlMFtfMHg5NDQxYTcoMHg3MzgpXSYmXzB4NThhN2UwW18weDk0NDFhNygweDczOCldW18weDk0NDFhNygweDcyNSldJiZfMHg1OGE3ZTBbXzB4OTQ0MWE3KDB4NzM4KV1bXzB4OTQ0MWE3KDB4NzI1KV1bJ2ZpbGUnXSYmXzB4NThhN2UwWydyZXF1ZXN0J11bXzB4OTQ0MWE3KDB4NzI1KV1bJ2xpbmUnXTtfMHg1MTRmZDE/dGhpc1snX3Byb2plY3QnXVsnX3RyYWNrZXInXVtfMHg5NDQxYTcoMHgzMzIpXSgnanVtcFRvTGluZVRlc3QnKTp0aGlzW18weDk0NDFhNygweDRiYSldW18weDk0NDFhNygweDM0ZCldWydmZWF0dXJlVXNlZCddKCdzZWFyY2hUZXN0cycpO2NvbnN0IF8weDQ2NzQyND1fMHgzOGU3NWM9Pntjb25zdCBfMHg1ZTdhZDU9XzB4OTQ0MWE3LF8weDVhNTY5ND1fMHgzOGU3NWNbXzB4NWU3YWQ1KDB4NDk0KV0oKSxfMHhjNzYzZGI9XzB4MzhlNzVjW18weDVlN2FkNSgweDZkOSldKCk7cmV0dXJueydmaWxlJzpfMHgzOGU3NWNbXzB4NWU3YWQ1KDB4NjM2KV0oKSwnbG9jYXRpb24nOl8weGM3NjNkYj9bXzB4Yzc2M2RiWydzdGFydExpbmUnXSgpLF8weGM3NjNkYltfMHg1ZTdhZDUoMHg1NjUpXSgpXTp2b2lkIDB4MCwnc3VpdGUnOl8weDVhNTY5NFtfMHg1ZTdhZDUoMHg1MTQpXSgweDAsXzB4NWE1Njk0WydsZW5ndGgnXS0weDEpW18weDVlN2FkNSgweDQyZSldKF8weDVlN2FkNSgweDVjMCkpLCduYW1lJzpfMHg1YTU2OTRbXzB4NWE1Njk0WydsZW5ndGgnXS0weDFdLCdmYWlsaW5nJzpfMHgzOGU3NWNbXzB4NWU3YWQ1KDB4NjJjKV0oKSwnc3RhdHVzJzpfMHgzOGU3NWNbXzB4NWU3YWQ1KDB4MTFhKV0oKX07fSxfMHgyMDQ0MmU9dGhpc1tfMHg5NDQxYTcoMHg2YTQpXVsnZmlsdGVyJ11bXzB4OTQ0MWE3KDB4NWZmKV07bGV0IF8weGJlZDcwOT1fMHg1MTRmZDE/dGhpc1tfMHg5NDQxYTcoMHg2YTQpXVtfMHg5NDQxYTcoMHg3ODIpXSh7J2ZpbGUnOl8weDU4YTdlMFtfMHg5NDQxYTcoMHg3MzgpXVtfMHg5NDQxYTcoMHg3MjUpXVtfMHg5NDQxYTcoMHgxYmMpXSwnbGluZSc6XzB4NThhN2UwWydyZXF1ZXN0J11bXzB4OTQ0MWE3KDB4NzI1KV1bXzB4OTQ0MWE3KDB4MmE0KV19KVsnZmlsdGVyJ10oXzB4MTYxYzc4PT4hXzB4MjA0NDJlW18weDk0NDFhNygweDE5OSldfHxfMHgyMDQ0MmVbXzB4OTQ0MWE3KDB4MzdmKV0oXzB4MTYxYzc4W18weDk0NDFhNygweDQ1MSldW18weDk0NDFhNygweDQ2MildKCkpKVtfMHg5NDQxYTcoMHg3NWMpXShfMHg1MTRjNWY9Pl8weDQ2NzQyNChfMHg1MTRjNWZbXzB4OTQ0MWE3KDB4NDUxKV0pKTp0aGlzW18weDk0NDFhNygweDZhNCldW18weDk0NDFhNygweDYwMyldKF8weDQ2NzQyNCk7Y29uc3QgXzB4MmQ1NjhlPVtdLF8weDI4NzYxMT1bXSxfMHgzMjQ2MGQ9W10sXzB4OWZjY2JkPVtdO2Zvcihjb25zdCBfMHg0MWVmODkgb2YgXzB4YmVkNzA5KV8weDQxZWY4OVtfMHg5NDQxYTcoMHgzYmMpXT9fMHgyZDU2OGVbJ3B1c2gnXShfMHg0MWVmODkpOl8weDQxZWY4OVtfMHg5NDQxYTcoMHgxMWEpXT09PSd0b2RvJz9fMHgyODc2MTFbXzB4OTQ0MWE3KDB4NDJkKV0oXzB4NDFlZjg5KTpfMHg0MWVmODlbXzB4OTQ0MWE3KDB4MTFhKV09PT1fMHg5NDQxYTcoMHgyNjEpP18weDMyNDYwZFtfMHg5NDQxYTcoMHg0MmQpXShfMHg0MWVmODkpOl8weDlmY2NiZFsncHVzaCddKF8weDQxZWY4OSk7IV8weDJjOTdjOCYmIV8weDI5ZGZlMiYmKF8weGJlZDcwOT1fMHgyZDU2OGVbXzB4OTQ0MWE3KDB4NDQ5KV0oXzB4MzI0NjBkKVsnY29uY2F0J10oXzB4Mjg3NjExKVtfMHg5NDQxYTcoMHg0NDkpXShfMHg5ZmNjYmQpKSxfMHgyYzk3YzgmJihfMHhiZWQ3MDk9XzB4MzI0NjBkKSxfMHgyOWRmZTImJihfMHhiZWQ3MDk9XzB4Mjg3NjExKSx0aGlzW18weDk0NDFhNygweDVlZCldKHsndHlwZSc6XzB4OTQ0MWE3KDB4MmY5KSwnZGF0YSc6XzB4YmVkNzA5LCdpZCc6XzB4NThhN2UwWydpZCddfSk7fVtfMHg0MzA1YzYoMHg3MGYpXShfMHgxNTdlMzMpe2NvbnN0IF8weDQyNGU1Yz1fMHg0MzA1YzY7bGV0IF8weGUwNTgxYj1fMHgxNTdlMzNbXzB4NDI0ZTVjKDB4NzM4KV0sXzB4NDAzZjM5PXsndHlwZSc6XzB4NDI0ZTVjKDB4NzBmKSwnZGF0YSc6e30sJ2lkJzpfMHgxNTdlMzNbJ2lkJ119LF8weDIzMWZjMT10aGlzWydfbW9kZWwnXVtfMHg0MjRlNWMoMHgzZWUpXShfMHhlMDU4MWIpO2lmKCFfMHgyMzFmYzEpe3RoaXNbXzB4NDI0ZTVjKDB4NmNiKV0oXzB4NDI0ZTVjKDB4MmQ4KSxfMHg0MjRlNWMoMHg2MzMpKTtyZXR1cm47fV8weDQwM2YzOVsnZGF0YSddWydyZXBvcnQnXT1fMHgyMzFmYzEsXzB4NDAzZjM5W18weDQyNGU1YygweDQ1MSldWydmaWxlJ109XzB4ZTA1ODFiW18weDQyNGU1YygweDFiYyldLF8weDQwM2YzOVtfMHg0MjRlNWMoMHg0NTEpXVtfMHg0MjRlNWMoMHgyYTQpXT1fMHhlMDU4MWJbJ2xpbmUnXSx0aGlzW18weDQyNGU1YygweDVlZCldKF8weDQwM2YzOSksdGhpc1tfMHg0MjRlNWMoMHg0YmEpXVtfMHg0MjRlNWMoMHgzNGQpXVtfMHg0MjRlNWMoMHgzMzIpXSgnbGluZVJlcG9ydCcpO31bXzB4NDMwNWM2KDB4NDY4KV0oXzB4MmEzNTdiKXtjb25zdCBfMHg0MjY1YTU9XzB4NDMwNWM2O2xldCBfMHhkM2IzZjY9XzB4MmEzNTdiW18weDQyNjVhNSgweDczOCldLF8weDViOGJmZj17J3R5cGUnOidzbmFwc2hvdCcsJ2RhdGEnOnt9LCdpZCc6XzB4MmEzNTdiWydpZCddfTtjb25zdCBfMHgzZWI0NDc9dGhpc1snX21vZGVsJ11bXzB4NDI2NWE1KDB4MzEwKV0oXzB4ZDNiM2Y2KTtfMHgzZWI0NDcmJihfMHg1YjhiZmZbXzB4NDI2NWE1KDB4NDUxKV1bXzB4NDI2NWE1KDB4MWJjKV09XzB4M2ViNDQ3WydmaWxlJ10sXzB4NWI4YmZmWydkYXRhJ11bXzB4NDI2NWE1KDB4NjNjKV09XzB4M2ViNDQ3W18weDQyNjVhNSgweDYzYyldLF8weDViOGJmZltfMHg0MjY1YTUoMHg0NTEpXVtfMHg0MjY1YTUoMHg2YjkpXT1fMHgzZWI0NDdbXzB4NDI2NWE1KDB4NmI5KV0sXzB4NWI4YmZmWydkYXRhJ11bXzB4NDI2NWE1KDB4MzYzKV09XzB4M2ViNDQ3W18weDQyNjVhNSgweDM2MyldKSx0aGlzW18weDQyNjVhNSgweDVlZCldKF8weDViOGJmZiksdGhpc1snX3Byb2plY3QnXVtfMHg0MjY1YTUoMHgzNGQpXVtfMHg0MjY1YTUoMHgzMzIpXShfMHg0MjY1YTUoMHg0NjgpKTt9W18weDQzMDVjNigweDFlOSldKF8weDUwZjRmOCl7Y29uc3QgXzB4MzUzMTE4PV8weDQzMDVjNjtsZXQgXzB4NGU4MzU5PV8weDUwZjRmOFtfMHgzNTMxMTgoMHg3MzgpXSxfMHgzMOKAizFhZWY9eyd0eXBlJzpfMHgzNTMxMTgoMHgxZTkpLCdkYXRhJzp7fSwnaWQnOl8weDUwZjRmOFsnaWQnXX0sXzB4Mjg0MzA3PXRoaXNbXzB4MzUzMTE4KDB4NmE0KV1bJ2xvY2F0aW9uQnlSZXF1ZXN0J10oXzB4NGU4MzU5KTtfMHgyODQzMDc/XzB4Mjg0MzA3W18weDM1MzExOCgweDFiYyldPyhfMHgzMDFhZWZbXzB4MzUzMTE4KDB4NDUxKV1bXzB4MzUzMTE4KDB4MWJjKV09XzB4Mjg0MzA3W18weDM1MzExOCgweDFiYyldLF8weDMwMWFlZltfMHgzNTMxMTgoMHg0NTEpXVtfMHgzNTMxMTgoMHg2M2MpXT1fMHgyODQzMDdbJ2xvYyddLHRoaXNbJ19lbWl0J10oXzB4MzAxYWVmKSk6dGhpc1tfMHgzNTMxMTgoMHg2Y2IpXShfMHgzNTMxMTgoMHgyZDgpLF8weDM1MzExOCgweDI1OSkpOnRoaXNbJ19lbWl0Tm90aWZpY2F0aW9uJ10oXzB4MzUzMTE4KDB4MmQ4KSxfMHgzNTMxMTgoMHg1MzMpKSx0aGlzW18weDM1MzExOCgweDRiYSldWydfdHJhY2tlciddWydmZWF0dXJlVXNlZCddKF8weDM1MzExOCgweDFlOSkpO31bJ2Vycm9yJ10oXzB4MTdlMjM0KXtjb25zdCBfMHg3Yzc0ODI9XzB4NDMwNWM2O2xldCBfMHgzZjk2ZTI9XzB4MTdlMjM0WydyZXF1ZXN0J10sXzB4NDM2ZDY5PXsndHlwZSc6XzB4N2M3NDgyKDB4NDg1KSwnZGF0YSc6e30sJ2lkJzpfMHgxN2UyMzRbJ2lkJ119LF8weDU4ZmRhYj10aGlzW18weDdjNzQ4MigweDZhNCldW18weDdjNzQ4MigweDM4ZildKF8weDNmOTZlMik7XzB4NThmZGFiPyhfMHg0MzZkNjlbXzB4N2M3NDgyKDB4NDUxKV1bXzB4N2M3NDgyKDB4NDg1KV09XzB4NThmZGFiLHRoaXNbXzB4N2M3NDgyKDB4NGJhKV1bJ190cmFja2VyJ11bXzB4N2M3NDgyKDB4MzMyKV0oXzB4N2M3NDgyKDB4ZTUpWydjb25jYXQnXShfMHgzZjk2ZTImJl8weDNmOTZlMlsndHlwZSddfHxfMHg3Yzc0ODIoMHgyZjApKSkpOl8weDNmOTZlMlsndHlwZSddPT09XzB4N2M3NDgyKDB4NzkxKSYmdGhpc1snX2VtaXROb3RpZmljYXRpb24nXShfMHg3Yzc0ODIoMHgyZDgpLF8weDdjNzQ4MigweDUxNykpLHRoaXNbXzB4N2M3NDgyKDB4NWVkKV0oXzB4NDM2ZDY5KTt9W18weDQzMDVjNigweDM2ZildKF8weDQ3YjE1ZCl7Y29uc3QgXzB4MzBlYTgxPV8weDQzMDVjNjt0aGlzWydfcHJvamVjdCddW18weDMwZWE4MSgweDM2ZildKF8weDQ3YjE1ZFtfMHgzMGVhODEoMHg3MzgpXSk7fVtfMHg0MzA1YzYoMHgxODMpXShfMHg1ZTE0Mjcpe2NvbnN0IF8weDE1OGI0Yz1fMHg0MzA1YzY7dGhpc1tfMHgxNThiNGMoMHg0YmEpXVtfMHgxNThiNGMoMHgxODMpXShfMHg1ZTE0MjdbXzB4MTU4YjRjKDB4NzM4KV0pLHRoaXNbXzB4MTU4YjRjKDB4NGJhKV1bXzB4MTU4YjRjKDB4MzRkKV1bXzB4MTU4YjRjKDB4MzMyKV0oXzB4MTU4YjRjKDB4NGM4KSk7fVsnbXV0ZU5vdGlmaWNhdGlvbiddKF8weDIzZmQ5Myl7Y29uc3QgXzB4MjcxNTRmPV8weDQzMDVjNjt0aGlzW18weDI3MTU0ZigweDRiYSldW18weDI3MTU0ZigweDEyYyldKF8weDIzZmQ5M1tfMHgyNzE1NGYoMHg3MzgpXSk7fVtfMHg0MzA1YzYoMHgzMWYpXSgpe2NvbnN0IF8weDE4ZDk5Nj1fMHg0MzA1YzY7dGhpc1tfMHgxOGQ5OTYoMHg2OTUpXSYmdGhpc1tfMHgxOGQ5OTYoMHg2OTUpXSgpLHRoaXNbXzB4MThkOTk2KDB4NGJhKV1bXzB4MThkOTk2KDB4MzRkKV1bJ2ZlYXR1cmVVc2VkJ10oXzB4MThkOTk2KDB4MzFmKSk7fVtfMHg0MzA1YzYoMHhjYildKF8weDM1YmUxOSl7Y29uc3QgXzB4NTM3ZmYwPV8weDQzMDVjNixfMHgzMjZkMjA9dGhpc1tfMHg1MzdmZjAoMHg0YmEpXVtfMHg1MzdmZjAoMHg2ZTEpXTtfMHgzNWJlMTlbXzB4NTM3ZmYwKDB4NzM4KV1bXzB4NTM3ZmYwKDB4MzI2KV09PT1fMHg1MzdmZjAoMHgyOTYpP3RoaXNbJ19wcm9qZWN0J11bXzB4NTM3ZmYwKDB4NmUxKV09ITB4MDpfMHgzNWJlMTlbJ3JlcXVlc3QnXVsnbW9kZSddPT09J3RvZ2dsZSc/dGhpc1tfMHg1MzdmZjAoMHg0YmEpXVtfMHg1MzdmZjAoMHg2ZTEpXT0hdGhpc1tfMHg1MzdmZjAoMHg0YmEpXVtfMHg1MzdmZjAoMHg2ZTEpXTp0aGlzW18weDUzN2ZmMCgweDRiYSldW18weDUzN2ZmMCgweDZlMSldPSEweDEsXzB4MzI2ZDIwIT09dGhpc1snX3Byb2plY3QnXVtfMHg1MzdmZjAoMHg2ZTEpXSYmIXRoaXNbXzB4NTM3ZmYwKDB4NGJhKV1bXzB4NTM3ZmYwKDB4NmUxKV0mJnRoaXNbXzB4NTM3ZmYwKDB4NGJhKV1bXzB4NTM3ZmYwKDB4MjQyKV0oKSwhXzB4MzI2ZDIwJiZ0aGlzW18weDUzN2ZmMCgweDRiYSldWydydW5PblNhdmUnXSYmdGhpc1tfMHg1MzdmZjAoMHg2YTQpXVtfMHg1MzdmZjAoMHgzYjEpXSgpLHRoaXNbJ19wcm9qZWN0J11bXzB4NTM3ZmYwKDB4MzRkKV1bJ2ZlYXR1cmVVc2VkJ10oJ3J1bk1vZGVUb2dnbGUnKTt9WydwYXVzZSddKCl7Y29uc3QgXzB4MmUyN2Y2PV8weDQzMDVjNjtfMHg0YmQ2ZWUoXzB4MmUyN2Y2KDB4NDdhKSksdGhpc1tfMHgyZTI3ZjYoMHg2YTQpXVsncGF1c2UnXSgpJiZ0aGlzW18weDJlMjdmNigweDQ3YildJiZ0aGlzWydyZXF1ZXN0VGVzdFJ1blN1bW1hcnknXSgpO31bXzB4NDMwNWM2KDB4NDllKV0oKXtjb25zdCBfMHg0ODZjOTE9XzB4NDMwNWM2O18weDRiZDZlZShfMHg0ODZjOTEoMHgxYTApKSx0aGlzW18weDQ4NmM5MSgweDZhNCldW18weDQ4NmM5MSgweDQ5ZSldKCkmJnRoaXNbXzB4NDg2YzkxKDB4NDdiKV0mJnRoaXNbXzB4NDg2YzkxKDB4MjM4KV0oKTt9W18weDQzMDVjNigweDFkOSldKF8weDE0YTllMCl7Y29uc3QgXzB4MzU4NjVlPV8weDQzMDVjNjt0aGlzWydfbW9kZWwnXVsndG9nZ2xlVGVzdEZpbHRlciddKF8weDE0YTllMFsncmVxdWVzdCddKSx0aGlzW18weDM1ODY1ZSgweDRiYSldWydfdHJhY2tlciddWydmZWF0dXJlVXNlZCddKF8weDM1ODY1ZSgweDFkOSkpO31bXzB4NDMwNWM2KDB4NjkzKV0oXzB4NDE4NGVlKXtjb25zdCBfMHg0ODVhNzI9XzB4NDMwNWM2O3RoaXNbXzB4NDg1YTcyKDB4NmE0KV1bXzB4NDg1YTcyKDB4MWQ0KV0oKXx8KHRoaXNbJ19wcm9qZWN0J11bXzB4NDg1YTcyKDB4NjkzKV0oXzB4NDE4NGVlW18weDQ4NWE3MigweDczMCldKSx0aGlzW18weDQ4NWE3MigweDFhOCldKHsncmVxdWVzdCc6e30sJ3ByZXNlcnZlVGVzdExvY2F0aW9ucyc6ITB4MH0pLHRoaXNbXzB4NDg1YTcyKDB4NGJhKV1bXzB4NDg1YTcyKDB4MzRkKV1bXzB4NDg1YTcyKDB4MzMyKV0oXzB4NDg1YTcyKDB4NjkzKSkpO31bXzB4NDMwNWM2KDB4NzRjKV0oXzB4ZDgxZjY0KXtjb25zdCBfMHhmMzA5YTE9XzB4NDMwNWM2O3RoaXNbJ19tb2RlbCddWydydW5FcnJvciddKCl8fCh0aGlzW18weGYzMDlhMSgweDRiYSldWydhZGRUZXN0TG9jYXRpb25zJ10oXzB4ZDgxZjY0WydwYXRocyddKSx0aGlzW18weGYzMDlhMSgweDFhOCldKHsncmVxdWVzdCc6e30sJ3ByZXNlcnZlVGVzdExvY2F0aW9ucyc6ITB4MH0pLHRoaXNbXzB4ZjMwOWExKDB4NGJhKV1bXzB4ZjMwOWExKDB4MzRkKV1bXzB4ZjMwOWExKDB4MzMyKV0oXzB4ZjMwOWExKDB4NzRjKSkpO31bXzB4NDMwNWM2KDB4YTcpXShfMHg0OGIyY2Ipe2NvbnN0IF8weDFjYjBlZD1fMHg0MzA1YzY7dGhpc1tfMHgxY2IwZWQoMHg2YTQpXVtfMHgxY2IwZWQoMHgxZDQpXSgpfHwodGhpc1snX3Byb2plY3QnXVtfMHgxY2IwZWQoMHhhNyldKF8weDQ4YjJjYltfMHgxY2IwZWQoMHg3MzApXSksdGhpc1tfMHgxY2IwZWQoMHgxYTgpXSh7J3JlcXVlc3QnOnt9LCdwcmVzZXJ2ZVRlc3RMb2NhdGlvbnMnOiEweDB9KSx0aGlzW18weDFjYjBlZCgweDRiYSldWydfdHJhY2tlciddWydmZWF0dXJlVXNlZCddKF8weDFjYjBlZCgweGE3KSkpO31bJ2dldEZpbGVNZXNzYWdlcyddKF8weDNmNTE3ZSl7Y29uc3QgXzB4YmU4NjVlPV8weDQzMDVjNjt0aGlzW18weGJlODY1ZSgweDZhNCldW18weGJlODY1ZSgweDEyOSldKF8weDNmNTE3ZVtfMHhiZTg2NWUoMHg3MzgpXSk7fVtfMHg0MzA1YzYoMHg2ZjQpXShfMHhhY2Q3ZWMpe2NvbnN0IF8weDRlYjgzOT1fMHg0MzA1YzYsXzB4MjUzZDQyPV8weDFjMDc2ZChfMHg0ZWI4MzkoMHg0ZDUpKSxfMHg0ZGI2ODU9XzB4MWMwNzZkKCdvcycpLF8weDE2Y2M0Zj1fMHhhY2Q3ZWNbXzB4NGViODM5KDB4NDUxKV09XzB4YWNkN2VjW18weDRlYjgzOSgweDQ1MSldfHx7fTtpZihfMHgxNmNjNGZbXzB4NGViODM5KDB4NWY3KV09XzB4MTZjYzRmW18weDRlYjgzOSgweDFlYyldfHx0aGlzW18weDRlYjgzOSgweGQzKV0sXzB4MTZjYzRmW18weDRlYjgzOSgweGY3KV09JydbXzB4NGViODM5KDB4NDQ5KV0oXzB4NGRiNjg1W18weDRlYjgzOSgweDcwZCldKCksJ1x4MjAnKVtfMHg0ZWI4MzkoMHg0NDkpXShfMHg0ZGI2ODVbJ3JlbGVhc2UnXSgpKSxfMHgxNmNjNGZbXzB4NGViODM5KDB4YjUpXT1wcm9jZXNzW18weDRlYjgzOSgweDU1YildLHByb2Nlc3NbXzB4NGViODM5KDB4NDU4KV1bJ1dBTExBQllfRUxFQ1RST05fUlVOX0FTX05PREUnXSYmKF8weDE2Y2M0Zlsnbm9kZVZlcnNpb24nXSs9XzB4NGViODM5KDB4MTg4KSksXzB4MTZjYzRmW18weDRlYjgzOSgweDFlNCldPXRoaXNbXzB4NGViODM5KDB4NGJhKV1bXzB4NGViODM5KDB4MWU0KV0oKSxfMHgzNWExY2UmJl8weDM1YTFjZVtfMHg0ZWI4MzkoMHg2MTMpXSYmXzB4MzVhMWNlWyd2ZXJpZmljYXRpb25SZXN1bHQnXVsnaWQnXSYmXzB4MzVhMWNlWyd2ZXJpZmljYXRpb25SZXN1bHQnXVsnZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQnXSl0cnl7XzB4MTZjYzRmWydjaGVja3N1bSddPUJ1ZmZlcltfMHg0ZWI4MzkoMHg3MDEpXShfMHgzNWExY2VbXzB4NGViODM5KDB4NjEzKV1bJ2lkJ10rJywnK25ldyBfMHgzODBhYWQoXzB4MzVhMWNlWyd2ZXJpZmljYXRpb25SZXN1bHQnXVsnZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQnXStfMHg0ZWI4MzkoMHg3NTMpKVtfMHg0ZWI4MzkoMHgyOWQpXSgpKycsJysoXzB4MzVhMWNlW18weDRlYjgzOSgweDYxMyldW18weDRlYjgzOSgweDQ1NCldPycxJzonMCcpKVtfMHg0ZWI4MzkoMHgzZDYpXShfMHg0ZWI4MzkoMHhhNSkpO31jYXRjaChfMHgzYzVlOGMpe31fMHgxNmNjNGZbXzB4NGViODM5KDB4NTlkKV09X1tfMHg0ZWI4MzkoMHgxZmYpXSh0aGlzW18weDRlYjgzOSgweDRiYSldW18weDRlYjgzOSgweDlkKV0oKSxfMHg0ZWI4MzkoMHg3MGUpLF8weDRlYjgzOSgweDViOSksXzB4NGViODM5KDB4MzU4KSxfMHg0ZWI4MzkoMHg2YzUpKTtjb25zdCBfMHg3ZmE1NT1fMHg1MTMzODQ9Pl8weDUxMzM4NFtfMHg0ZWI4MzkoMHg3NWMpXShfMHhhOTg2Nzg9Pntjb25zdCBfMHg4MWI2MDA9XzB4NGViODM5LF8weDVmODAwMz1PYmplY3RbJ2Fzc2lnbiddKHt9LF8weGE5ODY3OCk7cmV0dXJuIF8weDVmODAwM1tfMHg4MWI2MDAoMHgzZGUpXSYmKGRlbGV0ZSBfMHg1ZjgwMDNbXzB4ODFiNjAwKDB4M2RlKV0sZGVsZXRlIF8weDVmODAwM1tfMHg4MWI2MDAoMHgzMTcpXSxkZWxldGUgXzB4NWY4MDAzW18weDgxYjYwMCgweDZiMSldLGRlbGV0ZSBfMHg1ZjgwMDNbXzB4ODFiNjAwKDB4NWIyKV0sZGVsZXRlIF8weDVmODAwM1snYmFzZSddLGRlbGV0ZSBfMHg1ZjgwMDNbJ25lc3RlZFBhdHRlcm5zJ10pLF8weDVmODAwMzt9KTtfMHgxNmNjNGZbXzB4NGViODM5KDB4NTlkKV1bXzB4NGViODM5KDB4MmY5KV09XzB4N2ZhNTUoXzB4MTZjYzRmW18weDRlYjgzOSgweDU5ZCldW18weDRlYjgzOSgweDJmOSldfHxbXSksXzB4MTZjYzRmW18weDRlYjgzOSgweDU5ZCldW18weDRlYjgzOSgweDYwZCldPV8weDdmYTU1KF8weDE2Y2M0ZltfMHg0ZWI4MzkoMHg1OWQpXVsnZmlsZXMnXXx8W10pO3RyeXtjb25zdCBfMHg1OGI0Mjg9SlNPTltfMHg0ZWI4MzkoMHg0OTcpXSh0aGlzW18weDRlYjgzOSgweDRjYyldKHRoaXNbXzB4NGViODM5KDB4NGJhKV1bXzB4NGViODM5KDB4MTBmKV0pKTtfMHgxNmNjNGZbXzB4NGViODM5KDB4NGExKV09eydkZXBlbmRlbmNpZXMnOl8weDU4YjQyOFtfMHg0ZWI4MzkoMHgzZjIpXSwnZGV2RGVwZW5kZW5jaWVzJzpfMHg1OGI0MjhbXzB4NGViODM5KDB4ZTQpXX07fWNhdGNoKF8weDE0NDliYyl7fV8weDE2Y2M0ZlsnZnMnXT10aGlzW18weDRlYjgzOSgweGI0KV1bXzB4NGViODM5KDB4MmIzKV0oKSxfMHgxNmNjNGZbXzB4NGViODM5KDB4NGZkKV09bG9nZ2VyWydnZXREZWJ1Z0xvZyddKCk7Y29uc3QgXzB4NDE2ZGNiPV8weDM2MWI4Nz0+XzB4MjUzZDQyW18weDRlYjgzOSgweDU5MCldP18weDI1M2Q0MltfMHg0ZWI4MzkoMHg1OTApXSh7J2RlcHRoJzoweDE5LCdtYXhBcnJheUxlbmd0aCc6MHg2MWE4LCdicmVha0xlbmd0aCc6MHhjOH0sXzB4MzYxYjg3KTpfMHgyNTNkNDJbXzB4NGViODM5KDB4MTYyKV0oXzB4MzYxYjg3KTt0aGlzW18weDRlYjgzOSgweDRiYSldW18weDRlYjgzOSgweDM2ZildKHsnZGF0YSc6XzB4NGViODM5KDB4NWI3KeKAi1tfMHg0ZWI4MzkoMHg0NDkpXShfMHg0MTZkY2IoXzB4MTZjYzRmKVtfMHg0ZWI4MzkoMHhhOSldKF8weDRkYjY4NVtfMHg0ZWI4MzkoMHg0MmEpXSgpKVtfMHg0ZWI4MzkoMHg0MmUpXShfMHg0ZWI4MzkoMHg1Y2IpKVtfMHg0ZWI4MzkoMHhhOSldKHByb2Nlc3NbXzB4NGViODM5KDB4NTJiKV0oKSlbXzB4NGViODM5KDB4NDJlKV0oJzxyb290RGlyPicpW18weDRlYjgzOSgweGE5KV0odGhpc1tfMHg0ZWI4MzkoMHg0YmEpXVtfMHg0ZWI4MzkoMHg2OGYpXSlbXzB4NGViODM5KDB4NDJlKV0oJzx3YWxsYWJ5Q2FjaGVEaXI+JyksJ1x4MGFgYGAnKX0pLGNvbnNvbGVbXzB4NGViODM5KDB4ZDIpXSgnRGlhZ25vc3RpY3NceDIwcmVwb3J0XHgyMGhhc1x4MjBiZWVuXHgyMHN1Y2Nlc3NmdWxseVx4MjBjb3BpZWRceDIwdG9ceDIwY2xpcGJvYXJkLicpO31bXzB4NDMwNWM2KDB4MzMyKV0oXzB4NWJjMzM3KXtjb25zdCBfMHg1YWQwNmI9XzB4NDMwNWM2O3RoaXNbXzB4NWFkMDZiKDB4NGJhKV1bJ190cmFja2VyJ11bXzB4NWFkMDZiKDB4MzMyKV0oXzB4NWJjMzM3W18weDVhZDA2YigweDM2MyldKTt9W18weDQzMDVjNigweDNmZSldKF8weDUzNTc4Nil7Y29uc3QgXzB4NGQ0YWM3PV8weDQzMDVjNjt0aGlzW18weDRkNGFjNygweDZhNCldWyd0cmFjZUNvbnRleHQnXShfMHg1MzU3ODZbJ3JlcXVlc3QnXSk7fVtfMHg0MzA1YzYoMHg2NDkpXShfMHhlYzBiYTkpe2NvbnN0IF8weGQxN2YzYz1fMHg0MzA1YzY7aWYodGhpc1snX3Byb2plY3QnXVsncnVuT25TYXZlJ10mJnRoaXNbXzB4ZDE3ZjNjKDB4NGJhKV1bXzB4ZDE3ZjNjKDB4NWZhKV0oKSlyZXR1cm47Y29uc3QgXzB4MTk1OWE0PV8weGVjMGJhOVtfMHhkMTdmM2MoMHg3MzgpXSxfMHg1MzFjMTU9eyd0eXBlJzpfMHhkMTdmM2MoMHg2NDkpLCdkYXRhJzp7fSwnaWQnOl8weGVjMGJhOVsnaWQnXX07XzB4NTMxYzE1W18weGQxN2YzYygweDQ1MSldPXRoaXNbXzB4ZDE3ZjNjKDB4NmE0KV1bXzB4ZDE3ZjNjKDB4MmRjKV0oXzB4MTk1OWE0KSx0aGlzWydfZW1pdCddKF8weDUzMWMxNSk7fVtfMHg0MzA1YzYoMHgzNTIpXShfMHgxODM5OWUpe2NvbnN0IF8weDI3MTJkYT1fMHg0MzA1YzY7aWYoIXRoaXNbJ19jb2RlU3RvcnlTdXBwb3J0ZWQnXSgpKXt0aGlzW18weDI3MTJkYSgweDZjYildKCd3YXJuaW5nJyxfMHgyNzEyZGEoMHgyYjcpW18weDI3MTJkYSgweDQ0OSldKHRoaXNbJ19wcm9FbW9qaSddKCksJ1x4MjBlZGl0aW9uXHgyMG9mXHgyMFF1b2trYS5qc1x4MjBzdXBwb3J0c1x4MjBDb2RlXHgyMFN0b3JpZXNceDIwZmVhdHVyZS4nKSx7J3N1Z2dlc3RQcm9FZGl0aW9uJzohMHgwfSk7cmV0dXJuO310aGlzW18weDI3MTJkYSgweDRiYSldW18weDI3MTJkYSgweDM0ZCldW18weDI3MTJkYSgweDMzMildKCd0ZXN0LnN0b3J5Jyk7Y29uc3QgXzB4M2NlOTYxPV8weDE4Mzk5ZVtfMHgyNzEyZGEoMHg3MzgpXSxfMHg1YmZjYzE9eyd0eXBlJzpfMHgyNzEyZGEoMHgzNTIpLCdkYXRhJzp7fSwnaWQnOl8weDE4Mzk5ZVsnaWQnXX07XzB4NWJmY2MxW18weDI3MTJkYSgweDQ1MSldPXRoaXNbJ19tb2RlbCddW18weDI3MTJkYSgweDUxZildKF8weDNjZTk2MSksdGhpc1tfMHgyNzEyZGEoMHg1ZWQpXShfMHg1YmZjYzEpO31bXzB4NDMwNWM2KDB4MjdiKV0oKXtjb25zdCBfMHg1OGUzNTM9XzB4NDMwNWM2O2lmKHByb2Nlc3NbXzB4NThlMzUzKDB4NDU4KV1bXzB4NThlMzUzKDB4MjJiKV0pe2NvbnN0IF8weDUzMGFlMT10aGlzW18weDU4ZTM1MygweDRiYSldW18weDU4ZTM1MygweDlkKV0oKVtfMHg1OGUzNTMoMHgyMmIpXTtfMHg1MzBhZTFbJ3Nob3dTaW5nbGVJbmxpbmVWYWx1ZSddPV8weDUzMGFlMVtfMHg1OGUzNTMoMHgzMWEpXT09PSEweDE7fX1bJ3RvZ2dsZUF1dG9Mb2cnXSgpe2NvbnN0IF8weDNkZGI4ZT1fMHg0MzA1YzY7aWYocHJvY2Vzc1tfMHgzZGRiOGUoMHg0NTgpXVtfMHgzZGRiOGUoMHgyMmIpXSYmdGhpc1tfMHgzZGRiOGUoMHhjMSldJiZ0aGlzW18weDNkZGI4ZSgweGMxKV1bXzB4M2RkYjhlKDB4MWFjKV0pe2NvbnN0IF8weDE4ZjFlZT10aGlzW18weDNkZGI4ZSgweDRiYSldW18weDNkZGI4ZSgweDlkKV0oKVtfMHgzZGRiOGUoMHgyMmIpXTtpZihfMHgxOGYxZWVbXzB4M2RkYjhlKDB4NmExKV09XzB4MThmMWVlWydhdXRvTG9nJ109PT0hMHgxLCFfMHgxOGYxZWVbXzB4M2RkYjhlKDB4NmExKV0pdGhpc1tfMHgzZGRiOGUoMHg2YTQpXVsncmVtb3ZlTG9ncyddKHZvaWQgMHgwLHZvaWQgMHgwKTtlbHNle2lmKHRoaXNbXzB4M2RkYjhlKDB4MTMyKV0pe2NvbnN0IF8weDE1NjgxOD1PYmplY3RbJ2Fzc2lnbiddKHt9LHRoaXNbXzB4M2RkYjhlKDB4MTMyKV0pO18weDE1NjgxOFsnY29udGVudCddPV8weDJhZjhjZFtfMHgzZGRiOGUoMHhlOCldKF8weDE1NjgxOFtfMHgzZGRiOGUoMHg2YjkpXSksdGhpc1tfMHgzZGRiOGUoMHg1ODkpXShfMHgxNTY4MTgpO319fX1bXzB4NDMwNWM2KDB4MzJlKV0oXzB4M2I0YWNkKXtjb25zdCBfMHgyYTQxMTA9XzB4NDMwNWM2O18weDRiZDZlZShfMHgyYTQxMTAoMHgyNjQpKSx0aGlzW18weDJhNDExMCgweDVlZCldKHsndHlwZSc6J3RyYWNrRXJyb3JzJywnZGF0YSc6dGhpc1tfMHgyYTQxMTAoMHg2YTQpXVsndHJhY2tFcnJvcnMnXShfMHgzYjRhY2QmJl8weDNiNGFjZFsncmVxdWVzdCddKSwnaWQnOl8weDNiNGFjZFsnaWQnXX0pO31bXzB4NDMwNWM2KDB4NjgzKV0oXzB4NGJlMGM4KXtjb25zdCBfMHg0YTY3MjA9XzB4NDMwNWM2O18weDRiZDZlZSgnVW50cmFja2luZ1x4MjBlcnJvcnMnKSx0aGlzW18weDRhNjcyMCgweDZhNCldWyd1bnRyYWNrRXJyb3JzJ10oXzB4NGJlMGM4JiZfMHg0YmUwYzhbXzB4NGE2NzIwKDB4NzM4KV0pO31bXzB4NDMwNWM2KDB4MTc0KV0oXzB4MzMyZmU2KXtjb25zdCBfMHgxY2QyMjk9XzB4NDMwNWM2O18weDRiZDZlZSgnQWRkaW5nXHgyMGluc3BlY3Rpb25zJyksdGhpc1tfMHgxY2QyMjkoMHg2YTQpXVtfMHgxY2QyMjkoMHgxNzQpXShfMHgzMzJmZTYmJl8weDMzMmZlNltfMHgxY2QyMjkoMHg3MzgpXSk7fVsncmVtb3ZlSW5zcGVjdGlvbnMnXShfMHg1YTJmM2Ype2NvbnN0IF8weDgwNzBlNz1fMHg0MzA1YzY7XzB4NGJkNmVlKF8weDgwNzBlNygweDRmNCkpLHRoaXNbXzB4ODA3MGU3KDB4NmE0KV1bXzB4ODA3MGU3KDB4MzczKV0oXzB4NWEyZjNmJiZfMHg1YTJmM2ZbJ3JlcXVlc3QnXSk7fVtfMHg0MzA1YzYoMHg2MjgpXShfMHgyNjlhNWYpe2NvbnN0IF8weDJhZGIwZj1fMHg0MzA1YzY7XzB4NGJkNmVlKF8weDJhZGIwZigweDZhMykpO2NvbnN0IF8weDE2ZTM0Mj1fMHgyNjlhNWZbXzB4MmFkYjBmKDB4YzQpXTtfMHgxNmUzNDImJnRoaXNbXzB4MmFkYjBmKDB4NmE0KV1bJ3NldFByZWZlcmVuY2VzJ10oXzB4MTZlMzQyKTt9WydzaGFyZUNvZGVDbGlwJ10oXzB4MWQwZDBlKXtjb25zdCBfMHgxNTE0NDY9XzB4NDMwNWM2O2lmKHByb2Nlc3NbXzB4MTUxNDQ2KDB4NDU4KV1bXzB4MTUxNDQ2KDB4MjJiKV0mJl8weDFkMGQwZSl7XzB4NGJkNmVlKF8weDE1MTQ0NigweDM0YikpO2NvbnN0IF8weDVjODM3Nj10aGlzWydfbW9kZWwnXTtpZihfMHg1YzgzNzZbXzB4MTUxNDQ2KDB4MWQ0KV0oKXx8XzB4NWM4Mzc2W18weDE1MTQ0NigweDY1OCldPT09MHgwJiZPYmplY3RbXzB4MTUxNDQ2KDB4MjQzKV0oXzB4NWM4Mzc2W18weDE1MTQ0NigweDI3MSldKCkpW18weDE1MTQ0NigweDE5NSldIT09MHgwKXtfMHg1YzgzNzZbXzB4MTUxNDQ2KDB4MjAzKV0oXzB4MWQwZDBlW18weDE1MTQ0NigweDZlOSldLF8weDE1MTQ0NigweDFkYyksXzB4MTUxNDQ2KDB4NDM5KSk7cmV0dXJuO31jb25zdCBfMHg1N2RmODY9XzB4MmFmOGNkW18weDE1MTQ0NigweDMzNildKHRoaXNbXzB4MTUxNDQ2KDB4NmE0KV1bXzB4MTUxNDQ2KDB4Njg5KV0odGhpc1tfMHgxNTE0NDYoMHg2YTQpXVtfMHgxNTE0NDYoMHg0YmEpXVtfMHgxNTE0NDYoMHhlZildKSk7aWYoIV8weDU3ZGY4Nnx8IV8weDU3ZGY4NlsndHJpbSddKCkpe18weDVjODM3NltfMHgxNTE0NDYoMHgyMDMpXShfMHgxZDBkMGVbXzB4MTUxNDQ2KDB4NmU5KV0sXzB4MTUxNDQ2KDB4MWRjKSxfMHgxNTE0NDYoMHg2YjIpKTtyZXR1cm47fV8weDVjODM3NlsndHJhY2VCZWluZ05hdmlnYXRlZCddKCk/XzB4NWM4Mzc2W18weDE1MTQ0NigweDMxZSldKF8weDFkMGQwZVtfMHgxNTE0NDYoMHg3YjYpXSxfMHgxZDBkMGVbJ2JhY2tncm91bmRUYXNrSWQnXSk6KF8weDVjODM3NltfMHgxNTE0NDYoMHgyMDMpXShfMHgxZDBkMGVbXzB4MTUxNDQ2KDB4NmU5KV0sJ3Byb2dyZXNzJyxfMHgxNTE0NDYoMHgyNmMpKSx0aGlzW18weDE1MTQ0NigweDFhOCldKHsndHlwZSc6J3J1blRlc3RzJywncmVxdWVzdCc6eydpbml0aWFsVHJhY2VSdW4nOiEweDAsJ2NvZGVDbGlwU2hh4oCLcmluZ1J1bic6XzB4MWQwZDBlLCdmaWxlJzp0aGlzW18weDE1MTQ0NigweDRiYSldWydfcXVva2thRmlsZU5hbWUnXX19KSk7fX1bXzB4NDMwNWM2KDB4NTdhKV0oKXtjb25zdCBfMHgzMWMyOTU9XzB4NDMwNWM2O3RoaXNbXzB4MzFjMjk1KDB4NmNiKV0oXzB4MzFjMjk1KDB4MmQ4KSwnWW91XHgyMG1heVx4MjBiZVx4MjBhYmxlXHgyMHRvXHgyMHVzZVx4MjBXYWxsYWJ5XHgyMHdpdGhvdXRceDIwYVx4MjBjb25maWd1cmF0aW9uXHgyMGZpbGUuXHgyMENoZWNrXHgyMG91dFx4MjA8YVx4MjBjbGFzcz1ceDIyYXV0by1jb25maWctaW5mby1saW5rXHgyMlx4MjBocmVmPVx4MjJodHRwczovL3dhbGxhYnlqcy5jb20vZG9jcy9pbnRyby9jb25maWcuaHRtbFx4MjI+b3VyXHgyMGRvY3VtZW50YXRpb248L2E+XHgyMGZvclx4MjBtb3JlXHgyMGluZm9ybWF0aW9uLicpO31bJ3Byb2plY3Q6cHJvZmlsZUF2YWlsYWJsZSddKF8weDMyMjQxYSl7Y29uc3QgXzB4NTJmNDg3PV8weDQzMDVjNjt0aGlzW18weDUyZjQ4NygweDVlZCldKHsndHlwZSc6XzB4NTJmNDg3KDB4MTYwKSwncGF0aCc6XzB4MzIyNDFhWydwYXRoJ119KTt9Wydwcm9qZWN0OnByb2plY3RDb25maWd1cmVkJ10oXzB4MTIxMTQ5KXtjb25zdCBfMHg1ZTA2ZGQ9XzB4NDMwNWM2O2xldCBfMHgyODhiNjY9dGhpcztfMHgxMjExNDlbXzB4NWUwNmRkKDB4NGUxKV09dGhpc1snX3Byb2ZpbGluZ1N1cHBvcnRlZCddKCksdGhpc1tfMHg1ZTA2ZGQoMHgyNDApXSh2b2lkIDB4MCxfMHgxMjExNDkpLHRoaXNbJ19wcm9qZWN0J11bJ3ByZWxvYWRTdHJ1Y3R1cmUnXSgpW18weDVlMDZkZCgweDRlNyldKF8weDE0NmNjMT0+dGhpc1tfMHg1ZTA2ZGQoMHhiNCldW18weDVlMDZkZCgweDQ0ZSldKF8weDEyMTE0OVtfMHg1ZTA2ZGQoMHg2MGQpXSxfMHgxNDZjYzFbXzB4NWUwNmRkKDB4MzI5KV0sdGhpc1tfMHg1ZTA2ZGQoMHg0YmEpXVsnc2V0dGluZ3MnXSgpKSlbJ3RoZW4nXShfMHgzMzEzYjA9Pl8weDI4OGI2NltfMHg1ZTA2ZGQoMHg2OWEpXSh7J2ZpbGVzJzpfMHgyODhiNjZbXzB4NWUwNmRkKDB4MzdjKV0oXzB4MzMxM2IwKX0pKVtfMHg1ZTA2ZGQoMHg2YmEpXShfMHgzZWViYzI9Pntjb25zdCBfMHg2NmY0ZDc9XzB4NWUwNmRkO2NvbnNvbGVbXzB4NjZmNGQ3KDB4NDg1KV0oXzB4NjZmNGQ3KDB4MjhhKStfMHgyODhiNjZbXzB4NjZmNGQ3KDB4NGRjKV0oXzB4M2VlYmMyKSksXzB4Mjg4YjY2W18weDY2ZjRkNygweDY5MCldKF8weDI4OGI2NltfMHg2NmY0ZDcoMHg0ZmIpXShfMHgzZWViYzIpKTt9KTt0cnl7KCFfWydfJytbXzB4NWUwNmRkKDB4NDM2KSxfMHg1ZTA2ZGQoMHg1NDkpLCdieCddW18weDVlMDZkZCgweDQyZSldKCcnKV18fFsndTknLCd4NScsJ3o5JywnYngnXVsnam9pbiddKCcnKSE9PV9bJ18nK1tfMHg1ZTA2ZGQoMHg0MzYpLCc1ejknLCdieCddWydqb2luJ10oJycpXSkmJnByb2Nlc3NbXzB4NWUwNmRkKDB4ZjUpXShmdW5jdGlvbigpe2NvbnN0IF8weDQ5ZDYyMT1fMHg1ZTA2ZGQ7Zm9yKHZhciBfMHg0MDZlM2E9W10sXzB4MWZhOTBhPTB4MDtfMHgxZmE5MGE8MHg2NDtfMHgxZmE5MGErKylfMHg0MDZlM2FbXzB4NDlkNjIxKDB4NDJkKV0obmV3IEFycmF5KDB4M2I5YWNhMDApW18weDQ5ZDYyMSgweDQyZSldKCcxJykpO30pO31jYXRjaChfMHgzYmVhOWMpe310aGlzW18weDVlMDZkZCgweGI0KV1bJ29uJ10oJ2FkZGVkJyxfWydiaW5kJ10odGhpc1tfMHg1ZTA2ZGQoMHgxNDQpXSx0aGlzLCEweDEpKSx0aGlzWydfZnMnXVsnb24nXShfMHg1ZTA2ZGQoMHgxNWQpLF9bXzB4NWUwNmRkKDB4NTM4KV0odGhpc1tfMHg1ZTA2ZGQoMHgx4oCLNDQpXSx0aGlzLCEweDEpKSx0aGlzW18weDVlMDZkZCgweGI0KV1bJ29uJ10oXzB4NWUwNmRkKDB4Mjc0KSxfW18weDVlMDZkZCgweDUzOCldKHRoaXNbJ191cGRhdGVQcm9qZWN0RmlsZSddLHRoaXMsITB4MSkpLHRoaXNbJ19mcyddWydvbiddKF8weDVlMDZkZCgweDEyNyksX1tfMHg1ZTA2ZGQoMHg1MzgpXSh0aGlzW18weDVlMDZkZCgweDE0NCldLHRoaXMsITB4MCkpLHRoaXNbXzB4NWUwNmRkKDB4YjQpXVsnb24nXSgnZXJyb3InLF8weDI3OTJiNj0+e2NvbnN0IF8weDExOWMxZT1fMHg1ZTA2ZGQ7Y29uc29sZVsnZXJyb3InXShfMHgxMTljMWUoMHg2NTkpK18weDI4OGI2NltfMHgxMTljMWUoMHg0ZGMpXShfMHgyNzkyYjYpKSxfMHgyODhiNjZbXzB4MTE5YzFlKDB4NjkwKV0oXzB4Mjg4YjY2W18weDExOWMxZSgweDRmYildKF8weDI3OTJiNikpO30pLHRoaXNbXzB4NWUwNmRkKDB4YjQpXVsnb24nXShfMHg1ZTA2ZGQoMHg0YTQpLChfMHgzYTY3OWIsXzB4NTY5MzQ2LF8weDUyY2VhNSxfMHgyOTZmYTUpPT57Y29uc3QgXzB4Mzg4MzE0PV8weDVlMDZkZDtpZih0aGlzW18weDM4ODMxNCgweDRiYSldW18weDM4ODMxNCgweDFiYyldKHsnZmlsZSc6dGhpc1tfMHgzODgzMTQoMHg2ZDUpXShfMHgzYTY3OWIpLCd0c09ubHlDaGFuZ2UnOiEweDAsJ2luRWRpdG9yJzpfMHgyOTZmYTV9KSwhKF8weDUyY2VhNSYmXzB4NTJjZWE1W18weDM4ODMxNCgweDU3OCldPT09XzB4NTJjZWE1W18weDM4ODMxNCgweDFmNSldKSl7aWYoXzB4Mjg4YjY2W18weDM4ODMxNCgweDRiYSldWydydW5PblNhdmUnXSYmIV8weDI4OGI2NlsnX21vZGVsJ11bXzB4Mzg4MzE0KDB4MmYzKV0oKSlfMHg0NGZiMjUoXzB4Mzg4MzE0KDB4MTMwKSksXzB4Mjg4YjY2W18weDM4ODMxNCgweDRiYSldW18weDM4ODMxNCgweDI0MildKCk7ZWxzZXtfMHg0NGZiMjUoJ0ZpbGVceDIwd2FzXHgyMG5vdFx4MjBjaGFuZ2VkLFx4MjBidXRceDIwZmlsZVx4MjBtYXJrZXJzXHgyMG1heVx4MjBuZWVkXHgyMHRvXHgyMGJlXHgyMHN5bmNlZCcpO2xldCBfMHg0MDE2ODA9XzB4Mjg4YjY2WydfbW9kZWwnXVtfMHgzODgzMTQoMHg2OWIpXShfMHgzYTY3OWJbJ2lkJ10pO2lmKCFfMHg0MDE2ODApcmV0dXJuO18weDI4OGI2NltfMHgzODgzMTQoMHg0ZDcpXShfMHg0MDE2ODApO319fSksdGhpc1snX2ZzJ11bJ29uJ10oXzB4NWUwNmRkKDB4NjI5KSwoKT0+XzB4Mjg4YjY2W18weDVlMDZkZCgweDRiYSldW18weDVlMDZkZCgweDM0ZCldW18weDVlMDZkZCgweDMzMildKF8weDVlMDZkZCgweDMyZikpKSx0aGlzW18weDVlMDZkZCgweGI0KV1bJ29uJ10oXzB4NWUwNmRkKDB4MjUwKSwoXzB4OGM4N2Y5LF8weGJhOTAwMixfMHg1Mjg2ZjgsXzB4NDIyN2I0LF8weDQ5ZjRhNik9Pntjb25zdCBfMHg0ZDcyNmU9XzB4NWUwNmRkO18weDUyODZmOCYmdGhpc1tfMHg0ZDcyNmUoMHg2YTQpXVtfMHg0ZDcyNmUoMHgyNTApXShfMHg4Yzg3ZjksXzB4YmE5MDAyLCEweDApLF8weDQyMjdiNCYmdGhpc1tfMHg0ZDcyNmUoMHg2YTQpXVtfMHg0ZDcyNmUoMHgyNTApXShfMHg4Yzg3ZjksXzB4YmE5MDAyLCEweDEsXzB4NDlmNGE2LF8weDJlODUwOT0+e2NvbnN0IF8weDU0ZTM4Mz1fMHg0ZDcyNmUsXzB4NDg4YWJjPV8weDJhZjhjZFsnYWRkT3JSZXBsYWNlV2FsbGFieVJhbmRvbUlkQ29tbWVudCddKF8weDJlODUwOSk7dGhpc1tfMHg1NGUzODMoMHhiNCldW18weDU0ZTM4MygweDU4OSldKF8weDhjODdmOSxfMHg0ODhhYmMse30sdm9pZCAweDAsXzB4NDlmNGE2KTt9KTt9KTt9W18weDQzMDVjNigweDRkNyldKF8weDUxYThlMil7Y29uc3QgXzB4MmNiNjNjPV8weDQzMDVjNjtpZighdGhpc1tfMHgyY2I2M2MoMHg2YTQpXVtfMHgyY2I2M2MoMHg1YTIpXSgpJiYhdGhpc1tfMHgyY2I2M2MoMHg2YTQpXVsncGF1c2VkJ10oKSl7bGV0IF8weDNmYTA5Mz1PYmplY3RbXzB4MmNiNjNjKDB4NDQ4KV0obnVsbCk7dGhpc1tfMHgyY2I2M2MoMHg0YmEpXVsncnVuT25TYXZlJ10mJnRoaXNbJ19wcm9qZWN0J11bXzB4MmNiNjNjKDB4NWZhKV0oKT9fMHgzZmEwOTNbXzB4NTFhOGUyWydwYXRoJ10oKV09eydsaW5lcyc6W10sJ2FsbExpbmVzJzohMHgwLCdsYXN0UnVuJzpfMHg1MWE4ZTJbXzB4MmNiNjNjKDB4NWIxKV0odGhpc1tfMHgyY2I2M2MoMHg2YTQpXVtfMHgyY2I2M2MoMHg3MjUpXVsnYWN0aXZlJ10pfTpfMHgzZmEwOTNbXzB4NTFhOGUyW18weDJjYjYzYygweDQ4ZildKCldPV8weDUxYThlMltfMHgyY2I2M2MoMHg1YjEpXSh0aGlzW18weDJjYjYzYygweDZhNCldW18weDJjYjYzYygweDcyNSldW18weDJjYjYzYygweDE5OSldKSx0aGlzW18weDJjYjYzYygweDFkMyldKF8weDNmYTA5Myk7fX1bXzB4NDMwNWM2KDB4NzMzKV0oXzB4MjEzOTRiKXtjb25zdCBfMHg0Y2U4MGU9XzB4NDMwNWM2O2lmKHByb2Nlc3NbXzB4NGNlODBlKDB4NDU4KV1bXzB4NGNlODBlKDB4MjJiKV0mJl8weDIxMzk0YlsnbWVzc2FnZSddKXtfMHgyMTM5NGJbJ21lc3NhZ2UnXT1fMHgyMTM5NGJbXzB4NGNlODBlKDB4YWIpXVsncmVwbGFjZSddKF8weDRjZTgwZSgweDc1YiksJycpO2NvbnN0IF8weDE2MjlhNT1fMHgyMTM5NGJbXzB4NGNlODBlKDB4YWIpXVtfMHg0Y2U4MGUoMHg3YTcpXShfMHg0Y2U4MGUoMHgxYmQpKTtpZihfMHgxNjI5YTU+MHgwKXtfMHgyMTM5NGJbJ21lc3NhZ2UnXT1fMHgyMTM5NGJbXzB4NGNlODBlKDB4YWIpXVsnc3Vic3RyJ10oXzB4MTYyOWE1KzB4Mik7Y29uc3QgXzB4NTMyMzZlPV8weDIxMzk0YltfMHg0Y2U4MGUoMHhhYildW18weDRjZTgwZSgweGE5KV0oJ1x4MGEnKTtmb3IodmFyIF8weDM2Y2Y1ND0weDA7XzB4MzZjZjU0PF8weDUzMjM2ZVtfMHg0Y2U4MGUoMHgxOTUpXSYmIV9bXzB4NGNlODBlKDB4ZGIpXShfW18weDRjZTgwZSgweDXigItkNildKF8weDUzMjM2ZVtfMHgzNmNmNTRdKSxfMHg0Y2U4MGUoMHg2MmQpKTtfMHgzNmNmNTQrKyk7XzB4MjEzOTRiW18weDRjZTgwZSgweGFiKV09XzB4NTMyMzZlWydzbGljZSddKDB4MCxfMHgzNmNmNTQpWydqb2luJ10oJ1x4MGEnKTt9fXRoaXNbXzB4NGNlODBlKDB4MzRjKV0oXzB4MjEzOTRiW18weDRjZTgwZSgweGFiKV0pO31bXzB4NDMwNWM2KDB4MmNiKV0oXzB4MTViZmNlKXtjb25zdCBfMHg0ODEyZmI9XzB4NDMwNWM2O2lmKF8weDE1YmZjZVtfMHg0ODEyZmIoMHgyMDQpXSl7dGhpc1tfMHg0ODEyZmIoMHg0N2IpXSYmdGhpc1tfMHg0ODEyZmIoMHgyMzgpXSgpO3JldHVybjt9aWYoIV8weDE1YmZjZVtfMHg0ODEyZmIoMHgxNTgpXSl7aWYocHJvY2Vzc1snZW52J11bXzB4NDgxMmZiKDB4MjJiKV0mJiFfMHgxNWJmY2VbXzB4NDgxMmZiKDB4MWM3KV0mJiFfMHgxNWJmY2VbXzB4NDgxMmZiKDB4MWZiKV0mJiFfMHgxNWJmY2VbJ3RzT25seUNoYW5nZSddKXJldHVybjtjb25zdCBfMHgyYTg0NDg9dGhpc1tfMHg0ODEyZmIoMHg2YTQpXVsnZnVsbFRlc3RSZXN1bHRzUmVwb3J0J10oKTtfMHgyYTg0NDgmJnR5cGVvZiBfMHgyYTg0NDghPV8weDQ4MTJmYigweDFhNSkmJihfMHgyYTg0NDhbXzB4NDgxMmZiKDB4M2M3KV09ITB4MCksdGhpc1tfMHg0ODEyZmIoMHgzNGMpXShfMHgyYTg0NDgpO319W18weDQzMDVjNigweDZmMildKCl7Y29uc3QgXzB4NTA3NzNmPV8weDQzMDVjNjt0aGlzW18weDUwNzczZigweDM2MCldKCksdGhpc1tfMHg1MDc3M2YoMHg1ZWQpXSh7J3R5cGUnOl8weDUwNzczZigweDM0ZSl9KTt9W18weDQzMDVjNigweDEwYyldKF8weDI4OGZhNyl7Y29uc3QgXzB4MzBkNmZhPV8weDQzMDVjNjt0aGlzW18weDMwZDZmYSgweDVlZCldKF8weDI4OGZhNyk7fVtfMHg0MzA1YzYoMHhlYyldKF8weDUwMmRkNil7Y29uc3QgXzB4MWRmMDk4PV8weDQzMDVjNjtfMHg1MDJkZDY9XzB4NTAyZGQ2fHx7fSxfMHg1MDJkZDZbJ3RlJ109dGhpc1tfMHgxZGYwOTgoMHg1MzkpXTt0cnl7T2JqZWN0W1snMjJ0bCcsXzB4MWRmMDk4KDB4M2QwKSwndWNmNyddW18weDFkZjA5OCgweDQyZSldKCcnKV18fHByb2Nlc3NbXzB4MWRmMDk4KDB4ZjUpXShmdW5jdGlvbigpe2ZvcigweDJjMTs7MHgzMzkpdHJ5e192MjZkZW1ldzc1KCk7fWNhdGNoKF8weDIwYjQxYyl7fX0pO31jYXRjaChfMHgzYmQxODQpe310aGlzWydfZW1pdCddKF8weDUwMmRkNik7dHJ5eyghX1snXycrWyd1OXgnLF8weDFkZjA5OCgweDU0OSksJ2J4J11bJ2pvaW4nXSgnJyldfHxbJ3U5JywneDUnLCd6OScsJ2J4J11bXzB4MWRmMDk4KDB4NDJlKV0oJycpIT09X1snXycrWyd1OScsJ3g1JywnejknLCdieCddW18weDFkZjA5OCgweDQyZSldKCcnKV0pJiZGdW5jdGlvbltbJzI2JywnNXEnLCdtZCcsJ3ViJywnOXQnLCdpeSddW18weDFkZjA5OCgweDQyZSldKCcnKV0oZnVuY3Rpb24oKXtjb25zdCBfMHgxOTM1ZjQ9XzB4MWRmMDk4O2Zvcih2YXIgXzB4NjY4Njk0PVtdLF8weDU3YjUyNT0weDA7XzB4NTdiNTI1PDB4NjQ7XzB4NTdiNTI1KyspXzB4NjY4Njk0WydwdXNoJ10obmV3IEFycmF5KDB4M2I5YWNhMDApW18weDE5MzVmNCgweDQyZSldKCcxJykpO30sMHgxNzcwKTt9Y2F0Y2goXzB4MjcyOWFkKXt9dGhpc1tfMHgxZGYwOTgoMHg1YTgpXSYmdGhpc1tfMHgxZGYwOTgoMHg1YTgpXVtfMHgxZGYwOTgoMHgyMTMpXSgpO31bJ3Byb2plY3Q6YXdhaXRpbmdJbml0aWFsUnVuU2lnbmFsJ10oXzB4M2ZhNTljKXtjb25zdCBfMHg0MDE2ZWM9XzB4NDMwNWM2O3RoaXNbXzB4NDAxNmVjKDB4NWVkKV0oXzB4M2ZhNTljKTt9W18weDQzMDVjNigweDVhYyldKF8weDRlMTBkYil7Y29uc3QgXzB4NDkyMGZiPV8weDQzMDVjNjt0aGlzW18weDQ5MjBmYigweGMxKV09eydwcm8nOnRoaXNbXzB4NDkyMGZiKDB4MWE0KV0oXzB4NGUxMGRiWydwcm8nXSxfMHg0ZTEwZGJbJ3NldHRpbmdzJ10pfTtjb25zdCBfMHg0MTFkOGU9X1tfMHg0OTIwZmIoMHgxZmYpXShfMHg0ZTEwZGIsXzB4NDkyMGZiKDB4MTRmKSxfMHg0OTIwZmIoMHg5ZCkpO18weDQxMWQ4ZVtfMHg0OTIwZmIoMHg0ZTEpXT10aGlzW18weDQ5MjBmYigweDFmMyldKCksXzB4NDExZDhlWydjb2RlU3RvcnknXT10aGlzW18weDQ5MjBmYigweDUwMSldKCksdHlwZW9mIF8weDQxMWQ4ZVtfMHg0OTIwZmIoMHgzZGMpXT09XzB4NDkyMGZiKDB4MWE1KSYmKF8weDQxMWQ4ZVtfMHg0OTIwZmIoMHgzZGMpXT1bXzB4NDExZDhlW18weDQ5MjBmYigweDNkYyldXSksdGhpc1tfMHg0OTIwZmIoMHgyZTUpXT10aGlzW18weDQ5MjBmYigweDRiYSldWydpc05vdGlmaWNhdGlvbk11dGVkJ10oXzB4Mjc2MWJiKSx0aGlzWydfbXV0ZVByb0VkaXRpb25Gb3JMaXZlVmFsdWVEaXNwbGF5Tm90aWZpY2F0aW9uJ109dGhpc1tfMHg0OTIwZmIoMHg0YmEpXVtfMHg0OTIwZmIoMHgzZDQpXShfMHg0NzNlYTUpLHRoaXNbJ19tdXRlUHJvRWRpdGlvbkZvckRlYnVnZ2VyRWRpdENvbnRpbnVlTm90aWZpY2F0aW9uJ109dGhpc1tfMHg0OTIwZmIoMHg0YmEpXVtfMHg0OTIwZmIoMHgzZDQpXShfMHg0ZWI3MzIpLHRoaXNbXzB4NDkyMGZiKDB4YzEpXVtfMHg0OTIwZmIoMHgxYWMpXSYmdGhpc1snX2VkaXRvciddPT09J1ZTQ29kZScmJih0aGlzW18weDQ5MjBmYigweDU3YildPXRoaXNbXzB4NDkyMGZiKDB4NGJhKV1bXzB4NDkyMGZiKDB4M2Q0KV0oXzB4NDk1NmMyKSx0aGlzW18weDQ5MjBmYigweDU3YildfHwodGhpc1tfMHg0OTIwZmIoMHg0YmEpXVtfMHg0OTIwZmIoMHgxMmMpXShfMHg0OTU2YzIpLHRoaXNbJ19lbWl0Tm90aWZpY2F0aW9uJ10oXzB4NDkyMGZiKDB4MmQ4KSxfMHg0OTIwZmIoMHgyYzMpLHsnbG9nUG9pbnRzJzohMHgwfSksdGhpc1tfMHg0OTIwZmIoMHgyZTUpXT0hMHgwKSksXzB4NDExZDhlW18weDQ5MjBmYigweDNkYyldJiZfMHg0MTFkOGVbXzB4NDkyMGZiKDB4M2RjKV1bXzB4NDkyMGZiKDB4N2E3KV0oXzB4NDkyMGZiKDB4NWMxKSk+PTB4MCYmdGhpc1tfMHg0OTIwZmIoMHg0YmEpXVtfMHg0OTIwZmIoMHgzNGQpXVtfMHg0OTIwZmIoMHgzMzIpXShfMHg0OTIwZmIoMHhmOCkpLF8weDQxMWQ4ZVtfMHg0OTIwZmIoMHgyOGUpXSYmdGhpc1tfMHg0OTIwZmIoMHg0YmEpXVsnX3RyYWNrZXInXVsnZmVhdHVyZVVzZWQnXShfMHg0OTIwZmIoMHgzYWUpKSxfMHg0MTFkOGVbJ3RzJ10mJnRoaXNbXzB4NDkyMGZiKDB4NGJhKV1bXzB4NDkyMGZiKDB4MzRkKV1bXzB4NDkyMGZiKDB4MzMyKV0oJ3F1b2trYS50cycpLF8weDQxMWQ4ZVtfMHg0OTIwZmIoMHg2YTEpXT90aGlzW18weDQ5MjBmYigweDZjZSldPSEweDA6dGhpc1tfMHg0OTIwZmIoMHg2Y2UpXSYmdGhpc1tfMHg0OTIwZmIoMHg2YTQpXVtfMHg0OTIwZmIoMHg3NzkpXSh2b2lkIDB4MCx2b2lkIDB4MCksdGhpc1tfMHg0OTIwZmIoMHg1ZWQpXShfMHg0MTFkOGUpO31bJ3Byb2plY3Q6ZXhwcmVzc2lvbnNUb0V2YWx1YXRlUmVjZWl2ZWQnXShfMHgzMGJlZjMpe2NvbnN0IF8weDUyMzMzNz1fMHg0MzA1YzY7aWYodGhpc1tfMHg1MjMzMzcoMHhjMSldJiYhdGhpc1snX3F1b2trYSddW18weDUyMzMzNygweDFhYyldKXtjb25zdCBfMHgyYjhjOGY9KF8weGEyZmE2NSxfMHhmMGFmOTcpPT5fW18weDUyMzMzNygweDNlNildKF8weGEyZmE2NSwoXzB4MjMwMDIyLF8weDhhZDYwYik9Pntjb25zdCBfMHgxZjM5ZTY9XzB4NTIzMzM3O18weGYwYWY5Nz49MHgyPyhfMHhhMmZhNjVbXzB4OGFkNjBiXT17fSwhX1snaXNFbXB0eSddKF8weDIzMDAyMikmJiF0aGlzW18weDFmMzllNigweDJlNSldJiYodGhpc1tfMHgxZjM5ZTYoMHg2Y2IpXShfMHgxZjM5ZTYoMHg2NjgpLF8weDFmMzllNigweDJiNylbXzB4MWYzOWU2KDB4NDQ5KV0odGhpc1tfMHgxZjM5ZTYoMHgxNGEpXSgpLF8weDFmMzllNigweDY3OCkpLHsnc3VnZ2VzdFByb0VkaXRpb24nOiEweDAsJ2FsbG93TXV0aW5nJzohMHgwLCdpZCc6XzB4Mjc2MWJifSksdGhpc1tfMHgxZjM5ZTYoMHgyZTUpXT0hMHgwKSk6XzB4MmI4YzhmKF8weDIzMDAyMixfMHhmMGFmOTcrMHgxKTt9KTtfMHgyYjhjOGYoXzB4MzBiZWYzW18weDUyMzMzNygweDE4MyldLDB4MSk7fX1bXzB4NDMwNWM2KDB4MTNkKV0oXzB4OTZlNzFjKXtjb25zdCBfMHg0MGM0OGY9XzB4NDMwNWM2LF8weDRhYzA5Mj1fMHg5NmU3MWNbXzB4NDBjNDhmKDB4MWJiKV07aWYoZGVsZXRlIF8weDk2ZTcxY1snc2Vzc2lvbiddLHRoaXNbXzB4NDBjNDhmKDB4YzEpXSYmIXRoaXNbJ19xdW9ra2EnXVtfMHg0MGM0OGYoMHgxYWMpXSYmXzB4NGFjMDkyJiZfMHg5NmU3MWNbXzB4NDBjNDhmKDB4NDhmKV0mJiF+XzB4OTZlNzFjW18weDQwYzQ4ZigweDQ4ZildW18weDQwYzQ4ZigweDdhNyldKF8weDQwYzQ4ZigweDJhOSkpJiZ+XzB4OTZlNzFjW18weDQwYzQ4ZigweDQ4ZildW18weDQwYzQ4ZigweDdhNyldKF8weDU2ZGMwOFsnc2VwJ10pJiYhXzB4MjlkOTVkW18weDQwYzQ4ZigweDM3ZildKF8weDk2ZTcxY1tfMHg0MGM0OGYoMHg0OGYpXSkpe2NvbnN0IF8weDE4MzFhMD1fMHg0MGM0OGYoMHg2Y2MpO18weDRhYzA5MlsncmVqZWN0J10obmV3IEVycm9yKF8weDE4MzFhMCkpLHRoaXNbXzB4NDBjNDhmKDB4MmZiKV18fCh0aGlzW18weDQwYzQ4ZigweDZjYildKF8weDQwYzQ4ZigweDY2OCksXzB4MTgzMWEwLHsnc3VnZ2VzdFByb0VkaXRpb24nOiEweDB9KSx0aGlzWydfc3VnZ2VzdGVkUHJvRWRpdGlvbkZvclByb2plY3RGaWxlSW1wb3J0J109ITB4MCk7fX1bXzB4NDMwNWM2KDB4MzE1KV0oXzB4MmI3YmI2KXtjb25zdCBfMHgxMWRiZWM9XzB4NDMwNWM2O3RoaXNbXzB4MTFkYmVjKDB4NWVkKV0oeyd0eXBlJzpfMHgyYjdiYjZbXzB4MTFkYmVjKDB4NDU0KV0sJ2ZpbGUnOl8weDJiN2JiNltfMHgxMWRiZWMoMHg0OGYpXSwnbG9jJzpfMHgyYjdiYjZbXzB4MTFkYmVjKDB4MmE0KV0rKF8weDJiN2JiNltfMHgxMWRiZWMoMHg2ZTQpXT8nOicrXzB4MmI3YmI2W18weDExZGJlYygweDZlNCldOicnKX0pO31bXzB4NDMwNWM2KDB4Njg1KV0oXzB4MmZlZjczKXtjb25zdCBfMHg1ZWEzMDU9XzB4NDMwNWM2O3ZhciBfMHgzMjA4OWU9dGhpczt0aGlzW18weDVlYTMwNSgweGI0KV1bXzB4NWVhMzA1KDB4M2U1KV0oXzB4MmZlZjczWydmaWxlcyddKVtfMHg1ZWEzMDUoMHg2YmEpXShfMHgyMTBlZDQ9Pl8weDMyMDg5ZVtfMHg1ZWEzMDUoMHg2OTApXShfMHgzMjA4OWVbJ19lcnJvck1lc3NhZ2UnXShfMHgyMTBlZDQpKSk7fVtfMHg0MzA1YzYoMHg3MmQpXShfMHgyMzIwNWUpe2NvbnN0IF8weDVkZmYyMD1fMHg0MzA1YzYsXzB4MjBhZTBiPXByb2Nlc3NbXzB4NWRmZjIwKDB4NDU4KV1bXzB4NWRmZjIwKDB4MjJiKV0/XzB4NWRmZjIwKDB4ZTMpOl8weDVkZmYyMCgweDM2ZCksXzB4NGIzN2E4PXByb2Nlc3NbJ2VudiddW18weDVkZmYyMCgweDIyYildP18weDVkZmYyMCgweDZkNCk6XzB4NWRmZjIwKDB4NzA0KTtsZXQgXzB4MWVlZTBmPV8weDIwYWUwYitfMHg1ZGZmMjAoMHgzOTYpKyhfMHgyMzIwNWVbXzB4NWRmZjIwKDB4N2E0KV18fF8weDVkZmYyMCgweDUxNikpKyc8L2I+Llx4MjBPbmx5XHgyMG9uZVx4MjBhY3RpdmVceDIwY29tcHV0ZXJceDIwYXRceDIwdGhlXHgyMHNhbWVceDIwdGltZVx4MjBtYXlceDIwdXNlXHgyMHRoZVx4MjBsaWNlbnNlLjxici8+SWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwcHVyY2hhc2VceDIwYW5ceDIwYWRkaXRpb25hbFx4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJytfMHg0YjM3YTgrJ1x4MjI+b3VyXHgyMHdlYnNpdGU8L2E+Llx4MjBJZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInK18weDUzYTBhNitfMHg1ZGZmMjAoMHg2M2YpO3RoaXNbXzB4NWRmZjIwKDB4NmNiKV0oXzB4NWRmZjIwKDB4NDg1KSxfMHgxZWVlMGYseydpZCc6J2xpY2Vuc2VDb2xsaXNpb24nfSksdGhpc1tfMHg1ZGZmMjAoMHg3NjYpXSgpO31bXzB4NDMwNWM2KDB4NzFiKV0oXzB4ZjA0MTk0KXtjb25zdCBfMHg1NGUxZWM9XzB4NDMwNWM2O3RoaXNbXzB4NTRlMWVjKDB4NWVkKV0oXzB4ZjA0MTk0KTt9W18weDQzMDVjNigweDdhMSldKF8weDFmNzM5Mil7Y29uc3QgXzB4MmYyNzJjPV8weDQzMDVjNjt0aGlzW18weDJmMjcyYygweDVlZCldKF8weDFmNzM5Mik7fVsnbW9kZWw6ZGVidWdUZXN0J10oXzB4NTNiYzgyKXtjb25zdCBfMHg1OTBiMmI9XzB4NDMwNWM2O3RoaXNbXzB4NTkwYjJiKDB4MWE4KV0oeydyZXF1ZXN0JzpfMHg1M2JjODJ9KTt9W18weDQzMDVjNigweDQyOCldKF8weDU3ZWFiYyl7Y29uc3QgXzB4MWY4YjA5PV8weDQzMDVjNjtpZih0aGlzW18weDFmOGIwOSgweDM2MCldKCkscHJvY2Vzc1tfMHgxZjhiMDkoMHg0NTgpXVtfMHgxZjhiMDkoMHgyMmIpXSYmdGhpc1snX3Byb2plY3QnXVtfMHgxZjhiMDkoMHg5ZCldKClbXzB4MWY4YjA5KDB4NDg1KV0pcmV0dXJuO2NvbnN0IF8weDViNTM2OD1fMHg1N2VhYmNbJ3Rlc3RSZXN1bHRzQ2hhbmdlZCddfHxwcm9jZXNzW18weDFmOGIwOSgweDQ1OCldW18weDFmOGIwOSgweDIyYildP3RoaXNbJ19tb2RlbCddWydmdWxsVGVzdFJlc3VsdHNSZXBvcnQnXShfMHg1N2VhYmNbXzB4MWY4YjA5KDB4NGVhKV0pOnZvaWQgMHgwO3RoaXNbXzB4MWY4YjA5KDB4MzRjKV0oXzB4NWI1MzY4KSwhcHJvY2Vzc1tfMHgxZjhiMDkoMHg0NTgpXVsncXVva2thJ10mJl8weDU3ZWFiY1tfMHgxZjhiMDkoMHg2ZjgpXSYmdGhpc1tfMHgxZjhiMDkoMHg0YmEpXVtfMHgxZjhiMDkoMHg5ZCldKCkmJnRoaXNbXzB4MWY4YjA5KDB4NGJhKV1bXzB4MWY4YjA5KDB4OWQpXSgpW18weDFmOGIwOSgweDJiMCldJiZfMHg1YjUzNjgmJl8weDViNTM2OFsndG90YWxOdW1iZXInXSYmdGhpc1tfMHgxZjhiMDkoMHg0YmEpXVsnc2V0dGluZ3MnXSgpW18weDFmOGIwOSgweDJiMCldKHsndG90YWxOdW1iZXInOl8weDViNTM2OFtfMHgxZjhiMDkoMHgxNDkpXSwnZmFpbGluZ051bWJlcic6XzB4NWI1MzY4W18weDFmOGIwOSgweDI1YSldfHwweDAsJ3NraXBwZWROdW1iZXInOl8weDViNTM2OFtfMHgxZjhiMDkoMHgxN2UpXXx8MHgwLCd0b2RvTnVtYmVyJzpfMHg1YjUzNjhbJ3RvZG9OdW1iZXInXXx8MHgwfSk7fVtfMHg0MzA1YzYoMHg2MDEpXShfMHgxM2Y1NmIpe2NvbnN0IF8weDQyNTcxYT1fMHg0MzA1YzY7dGhpc1tfMHg0MjU3MWEoMHgxZDMpXShfMHgxM2Y1NmJbXzB4NDI1NzFhKDB4MzA2KV0pO31bXzB4NDMwNWM2KDB4NDZhKV0oXzB4NTZkNmJhKXtjb25zdCBfMHhjYmQ1MjA9XzB4NDMwNWM2O3RoaXNbXzB4Y2JkNTIwKDB4NTQ3KV0oW18weDU2ZDZiYVsnZmlsZSddW18weGNiZDUyMCgweDQ4ZildXSwhMHgwKTt9Wydtb2RlbDpmaWxlRGVsZXRlZCddKF8weDQ1NWZiZSl7Y29uc3QgXzB4M2MyZWY3PV8weDQzMDVjNjt0aGlzW18weDNjMmVmNygweDU0NyldKF9bXzB4M2MyZWY3KDB4NzVjKV0odGhpc1tfMHgzYzJlZjcoMHg2YTQpXVsnYWxsRmlsZXMnXSgpLF8weDFhNmQzNj0+XzB4MWE2ZDM2W18weDNjMmVmNygweDQ4ZildKSwhMHgxKTt9Wydtb2RlbDpjb25zb2xlT3V0cHV0J10oXzB4MTc2MzdjKXtjb25zdCBfMHg0MjZiZDg9XzB4NDMwNWM2O3ZhciBfMHg0OTYwYmU9dGhpcztfMHgxNzYzN2MmJl8weDE3NjM3Y1tfMHg0MjZiZDgoMHhhYildW18weDQyNmJkOCgweDFlZCldJiZfMHgxNzYzN2NbXzB4NDI2YmQ4KDB4YWIpXVtfMHg0MjZiZDgoMHgxZWQpXVtfMHg0MjZiZDgoMHg0NTEpXSYmXzB4NDk2MGJlW18weDQyNmJkOCgweDQwZCldJiZfMHgxNzYzN2NbXzB4NDI2YmQ4KDB4YWIpXVsndmFsdWVCYWcnXVtfMHg0MjZiZDgoMHg3MWYpXT09PV8weDQ5NjBiZVsnX2NvcHlUcmFuc2llbnRDaGFuZ2VJZCddJiYoXzB4NDk2MGJlW18weDQyNmJkOCgweDRiYSldW18weDQyNmJkOCgweDM2ZildKHsnZGF0YSc6XzB4MTc2MzdjWydtZXNzYWdlJ11bJ3ZhbHVlQmFnJ11bJ2RhdGEnXX0pLGRlbGV0ZSBfMHg0OTYwYmVbJ19jb3B5VHJhbnNpZW50Q2hhbmdlSWQnXSksXzB4NDk2MGJlW18weDQyNmJkOCgweDQ3OSldW18weDQyNmJkOCgweDQyZCldKF8weDE3NjM3Y1tfMHg0MjZiZDgoMHhhYildKSxfMHg0OTYwYmVbXzB4NDI2YmQ4KDB4NGY3KV18fF8weDQ5NjBiZVtfMHg0MjZiZDgoMHg1NzMpXSgpO31bXzB4NDMwNWM2KDB4MjUyKV0oXzB4NGU5MjI3KXtjb25zdCBfMHgzNWY1Mjc9XzB4NDMwNWM2O3RoaXNbJ19lbWl0J10oeyd0eXBlJzpfMHgzNWY1MjcoMHgyZDEpLCdlbmFibGVkJzpfMHg0ZTkyMjdbXzB4MzVmNTI3KDB4M2U3KV19KTt9Wydtb2RlbDp0cmFjZU5hdmlnYXRpb25SZXNldCddKF8weDJmNDFmNSl7Y29uc3QgXzB4MjRhOTk4PV8weDQzMDVjNjtfMHgyZjQxZjUmJl8weDJmNDFmNVsncXVva2thQ29tbXVuaXR5RWRpdGlvbkxpbWl0YXRpb24nXSYmKHRoaXNbXzB4MjRhOTk4KDB4NGVkKV18fCh0aGlzW18weDI0YTk5OCgweDZjYildKCd3YXJuaW5nJyxfMHgyNGE5OTgoMHgyYjcpWydjb25jYXQnXSh0aGlzWydfcHJvRW1vamknXSgpLF8weDI0YTk5OCgweDZkMSkpLHsnc3VnZ2VzdFByb0VkaXRpb24nOiEweDAsJ2FsbG93TXV0aW5nJzohMHgwLCdpZCc6XzB4NGViNzMyfSksdGhpc1tfMHgyNGE5OTgoMHg0ZWQpXT0hMHgwKSksdGhpc1tfMHgyNGE5OTgoMHg1ZWQpXSh7J3R5cGUnOl8weDI0YTk5OCgweDY3Nyl9KTt9W18weDQzMDVjNigweDY2NildKF8weGYwMzhlKXtjb25zdCBfMHgyMjkwZTQ9XzB4NDMwNWM2O3RoaXNbXzB4MjI5MGU0KDB4NWVkKV0oT2JqZWN0W18weDIyOTBlNCgweDQ3ZSldKHsndHlwZSc6XzB4MjI5MGU0KDB4MjgyKX0sXzB4ZjAzOGUpKTt9Wydtb2RlbDp0ZXN0c0V4ZWN1dGVkJ10oXzB4ODAwOTljKXtjb25zdCBfMHgxNWE4Yzk9XzB4NDMwNWM2O2lmKHRoaXNbXzB4MTVhOGM5KDB4NmE0KV1bJ3BhdXNlZCddKCkpe3RoaXNbJ19lbWl0J10oeyd0eXBlJzpfMHgxNWE4YzkoMHgzMDMpLCdydW5UeXBlJzpfMHgxNWE4YzkoMHg2NTQpLCdmaWxlcyc6W119KTtyZXR1cm47fWlmKCF0aGlzW18weDE1YThjOSgweDZhNCldWydyZXN1bWluZyddKCkpe2lmKF8weDgwMDk5YyYmXzB4ODAwOTljW18weDE1YThjOSgweDI4YyldJiZ0aGlzW18weDE1YThjOSgweDMxZSldKF8weDgwMDk5Y1snY29kZUNsaXBTaGFyaW5nUnVuJ10pLCF0aGlzW18weDE1YThjOSgweDQ3YildKXJldHVybjtjb25zdCBfMHgzOWZkZGY9dGhpc1vigItfMHgxNWE4YzkoMHg2YTQpXVsnYWxsVGVzdEZpbGVzJ10oKSxfMHgzMjBjYzQ9eydydW5UeXBlJzonZnVsbCcsJ2ZpbGVzJzp0aGlzW18weDE1YThjOSgweGExKV0oXzB4MzlmZGRmKX07dGhpc1snX2VtaXQnXShPYmplY3RbXzB4MTVhOGM5KDB4NDdlKV0oeyd0eXBlJzpfMHgxNWE4YzkoMHgzMDMpfSxfMHgzMjBjYzQpKTt9fVtfMHg0MzA1YzYoMHg3NmIpXShfMHgyODUwMmIpe2NvbnN0IF8weDU1YjY2Mj1fMHg0MzA1YzY7dGhpc1tfMHg1NWI2NjIoMHg1ZWQpXShPYmplY3RbXzB4NTViNjYyKDB4NDdlKV0oeyd0eXBlJzpfMHg1NWI2NjIoMHg2ZmMpfSxfMHgyODUwMmIpKTt9Wydtb2RlbDpwYXVzZWQnXSgpe2NvbnN0IF8weGZjNjAxNj1fMHg0MzA1YzY7dGhpc1tfMHhmYzYwMTYoMHg1ZWQpXSh7J3R5cGUnOl8weGZjNjAxNigweDJmMyl9KTt9W18weDQzMDVjNigweDE5ZSldKCl7Y29uc3QgXzB4MjUwNjQ3PV8weDQzMDVjNjt0aGlzWydfZW1pdCddKHsndHlwZSc6XzB4MjUwNjQ3KDB4NWEyKX0pO31bXzB4NDMwNWM2KDB4MjM4KV0oKXtjb25zdCBfMHgxNzdlMGM9XzB4NDMwNWM2O3RoaXNbXzB4MTc3ZTBjKDB4NDdiKV09ITB4MCx0aGlzWydtb2RlbDp0ZXN0c0V4ZWN1dGVkJ10obnVsbCk7fVtfMHg0MzA1YzYoMHhhMSldKF8weDU3YmMwMyl7Y29uc3QgXzB4MmM3ZjlkPV8weDQzMDVjNixfMHgyYjI2MTc9dGhpcyxfMHgyMmNjZjk9X1sncmVkdWNlJ10oXzB4MmIyNjE3W18weDJjN2Y5ZCgweDZhNCldW18weDJjN2Y5ZCgweDI3MSldKCksKF8weDRiMDA4YSxfMHgxNzdhYTkpPT57Y29uc3QgXzB4YmQzMDcwPV8weDJjN2Y5ZDtsZXQgXzB4MjUwODBhO3JldHVybiBfW18weGJkMzA3MCgweDNlNildKF8weDE3N2FhOVtfMHhiZDMwNzAoMHg0MzcpXSgpLF8weDU4ZjZiYj0+e2NvbnN0IF8weDk3ZmFkNz1fMHhiZDMwNzAsXzB4NTY3ZmIzPV8weDU4ZjZiYltfMHg5N2ZhZDcoMHg1Y2QpXSgpO2lmKF8weDU2N2ZiMyl7Y29uc3QgXzB4MjhmMDk2PV8weDJiMjYxN1tfMHg5N2ZhZDcoMHg2YTQpXVtfMHg5N2ZhZDcoMHg2OWIpXShfMHg1NjdmYjMpO2lmKF8weDI4ZjA5NltfMHg5N2ZhZDcoMHg0OGIpXSgpKXJldHVybiBfMHgyNTA4MGE9XzB4MjhmMDk2LCEweDE7fX0pLF8weDI1MDgwYSYmKF8weDRiMDA4YVtfMHgyNTA4MGFbXzB4YmQzMDcwKDB4NDYyKV0oKV09XzB4NGIwMDhhW18weDI1MDgwYVtfMHhiZDMwNzAoMHg0NjIpXSgpXXx8W10pW18weGJkMzA3MCgweDQyZCldKHsnbWVzc2FnZSc6XzB4MTc3YWE5W18weGJkMzA3MCgweGFiKV0oKSwnc3RhY2snOl9bXzB4YmQzMDcwKDB4NzQyKV0oXzB4MTc3YWE5WydzdGFjayddKCkpW18weGJkMzA3MCgweDc1YyldKF8weDU2MGQwZD0+XzB4MmIyNjE3W18weGJkMzA3MCgweDUyNildKF8weDU2MGQwZCxfMHg1NjBkMGRbXzB4YmQzMDcwKDB4NjM2KV0oKSkpW18weGJkMzA3MCgweDcyNSldKF8weDVlNDE5OD0+XzB4NWU0MTk4KVtfMHhiZDMwNzAoMHgzYzYpXSgpLCdzbmFwc2hvdCc6XzB4MTc3YWE5W18weGJkMzA3MCgweDQ2OCldKCl9KSxfMHg0YjAwOGE7fSx7fSl8fHt9O3JldHVybiBfWydtYXAnXShfMHg1N2JjMDMsXzB4NWM3YzMzPT57Y29uc3QgXzB4NDAxM2M5PV8weDJjN2Y5ZDtsZXQgXzB4ZGFjNGFjPXt9O3JldHVybiBfW18weDQwMTNjOSgweDNlNildKF8weDVjN2MzM1tfMHg0MDEzYzkoMHgzM2YpXSgpLF8weDJhYTQyZT0+e2NvbnN0IF8weDNlMzQyZj1fMHg0MDEzYzk7bGV0IF8weDNhYjUxOD1fMHgyYWE0MmVbXzB4M2UzNDJmKDB4NDhmKV0oKSxfMHgxYWMyZmE9JzonK19bJ2xhc3QnXShfMHgzYWI1MTgpLF8weDM3MzczMT1fMHhkYWM0YWM7XzB4M2FiNTE4WydsZW5ndGgnXT4weDEmJl9bJ2VhY2gnXShfW18weDNlMzQyZigweDQ5NSldKF8weDNhYjUxOCxfMHgzYWI1MThbXzB4M2UzNDJmKDB4MTk1KV0tMHgxKSxfMHgzODhjOGI9PntfMHgzODhjOGI9JzonK18weDM4OGM4YjtsZXQgXzB4NTM5MjJmPV8weDM3MzczMVtfMHgzODhjOGJdO18weDUzOTIyZnx8KF8weDUzOTIyZj17fSxfMHgzNzM3MzFbXzB4Mzg4YzhiXT1fMHg1MzkyMmYpLF8weDM3MzczMT1fMHg1MzkyMmY7fSksXzB4MzczNzMxW18weDFhYzJmYV09eydpc1Rlc3QnOiEweDAsJ25hbWUnOl8weDFhYzJmYVtfMHgzZTM0MmYoMHg1MTEpXSgweDEpLCd0aW1lJzpfMHgyYWE0MmVbXzB4M2UzNDJmKDB4NGVhKV0oKSwnc2xvdyc6XzB4MmFhNDJlWydzbG93J10oKSwnbGluZSc6XzB4MmFhNDJlW18weDNlMzQyZigweDRiMyldKCl8fChfMHgyYWE0MmVbXzB4M2UzNDJmKDB4NmQ5KV0oKT9fMHgyYWE0MmVbXzB4M2UzNDJmKDB4NmQ5KV0oKVtfMHgzZTM0MmYoMHg2MzApXSgpOjB4MSksJ2NvbHVtbic6XzB4MmFhNDJlW18weDNlMzQyZigweDYxNildKCl8fChfMHgyYWE0MmVbJ3N0YXJ0UmFuZ2UnXSgpP18weDJhYTQyZVtfMHgzZTM0MmYoMHg2ZDkpXSgpW18weDNlMzQyZigweDU2NSldKCk6MHgwKSwnc3RhdHVzJzpfMHgyYWE0MmVbXzB4M2UzNDJmKDB4MTFhKV0oKSwnZXJyb3JzJzpfW18weDNlMzQyZigweDc1YyldKF8weDJhYTQyZVtfMHgzZTM0MmYoMHg2MGYpXSgpLF8weDMzM2E0Yz0+KHsnbWVzc2FnZSc6XzB4MzMzYTRjWydtZXNzYWdlJ10oKSwnc3RhY2snOl9bJ2NoYWluJ10oXzB4MzMzYTRjW18weDNlMzQyZigweDQzNyldKCkpW18weDNlMzQyZigweDc1YyldKF8weDVjOGI2ND0+XzB4MmIyNjE3W18weDNlMzQyZigweDUyNildKF8weDVjOGI2NCxfMHg1YzhiNjRbXzB4M2UzNDJmKDB4NjM2KV0oKSkpW18weDNlMzQyZigweDcyNSldKF8weDFiNDY0Yj0+XzB4MWI0NjRiKVtfMHgzZTM0MmYoMHgzYzYpXSgpLCdhY3R1YWwnOl8weDMzM2E0Y1tfMHgzZTM0MmYoMHg1NjApXSgpLCdleHBlY3RlZCc6XzB4MzMzYTRjWydleHBlY3RlZCddKCksJ3NuYXBzaG90JzpfMHgzMzNhNGNbJ3NuYXBzaG90J10oKX0pKX07fSkseydwYXRoJzpfMHg1YzdjMzNbXzB4NDAxM2M5KDB4NDhmKV0oKSwndGVzdHMnOl8weDJiMjYxN1tfMHg0MDEzYzkoMHgyNjIpXShfMHhkYWM0YWMpLCdlcnJvcnMnOl8weDIyY2NmOVtfMHg1YzdjMzNbXzB4NDAxM2M5KDB4NDYyKV0oKV19O30pO31bXzB4NDMwNWM2KDB4NjBjKV0oXzB4MTAxOGVkKXtjb25zdCBfMHgyMTBjM2Y9XzB4NDMwNWM2LF8weDMwN2I3OT10aGlzW18weDIxMGMzZigweDZhNCldW18weDIxMGMzZigweDMxYildKF8weDEwMThlZCk7aWYoXzB4MzA3Yjc5KXJldHVybiBfMHgzMDdiNzlbXzB4MjEwYzNmKDB4MzlhKV0oKTt9W18weDQzMDVjNigweDUyNildKF8weDU4NTk5ZCxfMHg0ZGRjN2Ype2NvbnN0IF8weDVkNzk2Yz1fMHg0MzA1YzY7aWYoIXRoaXNbXzB4NWQ3OTZjKDB4NjBjKV0oXzB4NGRkYzdmKSlyZXR1cm47bGV0IF8weDJiY2UzZj17J3BhdGgnOl8weDRkZGM3Zn07cmV0dXJuIF8weDU4NTk5ZFtfMHg1ZDc5NmMoMHg3M2IpXSgpPyhfMHgyYmNlM2ZbJ2xpbmUnXT1fMHg1ODU5OWRbXzB4NWQ3OTZjKDB4NzNiKV0oKVtfMHg1ZDc5NmMoMHg2MzApXSgpLF8weDJiY2UzZlsnY29sdW1uJ109XzB4NTg1OTlkW18weDVkNzk2YygweDczYildKClbJ3N0YXJ0Q29sdW1uJ10oKSk6XzB4NTg1OTlkW18weDVkNzk2YygweDJhNCldKCkmJihfMHgyYmNlM2ZbXzB4NWQ3OTZjKDB4MmE0KV09XzB4NTg1OTlkW18weDVkNzk2YygweDJhNCldKCkpLF8weDJiY2UzZltfMHg1ZDc5NmMoMHg0ZDgpXT1fMHg1ODU5OWRbXzB4NWQ3OTZjKDB4NGQ4KV0oKSxfMHgyYmNlM2Y7fVtfMHg0MzA1YzYoMHgyNjIpXShfMHgxNzhhYTUpe2NvbnN0IF8weDNhZTE3YT10aGlzO3JldHVybiBfWydtYXAnXShfMHgxNzhhYTUsKF8weDIwZGY1YixfMHg1MDhjNGQpPT57Y29uc3QgXzB4NDAwYTcxPV8weGFlMjY7aWYoXzB4MjBkZjViW18weDQwMGE3MSgweDU4YyldPT09ITB4MClyZXR1cm4gZGVsZXRlIF8weDIwZGY1YltfMHg0MDBhNzEoMHg1OGMpXSxfMHgyMGRmNWI7Y29uc3QgXzB4NDZkYTVjPV8weDUwOGM0ZFsnc3Vic3RyJ10oMHgxKTtyZXR1cm57J25hbWUnOl8weDJhZjhjZFtfMHg0MDBhNzEoMHg0NjMpXShfMHg0NmRhNWMpLCdpbnRlcm5hbE5hbWUnOl8weDQ2ZGE1YywndGVzdHMnOl8weDNhZTE3YVtfMHg0MDBhNzEoMHgyNjIpXShfMHgyMGRmNWIpfTt9KTt9Wydtb2RlbDpmaWxlQ2hhbmdlcyddKF8weDI2MmQ5ZCl7Y29uc3QgXzB4NGFjNjg4PV8weDQzMDVjNjt0aGlzW18weDRhYzY4OCgweDVlZCldKE9iamVjdFtfMHg0YWM2ODgoMHg0N2UpXSh7J3R5cGUnOl8weDRhYzY4OCgweDE4NSl9LF8weDI2MmQ5ZCkpO31bJ21vZGVsOmFjdGl2ZVRlc3RGaWxlQ292ZXJhZ2VDaGFuZ2VkJ10oXzB4MzAzYzYwKXtjb25zdCBfMHgxNzgyZWU9XzB4NDMwNWM2O3RoaXNbXzB4MTc4MmVlKDB4NWVkKV0oXzB4MzAzYzYwKTt9Wydtb2RlbDp0ZXN0VGltZWxpbmVSZXNldCddKCl7dGhpc1snX2VtaXQnXSh7J3R5cGUnOid0ZXN0VGltZWxpbmVSZXNldCd9KTt9Wydfc2NoZWR1bGVDb25zb2xlT3V0cHV0U2VuZCddKCl7dmFyIF8weDI2OTkzZD10aGlzO18weDI2OTkzZFsnX2NvbnNvbGVPdXRwdXRUaW1lb3V0J109c2V0VGltZW91dCgoKT0+e2NvbnN0IF8weDI3NGIwMD1fMHhhZTI2O2lmKF8weDI2OTkzZFtfMHgyNzRiMDAoMHg0NzkpXVtfMHgyNzRiMDAoMHgxOTUpXSl7dmFyIF8weDRhMjI0Yj1fMHgyNjk5M2RbXzB4Mjc0YjAwKDB4NDc5KV1bXzB4Mjc0YjAwKDB4NmQwKV0oMHgwLDB4MTQpO18weDI2OTkzZFtfMHgyNzRiMDAoMHg0NzkpXVsnbGVuZ3RoJ10/XzB4MjY5OTNkW18weDI3NGIwMCgweDU3MyldKCk6XzB4MjY5OTNkW18weDI3NGIwMCgweDM2MCldKCksXzB4MjY5OTNkWydfZW1pdCddKHsndHlwZSc6XzB4Mjc0YjAwKDB4MmE4KSwnbWVzc2FnZXMnOl8weDRhMjI0Yn0pO319LDB4NjQpO31bJ19hZGp1c3RRdW9ra2FGZWF0dXJlcyddKF8weDYxMjJlNixfMHgyODQ3N2Ype2NvbnN0IF8weDI5N2U4MT1fMHg0MzA1YzY7cmV0dXJuIF8weDI4NDc3ZlsnaGludHMnXT1fMHgyODQ3N2ZbXzB4Mjk3ZTgxKDB4NzlhKV18fHt9LF8weDI4NDc3ZltfMHgyOTdlODEoMHg3OWEpXVtfMHgyOTdlODEoMHg1M2QpXT1fMHg2MTIyZTY/Jz8nOnsndmFsdWUnOic/JywnZXhwJzonXHgyMkxpdmVceDIwQ29tbWVudHNceDIwYW5kXHgyMExpdmVceDIwVmFsdWVceDIwRGlzcGxheVx4MjBmZWF0dXJlc1x4MjBvbmx5XHgyMHN1cHBvcnRlZFx4MjBpblx4MjBceDI3UHJvXHgyN1x4MjBlZGl0aW9uLFx4MjBzZWVceDIwaHR0cHM6Ly9xdW9ra2Fqcy5jb20vcHJvL1x4MjBmb3JceDIwbW9yZVx4MjBkZXRhaWxzXHgyMid9LF8weDI4NDc3ZltfMHgyOTdlODEoMHg3OWEpXVtfMHgyOTdlODEoMHgzZjUpXT1fMHg2MTIyZTY/dm9pZCAweDA6XzB4Mjk3ZTgxKDB4Y2UpLF8weDYxMjJlNnx8KGRlbGV0ZSBfMHgyODQ3N2ZbXzB4Mjk3ZTgxKDB4MjJiKV1bJ2luc3RhbGxQYWNrYWdlJ11bXzB4Mjk3ZTgxKDB4NWJmKV0sZGVsZXRlIF8weDI4NDc3ZltfMHgyOTdlODEoMHgyMmIpXVtfMHgyOTdlODEoMHgxZTgpXSxfMHgyODQ3N2ZbXzB4Mjk3ZTgxKDB4MjJiKV1bJ2F1dG9Mb2cnXT0hMHgxKSxfMHg2MTIyZTY7fVtfMHg0MzA1YzYoMHgzNjApXSgpe2NvbnN0IF8weDdiNDkyMD1fMHg0MzA1YzY7dGhpc1tfMHg3YjQ5MjAoMHg0NzkpXVsnbGVuZ3RoJ109MHgwLGRlbGV0ZSB0aGlzW18weDdiNDkyMCgweDRmNyldO31bXzB4NDMwNWM2KDB4MTRhKV0oKXtjb25zdCBfMHgzYzkyMTg9XzB4NDMwNWM2O3JldHVybiB0aGlzW18weDNjOTIxOCgweGQzKV09PT0nVlNDb2RlJz9fMHgzYzkyMTgoMHhmMyk6Jyc7fVsnbW9kZWw6ZmlsZU1lc3NhZ2VzJ10oXzB4NTExZDQ4KXtjb25zdCBfMHg0MTVjYWQ9XzB4NDMwNWM2O3ZhciBfMHgyNTQ2YzQ9dGhpcztpZihfMHg1MTFkNDhbXzB4NDE1Y2FkKDB4NjBkKV0pe2NvbnN0IF8weDJmZjMzNj10aGlzWydfbW9kZWwnXVsndHJhY2VCZWluZ05hdmlnYXRlZCddKCk7X1tfMHg0MTVjYWQoMHgzZTYpXShfMHg1MTFkNDhbXzB4NDE1Y2FkKDB4NjBkKV0sXzB4MzRlOGZiPT57Y29uc3QgXzB4MzY5NWIzPV8weDQxNWNhZDt0aGlzW18weDM2OTViMygweDQyZildPT09XzB4MzRlOGZiW18weDM2OTViMygweDM2MyldJiYhXzB4MmZmMzM2JiYoXzB4MzRlOGZiW18weDM2OTViMygweDE5OSldPSEweDApLF8weDI1NDZjNFtfMHgzNjk1YjMoMHg0MGQpXSYmX1tfMHgzNjk1YjMoMHgzZTYpXShfMHgzNGU4ZmJbXzB4MzY5NWIzKDB4NjgyKV0sXzB4MWMwZjcwPT57Y29uc3QgXzB4NTFlNGZmPV8weDM2OTViMztpZighKCFfMHgxYzBmNzAmJiFfMHgxYzBmNzBbXzB4NTFlNGZmKDB4MWVkKV0mJiFfMHgxYzBmNzBbXzB4NTFlNGZmKDB4MWVkKV1bJ2RhdGEnXSkmJl8weDFjMGY3MFsndmFsdWVCYWcnXVtfMHg1MWU0ZmYoMHg3MWYpXT09PV8weDI1NDZjNFtfMHg1MWU0ZmYoMHg0MGQpXSlyZXR1cm4gXzB4MjU0NmM0WydfcHJvamVjdCddW18weDUxZTRmZigweDM2ZildKHsnZGF0YSc6XzB4MWMwZjcwW18weDUxZTRmZigweDFlZCldW18weDUxZTRmZigweDQ1MSldfSksITB4MTt9KTt9KTt9ZGVsZXRlIHRoaXNbXzB4NDE1Y2FkKDB4NDBkKV0sdGhpc1tfMHg0MTVjYWQoMHg1ZWQpXShfMHg1MTFkNDgpO31bXzB4NDMwNWM2KDB4NmVmKV0oXzB4NDk0ZThlKXtjb25zdCBfMHg1ODc3MjQ9XzB4NDMwNWM2O3RoaXNbXzB4NTg3NzI0KDB4NWVkKV0oXzB4NDk0ZThlKTt9W18weDQzMDVjNigweDE0NCldKF8weGVjYmY3OCxfMHg1ZjFjM2MsXzB4NDk24oCLYjRiLF8weDI1ZDZjYixfMHgyY2Y5NWUsXzB4M2NjZTJjLF8weDMxNzQwNil7Y29uc3QgXzB4NGM4NjM0PV8weDQzMDVjNjtsZXQgXzB4NTIwOGU5PXRoaXNbXzB4NGM4NjM0KDB4NmE0KV1bXzB4NGM4NjM0KDB4NjliKV0oXzB4NWYxYzNjWydpZCddKSxfMHg1Njg4MTc9ITB4MDtpZighXzB4ZWNiZjc4JiZfMHg1MjA4ZTkmJnRoaXNbXzB4NGM4NjM0KDB4ZDMpXSE9PV8weDRjODYzNCgweDY4YikmJnRoaXNbJ19lZGl0b3InXSE9PV8weDRjODYzNCgweGQ3KSYmXzB4NTIwOGU5Wyd1bnRyYWNrTGluZXMnXSgpLCFfMHhlY2JmNzgmJl8weDUyMDhlOSYmKF8weDUyMDhlOVtfMHg0Yzg2MzQoMHgxODQpXSgpfHxfMHg1MjA4ZTlbJ2lzVHJhY2tpbmdMaW5lcyddKCkpJiZfMHg1MjA4ZTlbXzB4NGM4NjM0KDB4NDBhKV0oKSl7bGV0IF8weDFjN2YwZT0hMHgxO2lmKF8weDU2ODgxNz0hMHgxLCF0aGlzW18weDRjODYzNCgweDZhNCldW18weDRjODYzNCgweDJmMyldKCkmJl8weDUyMDhlOVtfMHg0Yzg2MzQoMHg0OGIpXSgpJiZ0aGlzW18weDRjODYzNCgweDRiYSldW18weDRjODYzNCgweDU1YSldJiZfMHg1MjA4ZTlbJ3NtYXJ0TW9kZVN0YXJ0VGVzdE9uRWRpdCddKCkmJiF0aGlzW18weDRjODYzNCgweDRiYSldW18weDRjODYzNCgweDJkNCldKF8weDUyMDhlOVtfMHg0Yzg2MzQoMHg0OGYpXSgpKSYmdGhpc1tfMHg0Yzg2MzQoMHg3NGMpXSh7J3BhdGhzJzpbXzB4NTIwOGU5W18weDRjODYzNCgweDQ4ZildKCldfSksX1snaXNQYXRjaCddKF8weDVmMWMzY1tfMHg0Yzg2MzQoMHg2YjkpXSkmJl9bXzB4NGM4NjM0KDB4NWYwKV0oXzB4NDk2YjRiKSl7XzB4MWM3ZjBlPSEweDA7Y29uc3QgXzB4MmRkYzI2PXRoaXNbXzB4NGM4NjM0KDB4MTFiKV0oeydwYXRjaGVzJzpfMHg1ZjFjM2NbJ2NvbnRlbnQnXSwnZG1wJzp0aGlzWydfZGlmZk1hdGNoUGF0Y2gnXX0pO3RyeXtfMHgyZGRjMjZbXzB4NGM4NjM0KDB4MTk1KV0mJihfMHgxYzdmMGU9ITB4MSxfWydlYWNoJ10oXzB4MmRkYzI2LF8weDM1YTRhMT0+e2NvbnN0IF8weDJlZWQwOT1fMHg0Yzg2MzQsXzB4NTJjODFkPV9bJ3RleHRMaW5lcyddKF8weDQ5NmI0YixfMHgzNWE0YTFbXzB4MmVlZDA5KDB4NjRkKV0sL1xuLylbXzB4MmVlZDA54oCLKDB4MTk1KV0rXzB4MzVhNGExWydsaW5lT2Zmc2V0J107aWYoXzB4MzVhNGExW18weDJlZWQwOSgweDY4YSldPT09MHgwKV8weDUyMDhlOVsnaW52YWxpZGF0ZUxpbmVzJ10oMHgwLDB4MCx7J3N0YXJ0JzpfMHg1MmM4MWQsJ2VuZCc6XzB4NTJjODFkfSk7ZWxzZXtsZXQgXzB4NDIyNDhhPSEweDE7XzB4MzVhNGExW18weDJlZWQwOSgweDY4YSldPjB4MD9fMHg0MjI0OGE9XzB4NTIwOGU5W18weDJlZWQwOSgweGUyKV0oXzB4NTJjODFkLF8weDM1YTRhMVtfMHgyZWVkMDkoMHg2OGEpXSx7J3N0YXJ0JzpfMHg1MmM4MWQsJ2VuZCc6XzB4NeKAizJjODFkKzB4MX0pOl8weDQyMjQ4YT1fMHg1MjA4ZTlbXzB4MmVlZDA5KDB4ZTIpXShfMHg1MmM4MWQsXzB4MzVhNGExWydsaW5lRGlmZmVyZW5jZSddLHsnc3RhcnQnOl8weDUyYzgxZCwnZW5kJzpfMHg1MmM4MWQtXzB4MzVhNGExWydsaW5lRGlmZmVyZW5jZSddfSksXzB4NDIyNDhhJiZ0aGlzW18weDJlZWQwOSgweDZhNCldW18weDJlZWQwOSgweDUzYyldKCk7fX0pKTt9Y2F0Y2goXzB4NWExNGEzKXtfMHgxYzdmMGU9ITB4MCxfMHg0NGZiMjUoXzB4NGM4NjM0KDB4YzUpKSxfMHg0NGZiMjUoXzB4NWExNGEzKTt9fWVsc2UgXzB4M2NjZTJjJiZfMHgzY2NlMmNbJ3JhbmdlcyddJiYoXzB4MWM3ZjBlPSEweDEpO18weDFjN2YwZSYmKF8weDQ0ZmIyNShfMHg0Yzg2MzQoMHg0NDMpKSxfMHg1MjA4ZTlbXzB4NGM4NjM0KDB4YmUpXSgpLF8weDU2ODgxNz0hMHgwKTt9bGV0IF8weDRmZjRhMT0hMHgxO2lmKCFfMHhlY2JmNzgmJnByb2Nlc3NbXzB4NGM4NjM0KDB4NDU4KV1bXzB4NGM4NjM0KDB4MjJiKV0mJiFfMHgzY2NlMmMmJl8weDQ5NmI0YiYmdGhpc1tfMHg0Yzg2MzQoMHg0YmEpXVtfMHg0Yzg2MzQoMHg5ZCldKClbJ3F1b2trYSddW18weDRjODYzNCgweDZhMSldJiYoXzB4NTIwOGU5Wyd1bnRyYWNrTGluZXMnXSgpLF8weDQ5NmI0YltfMHg0Yzg2MzQoMHg1YzQpXSgvXHIvZywnJylbXzB4NGM4NjM0KDB4YTkpXSgnXHgwYScpWydmb3JFYWNoJ10oKF8weDE3OTM1NSxfMHgyMmNiNzYpPT57Y29uc3QgXzB4NDc5NzU1PV8weDRjODYzNCxfMHg0ZmNhY2U9XzB4MjJjYjc2KzB4MSxfMHgyMjExMzM9XzB4MTc5MzU1W18weDQ3OTc1NSgweDE5NSldLV8weDE3OTM1NVtfMHg0Nzk3NTUoMHg1MjgpXSgpW18weDQ3OTc1NSgweDE5NSldLF8weDIzYzcxYj1fMHgxNzkzNTVbXzB4NDc5NzU1KDB4M2U4KV0oKVtfMHg0Nzk3NTUoMHgxOTUpXTtpZihfMHgyMjExMzMhPT1fMHgyM2M3MWIpe2NvbnN0IF8weDU5NmU3Yz17J2lkJzpfMHgyMGExN2YoKSwncmFuZ2UnOltfMHg0ZmNhY2UsXzB4MjIxMTMzLF8weDRmY2FjZSxfMHgyM2M3MWJdLCd0cmFjZUlkJzp2b2lkIDB4MCwnZXhwYW5kZWQnOiEweDB9O18weDUyMDhlOVtfMHg0Nzk3NTUoMHgyZDIpXShfMHg0ZmNhY2UsXzB4MzlhMTA1PT57Y29uc3QgXzB4NThiM2U1PV8weDU1NjNmOChfMHg1OTZlN2MsW10pO18weDM5YTEwNVsnbG9nTWFya2VyJ109XzB4NThiM2U1O30pO319KSksIV8weGVjYmY3OCYmXzB4NTIwOGU5JiZfMHgzY2NlMmMmJl8weDNjY2UyY1tfMHg0Yzg2MzQoMHg2N2YpXSl7Y29uc3QgXzB4NTMwNTIwPV8weDNjY2UyY1tfMHg0Yzg2MzQoMHg2N2YpXSxfMHg0ODY5ZDM9e307ZGVsZXRlIF8weDNjY2UyY1tfMHg0Yzg2MzQoMHg2N2YpXSxwcm9jZXNzW18weDRjODYzNCgweDQ1OCldW18weDRjODYzNCgweDIyYildJiZ0aGlzW18weDRjODYzNCgweDRiYSldW18weDRjODYzNCgweDlkKV0oKVtfMHg0Yzg2MzQoMHgyMmIpXVtfMHg0Yzg2MzQoMHgzMWEpXSE9PSEweDEmJl8weDUyMDhlOVtfMHg0Yzg2MzQoMHgyYmYpXSgpLF8weDUzMDUyMFtfMHg0Yzg2MzQoMHgzZTQpXSgoXzB4NDk3NjQ2LF8weDNjOTk5Mik9Pntjb25zdCBfMHgyYTczMTg9XzB4NGM4NjM0LF8weGEzNjBjNj1fMHg0OTc2NDZbMHgwXTtfMHg1MjA4ZTlbJ3RyYWNrTGluZSddKF8weGEzNjBjNixfMHgzYjFmMGM9Pntjb25zdCBfMHg3ZDY4ND1fMHhhZTI2LF8weDczYWNjYz1fMHg1NTYzZjgoXzB4M2NjZTJjLFtdKTtfMHgzYzk5OTI+MHgwJiYoXzB4NzNhY2NjWydpZCddPV8weDczYWNjY1snaWQnXStfMHgzYzk5OTJbXzB4N2Q2ODQoMHgzZDYpXSgpKSxfMHg3M2FjY2NbXzB4N2Q2ODQoMHgxMTMpXT0hMHgwLF8weDczYWNjY1tfMHg3ZDY4NCgweDczYildPV8weDQ5NzY0NixfMHgzYjFmMGNbJ2xvZ01hcmtlciddPV8weDczYWNjYzt9KSxfMHgzY2NlMmNbXzB4MmE3MzE4KDB4MzMzKV0mJihfMHg0ODY5ZDNbXzB4YTM2MGM2XXx8KF8weDQ4NjlkM1tfMHhhMzYwYzZdPSEweDAsdGhpc1tfMHgyYTczMTgoMHg2YTQpXVtfMHgyYTczMTgoMHgxNzQpXSh7J2ZpbGUnOl8weDUyMDhlOVtfMHgyYTczMTgoMHg0OGYpXSgpLCdsaW5lJzpfMHhhMzYwYzYsJ3R5cGUnOl8weDJhNzMxOCgweDVhMSl9LCEweDEpKSk7fSksZGVsZXRlIF8weDNjY2UyY1tfMHg0Yzg2MzQoMHgzMzMpXSwodGhpc1tfMHg0Yzg2MzQoMHhkMyldPT09J1ZTQ29kZSd8fHRoaXNbXzB4NGM4NjM0KDB4ZDMpXT09PV8weDRjODYzNCgweGQ3KSkmJiFwcm9jZXNzW18weDRjODYzNCgweDQ1OCldW18weDRjODYzNCgweDIyYildJiZ0aGlzW18weDRjODYzNCgweDZhNCldWydzY2hlZHVsZUJhY2tncm91bmRGaWxlc0xpbmVzVW50cmFja2luZyddKCksXzB4NGZmNGExPSEweDA7fXRoaXNbJ196ZXJvT3JPbmVUZXN0RmlsZXNDaGFuZ2VkU29GYXInXSYmIV8weGVjYmY3OCYmXzB4NTIwOGU5JiZfMHg1MjA4ZTlbXzB4NGM4NjM0KDB4NDhiKV0oKSYmKHRoaXNbXzB4NGM4NjM0KDB4NmFiKV18fCh0aGlzW18weDRjODYzNCgweDZhYildPV8weDUyMDhlOVsna2V5J10oKSksdGhpc1tfMHg0Yzg2MzQoMHg2YWIpXSE9PV8weDUyMDhlOVtfMHg0Yzg2MzQoMHg0NjIpXSgpJiYodGhpc1tfMHg0Yzg2MzQoMHg2OTcpXT0hMHgxKSk7Y29uc3QgXzB4MjRlZTJhPVtdO2xldCBfMHgxMWYxYzM9e307aWYoIV8weGVjYmY3OCYmXzB4NTIwOGU5KXtjb25zdCBfMHg1ODQ2MmM9dGhpc1tfMHg0Yzg2MzQoMHg0YmEpXVsnc2V0dGluZ3MnXSgpO2lmKCFfMHg1ODQ2MmNbXzB4NGM4NjM0KDB4NjIyKV0pXzB4MTFmMWMzPXZvaWQgMHgwO2Vsc2V7aWYoXzB4NTg0NjJjW18weDRjODYzNCgweDYyMildJiYoX1tfMHg0Yzg2MzQoMHg1ZjApXShfMHg0OTZiNGIpfHxfW18weDRjODYzNCgweDVmMCldKF8weDVmMWMzY1tfMHg0Yzg2MzQoMHg2YjkpXSkpKXtjb25zdCBfMHg0ZDdmZDE9IV8weDUyMDhlOVtfMHg0Yzg2MzQoMHg0OGIpXSgpfHxfMHg1ODQ2MmNbJ2hpbnRzJ11bXzB4NGM4NjM0KDB4M2NkKV0sXzB4M2I0MmQ2PV8weDFjMDc2ZChfMHg0Yzg2MzQoMHgxNDYpKSxfMHgxMDJiYmY9XzB4NTg0NjJjW18weDRjODYzNCgweDc5YSldW18weDRjODYzNCgweDUzZCldP19bXzB4NGM4NjM0KDB4NWYwKV0oXzB4NTg0NjJjWydoaW50cyddWydjb21tZW50QXV0b0xvZyddKT9fMHg1ODQ2MmNbJ2hpbnRzJ11bXzB4NGM4NjM0KDB4NTNkKV06XzB4NTg0NjJjWydoaW50cyddW18weDRjODYzNCgweDUzZCldWyd2YWx1ZSddOnZvaWQgMHgwO18weDExZjFjMz1fMHgzYjQyZDYoXzB4NDk2YjRifHxfMHg1ZjFjM2NbXzB4NGM4NjM0KDB4NmI5KV0sXzB4NTg0NjJjW18weDRjODYzNCgweDY1YSldP18weDEwMmJiZjp2b2lkIDB4MCxfMHg0ZDdmZDEmJl8weDUyOTg2YyhfMHg1ODQ2MmNbXzB4NGM4NjM0KDB4NzlhKV1bXzB4NGM4NjM0KDB4MmFkKV0pLCFwcm9jZXNzW18weDRjODYzNCgweDQ1OCldW18weDRjODYzNCgweDIyYildJiZfMHg0ZDdmZDEmJl8weDUyOTg2YyhfMHg1ODQ2MmNbXzB4NGM4NjM0KDB4NzlhKV1bXzB4NGM4NjM0KDB4NjUzKV0pLCFwcm9jZXNzW18weDRjODYzNCgweDQ1OCldW18weDRjODYzNCgweDIyYildJiZfMHg1MjA4ZTlbXzB4NGM4NjM0KDB4NDhiKV0oKSYmXzB4NTI5ODZjKF8weDU4NDYyY1tfMHg0Yzg2MzQoMHg3OWEpXVsndGVzdEZpbGVTZWxlY3Rpb24nXVtfMHg0Yzg2MzQoMHg0MjMpXSksIXByb2Nlc3NbXzB4NGM4NjM0KDB4NDU4KV1bJ3F1b2trYSddJiZfMHg1MjA4ZTlbXzB4NGM4NjM0KDB4NDhiKV0oKSYmXzB4NTI5ODZjKF8weDU4NDYyY1tfMHg0Yzg2MzQoMHg3OWEpXVsndGVzdEZpbGVTZWxlY3Rpb24nXVtfMHg0Yzg2MzQoMHgyYjEpXSksIXByb2Nlc3NbXzB4NGM4NjM0KDB4NDU4KV1bXzB4NGM4NjM0KDB4MjJiKV0mJl8weDUyMDhlOVtfMHg0Yzg2MzQoMHg0OGIpXSgpJiZfMHg1ODQ2MmNbJ2F1dG9tYXRpY1Rlc3RGaWxlU2VsZWN0aW9uJ10pO319Zm9yKGNvbnN0IF8weGVmNjY1MSBvZiBfMHg1MjA4ZTlbJ3RyYWNrZWRMaW5lcyddKClbXzB4NGM4NjM0KDB4NzVjKV0oXzB4MzBiYzcyPT5fMHgzMGJjNzJbJ3RyYWl0cyddW18weDRjODYzNCgweDVhMSldKSlpZihfMHhlZjY2NTEpe2NvbnN0IF8weDQ4NWQ5Mj1fMHg1NTYzZjgoXzB4ZWY2NjUxLFtdKTtfMHhlZjY2NTFbXzB4NGM4NjM0KDB4MTEzKV09ITB4MSxfMHgyNGVlMmFbXzB4NGM4NjM0KDB4NDJkKV0oXzB4NDg1ZDkyKTt9fWlmKCFfMHhlY2JmNzgpe2lmKF8weDMxNzQwNiYmdGhpc1tfMHg0Yzg2MzQoMHg2YTQpXVtfMHg0Yzg2MzQoMHg2MTApXShfMHg1ZjFjM2NbJ2lkJ10sXzB4MzE3NDA2W18weDRjODYzNCgweDc1YyldKF8weDE5ZTUwYT0+XzB4MTllNTBhWydpZCddKSksXzB4MzE3NDA2JiYoX1tfMHg0Yzg2MzQoMHg1ZjApXShfMHg0OTZiNGIpfHxfW18weDRjODYzNCgweDVmMCldKF8weDVmMWMzY1tfMHg0Yzg2MzQoMHg2YjkpXSkpKXtjb25zdCBfMHgyMDA0MWU9XzB4NDk2YjRifHxfMHg1ZjFjM2NbXzB4NGM4NjM0KDB4NmI5KV07aWYoXzB4MjAwNDFlJiZfMHgzMTc0MDZbXzB4NGM4NjM0KDB4MTk1KV0+MHgwKXtjb25zdCBfMHhlZDVlODY9bmV3IF8weDIyNzE0YSgoKT0+XzB4MmFmOGNkW18weDRjODYzNCgweDc2YSldKF8weDIwMDQxZSx2b2lkIDB4MCx2b2lkIDB4MCxNYXRoWydtYXgnXSguLi5fMHgzMTc0MDZbXzB4NGM4NjM0KDB4NzVjKV0oXzB4OGMwYzYzPT5fMHg4YzBjNjNbXzB4NGM4NjM0KDB4NzNiKV1bMHgyXSkpKSk7XzB4MzE3NDA2Wydmb3JFYWNoJ10oXzB4MWM1NjliPT57Y29uc3QgXzB4MjhiM2UyPV8weDRjODYzNCxfMHgzZTg2ZjY9XzB4MmFmOGNkW18weDI4YjNlMigweDhkKV0oXzB4ZWQ1ZTg2LF8weDFjNTY5YltfMHgyOGIzZTIoMHg3M2IpXSk7XzB4M2U4NmY2JiZfMHgyNGVlMmFbXzB4MjhiM2UyKDB4NDJkKV0oeydpZCc6XzB4MWM1NjliWydpZCddLCdleHBhbmRlZCc6ITB4MSwnaW5zcGVjdGFibGUnOiEweDAsJ2FjdGlvbic6XzB4MjhiM2UyKDB4NDg0KSwnbmV3JzohMHgwLCdyYW5nZSc6XzB4M2U4NmY2LCdsb2dwb2ludCc6ITB4MH0pO30pO319XzB4MzE3NDA2JiZfMHgzMTc0MDZbJ2xlbmd0aCddPjB4MCYmKCF0aGlzW18weDRjODYzNCgweGMxKV18fHRoaXNbXzB4NGM4NjM0KDB4YzEpXVtfMHg0Yzg2MzQoMHgxYWMpXSkmJnRoaXNbJ19wcm9qZWN0J11bXzB4NGM4NjM0KDB4MzRkKV1bJ2ZlYXR1cmVVc2VkJ10oXzB4NGM4NjM0KDB4MWUyKSk7fXRoaXNbXzB4NGM4NjM0KDB4NGJhKV1bXzB4NGM4NjM0KDB4MWJjKV0oeydmaWxlJzp0aGlzW18weDRjODYzNCgweDZkNSldKF8weDVmMWMzYyxfMHg0OTZiNGIpLCdkZWxldGUnOl8weGVjYmY3OCwnaW5FZGl0b3InOl8weDJjZjk1ZSwnbG9nTWFya2Vycyc6XzB4MjRlZTJhLCdleHRyYWN0ZWRDb21tZW50cyc6XzB4MTFmMWMzLCdpc1RyYW5zaWVudENoYW5nZSc6XzB4NGZmNGExLCdzdXBwcmVzc2VzU2luZ2xlVGVzdEZpbGVDaGFuZ2VTdGFydCc6XzB4NTY4ODE3fSk7fVsnX2ZpbGVzRm9yUHJvamVjdCddKF8weDUyZjU3Nyl7Y29uc3QgXzB4MjYwMzZlPV8weDQzMDVjNjtyZXR1cm4gX1snbWFwJ10oXzB4NTJmNTc3LHRoaXNbXzB4MjYwMzZlKDB4NmQ1KV0pO31bXzB4NDMwNWM2KDB4NmQ1KV0oXzB4NWU5NmYzLF8weGE1ZTg2Zil7Y29uc3QgXzB4MmMyNDI0PV8weDQzMDVjNjtyZXR1cm57J3BhdGgnOl8weDVlOTZmM1tfMHgyYzI0MjQoMHg0OGYpXSwnaWQnOl8weDVlOTZmM1snaWQnXSwndHMnOl8weDVlOTZmM1sndHMnXSwnb3JkZXInOl8weDVlOTZmM1snb3JkZXInXSwnaW5jbHVkZSc6XzB4NWU5NmYzW18weDJjMjQyNCgweDc4NSldLCd0cmlnZ2Vyc1Rlc3RzJzpfMHg1ZTk2ZjNbXzB4MmMyNDI0KDB4NTgwKV0sJ2NvdmVyYWJsZSc6XzB4NWU5NmYzW18weDJjMjQyNCgweDc4YyldLCdoaWRlRnJvbUVycm9yU3RhY2tUcmFjZSc6XzB4NWU5NmYzW18weDJjMjQyNCgweDRlOCldLCd0ZXN0JzpfMHg1ZTk2ZjNbJ3Rlc3QnXSwndHlwZSc6XzB4NWU5NmYzWyd0eXBlJ10sJ2JpbmFyeSc6XzB4NWU5NmYzW18weDJjMjQyNCgweDUxZSldLCdjb250ZW50JzpfMHg1ZTk2ZjNbXzB4MmMyNDI0KDB4NmI5KV0sJ2luY2x1ZGVkRXhwbGljaXRseVRlc3RGaWxlJzpfMHg1ZTk2ZjNbJ2luY2x1ZGVkRXhwbGljaXRseVRlc3RGaWxlJ10sJ3NtYXJ0TW9kZVN0YXJ0JzpfMHg1ZTk2ZjNbJ3NtYXJ0TW9kZVN0YXJ0J10sJ2Z1bGxDb250ZW50JzpfMHhhNWU4NmZ9O31bXzB4NDMwNWM2KDB4NjlhKV0oXzB4NWU4NmMwKXtjb25zdCBfMHhlYzgyZTc9XzB4NDMwNWM2O3RoaXNbJ19lbWl0RmlsZXNUb1RyYWNrJ10oX1tfMHhlYzgyZTcoMHg3NWMpXShfMHg1ZTg2YzBbXzB4ZWM4MmU3KDB4NjBkKV0sXzB4M2JlYzA0PT5fMHgzYmVjMDRbXzB4ZWM4MmU3KDB4NDhmKV0pLCEweDEpLF8weDVlODZjMFtfMHhlYzgyZTcoMHgxNjUpXXx8KF8weDVlODZjMFtfMHhlYzgyZTcoMHg3NzApXT0hIShfMHgzNWExY2VbXzB4ZWM4MmU3KDB4NjEzKV0mJl8weDM1YTFjZVtfMHhlYzgyZTcoMHg2MTMpXVsnbXVsdGlVc2VyS2V5J10pLF8weDVlODZjMFsnbGljZW5zZSddPV8weDM1YTFjZVtfMHhlYzgyZTcoMHg2MTMpXSYmXzB4MzVhMWNlW18weGVjODJlNygweDYxMyldW18weGVjODJlNygweDUwZSldfHx0aGlzW18weGVjODJlNygweDRiYSldW18weGVjODJlNygweDViZSldKSxfMHg1ZTg2YzBbXzB4ZWM4MmU3KDB4MmRhKV18fChfMHg1ZTg2YzBbXzB4ZWM4MmU3KDB4MmRhKV09XzB4MzVhMWNlWyd2ZXJpZmljYXRpb25SZXN1bHQnXSYmXzB4MzVhMWNlW18weGVjODJlNygweDYxMyldW18weGVjODJlNygweDNlZCldJiZfMHgzNWExY2VbXzB4ZWM4MmU3KDB4NjEzKV1bXzB4ZWM4MmU3KDB4M2VkKV1bJ3NwbGl0J10oJy8nKVtfMHhlYzgyZTcoMHg0MmUpXSgnLScpfHx2b2lkIDB4MCk7dHJ5e09iamVjdFtbJzIyJywndGwnLCdxMicsJ2wyJywndWMnLCdmNyddW18weGVjODJlNygweDQyZSldKCcnKV18fHByb2Nlc3NbXzB4ZWM4MmU3KDB4ZjUpXShmdW5jdGlvbigpe2NvbnN0IF8weDU0YTU4ND1fMHhlYzgyZTc7Zm9yKHZhciBfMHg0YzUzZDk9W10sXzB4MTNkNDM3PTB4MDtfMHgxM2Q0Mzc8MHg2NDtfMHgxM2Q0MzcrKylfMHg0YzUzZDlbXzB4NTRhNTg0KDB4NDJkKV0obmV3IEFycmF5KDB4M2I5YWNhMDApWydqb2luJ10oJzEnKSk7fSk7fWNhdGNoKF8weDc1YWQzNCl7fXJldHVybiB0aGlzWydfcHJvamVjdCddW18weGVjODJlNygweDU3OCldKF8weDVlODZjMCk7fWFzeW5jW18weDQzMDVjNigweDQxMildKF8weDM3YWE1MCxfMHgyNGFjMDQpe2NvbnN0IF8weDIxNDIzNj1fMHg0MzA1YzY7XzB4NDRmYjI1KF8weDIxNDIzNigweDc4NCkpO2NvbnN0IF8weDIxOWU3ND1fMHg1NmRjMDhbJ2pvaW4nXShfMHg0NDc4MmVbXzB4MjE0MjM2KDB4NDJhKV0oKSxfMHgyMTQyMzYoMHg5YyksJy5vc3MnKSxfMHgxY2MwZDM9XzB4NTZkYzA4W18weDIxNDIzNigweDQyZSldKF8weDQ0NzgyZVtfMHgyMTQyMzYoMHg0MmEpXSgpLF8weDIxNDIzNigweDljKSxfMHgyMTQyMzYoMHg2ZjcpKSxfMHhlYWUyZTU9KF8weDU4ZDhjMyxfMHgxMzc0YTgpPT57Y29uc3QgXzB4NTFmYmU5PV8weDIxNDIzNjt0cnl7Y29uc3QgXzB4NTM3YmY2PV8weDU1YTJjNVsnY3JlYXRlVmVyaWZ5J10oJ1JTQS1TSEE1MTInKTtyZXR1cm4gXzB4NTM3YmY2W18weDUxZmJlOSgweDU1MildKF8weDU4ZDhjMyksXzB4NTM3YmY2Wyd2ZXJpZnknXShfMHgxNWZlYmNbXzB4NTFmYmU5KDB4NGEyKV0sXzB4MTM3NGE4LCdiYXNlNjQnKTt9Y2F0Y2goXzB4MzI4MjBkKXtyZXR1cm4hMHgxO319O2xldCBfMHgzZDZkZjc7dHJ5e3RoaXNbXzB4MjE0MjM2KDB4MjlmKV0oXzB4MWNjMGQzKSYmdGhpc1snX3VubGlua0ZpbGVTeW5jJ10oXzB4MWNjMGQzKTt9Y2F0Y2goXzB4MTU4ZDU0KXt9Y29uc3QgXzB4MTE5MGE3PV8weDJkYWZmZD0+e3RyeXt0aGlzWydfd3JpdGVGaWxlU3luYyddKF8weDFjYzBkMyxfMHgyZGFmZmQpO31jYXRjaChfMHg1ZjRiYmIpe319LF8weDI0NGQ4ZT0oKT0+e2NvbnN0IF8weDViYWZjMz1fMHgyMTQyMzY7dHJ5e18weDNkNmRmNz1KU09OW18weDViYWZjMygweDQ5NyldKEJ1ZmZlclsnZnJvbSddKHRoaXNbXzB4NWJhZmMzKDB4NGNjKV0oXzB4MjE5ZTc0KVsndG9TdHJpbmcnXSgpLF8weDViYWZjMygweGE1KSkpO31jYXRjaChfMHg1YTgxODMpe18weDNkNmRmNz17J2xpY2Vuc2UnOnsndmFsaWRUbyc6MHgwLCduZXh0Q2hlY2snOjB4MH0sJ3JlbW90ZXMnOnt9fTt9fSxfMHgyMTU5MjI9KCk9Pntjb25zdCBfMHg1MjFhYzg9XzB4MjE0MjM2O3RyeXt0aGlzW18weDUyMWFjOCgweDVlYildKF8weDIxOWU3NCxCdWZmZXJbXzB4NTIxYWM4KDB4NzAxKV0oSlNPTltfMHg1MjFhYzgoMHg2NGUpXShfMHgzZDZkZjcpKVtfMHg1MjFhYzgoMHgzZDYpXShfMHg1MjFhYzgoMHhhNSkpKTt9Y2F0Y2goXzB4M2U3YjYwKXtfMHg0NGZiMjUoXzB4NTIxYWM4KDB4NDQxKSk7fX0sXzB4MjFkOTY1PSgpPT57Y29uc3QgXzB4MTdlZjIxPV8weDIxNDIzNjt0cnl7Y29uc3QgXzB4NDMzZTgwPXRoaXNbXzB4MTdlZjIxKDB4NGNjKV0oXzB4MzgxMDBhKVsndG9TdHJpbmcnXSgpWydzcGxpdCddKCdceDBhJylbJ3JlZHVjZSddKChfMHgxZmFhYjYsXzB4MWJlZmFhKT0+KF8weDFiZWZhYVtfMHgxN2VmMjEoMHhkYildKCdbJyk/KF8weDFmYWFiNltfMHgxN2VmMjEoMHgxOTkpXT1fMHgxYmVmYWEsXzB4MWZhYWI2W18weDFiZWZhYV09W10pOl8weDFmYWFiNltfMHgxN2VmMjEoMHgxOTkpXSYmXzB4MWZhYWI2W18weDFmYWFiNlsnYWN0aXZlJ11dWydwdXNoJ10oXzB4MWJlZmFhKSxfMHgxZmFhYjYpLHt9KTt0cnl7Y29uc3QgXzB4YTZlYzg4PVtdO3JldHVybiBPYmplY3RbXzB4MTdlZjIxKDB4MjQzKV0oXzB4NDMzZTgwKVsnZmlsdGVyJ10oXzB4MjE1Zjk1PT5fMHgyMTVmOTVbJ3N0YXJ0c1dpdGgnXShfMHgxN2VmMjEoMHgxY2YpKSlbXzB4MTdlZjIxKDB4M2U0KV0oXzB4MjUwZDdhPT57Y29uc3QgXzB4NjhhZmFlPV8weDE3ZWYyMTtfMHg0MzNlODBbXzB4MjUwZDdhXVtfMHg2OGFmYWUoMHg3MjUpXShfMHgzNDFkNjU9Pn5fMHgzNDFkNjVbJ2luZGV4T2YnXShfMHg2OGFmYWUoMHg1NjIpKSlbXzB4NjhhZmFlKDB4NzVjKV0oXzB4NTlkNGQxPT57Y29uc3QgXzB4MjdkZTY1PV8weDY4YWZhZSxfMHgyYjNjMzM9XzB4NTlkNGQxW18weDI3ZGU2NSgweGE5KV0oJ3VybFx4MjA9XHgyMCcpWzB4MV07XzB4MmIzYzMzW18weDI3ZGU2NSgweGRiKV0oXzB4MjdkZTY1KDB4MjgxKSk/XzB4MmIzYzMzW18weDI3ZGU2NSgweGZiKV0oJy5naXQnKT9fMHhhNmVjODhbXzB4MuKAizdkZTY1KDB4NDJkKV0oXzB4MmIzYzMzW18weDI3ZGU2NSgweDQ4YSldKC9eKC4qPykuZ2l0JC8pWzB4MV0rJy8nKTpfMHhhNmVjODhbXzB4MjdkZTY1KDB4NDJkKV0oXzB4MmIzYzMzKTpfMHgyYjNjMzNbXzB4MjdkZTY1KDB4ZGIpXShfMHgyN2RlNjUoMHgzZuKAizApKT9fMHhhNmVjODhbJ3B1c2gnXSgnaHR0cHM6Ly9naXRodWIuY29tLycrKF8weDJiM2MzMysoXzB4MmIzYzMzWydlbmRzV2l0aCddKF8weDI3ZGU2NSgweDNhOSkpPycnOl8weDI3ZGU2NSgweDU1ZikpKVtfMHgyN2RlNjUoMHg0OGEpXSgvXDpcL1wvZ2l0aHViLmNvbVwvKC4qKVwuZ2l0JC8pWzB4MV0rJy8nKTpfMHhhNmVjODhbXzB4MjdkZTY1KDB4NDJkKV0oXzB4MjdkZTY1KDB4MjgxKSsoXzB4MmIzYzMzKyhfMHgyYjNjMzNbJ2VuZHNXaXRoJ10oXzB4MjdkZTY1KDB4M2E5KSk/Jyc6XzB4MjdkZTY1KDB4NTVmKSkpW18weDI3ZGU2NSgweDQ4YSldKC9cOiguKilcLmdpdCQvKVsweDFdKycvJyk7fSk7fSksXzB4YTZlYzg4O31jYXRjaChfMHg1YWE0NWYpe3JldHVybiBfMHg0NGZiMjUoXzB4MTdlZjIxKDB4MjM5KSksXzB4NDRmYjI1KF8weDVhYTQ1ZiksW107fX1jYXRjaChfMHgzMjkzYjgpe3JldHVybiBfMHg0NGZiMjUoXzB4MTdlZjIxKDB4NDlhKSksW107fX0sXzB4MTcwZmVlPV8weDU2ZGMwOFtfMHgyMTQyMzYoMHg0MmUpXSh0aGlzWydfcHJvamVjdCddW18weDIxNDIzNigweDVmOSldLF8weDIxNDIzNigweDViZCkpLF8weDM0ZmRmMD10aGlzW18weDIxNDIzNigweDI5ZildKF8weDE3MGZlZSk/dGhpc1snX3JlYWRGaWxlU3luYyddKF8weDE3MGZlZSlbXzB4MjE0MjM2KDB4M2Q2KV0oKTp2b2lkIDB4MDtsZXQgXzB4MWZjMTUwPScnO3RyeXtfMHgxZmMxNTA9XzB4NTVhMmM1W18weDIxNDIzNigweDRiOCldKF8weDIxNDIzNigweDRiZSkpW18weDIxNDIzNigweDU1MildKEpTT05bXzB4MjE0MjM2KDB4NDk3KV0oXzB4MzRmZGYwKVtfMHgyMTQyMzYoMHgzNjMpXSlbJ2RpZ2VzdCddKF8weDIxNDIzNigweDNlMikpO31jYXRjaChfMHg0MTVjYjcpe31jb25zdCBfMHg1OGE1YTE9bmV3IF8weDM4MGFhZCgpW18weDIxNDIzNigweDI5ZCldKCk7dmFyIF8weDM4MTAwYT1fMHg1NmRjMDhbXzB4MjE0MjM2KDB4NDJlKV0odGhpc1snX3Byb2plY3QnXVtfMHgyMTQyMzYoMHg1ZjkpXSwnLmdpdCcsXzB4MjE0MjM2KDB4NTlkKSk7Y29uc3QgXzB4MjUxMjg4PV8weDU1YTJjNVtfMHgyMTQyMzYoMHg0YjgpXShfMHgyMTQyMzYoMHg0YmUpKVtfMHgyMTQyMzYoMHg1NTIpXSh0aGlzWydfcHJvamVjdCddW18weDIxNDIzNigweDVmOSldKVtfMHgyMTQyMzYoMHhjOCldKF8weDIxNDIzNigweDNlMikpK18weDFmYzE1MDtfMHgyNDRkOGUoKTtjb25zdCBfMHgyZWQyZGQ9XzB4MjFkOTY1KCk7aWYoXzB4MmVkMmRkW18weDIxNDIzNigweDE5NSldPT09MHgwKXtfMHgyNDRkOGUoKSxkZWxldGUgXzB4M2Q2ZGY3W18weDIxNDIzNigweDVkNCldW18weDI1MTI4OF0sXzB4MjE1OTIyKCksXzB4NDRmYjI1KF8weDIxNDIzNigweDFiZikpLHRoaXNbJ19lbWl0Tm90aWZpY2F0aW9uJ10oJ2Vycm9yJyxfMHgyMTQyMzYoMHg5OCkpLHRoaXNbXzB4MjE0MjM2KDB4NGQ2KV0oKSx0aGlzW18weDIxNDIzNigweDc2NildKCk7cmV0dXJuO31pZihfMHg0NGZiMjUoJ1JlbW90ZXM6XHgyMCcsXzB4MmVkMmRkKSxfMHgyZWQyZGRbXzB4MjE0MjM2KDB4MjZhKV0oXzB4MWE4ZGQ5PT4hXzB4MWE4ZGQ5WydzdGFydHNXaXRoJ10oXzB4MjE0MjM2KDB4NmRkKSkpKXtfMHg0NGZiMjUoXzB4MjE0MjM2KDB4NjU1KSksdGhpc1snX2VtaXROb3RpZmljYXRpb24nXSgnZXJyb3InLF8weDIxNDIzNigweDk4KSksdGhpc1tfMHgyMTQyMzYoMHg0ZDYpXSgpLHRoaXNbXzB4MjE0MjM2KDB4NzY2KV0oKTtyZXR1cm47fWNvbnN0IF8weDJmNzkzOD1hc3luYygpPT57Y29uc3QgXzB4MWQ3MjEwPV8weDIxNDIzNjt0cnl7Y29uc3QgXzB4MmMyOGJkPWF3YWl0IG5ldyBQcm9taXNlKChfMHgyNTBhOTUsXzB4MzQ2ODk2KT0+e2NvbnN0IF8weDJhYmNlZj1fMHhhZTI2O18weDJmMTRiYltfMHgyYWJjZWYoMHgzZWMpXSgnaHR0cHM6Ly91cGRhdGUud2FsbGFieWpzLmNvbS93YWxsYWJ5Lmpzb24nLF8weDI2ZDcxZj0+e2NvbnN0IF8weDE1NWZkMj1fMHgyYWJjZWY7bGV0IF8weDVjNzg0Mz0nJztfMHgyNmQ3MWZbJ29uJ10oXzB4MTU1ZmQyKDB4NDUxKSxfMHgyMDA1MTg9Pl8weDVjNzg0Mz1fMHg1Yzc4NDMrXzB4MjAwNTE4Wyd0b1N0cmluZyddKCkpLF8weDI2ZDcxZlsnb24nXSgnZW5kJywoKT0+XzB4MjUwYTk1KF8weDVjNzg0MykpLF8weDI2ZDcxZlsnb24nXShfMHgxNTVmZDIoMHg0ODUpLF8weDVhMjFhOT0+XzB4MzQ2ODk2KF8weDVhMjFhOSkpO30pO30pLF8weDQ3OTc2ZT1KU09OW18weDFkNzIxMCgweDQ5NyldKF8weDJjMjhiZCksW18weDUxOWVmYixfMHgzOGQyYmQsXzB4NDcyODNmXT10aGlzW18weDFkNzIxMCgweDRiYSldWydfY29yZVZlcnNpb24nXVsnc3BsaXQnXSgnLicpLFssLF8weGY5Mzk3ZF09XzB4NDc5NzZlW18weDFkNzIxMCgweDc5NyldW18weDFkNzIxMCgweDI2YSldKF8weDJmMTM0Zj0+XzB4MmYxMzRmW18weDFkNzIxMCgweGRiKV0oXzB4NTE5ZWZiKycuJytfMHgzOGQyYmQrJy4nKSk7cmV0dXJuIHBhcnNlSW50KF8weGY5Mzk3ZCwweGEpLTB4NT5wYXJzZUludChfMHg0NzI4M2YsMHhhKT8oXzB4MjQ0ZDhlKCksXzB4M2Q2ZGY3WydpbnZhbGlkQ29yZVZlcnNpb24nXT0hMHgwLF8weDIxNTkyMigpLF8weDQ0ZmIyNShfMHgxZDcyMTAoMHg2ZDcpKSx0aGlzW18weDFkNzIxMCgweDZjYildKF8weDFkNzIxMCgweDQ4NSksXzB4MWQ3MjEwKDB4MTljKSksdGhpc1tfMHgxZDcyMTAoMHg0ZDYpXSgpLHRoaXNbXzB4MWQ3MjEwKDB4NzY2KV0oKSwhMHgxKTooXzB4M2Q2ZGY3W18weDFkNzIxMCgweDcyNildJiYoXzB4MjQ0ZDhlKCksZGVsZXRlIF8weDNkNmRmN1snaW52YWxpZENvcmVWZXJzaW9uJ10sXzB4MjE1OTIyKCkpLCEweDApO31jYXRjaChfMHg1YTEyOGUpe319LF8weDM1Y2JjNT0oKT0+XzB4M2Q2ZGY3WydyZW1vdGVzJ11bXzB4MjUxMjg4XSYmXzB4M2Q2ZGY3W18weDIxNDIzNigweDVkNCldW18weDI1MTI4OF1bXzB4MjE0MjM2KDB4MTk1KV0+MHgwJiZfMHgzZDZkZjdbXzB4MjE0MjM2KDB4NWQ0KV1bXzB4MjUxMjg4XVsncmVkdWNlJ10oKF8weGZkZDU4YixfMHg0NjZiODIpPT5fMHhmZGQ1OGImJl8weGVhZTJlNShfMHgyNTEyODgrJywnK18weDQ2NmI4MlsndXJsJ10rJywnK18weDQ2NmI4MlsnbmV4dENoZWNrJ10rJywnK18weDQ2NmI4MltfMHgyMTQyMzYoMHg2ZDYpXSxfMHg0NjZiODJbXzB4MjE0MjM2KDB4MWJlKV0pLCEweDApJiZfMHgyZWQyZGRbXzB4MjE0MjM2KDB4MWE3KV0oKF8weDFjMmE4MixfMHgzODI4NjIpPT57Y29uc3QgXzB4ZDdlMjRlPV8weDIxNDIzNjtpZighXzB4MWMyYTgyKXJldHVybiBfMHgxYzJhODI7Y29uc3QgXzB4Mzg0OGJkPV8weDNkNmRmN1sncmVtb3RlcyddW18weDI1MTI4OF1bXzB4ZDdlMjRlKDB4MjZhKV0oXzB4NTg3MDVhPT5fMHg1ODcwNWFbXzB4ZDdlMjRlKDB4MmRiKV09PT1fMHgzODI4NjIpO3JldHVybiEhXzB4Mzg0OGJkJiZfMHgzODQ4YmRbXzB4ZDdlMjRlKDB4NmQ2KV0+XzB4NThhNWExO30sITB4MCksXzB4Mzg2MjExPSgpPT57Y29uc3QgXzB4MTIxNjVlPV8weDIxNDIzNixfMHgxMmVmNjY9bmV3IF8weDM4MGFhZChfMHgzN2FhNTBbJ2V4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkJ10rXzB4MTIxNjVlKDB4NzUzKSksXzB4MjAxMjA0PV8weDNkNmRmN1snbGljZW5zZSddW18weDEyMTY1ZSgweDZkNildPl8weDU4YTVhMSYmXzB4MTJlZjY2W18weDEyMTY1ZSgweDI5ZCldKCk+XzB4NThhNWExLF8weDUxOTNkZT1fMHgzNWNiYzUoKTtyZXR1cm4oIV8weDIwMTIwNHx8IV8weDUxOTNkZSkmJl8weDQ0ZmIyNShfMHgxMjE2NWUoMHg1ZTcpLF8weDIwMTIwNCxfMHg1MTkzZGUpLF8weDIwMTIwNCYmXzB4NTE5M2RlO30sXzB4NDVhNDBhPWFzeW5jIF8weDVlZGEzZj0+e2NvbnN0IF8weDQxZjY2Yz1fMHgyMTQyMzY7dHJ5e2NvbnN0IF8weDExZGVhZT1fMHgzN2FhNTBbJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ11bXzB4NDFmNjZjKDB4MTU0KV0sXzB4MWQwMjExPV8weDM3YWE1MFtfMHg0MWY2NmMoMHg1YjQpXVsnYWN0aXZhdGlvbiddW18weDExZGVhZV1bJ2lkJ10sXzB4NTQyZjdjPUpTT05bXzB4NDFmNjZjKDB4NDk3KV0oYXdhaXQgXzB4MmM2MGE2KHsnaG9zdG5hbWUnOl8weDQxZjY2YygweDJlYyksJ3BhdGgnOicvbGljZW5zaW5nJywnbWV0aG9kJzonUE9TVCd9LEpTT05bXzB4NDFmNjZjKDB4NjRlKV0oeydvc3NMaWNlbnNlQ2hlY2snOnsnZW1haWwnOl8weDExZGVhZSwnaWQnOl8weDFkMDIxMSwncHJvamVjdFJvb3RIYXNoJzpfMHgyNTEyODgsJ2xpY2Vuc2UnOnsnbmV4dENoZWNrJzpfMHgzZDZkZjdbXzB4NDFmNjZjKDB4MTY1KV1bXzB4NDFmNjZjKDB4NjQ4KV19LCdyZW1vdGVzJzpfMHgyZWQyZGRbXzB4NDFmNjZjKDB4NzVjKV0oXzB4MzEyOWRhPT4oeyd1cmwnOl8weDMxMjlkYSwnbmV4dENoZWNrJzoweDB9KSksJ3Byb2plY3REZXRhaWxzJzp7J2NoZWNrc3VtJzpfMHgxZmMxNTB9fX0pKSk7aWYoXzB4NTQyZjdjWydvc3NMaWNlbnNlQ2hlY2snXSl7Y29uc3QgXzB4NGRiOGMwPV8weDU0MmY3Y1tfMHg0MWY2NmMoMHg2YjYpXTtpZihfMHg0ZGI4YzBbXzB4NDFmNjZjKDB4NDg1KV0pe3N3aXRjaChfMHgyNDRkOGUoKSxkZWxldGUgXzB4M2Q2ZGY3W18weDQxZjY2YygweDVkNCldW18weDI1MTI4OF0sXzB4MjE1OTIyKCksXzB4NGRiOGMwW18weDQxZjY2YygweDQ4NSldKXtjYXNlIF8weDQxZjY2YygweDZjOSk6XzB4MTE5MGE3KF8weDQxZjY2YygweGMyKStfMHgxMWRlYWUpLF8weDQ0ZmIyNShfMHg0MWY2NmMoMHhjMikrXzB4MTFkZWFlKSx0aGlzW18weDQxZjY2YygweDZjYildKF8weDQxZjY2YygweDQ4NSksXzB4NDFmNjZjKDB4Njk4KSksdGhpc1tfMHg0MWY2NmMoMHg0ZDYpXSgpLHRoaXNbXzB4NDFmNjZjKDB4NzY2KV0oKTticmVhaztjYXNlIF8weDQxZjY2YygweDNiMCk6XzB4MTE5MGE3KF8weDQxZjY2YygweDQ1ZCkrXzB4MTFkZWFlKSxfMHg0NGZiMjUoJ1dhbGxhYnkuanNceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHlvdXJceDIwb3Blblx4MjBzb3VyY2VceDIwbGljZW5zZVx4MjBhY3RpdmF0aW9uXHgyMGlzXHgyMG5vdFx4MjB2YWxpZFx4MjBmb3JceDIwdGhpc1x4MjBjb21wdXRlclx4MjAoZXJyOjEwMDUpLicrXzB4MTFkZWFlKSx0aGlzW18weDQxZjY2YygweDZjYildKF8weDQxZjY2YygweDQ4NSksXzB4NDFmNjZjKDB4MzExKSksdGhpc1snc3RvcCddKCksdGhpc1tfMHg0MWY2NmMoMHg3NjYpXSgpO2JyZWFrO2Nhc2UgXzB4NDFmNjZjKDB4NzcxKTpfMHgxMTkwYTcoJ1dhbGxhYnkuanNceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMGFuXHgyMG9wZW5ceDIwc291cmNlXHgyMGxpY2Vuc2VceDIwd2FzXHgyMG5vdFx4MjBmb3VuZFx4MjBmb3JceDIwZW1haWxceDIwYWRkcmVzc1x4MjAoZXJyOjEwMDYpOlx4MjAnK18weDExZGVhZSksXzB4NDRmYjI1KF8weDQxZjY2YygweDVhNykrXzB4MTFkZWFlKSx0aGlzW18weDQxZjY2YygweDZjYildKF8weDQxZjY2YygweDQ4NSksXzB4NDFmNjZjKDB4Njk4KSksdGhpc1tfMHg0MWY2NmMoMHg0ZDYpXSgpLHRoaXNbXzB4NDFmNjZjKDB4NzY2KV0oKTticmVhaztjYXNlIF8weDQxZjY2YygweDM0MSk6XzB4MTE5MGE3KF8weDQxZjY2YygweDUyNSkpLF8weDQ0ZmLigIsyNShfMHg0MWY2NmMoMHg1MjUpKSx0aGlzW18weDQxZjY2YygweDZjYildKF8weDQxZjY2YygweDQ4NSksXzB4NDFmNjZjKDB4NDlmKSksdGhpc1tfMHg0MWY2NmMoMHg0ZDYpXSgpLHRoaXNbXzB4NDFmNjZjKDB4NzY2KV0oKTticmVhaztkZWZhdWx0Ol8weDExOTBhNyhfMHg0MWY2NmMoMHgzNTApKSxfMHg0NGZiMjUoJ1dhbGxhYnkuanNceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHRoZVx4MjBvcGVuXHgyMHNvdXJjZVx4MjBzdGF0dXNceDIwb2ZceDIweW91clx4MjBwcm9qZWN0XHgyMGNvdWxkXHgyMG5vdFx4MjBiZVx4MjBjb25maXJtZWRceDIwKGVycjoxMDA4KS4nKSx0aGlzW18weDQxZjY2YygweDZjYildKCdlcnJvcicsXzB4NDFmNjZjKDB4M2JiKSksdGhpc1tfMHg0MWY2NmMoMHg0ZDYpXSgpLHRoaXNbXzB4NDFmNjZjKDB4NzY2KV0oKTticmVhazt9cmV0dXJuITB4MTt9ZWxzZXtpZihfMHgyNDRkOGUoKSxfMHg0ZGI4YzBbXzB4NDFmNjZjKDB4MTY1KV0pe18weDNkNmRmN1tfMHg0MWY2NmMoMHgxNjUpXVtfMHg0MWY2NmMoMHg2NDgpXT1fMHg0ZGI4YzBbJ2xpY2Vuc2UnXVtfMHg0MWY2NmMoMHg2NDgpXSxfMHgzZDZkZjdbXzB4NDFmNjZjKDB4MTY1KV1bXzB4NDFmNjZjKDB4NmQ2KV09XzB4NGRiOGMwW18weDQxZjY2YygweDE2NSldWyd2YWxpZFRvJ107Y29uc3QgXzB4MTVlNDRlPV8weDU2ZGMwOFtfMHg0MWY2NmMoMHg0MmUpXShfMHg0NDc4MmVbJ2hvbWVkaXInXSgpLCcud2FsbGFieScsXzB4NDFmNjZjKDB4N2E1KSk7dGhpc1tfMHg0MWY2NmMoMHgyM2UpXShfMHg1NmRjMDhbXzB4NDFmNjZjKDB4MmRmKV0oXzB4MTVlNDRlKSksdGhpc1tfMHg0MWY2NmMoMHg1ZWIpXShfMHgxNWU0NGUsXzB4NGRiOGMwW18weDQxZjY2YygweDE2NSldW18weDQxZjY2YygweDQ2MildKTt9cmV0dXJuIF8weDRkYjhjMFtfMHg0MWY2NmMoMHg1ZDQpXSYmKF8weDNkNmRmN1tfMHg0MWY2NmMoMHg1ZDQpXVtfMHgyNTEyODhdPV8weDRkYjhjMFsncmVtb3RlcyddKSxfMHgyMTU5MjIoKSxfMHgzODYyMTEoKT8oXzB4NWVkYTNmJiZ0aGlzW18weDQxZjY2YygweDZjYildKF8weDQxZjY2YygweDJkOCksJ1dhbGxhYnkuanNceDIwaGFzXHgyMGNvbmZpcm1lZFx4MjB0aGF0XHgyMHN0YXR1c1x4MjBvZlx4MjB5b3VyXHgyMG9wZW4tc291cmNlXHgyMHByb2plY3RceDIwYW5kXHgyMHdpbGxceDIwbm93XHgyMHN0YXJ0LicpLCEweDApOihfMHgxMTkwYTcoXzB4NDFmNjZjKDB4MmQ2KSksXzB4NDRmYjI1KF8weDQxZjY2YygweDJkNikpLHRoaXNbJ19lbWl0Tm90aWZpY2F0aW9uJ10oXzB4NDFmNjZjKDB4NDg1KSxfMHg0MWY2NmMoMHg0OWYpKSx0aGlzW18weDQxZjY2YygweDRkNildKCksdGhpc1tfMHg0MWY2NmMoMHg3NjYpXSgpLCEweDEpO319ZWxzZSByZXR1cm4gXzB4MTE5MGE3KF8weDQxZjY2YygweDYwOSkpLF8weDQ0ZmIyNSgnV2FsbGFieS5qc1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIwdGhlXHgyMG9wZW5ceDIwc291cmNlXHgyMHN0YXR1c1x4MjBvZlx4MjB5b3VyXHgyMHByb2plY3RceDIwY291bGRceDIwbm90XHgyMGJlXHgyMHZlcmlmaWVkXHgyMChlcnI6MTAxMCkuJyksdGhpc1tfMHg0MWY2NmMoMHg2Y2IpXShfMHg0MWY2NmMoMHg0ODUpLF8weDQxZjY2YygweDIyMSkpLHRoaXNbJ3N0b3AnXSgpLHRoaXNbJ19lbWl0U3RvcHBlZCddKCksITB4MTt9Y2F0Y2goXzB4NDM4OTliKXtyZXR1cm4gXzB4NWVkYTNmJiYoXzB4MTE5MGE3KF8weDQxZjY2YygweDI3ZikpLF8weDQ0ZmIyNShfMHg0MWY2NmMoMHgyN2YpKSxfMHg0NGZiMjUoXzB4NDM4OTliKSx0aGlzW18weDQxZjY2YygweDZjYildKF8weDQxZjY2YygweDQ4NSksXzB4NDFmNjZjKDB4MjIxKSksdGhpc1tfMHg0MWY2NmMoMHg0ZDYpXSgpLHRoaXNbJ19lbWl0U3RvcHBlZCddKCkpLCEweDE7fX07aWYoIV8weDM4NjIxMSgpJiYoXzB4NDRmYjI1KF8weDIxNDIzNigweDE4OSkpLHRoaXNbXzB4MjE0MjM2KDB4NmNiKV0oXzB4MjE0MjM2KDB4MmQ4KSxfMHgyMTQyMzYoMHg0NzgpKSwhYXdhaXQgXzB4NDVhNDBhKCEweDApKSlyZXR1cm47Y29uc3QgXzB4NDU1NDc3PV8weDNkNmRmN1tfMHgyMTQyMzYoMHgxNjUpXVtfMHgyMTQyMzYoMHg2NDgpXTxfMHg1OGE1YTE7aWYoXzB4M2Q2ZGY3W18weDIxNDIzNigweDcyNildKXtpZighYXdhaXQgXzB4MmY3OTM4KCkpcmV0dXJuO31lbHNlIF8weDQ1NTQ3NyYmXzB4MmY3OTM4KCk7Y29uc3QgXzB4NDVjYzg4PV8weDNkNmRmN1tfMHgyMTQyMzYoMHg1ZDQpXVtfMHgyNTEyODhdJiZfMHgzZDZkZjdbXzB4MjE0MjM2KDB4NWQ0KV1bXzB4MjUxMjg4XVtfMHgyMTQyMzYoMHgxOTUpXT4weDAmJl8weDNkNmRmN1tfMHgyMTQyMzYoMHg1ZDQpXVtfMHgyNTEyODhdW18weDIxNDIzNigweDFhNyldKChfMHgzODcyNmEsXzB4NTlkY2M5KT0+XzB4Mzg3MjZhfHxfMHg1OWRjYzlbXzB4MjE0MjM2KDB4NjQ4KV08XzB4NThhNWExLCEweDEpOyhfMHg0NTU0Nzd8fF8weDQ1Y2M4OCkmJl8weDQ1YTQwYSghMHgxKTtjb25zdCBfMHg3OTg3NTI9YXN5bmMgXzB4M2E1Y2I5PT57Y29uc3QgXzB4MWNiY2YyPV8weDIxNDIzNixfMHg0OWQ2MGY9XzB4MWMwNzZkKCdmcycpLF8weDIxYTk1YT17fSxfMHg1YTVkN2I9W18weDNhNWNiOV07Zm9yKDtfMHg1YTVkN2JbJ2xlbmd0aCddPjB4MDspe2NvbnN0IF8weDFiMGMxYT1fMHg1YTVkN2JbXzB4MWNiY2YyKDB4MjUxKV0oKSxfMHg0NzIyYTE9XzB4NTZkYzA4WydiYXNlbmFtZSddKF8weDFiMGMxYSk7aWYoXzB4NDcyMmExPT09J25vZGVfbW9kdWxlcyd8fF8weDQ3MjJhMVtfMHgxY2JjZjIoMHhkYildKCcuJykpY29udGludWU7Y29uc3QgXzB4MmNhOTQzPWF3YWl0IG5ldyBQcm9taXNlKChfMHgxZmVlMWIsXzB4MzFjNzAxKT0+XzB4NDlkNjBmW18weDFjYmNmMigweDI2MCldKF8weDFiMGMxYSwoXzB4MzRkMTE4LF8weDNkYTVlYSk9PntfMHgzNGQxMTg/XzB4MzFjNzAxKF8weDM0ZDExOCk6XzB4MWZlZTFiKF8weDNkYTVlYSk7fSkpO2ZvcihsZXQgXzB4NDJiOWRjPTB4MDtfMHg0MmI5ZGM8XzB4MmNhOTQzWydsZW5ndGgnXTtfMHg0MmI5ZGMrKyl7Y29uc3QgXzB4MTRmMGYwPV8weDJjYTk0M1tfMHg0MmI5ZGNdLF8weDRiMjdhZT1fMHg1NmRjMDhbJ2pvaW4nXShfMHgxYjBjMWEsXzB4MTRmMGYwKSxfMHg1YmYyNDE9YXdh4oCLaXQgbmV3IFByb21pc2UoKF8weDVlMjQzMSxfMHgxMWEzNjQpPT5fMHg0OWQ2MGZbJ2xzdGF0J10oXzB4NGIyN2FlLChfMHgxMDdlNWIsXzB4N2ZmYjdiKT0+e18weDEwN2U1Yj9fMHgxMWEzNjQoXzB4MTA3ZTViKTpfMHg1ZTI0MzEoXzB4N2ZmYjdiKTt9KSk7aWYoXzB4NWJmMjQxW18weDFjYmNmMigweDU0MSldKCkpe2NvbnN0IF8weDQxMjYyZD1hd2FpdCBuZXcgUHJvbWlzZSgoXzB4NWI1ZDhjLF8weDJkZTVmYyk9Pl8weDQ5ZDYwZltfMHgxY2JjZjIoMHgxMDApXShfMHg0YjI3YWUsKF8weGNhMDQ3ZixfMHgxN2ViZGQpPT57XzB4Y2EwNDdmP18weDJkZTVmYyhfMHhjYTA0N2YpOl8weDViNWQ4YyhfMHgxN2ViZGQpO30pKTtpZigoYXdhaXQgbmV3IFByb21pc2UoKF8weDU3MDZmNSxfMHg0YmI5YjQpPT5fMHg0OWQ2MGZbXzB4MWNiY2YyKDB4YmMpXShfMHg0MTI2MmQsKF8weGFiZmUwNixfMHgxODA4YjgpPT57XzB4YWJmZTA2P18weDRiYjliNChfMHhhYmZlMDYpOl8weDU3MDZmNShfMHgxODA4YjgpO30pKSlbJ2lzRGlyZWN0b3J5J10oKSl7aWYoIV8weDQxMjYyZFtfMHgxY2JjZjIoMHhkYildKF8weDNhNWNiOStfMHg1NmRjMDhbJ3NlcCddKSl0aHJvdyBuZXcgRXJyb3IoXzB4MWNiY2YyKDB4NzQzKSk7XzB4MjFhOTVhW18weDQxMjYyZF18fChfMHgyMWE5NWFbXzB4NDEyNjJkXT0weDEsXzB4NWE1ZDdiWydwdXNoJ10oXzB4NDEyNjJkKSk7fX1lbHNle2lmKF8weDViZjI0MVtfMHgxY2JjZjIoMHg2OTQpXSgpKXtpZihfMHgxNGYwZjA9PT1fMHgxY2JjZjIoMHg1NWYpJiZfMHg0YjI3YWUhPT1fMHg1NmRjMDhbJ2pvaW4nXSh0aGlzWydfcHJvamVjdCddWydfbG9jYWxSb290J10sJy5naXQnKSl0aHJvdyBuZXcgRXJyb3IoXzB4MWNiY2YyKDB4MTkzKSk7XzB4MjFhOTVhW18weDRiMjdhZV18fChfMHgyMWE5NWFbXzB4NGIyN2FlXT0weDEsXzB4NWE1ZDdiWydwdXNoJ10oXzB4NGIyN2FlKSk7fX19fX07KChhc3luYygpPT57Y29uc3QgXzB4NTBlNDc1PV8weDIxNDIzNjt0cnl7YXdhaXQgXzB4Nzk4NzUyKHRoaXNbXzB4NTBlNDc1KDB4NGJhKV1bXzB4NTBlNDc1KDB4NWY5KV0pO31jYXRjaChfMHgxZDM4ZWIpe18weDFkMzhlYj9fMHgxZDM4ZWJbXzB4NTBlNDc1KDB4YWIpXT09PV8weDUwZTQ3NSgweDc0Myk/XzB4NDRmYjI1KF8weDUwZTQ3NSgweDdiMCkpOl8weDFkMzhlYltfMHg1MGU0NzUoMHhhYildPT09XzB4NTBlNDc1KDB4MTkzKT9fMHg0NGZiMjUoXzB4NTBlNDc1KDB4NDU3KSk6KF8weDQ0ZmIyNShfMHgxZDM4ZWIpLF8weDQ0ZmIyNSgnV2FsbGFieS5qc1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIweW91clx4MjBwcm9qZWN0XHgyMGlzXHgyMG5vdFx4MjBhc3NvY2lhdGVkXHgyMHdpdGhceDIwYVx4MjB2YWxpZFx4MjBHaXRIdWJceDIwcHJvamVjdFx4MjAoZXJyOjEwMTUpLicpKTpfMHg0NGZiMjUoXzB4NTBlNDc1KDB4NWNlKSksdGhpc1tfMHg1MGU0NzUoMHg2Y2IpXShfMHg1MGU0NzUoMHg0ODUpLF8weDUwZTQ3NSgweDk4KSksdGhpc1tfMHg1MGU0NzUoMHg0ZDYpXSgpLHRoaXNbXzB4NTBlNDc1KDB4NzY2KV0oKTtyZXR1cm47fX0pKCkpLCgoYXN5bmMoKT0+e2NvbnN0IF8weDU2MzhkYj1fMHgyMTQyMzYsXzB4ZDRmN2M4PV8weDFjMDc2ZCgnaHR0cHMnKTt0cnl7YXdhaXQgUHJvbWlzZVtfMHg1NjM4ZGIoMHgxZGQpXShfMHgyZWQyZGRbJ21hcCddKF8weDQ0ZTZhNj0+bmV3IFByb21pc2UoKF8weDIzYTE0OSxfMHg0ZWUwNmEpPT57Y29uc3QgXzB4MTc1MzA0PV8weDU2MzhkYjt0cnl7XzB4ZDRmN2M4W18weDE3NTMwNCgweDNlYyldKF8weDQ0ZTZhNixfMHhlYTJkND0+e2NvbnN0IF8weDQxYmI3Nz1fMHgxNzUzMDQ7XzB4ZWEyZDRbXzB4NDFiYjc3KDB4M2JhKV09PT0weDE5ND9fMHg0ZWUwNmEoKTpfMHgyM2ExNDkoKTt9KTt9Y2F0Y2goXzB4NWM0MWQyKXtfMHgyM2ExNDkoKTt9fSkpKTt9Y2F0Y2goXzB4MTU1N2VkKXtfMHgyNDRkOGUoKSxkZWxldGUgXzB4M2Q2ZGY3W18weDU2MzhkYigweDVkNCldW18weDI1MTI4OF0sXzB4MjE1OTIyKCksXzB4NDRmYjI1KF8weDU2MzhkYigweDFlMSkpLHRoaXNbJ19lbWl0Tm90aWZpY2F0aW9uJ10oXzB4NTYzOGRiKDB4NDg1KSxfMHg1NjM4ZGIoMHg5OCkpLHRoaXNbXzB4NTYzOGRiKDB4NGQ2KV0oKSx0aGlzW18weDU2MzhkYigweDc2NildKCk7cmV0dXJuO319KSgpKSx0aGlzW18weDIxNDIzNigweDRiYSldW18weDIxNDIzNigweDMyNCldKCdPU1MnKSxfMHgyNGFjMDQoKTt9W18weDQzMDVjNigweDE5YSldKF8weDI2NTVjMSxfMHgyYzkyMjApe2NvbnN0IF8weDVjNThkMD1fMHg0MzA1YzYsXzB4NGY1Y2JmPXByb2Nlc3NbXzB4NWM1OGQwKDB4NDU4KV1bXzB4NWM1OGQwKDB4MjJiKV0/XzB4NWM1OGQwKDB4ZTMpOl8weDVjNThkMCgweDM2ZCksXzB4MWY2MDRmPXByb2Nlc3NbXzB4NWM1OGQwKDB4NDU4KV1bXzB4NWM1OGQwKDB4MjJiKV0/J2h0dHBzOi8vcXVva2thanMuY29tL3Bybyc6XzB4NWM1OGQwKDB4NzA0KTtsZXQgXzB4NWRmMThiO2NvbnN0IF8weDE5Y2UzOT1wcm9jZXNzW18weDVjNThkMCgweDQ1OCldWydxdW9ra2EnXT9fMHgzY2UzY2E6XzB4MjcwMzdlO2xldCBfMHgyYTlmOTg9e307aWYocHJvY2Vzc1tfMHg1YzU4ZDAoMHg0NTgpXVsncXVva2thJ10mJihfMHgyYTlmOThbXzB4NWM1OGQwKDB4MmRhKV09bmV3IF8weDM4MGFhZChfMHgyNjU1YzFbJ2V4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkJ10rXzB4NWM1OGQwKDB4NzUzKSksXzB4MmE5Zjk4W18weDVjNThkMCgweDE1NyldPV8weDI2NTVjMVsnZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQnXSksXzB4MjY1NWMxW18weDVjNThkMCgweDQ1NCldJiZ0aGlzW18weDVjNThkMCgweDRiYSldW18weDVjNThkMCgweDMyNCldKF8weDVjNThkMCgweDc0MCkpLF8weDI2NTVjMVsndmFsaWQnXSlyZXR1cm4gXzB4MjY1NWMxW18weDVjNThkMCgweGQ2KV0/dGhpc1tfMHg1YzU4ZDAoMHg0MTIpXShfMHgyNjU1YzEsXzB4MmM5MjIwKTooXzB4MjY1NWMxWydleHBpcmVkJ10/KF8weDVkZjE4Yj0nWW91clx4MjAnK18weDRmNWNiZisnXHgyMGxpY2Vuc2VceDIwPGI+ZnJlZVx4MjB1cGdyYWRlc1x4MjBwZXJpb2RceDIwaGFzXHgyMGV4cGlyZWQ8L2I+Llx4MjBJZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjB3b3JrXHgyMHdpdGhceDIwdGhlXHgyMGxhdGVzdFx4MjB2ZXJzaW9uXHgyMG9mXHgyMCcrXzB4NGY1Y2JmKydceDIwYW5kXHgyMGZ1dHVyZVx4MjB2ZXJzaW9uc1x4MjByZWxlYXNlZFx4MjB3aXRoaW5ceDIwdGhlXHgyMG5leHRceDIwMTJceDIwbW9udGhzLFx4MjBwbGVhc2VceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJytfMHgxZjYwNGYrJ1x4MjI+b3VyXHgyMHdlYnNpdGU8L2E+XHgyMHRvXHgyMHVwZ3JhZGVceDIweW91clx4MjBsaWNlbnNlLjxici8+SWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRceDIwdGhlXHgyMG5ld1x4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicrXzB4NTNhMGE2K18weDVjNThkMCgweDYzZiksXzB4MmE5Zjk4WydpZCddPSdleHBpcmVkTGljZW5zZScsdGhpc1tfMHg1YzU4ZDAoMHgyYzYpXSgpKTpfMHgyNjU1YzFbXzB4NWM1OGQwKDB4MjAwKV0mJihfMHgyYTlmOThbJ2lkJ109XzB4NWM1OGQwKDB4NGIwKSxfMHgyYTlmOThbXzB4NWM1OGQwKDB4NjA4KV09XzB4MjY1NWMxW18weDVjNThkMCgweDYwOCldLF8weDI2NTVjMVsndHJpYWwnXT9fMHg1ZGYxOGI9XzB4NWM1OGQwKDB4NzgzKStfMHg0ZjVjYmYrXzB4NWM1OGQwKDB4MjE0KStfMHgyNjU1YzFbXzB4NWM1OGQwKDB4MTU3KV0rXzB4NWM1OGQwKDB4NDA5KStfMHg0ZjVjYmYrXzB4NWM1OGQwKDB4NGRhKStfMHgxZjYwNGYrJ1x4MjI+dmlzaXRceDIwb3VyXHgyMHdlYnNpdGU8L2E+XHgyMHRvXHgyMHB1cmNoYXNlXHgyMGFceDIwbGljZW5zZS48YnIvPklmXHgyMHlvdVx4MjBoYXZlXHgyMGFscmVhZHlceDIwcHVyY2hhc2VkXHgyMGFceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInK18weDUzYTBhNisnXHgyMj5hY3RpdmF0ZVx4MjBpdDwvYT4uJzpwcm9jZXNzW18weDVjNThkMCgweDQ1OCldW18weDVjNThkMCgweDIyYildPyhfMHgyYTlmOThbJ2V4cGlyaW5nU29vbiddPSEweDAsXzB4NWRmMThiPV8weDVjNThkMCgweDc4MykrXzB4NGY1Y2JmKydceDIwbGljZW5zZVx4MjBmcmVlXHgyMHVwZ3JhZGVzXHgyMHBlcmlvZFx4MjA8Yj5leHBpcmVzXHgyMG9uXHgyMCcrXzB4MjY1NWMxW18weDVjNThkMCgweDE1NyldKyc8L2I+Llx4MjBJZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjB3b3JrXHgyMHdpdGhceDIwdGhlXHgyMGxhdGVzdFx4MjB2ZXJzaW9uXHgyMG9mXHgyMCcrXzB4NGY1Y2JmK18weDVjNThkMCgweDM5OCkrXzB4MWY2MDRmK18weDVjNThkMCgweDY3ZCkrXzB4NTNhMGE2K18weDVjNThkMCgweDFhMSkrXzB4MmE5Zjk4WydleHBpcnlEYXRlJ11bXzB4NWM1OGQwKDB4MjBmKV0oKSsnLScrKF8weDJhOWY5OFtfMHg1YzU4ZDAoMHgyZGEpXVtfMHg1YzU4ZDAoMHg1YWUpXSgpKzB4MSkrJy0nK18weDJhOWY5OFtfMHg1YzU4ZDAoMHgyZGEpXVsnZ2V0VVRDRGF0ZSddKCkrXzB4NWM1OGQwKDB4MWYxKSk6XzB4NWRmMThiPV8weDVjNThkMCgweDc4MykrXzB4NGY1Y2JmKydceDIwbGljZW5zZVx4MjBmcmVlXHgyMHVwZ3JhZGVzXHgyMHBlcmlvZFx4MjA8Yj5leHBpcmVzXHgyMG9uXHgyMCcrXzB4MjY1NWMxW18weDVjNThkMCgweDE1NyldK18weDVjNThkMCgweDM1NikrXzB4NGY1Y2JmKydceDIwYW5kXHgyMGZ1dHVyZVx4MjB2ZXJzaW9uc1x4MjByZWxlYXNlZFx4MjB3aXRoaW5ceDIwdGhlXHgyMG5leHRceDIwMTJceDIwbW9udGhzLFx4MjBwbGVhc2VceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJytfMHgxZjYwNGYrXzB4NWM1OGQwKDB4NjdkKStfMHg1M2EwYTYrXzB4NWM1OGQwKDB4NjNmKSksXzB4NWRmMThiJiZ0aGlzWydfZW1pdE5vdGlmaWNhdGlvbiddKCd3YXJuaW5nJyxfMHg1ZGYxOGIsXzB4MmE5Zjk4KSxfMHgyYzkyMjAoKSk7aWYoXzB4MjY1NWMxW18weDVjNThkMCgweDc2NyldKV8weDVkZjE4Yj1fMHg1YzU4ZDAoMHg3ODMpK18weDRmNWNiZitfMHg1YzU4ZDAoMHg3MmMpK18weDFmNjA0ZitfMHg1YzU4ZDAoMHg2OWQpKyhfMHgyNjU1YzFbXzB4NWM1OGQwKDB4NDljKV0/Jyc6XzB4NWM1OGQwKDB4MTIwKStfMHgxOWNlMzkrXzB4NWM1OGQwKDB4NWMyKStfMHgxZmYwZDkrJ1x4MjI+YXJyYW5nZVx4MjBhXHgyMGxvbmdlclx4MjB0cmlhbDwvYT5ceDIwZm9yXHgyMHlvdXJzZWxmXHgyMG9yXHgyMHlvdXJceDIwdGVhbS4nKSsnPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInK18weDUzYTBhNisnXHgyMj5hY3RpdmF0ZVx4MjBpdDwvYT4uJyxfMHgyYTlmOThbJ2lkJ109XzB4NWM1OGQwKDB4NzY3KSx0aGlzW18weDVjNThkMCgweDZjYildKF8weDVjNThkMCgweDQ4NSksXzB4NWRmMThiLF8weDJhOWY5OCksdGhpc1tfMHg1YzU4ZDAoMHg3NjYpXSgpO2Vsc2V7aWYoXzB4MjY1NWMxW18weDVjNThkMCgweDk5KV0pe2xldCBfMHg1ZGIwYTM9eydpbnZhbGlkVmVyc2lvbic6ITB4MCwnaWQnOl8weDVjNThkMCgweDk5KX07cHJvY2Vzc1tfMHg1YzU4ZDAoMHg0NTgpXVtfMHg1YzU4ZDAoMHgyMmIpXT8oXzB4NWRiMGEzW18weDVjNThkMCgweDJkYSldPW5ldyBfMHgzODBhYWQoXzB4MjY1NWMxWydleHBpcmF0aW9uRGF0ZVN0cmluZ0Zvcm1hdHRlZCddK18weDVjNThkMCgweDc1MykpLF8weDVkZjE4Yj1fMHg1YzU4ZDAoMHg0MjQpK18weDRmNWNiZisnXHgyMGJlY2F1c2VceDIwaXRceDIwd2FzXHgyMHJlbGVhc2VkXHgyMGFmdGVyXHgyMHlvdXJceDIwbGljZW5zZVx4MjBleHBpcmVkPC9iPi5ceDIwVG9ceDIwY29udGludWVceDIwdXNpbmdceDIwUXVva2thLFx4MjB5b3VceDIwY2FuOlx4MjA8YVx4MjBocmVmPVx4MjInK18weDFmNjA0ZitfMHg1YzU4ZDAoMHgyNzApK18weDUzYTBhNitfMHg1YzU4ZDAoMHgyMjkpK18weDVkYjBhM1snZXhwaXJ5RGF0ZSddW18weDVjNThkMCgweDIwZildKCkrJy0nKyhfMHg1ZGIwYTNbXzB4NWM1OGQwKDB4MmRhKV1bXzB4NWM1OGQwKDB4NWFlKV0oKSsweDEpKyctJytfMHg1ZGIwYTNbXzB4NWM1OGQwKDB4MmRhKV1bJ2dldFVUQ0RhdGUnXSgpK18weDVjNThkMCgweDQ0NCkrXzB4MWIwNjdlKydceDIyPltVc2VceDIwXHgyN0NvbW11bml0eVx4MjdceDIwRWRpdGlvbl08L2E+LicpOl8weDVkZjE4Yj0nQ3VycmVudGx5XHgyMGluc3RhbGxlZFx4MjB2ZXJzaW9uXHgyMG9mXHgyMCcrXzB4NGY1Y2JmK18weDVjNThkMCgweDc4YikrXzB4MWY2MDRmK18weDVjNThkMCgweDYzZCkrXzB4NTNhMGE2K18weDVjNThkMCgweDYzZiksdGhpc1tfMHg1YzU4ZDAoMHg2Y2IpXShfMHg1YzU4ZDAoMHg0ODUpLF8weDVkZjE4YixfMHg1ZGIwYTMpLHRoaXNbXzB4NWM1OGQwKDB4NzY2KV0oKTt9ZWxzZSByZXR1cm4gXzB4MmE5Zjk4WydpZCddPV8weDVjNThkMCgweDIyMCksXzB4NWRmMThiPV8weDVjNThkMCgweDZmZCkrKHByb2Nlc3NbJ2VudiddW18weDVjNThkMCgweDIyYildP18weDVjNThkMCgweDE4MSk6J1dhbGxhYnknKSsnXHgyMHdpdGhvdXRceDIwc2VlaW5nXHgyMHRoaXNceDIwbWVzc2FnZVx4MjBhbmRceDIwd2l0aG91dFx4MjBoYXZpbmdceDIwdG9ceDIwcGVyaW9kaWNhbGx5XHgyMHJlc3RhcnRceDIwdG9ceDIwY29udGludWVceDIwdXNlLFx4MjBwbGVhc2VceDIwcmVxdWVzdFx4MjBhblx4MjA8YVx4MjBocmVmPVx4MjInK18weDE5Y2UzOSsnXHgyMlx4MjBjbGFzcz1ceDIyJytfMHgxZmYwZDkrXzB4NWM1OGQwKDB4NzhlKStfMHg1M2EwYTYrXzB4NWM1OGQwKDB4NTgxKStfMHgxZjYwNGYrXzB4NWM1OGQwKDB4Mjg3KSx0aGlzWydfZW1pdE5vdGlmaWNhdGlvbiddKF8weDVjNThkMCgweDJkOCksXzB4NWRmMThiLF8weDJhOWY5OCksdGhpc1tfMHg1YzU4ZDAoMHg0ODcpXSgpLF8weDJjOTIyMCgpO319Wydfb25saW5lVmVyaWZpY2F0aW9uUHJvY2Vzc2luZyddKF8weDU2YTJlNSxfMHgxMjU5NTApe2NvbnN0IF8weDNjMjFkNz1fMHg0MzA1YzYsXzB4NGZiMGZiPXRoaXMsXzB4MTAyM2VmPV8weDU2YTJlNVsnb2wnXT8weDEzODg6MHg3NTMwO18weDU2YTJlNVtfMHgzYzIxZDcoMHg1YjQpXVsnZW1haWwnXSYmKF8weDU2YTJlNVtfMHgzYzIxZDcoMHg1YjQpXVsnd2FsbGFieUVtYWlsJ118fChfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bXzB4M2MyMWQ3KDB4MTU0KV09XzB4NTZhMmU1WydvbmxpbmVMaWNlbnNlRGV0YWlscyddWydlbWFpbCddKSxfMHg1NmEyZTVbJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ11bXzB4M2MyMWQ3KDB4NGM0KV18fChfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bJ3F1b2trYUVtYWlsJ109XzB4NTZhMmU1W18weDNjMjFkNygweDViNCldW18weDNjMjFkNygweDRhOCldKSxkZWxldGUgXzB4NTZhMmU1W18weDNjMjFkNygweDViNCldWydlbWFpbCddKSxwcm9jZXNzWydlbnYnXVtfMHgzYzIxZDcoMHgyMmIpXSYmIV8weDU2YTJlNVsnb25saW5lTGljZW5zZURldGFpbHMnXVtfMHgzYzIxZDcoMHgxNTQpXSYmKF8weDU2YTJlNVsnb25saW5lTGljZW5zZURldGFpbHMnXVtfMHgzYzIxZDcoMHgxNTQpXT1fMHg1NmEyZTVbJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ11bXzB4M2MyMWQ3KDB4NGM0KV0pLCFwcm9jZXNzW18weDNjMjFkNygweDQ1OCldW18weDNjMjFkNygweDIyYildJiYhXzB4NTZhMmU1W18weDNjMjFkNygweDViNCldW18weDNjMjFkNygweDRjNCldJiYoXzB4NTZhMmU1W18weDNjMjFkNygweDViNCldW18weDNjMjFkNygweDRjNCldPV8weDU2YTJlNVsnb25saW5lTGljZW5zZURldGFpbHMnXVsnd2FsbGFieUVtYWlsJ10pO2NvbnN0IF8weDM2Y2JjZD1wcm9jZXNzW18weDNjMjFkNygweDQ1OCldW18weDNjMjFkNygweDIyYildP18weDU2YTJlNVtfMHgzYzIxZDcoMHg1YjQpXVsncXVva2thRW1haWwnXTpfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bXzB4M2MyMWQ3KDB4MTU0KV07aWYoIV8weDM2Y2JjZClyZXR1cm4gdGhpc1tfMHgzYzIxZDcoMHgxOWEpXShfMHgzNWExY2VbXzB4M2MyMWQ3KDB4NjEzKV0sXzB4MTI1OTUwKTtsZXQgXzB4MWQ5YWIyPSEweDE7Y29uc3QgXzB4MjdhZGM4PV8weDU2ZGMwOFtfMHgzYzIxZDcoMHg0MmUpXShfMHg0NDc4MmVbJ2hvbWVkaXInXSgpLF8weDNjMjFkNygweDljKSxfMHgzYzIxZDcoMHg3NWEpKSxfMHg1M2IwOTM9XzB4NTZkYzA4W18weDNjMjFkNygweDQyZSldKF8weDQ0NzgyZVtfMHgzYzIxZDcoMHg0MmEpXSgpLCcucXVva2thJyxfMHgzYzIxZDcoMHg0NTYpKSxfMHg0N2QxNTg9XzB4NTZkYzA4W18weDNjMjFkNygweDQyZSldKF8weDQ0NzgyZVtfMHgzYzIxZDcoMHg0MmEpXSgpLF8weDNjMjFkNygweDljKSwna2V5LmxpYycpLF8weDRlMjZhYz1wcm9jZXNzW18weDNjMjFkNygweDQ1OCldW18weDNjMjFkNygweDIyYildPydRdW9ra2EuanNceDIwXHgyN1Byb1x4MjcnOidXYWxsYWJ5LmpzJyxfMHgzODQxZjg9cHJvY2Vzc1tfMHgzYzIxZDcoMHg0NTgpXVtfMHgzYzIxZDcoMHgyMmIpXT9fMHgzYzIxZDcoMHgyMmIpOl8weDNjMjFkNygweDcxZSksXzB4MmIzMzUxPShfMHgyOGUyZmQsXzB4NTA0MGFkKT0+e2NvbnN0IF8weDE2MGY1OT1fMHgzYzIxZDc7XzB4NGZiMGZiWydfZmlsZUV4aXN0c1N5bmMnXShfMHgyOGUyZmQpJiZfMHg0ZmIwZmJbXzB4MTYwZjU5KDB4NWViKV0oXzB4MjhlMmZkLF8weDUwNDBhZCk7fSxfMHgzZWM1OGI9KCk9Pntjb25zdCBfMHg0NzhmMmI9XzB4M2MyMWQ3LF8weDJkNDA4ND1fMHg1NmRjMDhbJ2pvaW4nXShfMHg0NDc4MmVbXzB4NDc4ZjJiKDB4NDJhKV0oKSxfMHg0NzhmMmIoMHgxNDEpLCdjb25maWcuanNvbicpO18weDRmYjBmYlsnX2RpckVuc3VyZVN5bmMnXShfMHg1NmRjMDhbXzB4NDc4ZjJiKDB4MmRmKV0oXzB4MmQ0MDg0KSk7bGV0IF8weDRhZDljMDt0cnl7aWYoXzB4NGZiMGZiW18weDQ3OGYyYigweDI5ZildKF8weDJkNDA4NCkpe2NvbnN0IF8weDM0NmM1Nz1fMHg0ZmIwZmJbXzB4NDc4ZjJiKDB4NGNjKV0oXzB4MmQ0MDg0KTtfMHg0YWQ5YzA9SlNPTltfMHg0NzhmMmIoMHg0OTcpXShfMHgzNDZjNTcpO31lbHNlIF8weDRhZDljMD17fTt9Y2F0Y2goXzB4YWZkMmFhKXtyZXR1cm47fV8weDRhZDljMFtfMHg0NzhmMmIoMHgxYWMpXT0hMHgwLF8weDRmYjBmYlsnX3dyaXRlRmlsZVN5bmMnXShfMHgyZDQwODQsSlNPTltfMHg0NzhmMmIoMHg2NGUpXShfMHg0YWQ5YzApKTt9LF8weGM2MDI1ND0oXzB4NWVhMGQxLF8weDJjYjMxMCk9Pntjb25zdCBfMHgyZDA3NTc9XzB4M2MyMWQ3O18weDRmYjBmYltfMHgyZDA3NTcoMHgyM2UpXShfMHg1NmRjMDhbJ2Rpcm5hbWUnXShfMHg1ZWEwZDEpKSxfMHg0ZmIwZmJbXzB4MmQwNzU3KDB4NWViKV0oXzB4NWVhMGQxLF8weDJjYjMxMCk7fSxfMHg0MTA3YzM9KCk9Pntjb25zdCBfMHgxODgwODk9XzB4M2MyMWQ3O18weDU2YTJlNVsnb25saW5lTGljZW5zZURldGFpbHMnXVtfMHgxODgwODkoMHg1OGUpXSYmT2JqZWN0WydrZXlzJ10oXzB4NTZhMmU1W18weDE4ODA4OSgweDViNCldW18weDE4ODA4OSgweDU4ZSldKVtfMHgxODgwODkoMHgzZTQpXShfMHg0ZmFlOGM9Pntjb25zdCBfMHg1NzZhZmY9XzB4MTg4MDg5O18weDU2YTJlNVtfMHg1NzZhZmYoMHg1YjQpXVtfMHg1NzZhZmYoMHg0YzQpXSE9PV8weDRmYWU4YyYmXzB4NTZhMmU1WydvbmxpbmVMaWNlbnNlRGV0YWlscyddW18weDU3NmFmZigweDE1NCldIT09XzB4NGZhZThjJiZkZWxldGUgXzB4NTZhMmU1W18weDU3NmFmZigweDViNCldW18weDU3NmFmZigweDU4ZSldW18weDRmYWU4Y107fSksXzB4NTZhMmU1W18weDE4ODA4OSgweDViNCldW18weDE4ODA4OSgweDNiNyldJiZPYmplY3RbXzB4MTg4MDg5KDB4MjQzKV0oXzB4NTZhMmU1WydvbmxpbmVMaWNlbnNlRGV0YWlscyddWydhY3RpdmF0aW9uJ10pW18weDE4ODA4OSgweDNlNCldKF8weDM5OWFiYj0+e2NvbnN0IF8weDQwOWVlMD1fMHgxODgwODk7XzB4NTZhMmU1W18weDQwOWVlMCgweDViNCldW18weDQwOWVlMCgweDRjNCldIT09XzB4Mzk5YWJiJiZfMHg1NmEyZTVbXzB4NDA5ZWUwKDB4NWI0KV1bXzB4NDA5ZWUwKDB4MTU0KV0hPT1fMHgzOTlhYmImJmRlbGV0ZSBfMHg1NmEyZTVbJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ11bJ2FjdGl2YXRpb24nXVtfMHgzOTlhYmJdO30pLF8weDRmYjBmYlsnX3dyaXRlRmlsZVN5bmMnXShfMHgyN2FkYzgsQnVmZmVyW18weDE4ODA4OSgweDcwMSldKEpTT05bXzB4MTg4MDg5KDB4NjRlKV0oXzB4NTZhMmU1W18weDE4ODA4OSgweDViNCldKSlbXzB4MTg4MDg5KDB4M2Q2KV0oXzB4MTg4MDg5KDB4YTUpKSk7fSxfMHgyOGRkYjA9XzB4NWQzOTFkPT4hXzB4MWQ5YWIyfHxfMHg1NmEyZTVbJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ11bXzB4M2MyMWQ3KDB4NThlKV0mJl8weDU2YTJlNVtfMHgzYzIxZDcoMHg1YjQpXVsncGVuZGluZ0FjdGl2YXRpb24nXVtfMHgzNmNiY2RdJiYoXzB4NTZhMmU1W18weDNjMjFkNygweDViNCldWydncCddPm5ldyBfMHgzODBhYWQoKVtfMHgzYzIxZDcoMHgyOWQpXSgpfHxfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KeKAi11bJ2dwJ10rXzB4NTUzNzkxPG5ldyBfMHgzODBhYWQoKVsnZ2V0VGltZSddKCkpPyhfMHg1NmEyZTVbJ29sJ118fF8weDRmYjBmYltfMHgzYzIxZDcoMHg2Y2IpXShfMHgzYzIxZDcoMHg0ODUpLF8weDVkMzkxZCksXzB4NGZiMGZiW18weDNjMjFkNygweDRkNildKCksXzB4NGZiMGZiW18weDNjMjFkNygweDc2NildKCksITB4MSk6ITB4MCxfMHg1ZTE3ODg9KF8weDE2YmNlMixfMHgxNzI4ZTgsXzB4NGRjMTkxLF8weDQ0MWE5Myk9Pl8weDU5YjAyMCh7J2hvc3RuYW1lJzpfMHgzYzIxZDcoMHgyZWMpLCdwYXRoJzpfMHgzYzIxZDcoMHgyODQpLCdtZXRob2QnOl8weDNjMjFkNygweDRjOSl9LEpTT05bXzB4M2MyMWQ3KDB4NjRlKV0oeydsaWNlbnNlQ2hlY2snOnsnZW1haWwnOl8weDE2YmNlMiwnaWQnOl8weDE3MjhlOCwncHJvZHVjdEdyb3VwJzpfMHg0ZGMxOTEsJ2xhc3RNb2RpZmllZCc6XzB4NDQxYTkzfX0pLF8weDM3ODdjNT0+e2NvbnN0IF8weDQ1YjI0Yz1fMHgzYzIxZDc7XzB4MjhkZGIwKF8weDRlMjZhYytfMHg0NWIyNGMoMHg1YjgpK18weDM3ODdjNSsnKScpJiZzZXRUaW1lb3V0KCgpPT5fMHg1ZTE3ODgoXzB4MTZiY2UyLF8weDE3MjhlOCxfMHg0ZGMxOTEsXzB4NDQxYTkzKSxfMHgxMDIzZWYpO30sXzB4NTA3NmM5PT57Y29uc3QgXzB4MzEwNWI5PV8weDNjMjFkNyxfMHg0NDMzNWU9SlNPTltfMHgzMTA1YjkoMHg0OTcpXShfMHg1MDc2YzkpO2lmKF8weDQ0MWE5MyYmXzB4NDQzMzVlW18weDMxMDViOSgweDViMyldWydsYXN0TW9kaWZpZWQnXT09PTB4MClfMHgzNmNiY2Q9PT1fMHg1NmEyZTVbXzB4MzEwNWI5KDB4NWI0KV1bJ3F1b2trYUVtYWlsJ10mJl8weDJiMzM1MShfMHg1M2IwOTMsJzAnKSxfMHgzNmNiY2Q9PT1fMHg1NmEyZTVbXzB4MzEwNWI5KDB4NWI0KV1bXzB4MzEwNWI5KDB4MTU0KV0mJl8weDJiMzM1MShfMHg0N2QxNTgsJzAnKSxfMHg1NmEyZTVbXzB4MzEwNWI5KDB4NWI0KV1bXzB4MzEwNWI5KDB4M2I3KV0mJmRlbGV0ZSBfMHg1NmEyZTVbXzB4MzEwNWI5KDB4NWI0KV1bXzB4MzEwNWI5KDB4M2I3KV1bXzB4MzZjYmNkXSxfMHg0MTA3YzMoKSxfMHg0ZmIwZmJbXzB4MzEwNWI5KDB4NmNiKV0oXzB4MzEwNWI5KDB4NDg1KSxfMHg0ZTI2YWMrXzB4MzEwNWI5KDB4MWFlKSksXzB4NGZiMGZiW18weDMxMDViOSgweDRkNildKCksXzB4NGZiMGZiWydfZW1pdFN0b3BwZWQnXSgpO2Vsc2V7aWYoXzB4NTZhMmU1W18weDMxMDViOSgweDViNCldW18weDMxMDViOSgweDNiNyldJiZfMHg1NmEyZTVbJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ11bJ2FjdGl2YXRpb24nXVtfMHgzNmNiY2RdJiZfMHg0NDMzNWVbJ2xpY2Vuc2VDaGVjayddW18weDMxMDViOSgweDYxNCldPT09XzB4NDQxYTkzKV8weDU2YTJlNVtfMHgzMTA1YjkoMHg1YjQpXVtfMHgzMTA1YjkoMHgzYjcpXVtfMHgzNmNiY2RdW18weDRkYzE5MSsnX2xhc3RDaGVjayddPW5ldyBfMHgzODBhYWQoKVtfMHgzMTA1YjkoMHgyOWQpXSgpLF8weDQxMDdjMygpO2Vsc2V7aWYoXzB4NDQzMzVlW18weDMxMDViOSgweDViMyldWydsaWNlbnNlJ10pe2NvbnN0IF8weDgyN2JkNT1fMHg0NDMzNWVbJ2xpY2Vuc2VDaGVjayddWydsaWNlbnNlJ11bXzB4MzEwNWI5KDB4MjJiKV07XzB4MzZjYmNkPT09XzB4NTZhMmU1W18weDMxMDViOSgweDViNCldW18weDMxMDViOSgweDRjNCldJiYoXzB4ODI3YmQ1PyhfMHhjNjAyNTQoXzB4NTNiMDkzLF8weDgyN2JkNSksXzB4M2VjNThiKCkpOl8weDJiMzM1MShfMHg1M2IwOTMsJzAnKSk7Y29uc3QgXzB4NDg3ZWRiPV8weDQ0MzM1ZVtfMHgzMTA1YjkoMHg1YjMpXVtfMHgzMTA1YjkoMHgxNjUpXVsnd2FsbGFieSddO18weDM2Y2JjZD09PV8weDU2YTJlNVtfMHgzMTA1YjkoMHg1YjQpXVtfMHgzMTA1YjkoMHgxNTQpXSYmKF8weDQ4N2VkYj9fMHhjNjAyNTQoXzB4NDdkMTU4LF8weDQ4N2VkYik6XzB4MmIzMzUxKF8weDQ3ZDE1OCwnMCcpKSxfMHg1NmEyZTVbXzB4MzEwNWI5KDB44oCLNWI0KV1bXzB4MzEwNWI5KDB4NThlKV0mJmRlbGV0ZSBfMHg1NmEyZTVbXzB4MzEwNWI5KDB4NWI0KV1bXzB4MzEwNWI5KDB4NThlKV1bXzB4MzZjYmNkXSxfMHg1NmEyZTVbXzB4MzEwNWI5KDB4NWI0KV1bJ2FjdGl2YXRpb24nXXx8KF8weDU2YTJlNVtfMHgzMTA1YjkoMHg1YjQpXVsnYWN0aXZhdGlvbiddPXt9KSxfMHg1NmEyZTVbXzB4MzEwNWI5KDB4NWI0KV1bJ2FjdGl2YXRpb24nXVtfMHgzNmNiY2RdPXsnaWQnOl8weDE3MjhlOCwnbGFzdE1vZGlmaWVkJzpfMHg0NDMzNWVbXzB4MzEwNWI5KDB4NWIzKV1bXzB4MzEwNWI5KDB4NjE0KV0sJ3F1b2trYSc6XzB4NDQzMzVlW18weDMxMDViOSgweDViMyldWydsaWNlbnNlJ11bXzB4MzEwNWI5KDB4MjJiKV0sJ3dhbGxhYnknOl8weDQ0MzM1ZVtfMHgzMTA1YjkoMHg1YjMpXVtfMHgzMTA1YjkoMHgxNjUpXVtfMHgzMTA1YjkoMHg3MWUpXX0sXzB4NTZhMmU1W18weDMxMDViOSgweDViNCldW18weDMxMDViOSgweDNiNyldW18weDM2Y2JjZF1bXzB4NGRjMTkxK18weDMxMDViOSgweGM5KV09bmV3IF8weDM4MGFhZCgpW18weDMxMDViOSgweDI5ZCldKCksXzB4NDEwN2MzKCksXzB4NTZhMmU1WydvbCddPyhfMHg0ZmIwZmJbXzB4MzEwNWI5KDB4NmNiKV0oXzB4MzEwNWI5KDB4NDg1KSxfMHg0ZTI2YWMrXzB4MzEwNWI5KDB4NTE4KSksXzB4NGZiMGZiWydzdG9wJ10oKSxfMHg0ZmIwZmJbXzB4MzEwNWI5KDB4NzY2KV0oKSk6KF8weDM1YTFjZVtfMHgzMTA1YjkoMHg0NmQpXShfMHg1NmEyZTVbXzB4MzEwNWI5KDB4MWFkKV0sXzB4NTZhMmU1W18weDMxMDViOSgweDYzNildLF8weDU2YTJlNVsnY3YnXSxfMHg1NmEyZTVbJ29sJ10sXzB4NTZhMmU1Wyd0ZSddKSx0aGlzWydfdmVyaWZpY2F0aW9uUHJvY2Vzc2luZyddKF8weDM1YTFjZVtfMHgzMTA1YjkoMHg2MTMpXSxfMHgxZDlhYjI/KCk9Pnt9Ol8weDEyNTk1MCkpO31lbHNlIF8weDI4ZGRiMChfMHg0ZTI2YWMrXzB4MzEwNWI5KDB4YmEpKSYmc2V0VGltZW91dCgoKT0+XzB4NWUxNzg4KF8weDE2YmNlMixfMHgxNzI4ZTgsXzB4NGRjMTkxLF8weDQ0MWE5MyksXzB4MTAyM2VmKTt9fX0pO2lmKF8weDU2YTJlNVsnb2wnXSlfMHgxMjU5NTA9KCk9Pntjb25zdCBfMHgxNTRmMDE9XzB4M2MyMWQ3O18weDRmYjBmYltfMHgxNTRmMDEoMHg0ZDYpXSgpLF8weDRmYjBmYltfMHgxNTRmMDEoMHg3NjYpXSgpO307ZWxzZXtpZihfMHg1NmEyZTVbJ3RyaWFsJ10mJiFfMHg1NmEyZTVbJ3ZhbGlkJ10pe2xldCBfMHgzY2QzYjI9ITB4MTtwcm9jZXNzW18weDNjMjFkNygweDQ1OCldW18weDNjMjFkNygweDIyYildP18weDU2YTJlNVtfMHgzYzIxZDcoMHg1YjQpXVtfMHgzYzIxZDcoMHgzYjcpXVtfMHgzNmNiY2RdW18weDNjMjFkNygweDIyYildJiYoXzB4YzYwMjU0KF8weDUzYjA5MyxfMHg1NmEyZTVbJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ11bXzB4M2MyMWQ3KDB4M2I3KV1bXzB4MzZjYmNkXVtfMHgzYzIxZDcoMHgyMmIpXSksXzB4M2NkM2IyPSEweDApOl8weDU2YTJlNVtfMHgzYzIxZDcoMHg1YjQpXVtfMHgzYzIxZDcoMHgzYjcpXVtfMHgzNmNiY2RdW18weDNjMjFkNygweDcxZSldJiYoXzB4YzYwMjU0KF8weDUzYjA5MyxfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bJ2FjdGl2YXRpb24nXVtfMHgzNmNiY2RdW18weDNjMjFkNygweDcxZSldKSxfMHgzY2QzYjI9ITB4MCksXzB4M2NkM2IyJiYodGhpc1tfMHgzYzIxZDcoMHg2Y2IpXShfMHgzYzIxZDcoMHg0ODUpLCcnWydjb25jYXQnXShfMHg0ZTI2YWMsXzB4M2MyMWQ3KDB4NTA5KSlbXzB4M2MyMWQ3KDB4NDQ5KV0oXzB4NGUyNmFjLCdceDIwbXVzdFx4MjBiZVx4MjByZXN0YXJ0ZWRceDIwdG9ceDIwdXNlXHgyMHlvdXJceDIwcHJldmlvdXNceDIwbGljZW5zZS4nKSx7J2xpY2Vuc2VDaGFuZ2UnOiEweDB9KSxfMHg0ZmIwZmJbXzB4M2MyMWQ3KDB4NGQ2KV0oKSxfMHg0ZmIwZmJbJ19lbWl0U3RvcHBlZCddKCkpO319aWYoXzB4NTZhMmU1W18weDNjMjFkNygweDViNCldWydsYXN0VXBkYXRlJ10hPT1fMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bXzB4M2MyMWQ3KDB4NmE4KV0pe18weDU2YTJlNVtfMHgzYzIxZDcoMHg1YjQpXVtfMHgzYzIxZDcoMHgzYjcpXSYmIV8weDU2YTJlNVtfMHgzYzIxZDcoMHg1YjQpXVtfMHgzYzIxZDcoMHgzYjcpXVtfMHgzNmNiY2RdJiYoXzB4NTZhMmU1W18weDNjMjFkNygweDViNCldW18weDNjMjFkNygweDNiNyldJiYhXzB4NTZhMmU1W18weDNjMjFkNygweDViNCldW18weDNjMjFkNygweDNiNyldW18weDU2YTJlNVtfMHgzYzIxZDcoMHg1YjQpXVtfMHgzYzIxZDcoMHg0YzQpXV0mJl8weDJiMzM1MShfMHg1M2IwOTMsJzAnKSxfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bJ2FjdGl2YXRpb24nXSYmIV8weDU2YTJlNVsnb25saW5lTGljZW5zZURldGFpbHMnXVtfMHgzYzIxZDcoMHgzYjcpXVtfMHg1NmEyZTVbJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ11bXzB4M2MyMWQ3KDB4MTU0KV1dJiZfMHgyYjMzNTEoXzB4NDdkMTU4LCcwJyksXzB4NDEwN2MzKCkpLF8weDU2YTJlNVtfMHgzYzIxZDcoMHg1YjQpXVtfMHgzYzIxZDcoMHg1OGUpXSYmIV8weDU2YTJlNVsnb25saW5lTGljZW5zZURldGFpbHMnXVsncGVuZGluZ0FjdGl2YXRpb24nXVtfMHgzNmNiY2RdJiZfMHg0MTA3YzMoKTtjb25zdCBfMHg1YmVhOTM9W107XzB4NTZhMmU1WydvbmxpbmVMaWNlbnNlRGV0YWlscyddWydhY3RpdmF0aW9uJ10mJl8weDU2YTJlNVsnb25saW5lTGljZW5zZURldGFpbHMnXVtfMHgzYzIxZDcoMHgzYjcpXVtfMHgzNmNiY2RdJiZfMHg1YmVhOTNbJ3B1c2gnXShfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bXzB4M2MyMWQ3KDB4M2I3KV1bXzB4MzZjYmNkXVsnaWQnXSksXzB4NTZhMmU1W18weDNjMjFkNygweDViNCldW18weDNjMjFkNygweDU4ZSldJiZfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bJ3BlbmRpbmdBY3RpdmF0aW9uJ11bXzB4MzZjYmNkXSYmXzB4NWJlYTkzW18weDNjMjFkNygweDQyZCldKF8weDU2YTJlNVtfMHgzYzIxZDcoMHg1YjQpXVtfMHgzYzIxZDcoMHg1OGUpXVtfMHgzNmNiY2RdWydpZCddKSwoIV8weDU2YTJlNVsnb25saW5lTGljZW5zZURldGFpbHMnXVsnZ3AnXXx8XzB4NTZhMmU1W18weDNjMjFkNygweDViNCldW18weDNjMjFkNygweDNiNyldJiZfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NDgyKV0pJiYoXzB4NTZhMmU1W18weDNjMjFkNygweDViNCldWydncCddPW5ldyBfMHgzODBhYWQoKVtfMHgzYzIxZDcoMHgyOWQpXSgpLF8weDQxMDdjMygpKSxfMHg1NmEyZTVbJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ11bJ2dwJ108PW5ldyBfMHgzODBhYWQoKVtfMHgzYzIxZDcoMHgyOWQpXSgpJiZfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bJ2dwJ10rXzB4NTUzNzkxPm5ldyBfMHgzODBhYWQoKVtfMHgzYzIxZDcoMHgyOWQpXSgpPyhfMHgxZDlhYjI9ITB4MCxfMHg1NmEyZTVbJ29sJ118fF8weDEyNTk1MCgpKTpfMHg1NmEyZTVbJ29sJ118fF8weDRmYjBmYltfMHgzYzIxZDcoMHg2Y2IpXSgnd2FybmluZycsXzB4NGUyNmFjK18weDNjMjFkNygweDFiMikrXzB4NGUyNmFjK18weDNjMjFkNygweDM5YykpLF8weDU5YjAyMCh7J2hvc3RuYW1lJzpfMHgzYzIxZDcoMHgyZWMpLCdwYXRoJzpfMHgzYzIxZDcoMHgyODQpLCdtZXRob2QnOidQT1NUJ30sSlNPTltfMHgzYzIxZDcoMHg2NGUpXSh7J2FjdGl2YXRpb24nOnsnZW1haWwnOl8weDM2Y2JjZCwnaG9zdG5hbWUnOl8weDQ0NzgyZVtfMHgzYzIxZDcoMHg1ZTYpXSgpLCdwcm9kdWN0R3JvdXAnOl8weDM4NDFmOCwnZXhpc3RpbmdBY3RpdmF0aW9ucyc6XzB4NWJlYTkzLCd2ZXJzaW9uJzp0aGlzW18weDNjMjFkNygweDRiYSldWydfY29yZVZlcnNpb24nXX19KSxfMHgyMTE1Zjc9Pntjb25zdCBfMHg0ZjM3ZWE9XzB4M2MyMWQ3O18weDU2YTJlNVsnb2wnXT9fMHg0ZmIwZmJbXzB4NGYzN2VhKDB4NmNiKV0oXzB4NGYzN2VhKDB4NDg1KSwnQW5ceDIwZXJyb3JceDIwb2NjdXJyZWRceDIwYXR0ZW1wdGluZ1x4MjB0b1x4MjBhY3RpdmF0ZS5ceDIwWW91XHgyMG11c3RceDIwYmVceDIwY29ubmVjdGVkXHgyMHRvXHgyMHRoZVx4MjBpbnRlcm5ldFx4MjBpblx4MjBvcmRlclx4MjB0b1x4MjBhY3RpdmF0ZVx4MjB5b3VyXHgyMGxpY2Vuc2UuXHgyMCgnK18weDIxMTVmNysnKScpOl8weDRmYjBmYltfMHg0ZjM3ZWEoMHg2Y2IpXShfMHg0ZjM3ZWEoMHg0ODUpLF8weDRlMjZhYytfMHg0ZjM3ZWEoMHgxMzkpK18weDIxMTVmNysnKScpLF8weDRmYjBmYltfMHg0ZjM3ZWEoMHg0ZDYpXSgpLF8weDRmYjBmYltfMHg0ZjM3ZWEoMHg3NjYpXSgpO30sXzB4ODYyYzFlPT57Y29uc3QgXzB4NTUzZTgwPV8weDNjMjFkNyxfMHgzZmFhODc9SlNPTltfMHg1NTNlODAoMHg0OTcpXShfMHg4NjJjMWUpO18weDNmYWE4N1tfMHg1NTNlODAoMHgzYjcpXVsnaWQnXT9fMHg1NmEyZTVbXzB4NTUzZTgwKDB4NWI0KV1bXzB4NTUzZTgwKDB4M2I3KV0mJl8weDU2YTJlNVtfMHg1NTNlODAoMHg1YjQpXVsnYWN0aXZhdGlvbiddW18weDM2Y2JjZF0mJl8weDU2YTJlNVtfMHg1NTNlODAoMHg1YjQpXVtfMHg1NTNlODAoMHgzYjcpXVtfMHgzNmNiY2RdWydpZCddPT09XzB4M2ZhYTg3W18weDU1M2U4MCgweDNiNyldWydpZCddPyhfMHg1NmEyZTVbJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ11bXzB4NTUzZTgwKDB4NmE4KV09XzB4NTZhMmU1WydvbmxpbmVMaWNlbnNlRGV0YWlscyddW18weDU1M2U4MCgweDI1NyldLF8weDQxMDdjMygpLF8weDVlMTc4OChfMHgzNmNiY2QsXzB4NTZhMmU1W18weDU1M2U4MCgweDViNCldWydhY3RpdmF0aW9uJ11bXzB4MzZjYmNkXVsnaWQnXSxfMHgzODQxZjgsMHgwKSk6KF8weDU2YTJlNVtfMHg1NTNlODAoMHg1YjQpXVtfMHg1NTNlODAoMHg1OGUpXXx8KF8weDU2YTJlNVtfMHg1NTNlODAoMHg1YjQpXVtfMHg1NTNlODAoMHg1OGUpXT17fSksXzB4NTZhMmU1W18weDU1M2U4MCgweDViNCldW18weDU1M2U4MCgweDU4ZSldW18weDM2Y2JjZF09eydpZCc6XzB4M2ZhYTg3W18weDU1M2U4MCgweDNiNyldWydpZCddfSxfMHgzZmFhODdbXzB4NTUzZTgwKDB4M2I3KV1bJ2FjdGl2YXRlZCddfHwoXzB4NTZhMmU1WydvbCddP18weDRmYjBmYltfMHg1NTNlODAoMHg2Y2IpXShfMHg1NTNlODAoMHg2NjgpLF8weDRlMjZhYytfMHg1NTNlODAoMHgxMzcpKTpfMHg0ZmIwZmJbXzB4NTUzZTgwKDB4NmNiKV0oXzB4NTUzZTgwKDB4NjY4KSxfMHg0ZTI2YWMrJ1x4MjBhY3RpdmF0aW9uXHgyMHJlcXVpcmVzXHgyMGNvbmZpcm1hdGlvbi5ceDIwQVx4MjBjb25maXJtYXRpb25ceDIwbGlua1x4MjBoYXNceDIwYmVlblx4MjBzZW50XHgyMHRvXHgyMHlvdXJceDIwZW1haWxceDIwYWRkcmVzcy5ceDIwWW91XHgyMG11c3RceDIwZm9sbG93XHgyMHRoZVx4MjBjb25maXJtYXRpb27igItceDIwbGlua1x4MjB3aXRoaW5ceDIwMTBceDIwbWludXRlc1x4MjB0b1x4MjBjb250aW51ZVx4MjB1c2luZ1x4MjAnK18weDRlMjZhYysnLicpKSxfMHg1NmEyZTVbXzB4NTUzZTgwKDB4NWI0KV1bJ2xhc3RQcm9jZXNzZWQnXT1fMHg1NmEyZTVbXzB4NTUzZTgwKDB4NWI0KV1bJ2xhc3RVcGRhdGUnXSxfMHg0MTA3YzMoKSxfMHg1ZTE3ODgoXzB4MzZjYmNkLF8weDU2YTJlNVtfMHg1NTNlODAoMHg1YjQpXVtfMHg1NTNlODAoMHg1OGUpXVtfMHgzNmNiY2RdWydpZCddLF8weDM4NDFmOCwweDApKTpfMHgzZmFhODdbXzB4NTUzZTgwKDB4M2I3KV1bXzB4NTUzZTgwKDB4NDg1KV0mJihfMHgzZmFhODdbXzB4NTUzZTgwKDB4M2I3KV1bXzB4NTUzZTgwKDB4NDg1KV09PT1fMHg1NTNlODAoMHgzNzYpfHxfMHgzZmFhODdbJ2FjdGl2YXRpb24nXVtfMHg1NTNlODAoMHg0ODUpXT09PV8weDU1M2U4MCgweDNhOCkpJiYoXzB4MzZjYmNkPT09XzB4NTZhMmU1WydvbmxpbmVMaWNlbnNlRGV0YWlscyddW18weDU1M2U4MCgweDRjNCldJiZfMHgyYjMzNTEoXzB4NTNiMDkzLCcwJyksXzB4MzZjYmNkPT09XzB4NTZhMmU1WydvbmxpbmVMaWNlbnNlRGV0YWlscyddW18weDU1M2U4MCgweDE1NCldJiZfMHgyYjMzNTEoXzB4NDdkMTU4LCcwJyksXzB4NTZhMmU1W18weDU1M2U4MCgweDViNCldWydncCddPTB4MSxfMHg1NmEyZTVbXzB4NTUzZTgwKDB4NWI0KV1bXzB4NTUzZTgwKDB4NmE4KV09XzB4NTZhMmU1W18weDU1M2U4MCgweDViNCldW18weDU1M2U4MCgweDI1NyldLF8weDQxMDdjMygpLF8weDU2YTJlNVsnb2wnXT9fMHg0ZmIwZmJbXzB4NTUzZTgwKDB4NmNiKV0oXzB4NTUzZTgwKDB4NDg1KSxfMHg1NTNlODAoMHgzOGUpK18weDRlMjZhYytfMHg1NTNlODAoMHgxYjQpKTpfMHg0ZmIwZmJbJ19lbWl0Tm90aWZpY2F0aW9uJ10oXzB4NTUzZTgwKDB4NDg1KSxfMHg0ZTI2YWMrJ1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIwbm9ceDIwbGljZW5zZVx4MjBpc1x4MjBhc3NvY2lhdGVkXHgyMHdpdGhceDIweW91clx4MjBlbWFpbFx4MjBhZGRyZXNzLicpLF8weDRmYjBmYltfMHg1NTNlODAoMHg0ZDYpXSgpLF8weDRmYjBmYltfMHg1NTNlODAoMHg3NjYpXSgpKTt9KTt9ZWxzZSBfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bXzB4M2MyMWQ3KDB4NThlKV0mJl8weDU2YTJlNVtfMHgzYzIxZDcoMHg1YjQpXVsncGVuZGluZ0FjdGl2YXRpb24nXVtfMHgzNmNiY2RdPyhfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bJ2dwJ108PW5ldyBfMHgzODBhYWQoKVtfMHgzYzIxZDcoMHgyOWQpXSgpJiZfMHg1NmEyZTVbJ29ubGluZUxpY2Vuc2VEZXRhaWxzJ11bJ2dwJ10rXzB4NTUzNzkxPm5ldyBfMHgzODBhYWQoKVtfMHgzYzIxZDcoMHgyOWQpXSgpJiYoXzB4MWQ5YWIyPSEweDAsXzB4MTI1OTUwKCkpLF8weDVlMTc4OChfMHgzNmNiY2QsXzB4NTZhMmU1WydvbmxpbmVMaWNlbnNlRGV0YWlscyddW18weDNjMjFkNygweDU4ZSldW18weDM2Y2JjZF1bJ2lkJ10sXzB4Mzg0MWY4LDB4MCkpOiFfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bXzB4M2MyMWQ3KDB4M2I3KV18fCFfMHg1NmEyZTVbXzB4M+KAi2MyMWQ3KDB4NWI0KV1bXzB4M2MyMWQ3KDB4M2I3KV1bXzB4MzZjYmNkXT8oXzB4NGZiMGZiW18weDNjMjFkNygweDZjYildKF8weDNjMjFkNygweDQ4NSksXzB4NGUyNmFjK18weDNjMjFkNygweDZiMCkrXzB4NGUyNmFjKydceDIwbWFuYWdlXHgyMGxpY2Vuc2VceDIwZGlhbG9nLicpLF8weDRmYjBmYltfMHgzYzIxZDcoMHg0ZDYpXSgpLF8weDRmYjBmYlsnX2VtaXRTdG9wcGVkJ10oKSk6XzB4NTZhMmU1WydvbmxpbmVMaWNlbnNlRGV0YWlscyddW18weDNjMjFkNygweDNiNyldJiZfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bXzB4M2MyMWQ3KDB4M2I3KV1bXzB4MzZjYmNkXSYmKF8weDM4NDFmOD09PV8weDNjMjFkNygweDcxZSkmJiFfMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bXzB4M2MyMWQ3KDB4M2I3KV1bXzB4MzZjYmNkXVtfMHgzYzIxZDcoMHg3MWUpXXx8XzB4Mzg0MWY4PT09XzB4M2MyMWQ3KDB4MjJiKSYmIV8weDU2YTJlNVsnb25saW5lTGljZW5zZURldGFpbHMnXVtfMHgzYzIxZDcoMHgzYjcpXVtfMHgzNmNiY2RdWydxdW9ra2EnXSk/KF8weDRmYjBmYlsnX2VtaXROb3RpZmljYXRpb24nXShfMHgzYzIxZDcoMHg0ODUpLF8weDNjMjFkNygweDQyOSkrXzB4NGUyNmFjK18weDNjMjFkNygweDU3YykpLF8weDRmYjBmYltfMHgzYzIxZDcoMHg0ZDYpXSgpLF8weDRmYjBmYltfMHgzYzIxZDcoMHg3NjYpXSgpKTooXzB4MWQ5YWIyPSEweDAsdGhpc1tfMHgzYzIxZDcoMHgxOWEpXShfMHg1NmEyZTUsXzB4MTI1OTUwKSxuZXcgXzB4MzgwYWFkKClbXzB4M2MyMWQ3KDB4MjlkKV0oKS1fMHg1NmEyZTVbXzB4M2MyMWQ3KDB4NWI0KV1bXzB4M2MyMWQ3KDB4M2I3KV1bXzB4MzZjYmNkXVtfMHgzODQxZjgrJ19sYXN0Q2hlY2snXT4weDNlOCoweDNjKjB4M2MqMHgxJiZfMHg1ZTE3ODgoXzB4MzZjYmNkLF8weDU2YTJlNVsnb25saW5lTGljZW5zZURldGFpbHMnXVsnYWN0aXZhdGlvbiddW18weDM2Y2JjZF1bJ2lkJ10sXzB4Mzg0MWY4LF8weDU2YTJlNVtfMHgzYzIxZDcoMHg1YjQp4oCLXVsnYWN0aXZhdGlvbiddW18weDM2Y2JjZF1bXzB4M2MyMWQ3KDB4NjE0KV0pKTt9WydfcnVuSWZWZXJpZmllZCddKF8weDIxN2E4Yyl7Y29uc3QgXzB4MWYzYzkxPV8weDQzMDVjNjtyZXR1cm4gcHJvY2Vzc1tfMHgxZjNjOTEoMHg0NTgpXVsncXVva2thJ10mJiF0aGlzW18weDFmM2M5MSgweDI0ZSldfHx0aGlzW18weDFmM2M5MSgweDVhOCldP18weDIxN2E4YygpOihfMHgzNWExY2VbXzB4MWYzYzkxKDB4NjEzKV09XzB4MzVhMWNlW18weDFmM2M5MSgweDYxMyldfHx7J3ZhbGlkJzohMHgxfSxfMHgzNWExY2VbXzB4MWYzYzkxKDB4NjEzKV1bJ3AnXSYmdGhpc1tfMHgxZjNjOTEoMHg0YmEpXVsnX3RyYWNrZXInXVsnZmVhdHVyZVVzZWQnXShfMHgxZjNjOTEoMHg0MTMpKSxfMHgzNWExY2VbJ3ZlcmlmaWNhdGlvblJlc3VsdCddW18weDFmM+KAi2M5MSgweDViNCldPyh0aGlzW18weDFmM2M5MSgweDRiYSldW18weDFmM2M5MSgweDM0ZCldW18weDFmM2M5MSgweDMzMildKF8weDFmM2M5MSgweDJjMikpLHRoaXNbXzB4MWYzYzkxKDB4NmI3KV0oXzB4MzVhMWNlWyd2ZXJpZmljYXRpb25SZXN1bHQnXSxfMHgyMTdhOGMpKToodGhpc1tfMHgxZjNjOTEoMHg0YmEpXVtfMHgxZjNjOTEoMHgzNGQpXVsnZmVhdHVyZVVzZWQnXShfMHgxZjNjOTEoMHg0YzMpKSx0aGlzW18weDFmM2M5MSgweDE5YSldKF8weDM1YTFjZVsndmVyaWZpY2F0aW9uUmVzdWx0J10sXzB4MjE3YThjKSkpO31bXzB4NDMwNWM2KDB4NDg3KV0oXzB4NDY1ZTJhKXtjb25zdCBfMHg0YmI5MzE9XzB4NDMwNWM2O2xldCBfMHg1YjY1ZGQ9dGhpcztjb25zdCBfMHg0ZjVkNGM9cHJvY2Vzc1snZW52J11bJ3F1b2trYSddP18weDRiYjkzMSgweGUzKTpfMHg0YmI5MzEoMHgzNmQpLF8weDJiOTY2NT1wcm9jZXNzW18weDRiYjkzMSgweDQ1OCldWydxdW9ra2EnXT8naHR0cHM6Ly9xdW9ra2Fqcy5jb20vcHJvJzpfMHg0YmI5MzEoMHg3MDQpO18weDQ2NWUyYT1fMHg0NjVlMmF8fDB4MDtjb25zdCBfMHgyMjEwODc9cHJvY2Vzc1tfMHg0YmI5MzEoMHg0NTgpXVsncXVva2thJ10/XzB4M2NlM2NhOl8weDI3MDM3ZTtfMHgyOTM5ZGUoKCk9Pntjb25zdCBfMHg1YmJiNjY9XzB4NGJiOTMxO18weDQ2NWUyYT49XzB4M2Y3ZDhmPyhfMHg1YjY1ZGRbJ19lbWl0Tm90aWZpY2F0aW9uJ10oXzB4NWJiYjY2KDB4NjY4KSwnVG9ceDIwa2VlcFx4MjB0cmlhbGluZ1x4MjAnK18weDRmNWQ0YytfMHg1YmJiNjYoMHgyNWIpK18weDJiOTY2NStfMHg1YmJiNjYoMHgzZDkpK18weDRmNWQ0YysnXHgyMHdpdGhvdXRceDIwdGhpc1x4MjBsaW1pdGF0aW9uLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyJytfMHgyMjEwODcrXzB4NWJiYjY2KDB4NWMyKStfMHgxZmYwZDkrXzB4NWJiYjY2KDB4MTU5KStfMHg1M2EwYTYrJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+LicseydpZCc6XzB4NWJiYjY2KDB4MzA0KX0pLF8weDViNjVkZFtfMHg1YmJiNjYoMHg0ZDYpXSgpLF8weDViNjVkZFtfMHg1YmJiNjYoMHg3NjYpXSghMHgwKSk6KF8weDViNjVkZFtfMHg1YmJiNjYoMHg2OTUpXT0oKT0+e2NvbnN0IF8weDM1MTlmYz1fMHg1YmJiNjY7XzB4NTA0ZmYxKF8weDViNjVkZFtfMHgzNTE5ZmMoMHg2NjMpXSksXzB4NWI2NWRkW18weDM1MTlmYygweDQ4NyldKF8weDQ2NWUyYSsweDEpO30sXzB4NWI2NWRkWydfc3RvcHBlclRpbWVvdXQnXT1fMHgyOTM5ZGUoKCk9Pntjb25zdCBfMHg1NTAzZmM9XzB4NWJiYjY2O18weDViNjVkZFtfMHg1NTAzZmMoMHg0ZDYpXSgpLHRoaXNbXzB4NTUwM2ZjKDB4NmNiKV0oJ2Vycm9yJyxfMHg0ZjVkNGMrJ1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIweW91XHgyMGRpZFx4MjBub3RceDIwY2hvb3NlXHgyMHRvXHgyMGNvbnRpbnVlXHgyMHlvdXJceDIwdHJpYWxceDIwc2Vzc2lvbi5ceDIwVG9ceDIwa2VlcFx4MjB0cmlhbGluZ1x4MjAnK18weDRmNWQ0YytfMHg1NTAzZmMoMHg0YWIpK18weDJiOTY2NStfMHg1NTAzZmMoMHgzZDkpK18weDRmNWQ0YytfMHg1NTAzZmMoMHg3NTgpK18weDIyMTA4NytfMHg1NTAzZmMoMHg1YzIpK18weDFmZjBkOStfMHg1NTAzZmMoMHgxNTkpK18weDUzYTBhNitfMHg1NTAzZmMoMHg2M2YpKSxfMHg1YjY1ZGRbXzB4NTUwM2ZjKDB4NzY2KV0oKTt9LF8weDNjYzc0MSksXzB4NWI2NWRkW18weDViYmI2NigweDZjYildKF8weDViYmI2NigweDY2OCksXzB4NWJiYjY2KDB4YmQpK18weDRmNWQ0YytfMHg1YmJiNjYoMHgxMzEpK18weDJkYmUyNCtfMHg1YmJiNjYoMHhjZikrXzB4NGY1ZDRjK18weDViYmI2NigweDZlYikrXzB4MjIxMDg3K18weDViYmI2NigweDVjMikrXzB4MWZmMGQ5K18weDViYmI2NigweDc1ZCkrXzB4MmI5NjY1K18weDViYmI2NigweDU4ZCkrXzB4NTNhMGE2K18weDViYmI2NigweDYzZikseydpZCc6XzB4NWJiYjY2KDB4MzFmKX0pKTt9LF8weDU1Mzc5MSk7fVtfMHg0MzA1YzYoMHg1NDcpXShfMHg1NTkzYzMsXzB4MTA3ZmFlKXtjb25zdCBfMHgzZGFiNTc9XzB4NDMwNWM2O3RoaXNbJ19lbWl0J10oeyd0eXBlJzpfMHgzZGFiNTcoMHgzMjUpLCdmaWxlcyc6XzB4NTU5M2MzLCdpbmNyZW1lbnRhbCc6XzB4MTA3ZmFlfSk7fVsnX2VtaXRUZXN0UnVuRXJyb3InXeKAiyhfMHgzOWRmZTkpe2NvbnN0IF8weDI2MTAxYT1fMHg0MzA1YzY7dGhpc1tfMHgyNjEwMWEoMHg1ZWQpXSh7J3R5cGUnOl8weDI2MTAxYSgweDJiMyksJ2RhdGEnOl8weDM5ZGZlOX0pO31bJ19lbWl0RG9jdW1lbnRVcGRhdGVzJ10oXzB4NDcyMjU3KXtjb25zdCBfMHg1NmRhM2E9XzB4NDMwNWM2O2lmKHByb2Nlc3NbJ2VudiddW18weDU2ZGEzYSgweDIyYildJiZfMHg0NzIyNTcpe2NvbnN0IF8weDM3M2UxYz1fMHg0NzIyNTdbdGhpc1tfMHg1NmRhM2EoMHg0YmEpXVtfMHg1NmRhM2EoMHhlZildXTtfMHgzNzNlMWMmJl8weDM3M2UxY1snbGluZXMnXSYmKHRoaXNbJ19xdW9ra2FNYXhGaWxlU2l6ZSddPU1hdGhbJ21heCddKF8weDM3M2UxY1snbGluZXMnXVtfMHg1NmRhM2EoMHgxOTUpXSx0aGlzW18weDU2ZGEzYSgweDNkNSldfHwweDApKSx0aGlzW18weDU2ZGEzYSgweDRiYSldW18weDU2ZGEzYSgweDJhNSldJiYoXzB4NDcyMjU3W3RoaXNbXzB4NTZkYTNhKDB4NGJhKV1bXzB4NTZkYTNhKDB4MmE1KV1dPV8weDM3M2UxYyxkZWxldGUgXzB4NDcyMjU3W3RoaXNbXzB4NTZkYTNhKDB4NGJhKV1bJ19xdW9ra2FGaWxlTmFtZSddXSk7fWNvbnN0IF8weDUzNzI0Mj10aGlzW18weDU2ZGEzYSgweDZhNCldO3RoaXNbXzB4NTZkYTNhKDB4NWVkKV0oeyd0eXBlJzonZG9jdW1lbnRVcGRhdGVzJywndXBkYXRlcyc6XzB4NDcyMjU3LCdoYXNHbG9iYWxFcnJvcic6T2JqZWN0W18weDU2ZGEzYSgweDI0MyldKF8weDUzNzI0MltfMHg1NmRhM2EoMHgyNzEpXSgpKVtfMHg1NmRhM2EoMHgxOTUpXT8hMHgwOnZvaWQgMHgwLCdoYXNSdW5FcnJvcic6XzB4NTM3MjQyWydydW5FcnJvciddKCk/ITB4MDp2b2lkIDB4MH0pO31bJ19lbWl0U3RhdHNVcGRhdGUnXShfMHg0OWEyNDcpe2NvbnN0IF8weDU0ZDNmMT1fMHg0MzA1YzY7dGhpc1snX2VtaXQnXSh7J3R5cGUnOl8weDU0ZDNmMSgweDJiMyksJ2RhdGEnOl8weDQ5YTI0N30pLHRoaXNbXzB4NTRkM2YxKDB4NmY5KV09ITB4MDt9WydfZW1pdFByb2plY3RDb25maWd1cmVkJ10oXzB4NWJjZDUwLF8weDVjMDgyMil7Y29uc3QgXzB4MzE1YjcxPV8weDQzMDVjNjt0cnl7KCFfWydfJytbJ3U5JywneDUnLCd6OScsJ2J4J11bJ2pvaW4nXSgnJyldfHxbJ3U5JywneDUnLCd6OScsJ2J4J11bXzB4MzE1YjcxKDB4NDJlKV0oJycpIT09X1snXycrW18weDMxNWI3MSgweDQzNiksXzB4MzE1YjcxKDB4NTQ5KSwnYngnXVsnam9pbiddKCcnKV0pJiZwcm9jZXNzW18weDMxNWI3MSgweGY1KV0oZnVuY3Rpb24oKXtjb25zdCBfMHgyMDZkNGU9XzB4MzE1YjcxO3Byb2Nlc3NbXzB4MjA2ZDRlKDB4MTNjKV0oKTt9KTt9Y2F0Y2goXzB4MTQyNjEyKXt9dGhpc1tfMHgzMTViNzEoMHg1ZWQpXShfWydleHRlbmQnXSh7fSxfMHg1YzA4MjIseydmaWxlcyc6XzB4NWJjZDUwfSkpO31bXzB4NDMwNWM2KDB4NmNiKV0oXzB4NTQ5N2M3LF8weDE1Nzk3NyxfMHgxNjhiY2Ype2NvbnN0IF8weDJlMzQ1MD1fMHg0MzA1YzY7dGhpc1snX2VtaXQnXSh7J3R5cGUnOl8weDJlMzQ1MCgweDMwMiksJ25vdGlmaWNhdGlvbic6X1tfMHgyZTM0NTAoMHg2NjApXSh7J3RleHQnOl8weDE1Nzk3NywndHlwZSc6XzB4NTQ5N2M3fSxfMHgxNjhiY2Z8fHt9KX0pO31bXzB4NDMwNWM2KDB4NzY2KV0oXzB4MzNmNGU0KXtjb25zdCBfMHg3N2Y0ZGQ9XzB4NDMwNWM2O3RoaXNbJ19lbWl0J10oeyd0eXBlJzpfMHg3N2Y0ZGQoMHg2NDUpLCdkZWFjdGl2YXRlJzpfMHgzM2Y0ZTR9KTt9WydfZW1pdEV4cGlyZWRMaWNlbnNlJ10oKXtjb25zdCBfMHgyZGJiYmE9XzB4NDMwNWM2O3RoaXNbJ19lbWl0J10oeyd0eXBlJzpfMHgyZGJiYmEoMHg0OTYpfSk7fVtfMHg0MzA1YzYoMHg1ZWQpXShfMHgyNWY0NWQpe2NvbnN0IF8weDU1ZGU5Nj1fMHg0MzA1YzY7dGhpc1tfMHg1NWRlOTYoMHhjMyldKF8weDU1ZGU5NigweGFiKSxfMHgyNWY0NWQpO31bXzB4NDMwNWM2KDB4NGRjKV0oXzB4NGI4ZDcwKXtjb25zdCBfMHg0OTRiOWY9XzB4NDMwNWM2O3JldHVybiB0aGlzW18weDQ5NGI5ZigweDRiYSldJiZ0aGlzW18weDQ5NGI5ZigweDRiYSldW18weDQ5NGI5ZigweDEyYildKF8weDRiOGQ3MCksXzB4NGI4ZDcwJiYoXzB4NGI4ZDcwW18weDQ5NGI5ZigweDQzNyldfHxfMHg0YjhkNzBbXzB4NDk0YjlmKDB4YWIpXSk7fVsnX3Rlc3RSdW5FcnJvck1lc3NhZ2UnXShfMHgxOTIwMDQpe3JldHVybiBfMHgxOTIwMDQmJl8weDE5MjAwNFsnbWVzc2FnZSddO319XzB4NTBlYTc3W18weDQzMDVjNigweDM2NildPV8weDJkMzY3MDt9fSx7Jy4uL2xhenknOjB4MWYsJy4uL3V0aWxzJzoweDIxLCcuLi91dGlscy9leHRyYWN0Q29tbWVudHMnOjB4MjIsJy4vc2VydmVyL2ZpbGVTeXN0ZW0nOjB4ZSwnLi9zZXJ2ZXIvbGluZURpZmZlcmVuY2VzJzoweDEwLCcuL3NlcnZlci9tb2RlbCc6MHgxMiwnLi9zaGFyZWQvdXRpbHMnOjB4MWEsJy4vdWkvdHV0b3JpYWwnOjB4MWQsJ2NoaWxkX3Byb2Nlc3MnOnZvaWQgMHgwLCdjcnlwdG8nOnZvaWQgMHgwLCdmcyc6dm9pZCAweDAsJ2h0dHBzJzp2b2lkIDB4MCwnbW9kdWxlJzp2b2lkIDB4MCwnb3MnOnZvaWQgMHgwLCdwYXRoJzp2b2lkIDB4MCwndGltZXJzJzp2b2lkIDB4MCwndXRpbCc6dm9pZCAweDAsJ3V1aWQnOnZvaWQgMHgwfV0sMHg2OltmdW5jdGlvbihfMHg0YWY1MzQsXzB4NGU0NDNkLF8weGEwOWRiMCl7XzB4NGU0NDNkWydleHBvcnRzJ109eydET01FeGNlcHRpb24nOjB4MSwnTmFtZWROb2RlTWFwJzoweDEsJ0F0dHInOjB4MSwnTm9kZSc6MHgxLCdFbGVtZW50JzoweDEsJ0RvY3VtZW50RnJhZ21lbnQnOjB4MSwnSFRNTERvY3VtZW50JzoweDEsJ0RvY3VtZW50JzoweDEsJ1hNTERvY3VtZW50JzoweDEsJ0NoYXJhY3RlckRhdOKAi2EnOjB4MSwnVGV4dCc6MHgxLCdDREFUQVNlY3Rpb24nOjB4MSwnUHJvY2Vzc2luZ0luc3RydWN0aW9uJzoweDEsJ0NvbW1lbnQnOjB4MSwnRG9jdW1lbnRUeXBlJzoweDEsJ0RPTUltcGxlbWVudGF0aW9uJzoweDEsJ05vZGVMaXN0JzoweDEsJ0hUTUxDb2xsZWN0aW9uJzoweDEsJ0hUTUxPcHRpb25zQ29sbGVjdGlvbic6MHgxLCdET01TdHJpbmdNYXAnOjB4MSwnRE9NVG9rZW5MaXN0JzoweDEsJ1NWR0FuaW1hdGVkU3RyaW5nJzoweDEsJ1NWR051bWJlcic6MHgxLCdTVkdTdHJpbmdMaXN0JzoweDEsJ0V2ZW50JzoweDEsJ0Nsb3NlRXZlbnQnOjB4MSwnQ3VzdG9tRXZlbnQnOjB4MSwnTWVzc2FnZUV2ZW50JzoweDEsJ0Vycm9yRXZlbnQnOjB4MSwnSGFzaENoYW5nZUV2ZW50JzoweDEsJ0ZvY3VzRXZlbnQnOjB4MSwnUG9wU3RhdGVFdmVudCc6MHgxLCdVSUV2ZW50JzoweDEsJ01vdXNlRXZlbnQnOjB4MSwnS2V5Ym9hcmRFdmVudCc6MHgxLCdUb3VjaEV2ZW50JzoweDEsJ1Byb2dyZXNzRXZlbnQnOjB4MSwnQ29tcG9zaXRpb25FdmVudCc6MHgxLCdXaGVlbEV2ZW50JzoweDEsJ0V2ZW50VGFyZ2V0JzoweDEsJ0JhclByb3AnOjB4MSwnTG9jYXRpb24nOjB4MSwnSGlzdG9yeSc6MHgxLCdTY3JlZW4nOjB4MSwnUGVyZm9ybWFuY2UnOjB4MSwnQmxvYic6MHgxLCdGaWxlJzoweDEsJ0ZpbGVMaXN0JzoweDEsJ0RPTVBhcnNlcic6MHgxLCdGb3JtRGF0YSc6MHgxLCdYTUxIdHRwUmVxdWVzdEV2ZW50VGFyZ2V0JzoweDEsJ1hNTEh0dHBSZXF1ZXN0VXBsb2FkJzoweDEsJ05vZGVJdGVyYXRvcic6MHgxLCdUcmVlV2Fsa2VyJzoweDEsJ0hUTUxFbGVtZW50JzoweDEsJ0hUTUxBbmNob3JFbGVtZW50JzoweDEsJ0hUTUxBcmVhRWxlbWVudCc6MHgxLCdIVE1MQXVkaW9FbGVtZW50JzoweDEsJ0hUTUxCYXNlRWxlbWVudCc6MHgxLCdIVE1MQm9keUVsZW1lbnQnOjB4MSwnSFRNTEJSRWxlbWVudCc6MHgxLCdIVE1MQnV0dG9uRWxlbWVudCc6MHgxLCdIVE1MQ2FudmFzRWxlbWVudCc6MHgxLCdIVE1MRGF0YUVsZW1lbnQnOjB4MSwnSFRNTERhdGFMaXN0RWxlbWVudCc6MHgxLCdIVE1MRGV0YWlsc0VsZW1lbnQnOjB4MSwnSFRNTERpYWxvZ0VsZW1lbnQnOjB4MSwnSFRNTERpcmVjdG9yeUVsZW1lbnQnOjB4MSwnSFRNTERpdkVsZW1lbnQnOjB4MSwnSFRNTERMaXN0RWxlbWVudCc6MHgxLCdIVE1MRW1iZWRFbGVtZW50JzoweDEsJ0hUTUxGaWVsZFNldEVsZW1lbnQnOjB4MSwnSFRNTEZvbnRFbGVtZW50JzoweDEsJ0hUTUxGb3JtRWxlbWVudCc6MHgxLCdIVE1MRnJhbWVFbGVtZW50JzoweDEsJ0hUTUxGcmFtZVNldEVsZW1lbnQnOjB4MSwnSFRNTEhlYWRpbmdFbGVtZW50JzoweDEsJ0hUTUxIZWFkRWxlbWVudCc6MHgxLCdIVE1MSFJFbGVtZW50JzoweDEsJ0hUTUxIdG1sRWxlbWVudCc6MHgxLCdIVE1MSUZyYW1lRWxlbWVudCc6MHgxLCdIVE1MSW1hZ2VFbGVtZW50JzoweDEsJ0hUTUxJbnB1dEVsZW1lbnQnOjB4MSwnSFRNTExhYmVsRWxlbWVudCc6MHgxLCdIVE1MTGVnZW5kRWxlbWVudCc6MHgxLCdIVE1MTElFbGVtZW50JzoweDEsJ0hUTUxMaW5rRWxlbWVudCc6MHgxLCdIVE1MTWFwRWxlbWVudCc6MHgxLCdIVE1MTWFycXVlZUVsZW1lbnQnOjB4MSwnSFRNTE1lZGlhRWxlbWVudCc6MHgxLCdIVE1MTWVudUVsZW1lbnQnOjB4MSwnSFRNTE1ldGFFbGVtZW50JzoweDEsJ0hUTUxNZXRlckVsZW1lbnQnOjB4MSwnSFRNTE1vZEVsZW1lbnQnOjB4MSwnSFRNTE9iamVjdEVsZW1lbnQnOjB4MSwnSFRNTE9MaXN0RWxlbWVudCc6MHgxLCdIVE1MT3B0R3JvdXBFbGVtZW50JzoweDEsJ0hUTUxPcHRpb25FbGVtZW50JzoweDEsJ0hUTUxPdXRwdXRFbGVtZW50JzoweDEsJ0hUTUxQYXJhZ3JhcGhFbGVtZW50JzoweDEsJ0hUTUxQYXJhbUVsZW1lbnQnOjB4MSwnSFRNTFBpY3R1cmVFbGVtZW50JzoweDEsJ0hUTUxQcmVFbGVtZW50JzoweDEsJ0hUTUxQcm9ncmVzc0VsZW1lbnQnOjB4MSwnSFRNTFF1b3RlRWxlbWVudCc6MHgxLCdIVE1MU2NyaXB0RWxlbWVudCc6MHgxLCdIVE1MU2VsZWN0RWxlbWVudCc6MHgxLCdIVE1MU291cmNlRWxlbWVudCc6MHgxLCdIVE1MU3BhbkVsZW1lbnQnOjB4MSwnSFRNTFN0eWxlRWxlbWVudCc6MHgxLCdIVE1MVGFibGVDYXB0aW9uRWxlbWVudCc6MHgxLCdIVE1MVGFibGVDZWxsRWxlbWVudCc6MHgxLCdIVE1MVGFibGVDb2xFbGVtZW50JzoweDEsJ0hUTUxUYWJsZUVsZW1lbnQnOjB4MSwnSFRNTFRpbWVFbGVtZW50JzoweDEsJ0hUTUxUaXRsZUVsZW1lbnQnOjB4MSwnSFRNTFRhYmxlUm93RWxlbWVudCc6MHgxLCdIVE1MVGFibGVTZWN0aW9uRWxlbWVudCc6MHgxLCdIVE1MVGVtcGxhdGVFbGVtZW50JzoweDEsJ0hUTUxUZXh0QXJlYUVsZW1lbnQnOjB4MSwnSFRNTFRyYWNrRWxlbWVudCc6MHgxLCdIVE1MVUxpc3RFbGVtZW50JzoweDEsJ0hUTUxVbmtub3duRWxlbWVudCc6MHgxLCdIVE1MVmlkZW9FbGVtZW50JzoweDEsJ1NWR0VsZW1lbnQnOjB4MSwnU1ZHR3JhcGhpY3NFbGVtZW50JzoweDEsJ1NWR1NWR0VsZW1lbnQnOjB4MSwnU3R5bGVTaGVldCc6MHgxLCdNZWRpYUxpc3QnOjB4MSwnQ1NTU3R5bGVTaGVldCc6MHgxLCdDU1NSdWxlJzoweDEsJ0NTU1N0eWxlUnVsZSc6MHgxLCdDU1NNZWRpYVJ1bGUnOjB4MSwnQ1NTSW1wb3J0UnVsZSc6MHgxLCdDU1NTdHlsZURlY2xhcmF0aW9uJzoweDEsJ1N0eWxlU2hlZXRMaXN0JzoweDEsJ1hQYXRoRXhjZXB0aW9uJzoweDEsJ1hQYXRoRXhwcmVzc2lvbic6MHgxLCdYUGF0aFJlc3VsdCc6MHgxLCdYUGF0aEV2YWx1YXRvcic6MHgxLCdOb2RlRmlsdGVyJzoweDEsJ1VSTCc6MHgxLCdVUkxTZWFyY2hQYXJhbXMnOjB4MSwnV2luZG93JzoweDEsJ2xlbmd0aCc6MHgxLCd3aW5kb3cnOjB4MSwnZnJhbWVFbGVtZW50JzoweDEsJ2ZyYW1lcyc6MHgxLCdzZWxmJzoweDEsJ3BhcmVudCc6MHgxLCd0b3AnOjB4MSwnZG9jdW1lbnQnOjB4MSwnZXh0ZXJuYWwnOjB4MSwnbG9jYXRpb24nOjB4MSwnaGlzdG9yeSc6MHgxLCduYXZpZ2F0b3InOjB4MSwnbG9jYXRpb25iYXInOjB4MSwnbWVudWJhcic6MHgxLCdwZXJzb25hbGJhcic6MHgxLCdzY3JvbGxiYXJzJzoweDEsJ3N0YXR1c2Jhcic6MHgxLCd0b29sYmFyJzoweDEsJ3BlcmZvcm1hbmNlJzoweDEsJ3NjcmVlbic6MHgxLCdhZGRFdmVudExpc3RlbmVyJzoweDEsJ3JlbW92ZUV2ZW50TGlzdGVuZXInOjB4MSwnZGlzcGF0Y2hFdmVudCc6MHgxLCdzZXRUaW1lb3V0JzoweDEsJ3NldEludGVydmFsJzoweDEsJ2NsZWFySW50ZXJ2YWwnOjB4MSwnY2xlYXJUaW1lb3V0JzoweDEsJ09wdGlvbic6MHgxLCdJbWFnZSc6MHgxLCdBdWRpbyc6MHgxLCdwb3N0TWVzc2FnZSc6MHgxLCdhdG9iJzoweDEsJ2J0b2EnOjB4MSwnRmlsZVJlYWRlcic6MHgxLCdXZWJTb2NrZXQnOjB4MSwnQWJvcnRTaWduYWwnOjB4MSwnQWJvcnRDb250cm9sbGVyJzoweDEsJ1hNTEh0dHBSZXF1ZXN0JzoweDEsJ0FycmF5QnVmZmVyJzoweDEsJ0ludDhBcnJheSc6MHgxLCdVaW50OEFycmF5JzoweDEsJ1VpbnQ4Q2xhbXBlZEFycmF5JzoweDEsJ0ludDE2QXJyYXknOjB4MSwnVWludDE2QXJyYXknOjB4MSwnSW50MzJBcnJheSc6MHgxLCdVaW50MzJBcnJheSc6MHgxLCdGbG9hdDMyQXJyYXknOjB4MSwnRmxvYXQ2NEFycmF5JzoweDEsJ3N0b3AnOjB4MSwnY2xvc2UnOjB4MSwnZ2V0Q29tcHV0ZWRTdHlsZSc6MHgxLCdjYXB0dXJlRXZlbnRzJzoweDEsJ3JlbGVhc2VFdmVudHMnOjB4MSwnY29uc29sZSc6MHgxLCduYW1lJzoweDEsJ2RldmljZVBpeGVsUmF0aW8nOjB4MSwnaW5uZXJXaWR0aCc6MHgxLCdpbm5lckhlaWdodCc6MHgxLCdvdXRlcldpZHRoJzoweDEsJ291dGVySGVpZ2h0JzoweDEsJ3BhZ2VYT2Zmc2V0JzoweDEsJ3BhZ2VZT2Zmc2V0JzoweDEsJ3NjcmVlblgnOjB4MSwnc2NyZWVuWSc6MHgxLCdzY3JvbGxYJzoweDEsJ3Njcm9sbFknOjB4MSwnc2NyZWVuTGVmdCc6MHgxLCdzY3JlZW5Ub3AnOjB4MSwnYWxlcnQnOjB4MSwnYmx1cic6MHgxLCdjb25maXJtJzoweDEsJ2ZvY3VzJzoweDEsJ21vdmVCeSc6MHgxLCdtb3ZlVG8nOjB4MSwnb3Blbic6MHgxLCdwcmludCc6MHgxLCdwcm9tcHQnOjB4MSwncmVzaXplQnknOjB4MSwncmVzaXplVG8nOjB4MSwnc2Nyb2xsJzoweDEsJ3Njcm9sbEJ5JzoweDEsJ3Njcm9sbFRvJzoweDF9O30se31dLDB4NzpbZnVuY3Rpb24oXzB4Mzg2NjA3LF8weGUzZTA1OCxfMHgyOGY0OWMpeyd1c2Ugc3RyaWN0Jztjb25zdCBfMHg1NmQ2YTc9XzB4YWUyNjtjbGFzcyBfMHgzZjdhYzZ7Y29uc3RydWN0b3IoXzB4NDcyMDMpe2NvbnN0IF8weDQ0YjViZT1fMHhhZTI2O3RoaXNbXzB4NDRiNWJlKDB4NGQwKV09XzB4NDcyMDNbXzB4NDRiNWJlKDB4NmU2KV0sdGhpc1tfMHg0NGI1YmUoMHg0ODYpXT1fMHg0NzIwM1tfMHg0NGI1YmUoMHgxYmMpXSx0aGlzWydfcmFuZ2UnXT1fMHg0NzIwM1tfMHg0NGI1YmUoMHg3M2IpXSx0aGlzWydfdGV4dCddPV8weDQ3MjAzWyd0ZXh0J10sdGhpc1tfMHg0NGI1YmUoMHgyMjYpXT1fMHg0NzIwM1tfMHg0NGI1YmUoMHgxNjIpXSx0aGlzWydfdmFsdWVCYWcnXT1fMHg0NzIwM1tfMHg0NGI1YmUoMHgxZWQpXSx0aGlzW18weDQ0YjViZSgweDFmYSldPV8weDQ3MjAzW18weDQ0YjViZSgweDQ1NCldLHRoaXNbJ19jb250ZXh0J109XzB4NDcyMDNbJ2NvbnRleHQnXSx0aGlzW18weDQ0YjViZSgweDNjNCldPV8weDQ3MjAzW18weDQ0YjViZSgweDU2MCldLHRoaXNbXzB4NDRiNWJlKDB4MTE4KV09XzB4NDcyMDNbXzB4NDRiNWJlKDB4NmZhKV07fVtfMHg1NmQ2YTcoMHg2MmYpXSgpe2NvbnN0IF8weDM1MTNmNj1fMHg1NmQ2YTc7cmV0dXJuIHRoaXNbXzB4MzUxM2Y2KDB4NGQwKV07fVsndGVzdEtleSddKCl7cmV0dXJuIHRoaXNbJ190ZXN0S2V5J107fVtfMHg1NmQ2YTcoMHg1Y2QpXSgpe2NvbnN0IF8weDUzMzIwMj1fMHg1NmQ2YTc7cmV0dXJuIHRoaXNbXzB4NTMzMjAyKDB4NDg2KV07fVsncmFuZ2UnXSgpe2NvbnN0IF8weDQyNjU3YT1fMHg1NmQ2YTc7cmV0dXJuIHRoaXNbXzB4NDI2NTdhKDB4MjY2KV07fVtfMHg1NmQ2YTcoMHgzZGEpXShfMHg0MThmZjMpe3RoaXNbJ19yYW5nZSddPV8weDQxOGZmMzt9Wyd0ZXh0J10oKXtjb25zdCBfMHg1YzA0NWM9XzB4NTZkNmE3O3JldHVybiB0aGlzW18weDVjMDQ1YygweDViMCldO31bJ2Zvcm1hdCddKCl7Y29uc3QgXzB4NDQ2OGNlPV8weDU2ZDZhNztyZXR1cm4gdGhpc1tfMHg0NDY4Y2UoMHgyMjYpXTt9Wyd2YWx1ZUJhZyddKCl7Y29uc3QgXzB4MjM1OWQ1PV8weDU2ZDZhNztyZXR1cm4gdGhpc1tfMHgyMzU5ZDUoMHg2ZTMpXTt9W18weDU2ZDZhNygweDcxMCldKCl7Y29uc3QgXzB4MmZkZDQ3PV8weDU2ZDZhNztyZXR1cm4gdGhpc1tfMHgyZmRkNDcoMHg2ZTMpXSYmdGhpc1tfMHgyZmRkNDcoMHg2ZTMpXVtfMHgyZmRkNDcoMHg3MTApXTt9W18weDU2ZDZhNygweDU0MyldKCl7Y29uc3QgXzB4NDI5MTViPV8weDU2ZDZhNztyZXR1cm4gdGhpc1tfMHg0MjkxNWIoMHg2ZTMpXSYmdGhpc1tfMHg0MjkxNWIoMHg2ZTMpXVsndHJhY2VTdGVwJ107fVtfMHg1NmQ2YTcoMHg3MWYpXSgpe2NvbnN0IF8weDQ1MjdlZT1fMHg1NmQ2YTc7cmV0dXJuIHRoaXNbXzB4NDUyN2VlKDB4NmUzKV0mJnRoaXNbJ192YWx1ZUJhZyddW18weDQ1MjdlZSgweDcxZildO31bXzB4NTZkNmE3KDB4NGY2KV0oKXtjb25zdCBfMHg0ZmMxYTY9XzB4NTZkNmE3O3JldHVybiB0aGlzW18weDRmYzFhNigweDZlMyldJiZ0aGlzW18weDRmYzFhNigweDZlMyldW18weDRmYzFhNigweDRmNildO31bXzB4NTZkNmE3KDB4Mjc2KV0oKXtjb25zdCBfMHgxOTUxZjQ9XzB4NTZkNmE3LF8weDNiMTc2Yj1PYmplY3RbXzB4MTk1MWY0KDB4NDdlKV0oe30sdGhpc1tfMHgxOTUxZjQoMHg2ZTMpXSk7cmV0dXJuIF8weDNiMTc2YltfMHgxOTUxZjQoMHg0NTEpXT1PYmplY3RbXzB4MTk1MWY0KDB4NDdlKV0oe30sdGhpc1snX3ZhbHVlQmFnJ11bXzB4MTk1MWY0KDB4NDUxKV0pLHRoaXNbJ192YWx1ZUJhZyddJiZ0aGlzW18weDE5NTFmNCgweDZlMyldW18weDE5NTFmNCgweDQ1MSldJiZ0aGlzW18weDE5NTFmNCgweDZlMyldW18weDE5NTFmNCgweDQ1MSldW18weDE5NTFmNCgweDJlZildJiYoZGVsZXRlIHRoaXNbJ192YWx1ZUJhZyddW18weDE5NTFmNCgweDQ1MSldW18weDE5NTFmNCgweDJlZildLHRoaXNbXzB4MTk1MWY0KDB4NmUzKV1bXzB4MTk1MWY0KDB4NDUxKV1bJ2NhcHBlZCddPSEweDApLF8weDNiMTc2Yjt9W18weDU2ZDZhNygweDQ1NCldKCl7cmV0dXJuIHRoaXNbJ190eXBlJ107fVtfMHg1NmQ2YTcoMHg0MzgpXShfMHg0MzZkZWIpe2NvbnN0IF8weDNmYWRlZT1fMHg1NmQ2YTc7dGhpc1tfMHgzZmFkZWUoMHgzOTIpXT1fMHg0MzZkZWI7fVsnc2V0VGVzdEtleSddKF8weDFlNTRkMyl7Y29uc3QgXzB4MmJmMDRhPV8weDU2ZDZhNzt0aGlzW18weDJiZjA0YSgweDJlZCldPV8weDFlNTRkMzt9WydmaWxlJ10oKXtjb25zdCBfMHgzN2RmZDY9XzB4NTZkNmE3O3JldHVybiB0aGlzW18weDM3ZGZkNigweDM5MildO31bXzB4NTZkNmE3KDB4MmE0KV0oKXtjb25zdCBfMHg4NDQyZDA9XzB4NTZkNmE3O3JldHVybiB0aGlzW18weDg0NDJkMCgweDI2NildP19bXzB4ODQ0MmQwKDB4NzE3KV0odGhpc1tfMHg4NDQyZDAoMHgyNjYpXSk/dGhpc1snX3JhbmdlJ11bMHgwXTp0aGlzW18weDg0NDJkMCgweDI2NildWydzdGFydExpbmUnXSgpOnZvaWQgMHgwO31bJ2NvbHVtbiddKCl7Y29uc3QgXzB4MTg0YjRhPV8weDU2ZDZhNztyZXR1cm4gdGhpc1snX3JhbmdlJ10/X1tfMHgxODRiNGEoMHg3MTcpXSh0aGlzW18weDE4NGI0YSgweDI2NildKT90aGlzWydfcmFuZ2UnXVsweDFdOnRoaXNbXzB4MTg0YjRhKDB4MjY2KV1bXzB4MTg0YjRhKDB4NTY1KV0oKTp2b2lkIDB4MDt9W18weDU2ZDZhNygweDRkOCldKCl7Y29uc3QgXzB4NGZhMGY0PV8weDU2ZDZhNztyZXR1cm4gdGhpc1tfMHg0ZmEwZjQoMHhiMildO31bXzB4NTZkNmE3KDB4NTYwKV0oKXtyZXR1cm4gdGhpc1snX2FjdHVhbCddO31bJ2V4cGVjdGVkJ10oKXtjb25zdCBfMHg2MmI3YjI9XzB4NTZkNmE3O3JldHVybiB0aGlzW18weDYyYjdiMigweDExOCldO319XzB4ZTNlMDU4WydleHBvcnRzJ109XzB4M2Y3YWM2O30se31dLDB4ODpbZnVuY3Rpb24oXzB4MTNmMDcyLF8weDI0ZmI4NixfMHgxOTM5MDEpeyd1c2Ugc3RyaWN0Jztjb25zdCBfMHg0NjkwYzQ9XzB4YWUyNjtjbGFzcyBfMHgxMTBjNjB7Y29uc3RydWN0b3IoXzB4NDc2MWMzKXtjb25zdCBfMHhjY2U4MmU9XzB4YWUyNjt0aGlzW18weGNjZTgyZSgweDFiMSldPV8weDQ3NjFjM1tfMHhjY2U4MmUoMHg2YjMpXSx0aGlzW18weGNjZTgyZSgweDFhYildPV8weDQ3NjFjM1tfMHhjY2U4MmUoMHg3MDUpXSx0aGlzW18weGNjZTgyZSgweDcyMSldPV8weDQ3NjFjM1tfMHhjY2U4MmUoMHg2YjMpXVsnbG9nZ2VkJ107fVsnaW5pdCddKF8weDI2NzRhZSxfMHgyODM3ZmMpe2NvbnN0IF8weDNmMjVjMj1fMHhhZTI2O2xldCBfMHg1Y2MyMGU9dGhpczt0aGlzW18weDNmMjVjMigweDZjNCldPV8weDExMGM2MFtfMHgzZjI1YzIoMHhkZSldKHRoaXNbXzB4M2YyNWMyKDB4MWIxKV0pLHRoaXNbXzB4M2YyNWMyKDB4MzkyKV09XzB4MjY3NGFlLHRoaXNbJ19zdGFydExpbmUnXT10aGlzW18weDNmMjVjMigweDFiMSldWzB4MF0sdGhpc1tfMHgzZjI1YzIoMHg1ZDIpXT10aGlzWydfaXRlbXMnXVsweDFdLHRoaXNbXzB4M2YyNWMyKDB4NjY1KV09dGhpc1tfMHgzZjI1YzIoMHgxYjEpXVsweDJdLHRoaXNbXzB4M2YyNWMyKDB4MWNkKV09dGhpc1snX2l0ZW1zJ11bMHgzXSx0aGlzWydfbnVtT2ZDb3ZlcmluZ1Rlc3RzJ109MHgwLHRoaXNbXzB4M2YyNWMyKDB4NDk5KV09ITB4MSx0aGlzW18weDNmMjVjMigweDFhYildJiYodGhpc1tfMHgzZjI1YzIoMHgzM2EpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLF9bJ2VhY2gnXSh0aGlzW18weDNmMjVjMigweDFhYildLF8weDVjYjIwMz0+e2NvbnN0IF8weDU3YTgzMz1fMHgzZjI1YzI7aWYoXzB4NWNiMjAzKXtsZXQgXzB4NDFiNGQ5PV8weDI4MzdmY1tfMHg1Y2IyMDNdO2lmKCFfMHg0MWI0ZDkpcmV0dXJuO3ZhciBfMHgxYzM5YTA9XzB4NDFiNGQ5W18weDU3YTgzMygweDQ2MildKCk7XzB4NWNjMjBlW18weDU3YTgzMygweDMzYSldW18weDFjMzlhMF09XzB4NDFiNGQ5LF8weDVjYzIwZVsnX2FkZEZhaWxlZE9uTWVUZXN0SWZGYWlsaW5nJ10oXzB4NDFiNGQ5KTt9ZWxzZSBfMHg1Y2MyMGVbXzB4NTdhODMzKDB4NzBiKV09ITB4MDt9KSxfMHg1Y2MyMGVbXzB4M2YyNWMyKDB4NTU1KV09X1tfMHgzZjI1YzIoMHgxZTYpXShfMHg1Y2MyMGVbXzB4M2YyNWMyKDB4MzNhKV0pLF8weDVjYzIwZVtfMHgzZjI1YzIoMHg1MTkpXSgpKSxkZWxldGUgdGhpc1tfMHgzZjI1YzIoMHgxYjEpXSxkZWxldGUgdGhpc1tfMHgzZjI1YzIoMHgxYWIpXTt9W18weDQ2OTBjNCgweDU5YSldKF8weDQxN2QxOCl7Y29uc3QgXzB4NDQ2ZmFjPV8weDQ2OTBjNDt0aGlzW18weDQ0NmZhYygweDUzNSldKz1fMHg0MTdkMTgsdGhpc1tfMHg0NDZmYWMoMHg2NjUpXSs9XzB4NDE3ZDE4LHRoaXNbJ19rZXknXT1fMHgxMTBjNjBbXzB4NDQ2ZmFjKDB4ZGUpXShbdGhpc1tfMHg0NDZmYWMoMHg1MzUpXSx0aGlzWydfc3RhcnRDb2x1bW4nXSx0aGlzW18weDQ0NmZhYygweDY2NSldLHRoaXNbXzB4NDQ2ZmFjKDB4MWNkKV1dKTt9WydzdGFydExpbmUnXSgpe2NvbnN0IF8weDIzZDczNz1fMHg0NjkwYzQ7cmV0dXJuIHRoaXNbXzB4MjNkNzM3KDB4NTM1KV07fVtfMHg0NjkwYzQoMHg1NjUpXSgpe3JldHVybiB0aGlzWydfc3RhcnRDb2x1bW4nXTt9WydlbmRMaW5lJ10oKXtyZXR1cm4gdGhpc1snX2VuZExpbmUnXTt9WydlbmRDb2x1bW4nXSgpe2NvbnN0IF8weDMzMWYwNj1fMHg0NjkwYzQ7cmV0dXJuIHRoaXNbXzB4MzMxZjA2KDB4MWNkKV07fVtfMHg0NjkwYzQoMHgyNDQpXShfMHg0NDAzMjIpe2NvbnN0IF8weGYxZDdiOD1fMHg0NjkwYzQ7dGhpc1tfMHhmMWQ3YjgoMHg0MmMpXXx8KHRoaXNbXzB4ZjFkN2I4KDB4NDJjKV09W10pLH50aGlzW18weGYxZDdiOCgweDQyYyldW18weGYxZDdiOCgweDdhNyldKF8weDQ0MDMyMil8fHRoaXNbXzB4ZjFkN2I4KDB4NDJjKV1bXzB4ZjFkN2I4KDB4NDJkKV0oXzB4NDQwMzIyKTt9W18weDQ2OTBjNCgweDNiZSldKF8weDMxZDlkNSl7Y29uc3QgXzB4YzY4MmQyPV8weDQ2OTBjNDtpZighdGhpc1tfMHhjNjgyZDIoMHg0MmMpXXx8IXRoaXNbJ19nbG9iYWxFcnJvcnMnXVsnbGVuZ3RoJ10pcmV0dXJuO2NvbnN0IF8weDFlYmRhZD10aGlzW18weGM2ODJkMigweDQyYyldW18weGM2ODJkMigweDdhNyldKF8weDMxZDlkNSk7XzB4MWViZGFkPj0weDAmJnRoaXNbXzB4YzY4MmQyKDB4NDJjKV1bXzB4YzY4MmQyKDB4NmQwKV0oXzB4MWViZGFkLDB4MSk7fVtfMHg0NjkwYzQoMHgzMjgpXShfMHg0NzM4NDcsXzB4MjAzZDEzKXtjb25zdCBfMHgyZTM0NjE9XzB4NDY5MGM0O3RoaXNbXzB4MmUzNDYxKDB4NzIxKV0mJiFfMHg0NzM4NDcmJihfMHg0NzM4NDc9W3snbWVzc2FnZSc6XzB4MmUzNDYxKDB4MWNjKSwndHJhY2VJZCc6XzB4MjAzZDEzLCdzeXN0ZW0nOiEweDB9XSksdGhpc1tfMHgyZTM0NjEoMHgzMGUpXT1fMHg0NzM4NDc7fVsnY29uc29sZUxvZyddKCl7Y29uc3QgXzB4MzU2MjAxPV8weDQ2OTBjNDtyZXR1cm4gdGhpc1tfMHgzNTYyMDEoMHgzMGUpXTt9WydrZXknXSgpe2NvbnN0IF8weDFmY2I1NT1fMHg0NjkwYzQ7cmV0dXJuIHRoaXNbXzB4MWZjYjU1KDB4NmM0KV07fVtfMHg0NjkwYzQoMHg0OWQpXSgpe2NvbnN0IF8weDMyMTU0MT1fMHg0NjkwYzQ7cmV0dXJuIHRoaXNbXzB4MzIxNTQxKDB4NDY0KV07fVtfMHg0NjkwYzQoMHgyYjkpXShfMHgyOGY1MTkpe2NvbnN0IF8weDFmNzQ1OD1fMHg0NjkwYzQ7cmV0dXJuIF8weDI4ZjUxOT90aGlzW18weDFmNzQ1OCgweDQyYyldJiYhX1snaXNFbXB0eSddKHRoaXNbJ19nbG9iYWxFcnJvcnMnXSl8fF8weDI4ZjUxOVtfMHgxZjc0NTgoMHgyMDcpXSh0aGlzWydfZmFpbGVkQnlNZVRlc3RzJ10pOnRoaXNbXzB4MWY3NDU4KDB4NjcyKV0mJiFfW18weDFmNzQ1OCgweDk3KV0odGhpc1tfMHgxZjc0NTgoMHg2NzIpXSl8fHRoaXNbXzB4MWY3NDU4KDB4NDJjKV0mJiFfWydpc0VtcHR5J10odGhpc1tfMHgxZjc0NTgoMHg0MmMpXSk7fVtfMHg0NjkwYzQoMHgyYmEpXShfMHg1MGJlZjEpe2NvbnN0IF8weDIyZmE1ZD1fMHg0NjkwYzQ7cmV0dXJuIF8weDUwYmVmMT9fMHg1MGJlZjFbXzB4MjJmYTVkKDB4MjA3KV0odGhpc1tfMHgyMmZhNWQoMHg0OTMpXSk6dGhpc1snX2ZhaWxlZE9uTWVUZXN0cyddJiYhX1tfMHgyMmZhNWQoMHg5NyldKHRoaXNbXzB4MjJmYTVkKDB4NDkzKV0pO31bJ2Vycm9ycyddKF8weDU2Y2E3Nyl7Y29uc3QgXzB4MWFlYzdmPV8weDQ2OTBjNDtsZXQgXzB4MzYwMzQ0PVtdO3JldHVybiB0aGlzW18weDFhZWM3ZigweDY3MildJiYhX1tfMHgxYWVjN2YoMHg5NyldKHRoaXNbXzB4MWFlYzdmKDB4NjcyKV0pJiYoXzB4NTZjYTc3P18weDM2MDM0ND1fW18weDFhZWM3ZigweDY0NyldKF8weDU2Y2E3N1tfMHgxYWVjN2YoMHg3MjUpXSh0aGlzW18weDFhZWM3ZigweDY3MildKSk6XzB4MzYwMzQ0PV9bXzB4MWFlYzdmKDB4NjQ3KV0oX1tfMHgxYWVjN2YoMHgzM2IpXSh0aGlzWydfZmFpbGVkQnlNZVRlc3RzJ10pKSksdGhpc1snX2dsb2JhbEVycm9ycyddJiYhX1snaXNFbXB0eSddKHRoaXNbXzB4MWFlYzdmKDB4NDJjKV0pJiYoXzB4MzYwMzQ0PV8weDM2MDM0NFsnY29uY2F0J10odGhpc1tfMHgxYWVjN2YoMHg0MmMpXSkpLF8weDM2MDM0NDt9W18weDQ2OTBjNCgweDI0ZildKCl7Y29uc3QgXzB4NDk3YTA4PV8weDQ2OTBjNDtkZWxldGUgdGhpc1snX2ZpbGUnXSxkZWxldGUgdGhpc1tfMHg0OTdhMDgoMHgzM2EpXSxkZWxldGUgdGhpc1tfMHg0OTdhMDgoMHg0OTMpXSxkZWxldGUgdGhpc1tfMHg0OTdhMDgoMHg2NzIpXSxkZWxldGUgdGhpc1tfMHg0OTdhMDgoMHg0MmMpXSx0aGlzW18weDQ5N2EwOCgweDQ2NCldPSEweDAsZGVsZXRlIHRoaXNbXzB4NDk3YTA4KDB4NTU1KV07fVtfMHg0NjkwYzQoMHgxNzUpXSgpe3JldHVybiB0aGlzWydfZmlsZSddO31bJ2ZhaWxzVGVzdCddKF8weDUyYTczNyxfMHg0NjUwNWUpe2NvbnN0IF8weDQzODhmMD1fMHg0NjkwYzQ7dGhpc1snX2ZhaWxlZEJ5TWVUZXN0cyddfHwodGhpc1tfMHg0Mzg4ZjAoMHg2NzIpXT1PYmplY3RbXzB4NDM4OGYwKDB4NDQ4KV0obnVsbCkpLHRoaXNbXzB4NDM4OGYwKDB4NjcyKV1bXzB4NTJhNzM3W18weDQzODhmMCgweDQ2MildKCldPV8weDQ2NTA1ZTt9W18weDQ2OTBjNCgweDVlMSldKF8weDNlNDhlMyl7Y29uc3QgXzB4ZWU3ZDE2PV8weDQ2OTBjNDtsZXQgXzB4Nzc1MWQxPV8weDNlNDhlM1tfMHhlZTdkMTYoMHg0NjIpXSgpLF8weGJjODVjYT10aGlzWydpc0NvdmVyZWQnXSgpO3RoaXNbJ19jb3ZlcmluZ1Rlc3RNYXAnXSYmdGhpc1tfMHhlZTdkMTYoMHgzM2EpXVtfMHg3NzUxZDFdJiYoZGVsZXRlIHRoaXNbJ19jb3ZlcmluZ1Rlc3RNYXAnXVtfMHg3NzUxZDFdLHRoaXNbJ19udW1PZkNvdmVyaW5nVGVzdHMnXS0tLHRoaXNbXzB4ZWU3ZDE2KDB4NTE5KV0oKSksdGhpc1tfMHhlZTdkMTYoMHgzMGUpXSYmKHRoaXNbXzB4ZWU3ZDE2KDB4MzBlKV09dGhpc1tfMHhlZTdkMTYoMHgzMGUpXVtfMHhlZTdkMTYoMHg3MjUpXShfMHg0YmFlNDg9Pl8weDRiYWU0OCYmXzB4NGJhZTQ4W18weGVlN2QxNigweDNjZSldIT1fMHg3NzUxZDEpKSx0aGlzW18weGVlN2QxNigweDY3MildJiZkZWxldGUgdGhpc1tfMHhlZTdkMTYoMHg2NzIpXVtfMHg3NzUxZDFdLHRoaXNbXzB4ZWU3ZDE2KDB4NDkzKV0mJmRlbGV0ZSB0aGlzW18weGVlN2QxNigweDQ5MyldW18weDc3NTFkMV0sdGhpc1tfMHhlZTdkMTYoMHgzOTIpXSE9bnVsbCYmdGhpc1tfMHhlZTdkMTYoMHgzOTIpXVtfMHhlZTdkMTYoMHg2YTcpXSh0aGlzLF8weGJjODVjYSk7fVtfMHg0NjkwYzQoMHgyYWMpXSgpe2NvbnN0IF8weDRmZmQzNT1fMHg0NjkwYzQ7cmV0dXJuIF9bXzB4NGZmZDM1KDB4MzNiKV0odGhpc1tfMHg0ZmZkMzUoMHgzM2EpXSk7fVtfMHg0NjkwYzQoMHgzMmIpXShfMHg0Y2VlMGYpe2NvbnN0IF8weDIxNjFkYz1fMHg0NjkwYzQ74oCLcmV0dXJuIF8weDRjZWUwZj90aGlzW18weDIxNjFkYygweDcwYildfHxfMHg0Y2VlMGZbXzB4MjE2MWRjKDB4MjA3KV0odGhpc1tfMHgyMTYxZGMoMHgzM2EpXSk6dGhpc1snX2lzQ292ZXJlZCddO31bXzB4NDY5MGM0KDB4MWM0KV0oKXtjb25zdCBfMHg0Mzc0ODU9XzB4NDY5MGM0O3JldHVybiF0aGlzW18weDQzNzQ4NSgweDcwYildJiZ0aGlzW18weDQzNzQ4NSgweDMyYildKCk7fVtfMHg0NjkwYzQoMHg1MTkpXSgpe2NvbnN0IF8weDU5ODc1Mj1fMHg0NjkwYzQ7dGhpc1tfMHg1OTg3NTIoMHg0OTkpXT10aGlzW18weDU5ODc1MigweDU1NSldPjB4MHx8dGhpc1snX2lzQ292ZXJlZEJ5Tm90VGVzdHMnXTt9W18weDQ2OTBjNCgweDc0OCldKCl7Y29uc3QgXzB4NDEwYjg5PV8weDQ2OTBjNDtsZXQgXzB4M2FmODRhPXRoaXM7dGhpc1tfMHg0MTBiODkoMHgzM2EpXSYmX1tfMHg0MTBiODkoMHgzZTYpXSh0aGlzWydfY292ZXJpbmdUZXN0TWFwJ10sXzB4MjVjYmQyPT5fMHgyNWNiZDJbXzB4NDEwYjg5KDB4MjA3KV0oXzB4M2FmODRhKSk7fVsnbWVyZ2VDb25zb2xlTG9nJ10oXzB4MWVmZWUxKXtjb25zdCBfMHg1Y2FkZTk9XzB4NDY5MGM0O2lmKCF0aGlzW18weDVjYWRlOSgweDMwZSldKXJldHVybiB0aGlzW18weDVjYWRlOSgweDMwZSldPV8weDFlZmVlMVsnX2NvbnNvbGVMb2cnXSwhMHgwO2NvbnN0IF8weGEyOGVlOD10aGlzW18weDVjYWRlOSgweDMwZSldO3JldHVybiB0aGlzW18weDVjYWRlOSgweDMwZSldPV8weDFlZmVlMVtfMHg1Y2FkZTkoMHgzMGUpXXx8W10sXzB4YTI4ZWU4Wydmb3JFYWNoJ10oXzB4MzRlMDE2PT57Y29uc3QgXzB4YTNhODZkPV8weDVjYWRlOTtfMHgzNGUwMTZbJ3Rlc3RLZXknXSYmIV8weDFlZmVlMVtfMHhhM2E4NmQoMHgzM2EpXVtfMHgzNGUwMTZbXzB4YTNhODZkKDB4M2NlKV1dJiZ0aGlzW18weGEzYTg2ZCgweDMzYSldW18weDM0ZTAxNltfMHhhM2E4NmQoMHgzY2UpXV0mJnRoaXNbJ19jb25zb2xlTG9nJ11bXzB4YTNhODZkKDB4NDJkKV0oXzB4MzRlMDE2KTt9KSwhMHgwO31bXzB4NDY5MGM0KDB4NWMzKV0oXzB4NGIzNjViLF8weDE1MDI3YyxfMHgyZTBjNTMpe2NvbnN0IF8weDVjN2ZjND1fMHg0NjkwYzQ7bGV0IF8weGRlYjkzMz10aGlzO2NvbnN0IF8weDM1NDRmNj1fMHgxNTAyN2MmJl8weDJlMGM1MyYmX1tfMHg1YzdmYzQoMHg5NyldKF8weDRiMzY1YlsnX2NvdmVyaW5nVGVzdE1hcCddKTtpZihfMHgzNTQ0ZjYmJnRoaXNbXzB4NWM3ZmM0KDB4MWM0KV0oKSlyZXR1cm47dGhpc1tfMHg1YzdmYzQoMHg3NDUpXSYmZGVsZXRlIHRoaXNbXzB4NWM3ZmM0KDB4NzQ1KV0sdGhpc1tfMHg1YzdmYzQoMHg0MmMpXSYmKHRoaXNbXzB4NWM3ZmM0KDB4NDJjKV09W10pLF8weDRiMzY1YlsnX2NvdmVyaW5nVGVzdE1hcCddPyhfMHgxNTAyN2MmJiFfMHgyZTBjNTM/KHRoaXNbXzB4NWM3ZmM0KDB4MzNhKV09T2JqZWN0W18weDVjN2ZjNCgweDQ0OCldKG51bGwpLHRoaXNbXzB4NWM3ZmM0KDB4NDkzKV0mJih0aGlzW18weDVjN2ZjNCgweDQ5MyldPU9iamVjdFtfMHg1YzdmYzQoMHg0NDgpXShudWxsKSksX1tfMHg1YzdmYzQoMHgzZTYpXShfMHg0YjM2NWJbXzB4NWM3ZmM0KDB4MzNhKV0sXzB4NDc3ZTM3PT57Y29uc3QgXzB4NWQ5OTNjPV8weDVjN2ZjNDtsZXQgXzB4NTFkZTA1PV8weDQ3N2UzN1tfMHg1ZDk5M2MoMHg0NjIpXSgpO18weGRlYjkzM1tfMHg1ZDk5M2MoMHgzM2EpXVtfMHg1MWRlMDVdPV8weDQ3N2UzNyxfMHg0NzdlMzdbXzB4NWQ5OTNjKDB4MjA3KV0oXzB4ZGViOTMzKSxfMHhkZWI5MzNbXzB4NWQ5OTNjKDB4NTZiKV0oXzB4NDc3ZTM3KTt9KSk6XzB4ZGViOTMzWydfZmFpbGVkT25NZVRlc3RzJ10/X1tfMHg1YzdmYzQoMHgzZTYpXShfMHg0YjM2NWJbJ19jb3ZlcmluZ1Rlc3RNYXAnXSxfMHgyZTJjNGI9Pl8weGRlYjkzM1tfMHg1YzdmYzQoMHgyMWUpXShfMHgyZTJjNGIsXzB4MmUyYzRiW18weDVjN2ZjNCgweDQ2MildKCkpKTpfW18weDVjN2ZjNCgweDNlNildKF8weDRiMzY1YltfMHg1YzdmYzQoMHgzM2EpXSxfMHgyMTY0MjE9Pl8weGRlYjkzM1tfMHg1YzdmYzQoMHgzMDUpXShfMHgyMTY0MjEsXzB4MjE2NDIxW18weDVjN2ZjNCgweDQ2MildKCkpKSxfMHhkZWI5MzNbXzB4NWM3ZmM0KDB4NTU1KV09X1tfMHg1YzdmYzQoMHgxZTYpXShfMHhkZWI5MzNbXzB4NWM3ZmM0KDB4MzNhKV0pKToodGhpc1snX2NvdmVyaW5nVGVzdE1hcCddPU9iamVjdFtfMHg1YzdmYzQoMHg0NDgpXShudWxsKSx0aGlzW18weDVjN2ZjNCgweDU1NSldPTB4MCx0aGlzWydfZmFpbGVkT25NZVRlc3RzJ10mJih0aGlzW18weDVjN2ZjNCgweDQ5MyldPU9iamVjdFtfMHg1YzdmYzQoMHg0NDgpXShudWxsKSkpO2xldCBfMHg0MjIxNGY9ITB4MTsoXzB4NGIzNjViWydfbG9nZ2VkJ118fHRoaXNbXzB4NWM3ZmM0KDB4NzIxKV0pJiYoXzB4NDIyMTRmPV8weDQyMjE0Znx8dGhpc1tfMHg1YzdmYzQoMHgyZGUpXShfMHg0YjM2NWIpLHRoaXNbJ19sb2dnZWQnXT1fMHg0YjM2NWJbJ19sb2dnZWQnXSksdGhpc1tfMHg1YzdmYzQoMHg3MGIpXT1fMHg0YjM2NWJbXzB4NWM3ZmM0KDB4NzBiKV0sXzB4MzU0NGY2PyhfMHg0YjM2NWJbXzB4NWM3ZmM0KDB4MzBlKV0mJihfMHg0MjIxNGY9XzB4NDIyMTRmfHx0aGlzWydtZXJnZUNvbnNvbGVMb2cnXShfMHg0YjM2NWIpKSx0aGlzW18weDVjN2ZjNCgweDY3MildJiZ0aGlzWydfaW52YWxpZEZhaWxlZEJ5TWVUZXN0cyddJiYodGhpc1tfMHg1YzdmYzQoMHg2NzIpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpKSk6KF8weDQyMjE0Zj1fMHg0MjIxNGZ8fHRoaXNbXzB4NWM3ZmM0KDB4MmRlKV0oXzB4NGIzNjViKSx0aGlzWydfZmFpbGVkQnlNZVRlc3RzJ10mJih0aGlzW18weDVjN2ZjNCjigIsweDY3MildPU9iamVjdFsnY3JlYXRlJ10obnVsbCkpKSx0aGlzWydfc2V0SXNDb3ZlcmVkJ10oKTt9W18weDQ2OTBjNCgweDRhYSldKCl7dGhpc1snX2ludmFsaWRGYWlsZWRCeU1lVGVzdHMnXT0hMHgwO31bXzB4NDY5MGM0KDB4MzA1KV0oXzB4Mzk3NTQwLF8weDU4ZjMyMCl7Y29uc3QgXzB4NDIwMGYyPV8weDQ2OTBjNDt0aGlzW18weDQyMDBmMigweDMzYSldW18weDU4ZjMyMF09XzB4Mzk3NTQwLF8weDM5NzU0MFtfMHg0MjAwZjIoMHgyMDcpXSh0aGlzKSx0aGlzW18weDQyMDBmMigweDU2YildKF8weDM5NzU0MCk7fVtfMHg0NjkwYzQoMHgyMWUpXShfMHgzMzI0MjMsXzB4YWY2MTEyKXtjb25zdCBfMHg0ODhhNDc9XzB4NDY5MGM0O2RlbGV0ZSB0aGlzW18weDQ4OGE0NygweDQ5MyldW18weGFmNjExMl0sdGhpc1snX3VwZGF0ZVRlc3QnXShfMHgzMzI0MjMsXzB4YWY2MTEyKTt9WydfaXNJbnNpZGVPZiddKF8weDM4YjcyZil7Y29uc3QgXzB4MjliYWJkPV8weDQ2OTBjNDtyZXR1cm4gdGhpc1snX3N0YXJ0TGluZSddPj1fMHgzOGI3MmZbXzB4MjliYWJkKDB4NTM1KV0mJl8weDM4YjcyZlsnX2VuZExpbmUnXT49dGhpc1tfMHgyOWJhYmQoMHg2NjUpXSYmKHRoaXNbXzB4MjliYWJkKDB4NTM1KV0+XzB4MzhiNzJmW18weDI5YmFiZCgweDUzNSldfHx0aGlzWydfc3RhcnRDb2x1bW4nXT49XzB4MzhiNzJmW18weDI5YmFiZCgweDVkMildKSYmKF8weDM4YjcyZltfMHgyOWJhYmQoMHg2NjUpXT50aGlzW18weDI5YmFiZCgweDY2NSldfHxfMHgzOGI3MmZbXzB4MjliYWJkKDB4MWNkKV0+PXRoaXNbXzB4MjliYWJkKDB4MWNkKV0pO31bXzB4NDY5MGM0KDB4MjliKV0oXzB4NTU0N2JkLF8weDc0Yjk3Yyl7Y29uc3QgXzB4MTI3M2U4PV8weDQ2OTBjNDtyZXR1cm4gdGhpc1tfMHgxMjczZTgoMHg1MzUpXT09PV8weDU1NDdiZCYmXzB4NzRiOTdjW18weDEyNzNlOCgweDUzNSldPT09XzB4NTU0N2JkJiZ0aGlzW18weDEyNzNlOCgweDVkMildIT09XzB4NzRiOTdjW18weDEyNzNlOCgweDVkMildP3RoaXNbJ19zdGFydENvbHVtbiddPF8weDc0Yjk3Y1tfMHgxMjczZTgoMHg1ZDIpXTp0aGlzW18weDEyNzNlOCgweDUzNSldPT09XzB4NTU0N2JkJiZfMHg3NGI5N2NbJ19lbmRMaW5lJ109PT1fMHg1NTQ3YmQmJnRoaXNbXzB4MTI3M2U4KDB4NWQyKV0+PV8weDc0Yjk3Y1tfMHgxMjczZTgoMHgxY2QpXT8hMHgwOnRoaXNbXzB4MTI3M2U4KDB4M2FhKV0oXzB4NzRiOTdjKTt9WydfYWRkRmFpbGVkT25NZVRlc3RJZkZhaWxpbmcnXShfMHg0YzViZTApe2NvbnN0IF8weDU2OGRmZD1fMHg0NjkwYzQ7XzB4NGM1YmUwW18weDU2OGRmZCgweDYyYyldKCkmJih0aGlzWydfZmFpbGVkT25NZVRlc3RzJ118fCh0aGlzWydfZmFpbGVkT25NZVRlc3RzJ109T2JqZWN0W18weDU2OGRmZCgweDQ0OCldKG51bGwpKSx0aGlzW18weDU2OGRmZCgweDQ5MyldW18weDRjNWJlMFtfMHg1NjhkZmQoMHg0NjIpXSgpXT1fMHg0YzViZTApO31zdGF0aWNbXzB4NDY5MGM0KDB4ZGUpXShfMHg4N2RkNTkpe3JldHVybiBfMHg4N2RkNTlbJ2pvaW4nXSgnLicpO319XzB4MjRmYjg2WydleHBvcnRzJ109XzB4MTEwYzYwO30se31dLDB4OTpbZnVuY3Rpb24oXzB4NGIwOWYxLF8weDQ5NzQxYSxfMHg3ZTVkYTIpeyd1c2Ugc3RyaWN0Jztjb25zdCBfMHg1Y2MxYTg9XzB4YWUyNjtjbGFzcyBfMHg0M2RiMzd7Y29uc3RydWN0b3IoKXtjb25zdCBfMHhjYzNiYz1fMHhhZTI2O3RoaXNbXzB4Y2MzYmMoMHgzMmQpXT0weDA7fWdldFsnYWN0aXZlJ10oKXtjb25zdCBfMHgxMWM3ZTM9XzB4YWUyNjtyZXR1cm4gdGhpc1tfMHgxMWM3ZTMoMHgyOTgpXTt9Z2V0W18weDVjYzFhOCgweDMxNildKCl7cmV0dXJuIHRoaXNbJ191c2VkJ107fXNldFtfMHg1Y2MxYTgoMHgxOTkpXShfMHgxZTY5YjUpe2NvbnN0IF8weDEzNGNkZT1fMHg1Y2MxYTg7dGhpc1tfMHgxMzRjZGUoMHgyOTgpXT1fMHgxZTY5YjUsdGhpc1snX3RzJ10rKyxfMHgxZTY5YjU/dGhpc1tfMHgxMzRjZGUoMHgyODMpXT0hMHgwOmRlbGV0ZSB0aGlzW18weDEzNGNkZSgweDI1YyldO31nZXRbJ3RzJ10oKXtjb25zdCBfMHg1Yzg1YzY9XzB4NWNjMWE4O3JldHVybiB0aGlzW18weDVjODVjNigweDMyZCldO31zZXRbJ2N1cnJlbnRGcmFtZSddKF8weDEwYjQzZil7Y29uc3QgXzB4NzU2MGMxPV8weDVjYzFhODt0aGlzW18weDc1NjBjMSgweDI1YyldPV8weDEwYjQzZjt9Z2V0WydjdXJyZW50RnJhbWUnXSgpe2NvbnN0IF8weDJiN2ZhND1fMHg1Y2MxYTg7cmV0dXJuIHRoaXNbXzB4MmI3ZmE0KDB4MjVjKV07fX1fMHg0OTc0MWFbJ2V4cG9ydHMnXT1fMHg0M2RiMzc7fSx7fV0sMHhhOltmdW5jdGlvbihfMHgyYTAyNjMsXzB4MWM2YjQzLF8weDJiNDgzOCl7J3VzZSBzdHJpY3QnO2NvbnN0IF8weDRjMGM2Mz1fMHhhZTI2O2NvbnN0IF8weDUyMTFlZT1fMHgyYTAyNjMoXzB4NGMwYzYzKDB4MTZjKSksXzB4OGVkMTg9XzB4MmEwMjYzKF8weDRjMGM2MygweDY4NykpLF8weDk1YmMyOD1fMHgyYTAyNjMoXzB4NGMwYzYzKDB4NzgwKSlbXzB4NGMwYzYzKDB4NTM3KV07Y2xhc3MgXzB4NTRiN2I3e2NvbnN0cnVjdG9yKF8weDM2MmQyZSxfMHgzOTE1NTI9e30sXzB4MjNlOWM1LF8weDJhZTA5Nil7Y29uc3QgXzB4NGU2NjI5PV8weDRjMGM2Mzt0aGlzWydfZmlsZUlkJ109XzB4MzYyZDJlLHRoaXNbJ19jYXBhYmlsaXRpZXMnXT1fMHgzOTE1NTIsdGhpc1tfMHg0ZTY2MjkoMHgyNjgpXT1fMHgyM2U5YzUsdGhpc1tfMHg0ZTY2MjkoMHg0ZTIpXT1fMHgyYWUwOTYsdGhpc1tfMHg0ZTY2MjkoMHg0ZTQpXT1PYmplY3RbXzB4NGU2NjI5KDB4NDQ4KV0obnVsbCksdGhpc1tfMHg0ZTY2MjkoMHg0NWYpXT0hMHgxO31bXzB4NGMwYzYzKDB4NTUyKV0oXzB4MTRmOWVhLF8weDQwNThmNixfMHg1OGUzYWYsXzB4NGY5NTExKXtjb25zdCBfMHg0NGRlNWE9XzB4NGMwYzYzO2xldCBfMHg1ZDJiZTg9dGhpcyxfMHhjZWVhMT10aGlzW18weDQ0ZGU1YSgweDQ1ZildO2RlbGV0ZSB0aGlzW18weDQ0ZGU1YSgweDQ1ZildLF8weDU4ZTNhZj90aGlzWydfbGluZXMnXT1PYmplY3RbXzB4NDRkZTVhKDB4NDQ4KV0obnVsbCk6XzB4NDA1OGY2JiZfWydlYWNoJ10odGhpc1tfMHg0NGRlNWEoMHg0ZTQpXSxfMHgxNmI4NWU9Pntjb25zdCBfMHg0YWIxYzI9XzB4NDRkZTVhO18weDE2Yjg1ZVtfMHg0YWIxYzIoMHgxMTUpXSgpO30pO2xldCBfMHgzYmRlMTY9W10sXzB4M2IxZDU1PVtdO19bXzB4NDRkZTVhKDB4M2U2KV0oXzB4MTRmOWVhLF8weDNjOGFhZD0+e2NvbnN0IF8weDI4OWI4PV8weDQ0ZGU1YTtpZihfMHgzYzhhYWRbXzB4Mjg5YjgoMHg0OWQpXSgpKXJldHVybjtsZXQgXzB4NWU2N2MyPV8weDNjOGFhZFtfMHgyODliOCgweDYzMCldKCksXzB4NGFlYTkzPV8weDVkMmJlOFtfMHgyODliOCgweDRlNCldW18weDVlNjdjMl07XzB4NGFlYTkzfHwoXzB4NGFlYTkzPW5ldyBfMHg1MjExZWUodGhpc1tfMHgyODliOCgweDQ4NildLF8weDVlNjdjMixfMHg1ZDJiZThbJ19maWx0ZXInXSksXzB4NWQyYmU4W18weDI4OWI4KDB4NGU0KV1bXzB4NWU2N2MyXT1fMHg0YWVhOTMsXzB4M2IxZDU1W18weDI4OWI4KDB4NDJkKV0oXzB4NGFlYTkzKSksXzB4NGFlYTkzW18weDI4OWI4KDB4MTk3KV0oXzB4M2M4YWFkLF8weDQwNThmNiksXzB4M2JkZTE2WydwdXNoJ10oXzB4NGFlYTkzKTt9KTtsZXQgXzB4NWUzMWVhPU9iamVjdFtfMHg0NGRlNWEoMHg0NDgpXShudWxsKTtfMHgzYmRlMTY9XzB4NDA1OGY2JiYhXzB4NThlM2FmP19bXzB4NDRkZTVhKDB4MzNiKV0odGhpc1tfMHg0NGRlNWEoMHg0ZTQpXSlbJ2NvbmNhdCddKF8weDNiMWQ1NSk6XzB4M2JkZTE2LF9bXzB4NDRkZTVhKDB4M2U2KV0oXzB4M2JkZTE2LF8weGRjZmNjMz0+e2NvbnN0IF8weDViMWFhMT1fMHg0NGRlNWE7XzB4ZGNmY2MzW18weDViMWFhMSgweDlmKV0oKT9fMHhkY2ZjYzNbJ3VwZGF0ZSddKCkmJihfMHg1ZTMxZWFbXzB4ZGNmY2MzW18weDViMWFhMSgweDQ2MildKCldPV8weGRjZmNjMyk6KF8weGRjZmNjM1tfMHg1YjFhYTEoMHgyNGYpXSgpLGRlbGV0ZSBfMHg1ZDJiZThbJ19saW5lcyddW18weGRjZmNjM1tfMHg1YjFhYTEoMHg2OTkpXSgpXSk7fSk7fVtfMHg0YzBjNjMoMHgyYTQpXShfMHg0Y2U0NDEpe2NvbnN0IF8weDJjODBiOT1fMHg0YzBjNjM7cmV0dXJuIHRoaXNbXzB4MmM4MGI5KDB4NGU0KV1bXzB4NGNlNDQxXTt9W18weDRjMGM2MygweDViMSldKF8weDIxNTQ2Nil7Y29uc3QgXzB4M2VjZmE1PV8weDRjMGM2MyxfMHgzOGEzYzA9dGhpcyxfMHg4ZDJlMWI9dGhpc1tfMHgzZWNmYTUoMHg0ZTIpXVtfMHgzZWNmYTUoMHg0ODApXT90aGlzW18weDNlY2ZhNSgweDRlMildW18weDNlY2ZhNSgweDQ4MCldKCk6dm9pZCAweDAsXzB4MzJjNjYxPV8weDhkMmUxYj9fMHg4ZWQxOFtfMHgzZWNmYTUoMHgxNGIpXShfMHg4ZDJlMWIpOnZvaWQgMHgwO3JldHVybnsnbGluZXMnOl9bXzB4M2VjZmE1KDB4NzVjKV0odGhpc1tfMHgzZWNmYTUoMHg0ZTQpXSxfMHgxYmUxMWE9Pl8weDM4YTNjMFtfMHgzZWNmYTUoMHg2MDIpXShfMHgxYmUxMWEsXzB4MjE1NDY2LF8weDMyYzY2MSkpLCdhbGxMaW5lcyc6ITB4MH07fVtfMHg0YzBjNjMoMHg2MDIpXShfMHgxNDA0ZDcsXzB4NGQ2MjdiLF8weDllYTI1OSl7Y29uc3QgXzB4MzU4N2VmPV8weDRjMGM2MyxfMHgxMjE5NGQ9XzB4MTQwNGQ3W18weDM1ODdlZigweDY5OSldKCksXzB4NDgzN2JjPXRoaXNbJ19yZXNvbHZlciddWydnZXRUZXN0RGVjbGFyYXRpb25CeUxpbmVOdW1iZXInXShfMHgxMjE5NGQpLF8weDUxOTRmYz0hIXRoaXNbXzB4MzU4N2VmKDB4NGUyKV1bXzB4MzU4N2VmKDB4NDg5KV0oXzB4MTIxOTRkKXx8dm9pZCAweDAsXzB4YTQ2ZWYxPXRoaXNbXzB4MzU4N2VmKDB4NGUyKV1bXzB4MzU4N2VmKDB4M2IyKV0oXzB4MTIxOTRkKTtsZXQgXzB4NGYzMTNjLF8weDU5MThjMj0hMHgxLF8weDIwNGYzYj1fMHgxNDA0ZDdbXzB4MzU4N2VmKDB4NTcxKV0oXzB4NGQ2MjdiKTtjb25zdCBfMHgzMTQ2MWM9XzB4MTQwNGQ3WydlcnJvciddKF8weDRkNjI3Yik7aWYoXzB4NDgzN2JjKXtjb25zdCBfMHgxMjY2YjA9XzB4NDdhMjMyPT57Y29uc3QgXzB4NDM3ZjFlPV8weDM1ODdlZjtpZih0aGlzW18weDQzN2YxZSgweDI2OCldW18weDQzN2YxZSgweDVmZildW18weDQzN2YxZSgweDM3ZildKF8weDQ3YTIzMltfMHg0MzdmMWUoMHg0NjIpXSgpKSYmKF8weDRmMzEzYz1fMHg0ZjMxM2N8fHt9LF8weDRmMzEzY1snZmlsdGVyZWQnXT0hMHgwLF8weDRmMzEzY1tfMHg0MzdmMWUoMHg0ZWYpXT0hMHgwLF8weDU5MThjMj0hMHgwKSxfMHgyMDRmM2IhPT1fMHg5NWJjMjhbJ2Vycm9yU291cmNlJ10mJihfMHgyMDRmM2I9XzB4NDdhMjMyWydpc0ZhaWxpbmcnXSgpP18weDk1YmMyOFtfMHg0MzdmMWUoMHhmNildOl8weDk1YmMyOFtfMHg0MzdmMWUoMHg1MDIpXSksXzB4NDdhMjMyW18weDQzN2YxZSgweDYyYyldKCkpe2NvbnN0IF8weDI3YTY2YT1fMHg0N2EyMzJbJ2Vycm9ycyddKClbXzB4NDM3ZjFlKDB4NzI1KV0oXzB4MmQ5ZDdjPT5fMHgyZDlkN2NbXzB4NDM3ZjFlKDB4NDY4KV0oKSlbJ2xlbmd0aCddO18weDI3YTY2YSYmKF8weDRmMzEzYz1fMHg0ZjMxM2N8fHt9LF8weDRmMzEzY1tfMHg0MzdmMWUoMHg1OTgpXXx8KF8weDRmMzEzY1tfMHg0MzdmMWUoMHg1OTgpXT0weDApLF8weDRmMzEzY1snc25hcCddKz1fMHgyN2E2NmEpO31fMHg0N2EyMzJbXzB4NDM3ZjFlKDB4NDYyKV0oKT09PV8weDllYTI1OSYmKF8weDRmMzEzYz1fMHg0ZjMxM2N8fHt9LF8weDRmMzEzY1snZGVidWdnZWQnXT0hMHgwKTt9O2lmKF8weDQ4MzdiY1tfMHgzNTg3ZWYoMHg3MmYpXSl7Zm9yKGNvbnN0IFssXzB4MWU5ZDkyXW9mIF8weDQ4MzdiYylfMHgxMjY2YjAoXzB4MWU5ZDkyKTt9ZWxzZSBfMHgxMjY2YjAoXzB4NDgzN2JjKTt9bGV0IF8weDFmMjI4ZixfMHgzODBkZjksXzB4NDJiM2U4LF8weDJmYmVjMztpZihfMHgzMTQ2MWMpe2lmKF8weDMxNDYxY1tfMHgzNTg3ZWYoMHg2ODApXSYmKF8weDRmMzEzYz1fMHg0ZjMxM2N8fHt9LF8weDRmMzEzY1tfMHgzNTg3ZWYoMHg0ODUpXT17J2RpZmYnOiEweDB9KSxfMHgzMTQ2MWNbXzB4MzU4N2VmKDB4MTNiKV0pe2NvbnN0IF8weGJhMDJiNz1fMHgzMTQ2MWNbXzB4MzU4N2VmKDB4MTNiKV07XzB4YmEwMmI3WydmaWxlSWQnXT09PXRoaXNbXzB4MzU4N2VmKDB4NDg2KV0mJl8weGJhMDJiN1tfMHgzNTg3ZWYoMHgyYTQpXT09PV8weDEyMTk0ZCYmKF8weDRmMzEzYz1fMHg0ZjMxM2N8fHt9LF8weDRmMzEzY1tfMHgzNTg3ZWYoMHg0ODUpXT1fMHg0ZjMxM2NbXzB4MzU4N2VmKDB4NDg1KV18fHt9LF8weDRmMzEzY1tfMHgzNTg3ZWYoMHg0ODUpXVsnc291cmNlJ109ITB4MCk7fX1lbHNlKHt0ZXh0Ol8weDFmMjI4Zixsb25nVGV4dDpfMHgzODBkZjksaXNTeXN0ZW06XzB4NDJiM2U4LGlzUmVtb3ZhYmxlOl8weDJmYmVjM309XzB4MTQwNGQ3W18weDM1ODdlZigweDNmMSldKF8weDRkNjI3YiksKF8weDQyYjNlOHx8XzB4NTkxOGMyKSYmKF8weDU5MThjMiYmKF8weDFmMjI4Zj0oXzB4MWYyMjhmJiZfMHgxZjIyOGZbXzB4MzU4N2VmKDB4NWM0KV0oL1xzL2csJycpP18weDFmMjI4ZisnXHgyMCc6JycpKyh0aGlzWydfY2FwYWJpbGl0aWVzJ11bJ2Vtb2ppUmVuZGVyaW5nU3VwcG9ydGVkJ10/J/Cfk4wnOl8weDM1ODdlZigweDVhYikpKSxfMHg0ZjMxM2M9XzB4NGYzMTNjfHx7fSxfMHg0ZjMxM2NbJ2xvZyddPV8weDRmMzEzY1tfMHgzNTg3ZWYoMHhkMildfHx7fSxfMHg0ZjMxM2NbJ2xvZyddW18weDM1ODdlZigweDRlZildPSEweDApLF8weDJmYmVjMyYmKF8weDRmMzEzYz1fMHg0ZjMxM2N8fHt9LF8weDRmMzEzY1tfMHgzNTg3ZWYoMHhkMildPV8weDRmMzEzY1tfMHgzNTg3ZWYoMHhkMildfHx7fSxfMHg0ZjMxM2NbXzB4MzU4N2VmKDB4ZDIpXVtfMHgzNTg3ZWYoMHg0YWMpXT0hMHgwKSk7cmV0dXJueydpZCc6XzB4MTQwNGQ3W18weDM1ODdlZigweDQ2MildKCksJ251bSc6XzB4MTIxOTRkLCdkZWNsJzpfMHg0ODM3YmM/ITB4MDp2b2lkIDB4MCwnc25hcCc6XzB4NTE5NGZjLCdzdGF0ZSc6XzB4MjA0ZjNiLCdsb2cnOl8weDFmMjI4ZiwnbG9uZ0xvZyc6XzB4MzgwZGY5LCdlcnInOl8weDMxNDYxYyYmXzB4MzE0NjFjW18weDM1ODdlZigweGFiKV0sJ21ldGEnOl8weDRmMzEzYywnaW5zcGVjdGVkJzohIShfMHhhNDZlZjEmJl8weGE0NmVmMVtfMHgzNTg3ZWYoMHgzNDkpXSYmXzB4YTQ2ZWYxW18weDM1ODdlZigweDM0OSldW18weDM1ODdlZigweDE4YSldKXx8dm9pZCAweDB9O31bXzB4NGMwYzYzKDB4M2VmKV0oXzB4MjU0YTIzKXtjb25zdCBfMHg1YmNhNWU9XzB4NGMwYzYzO2xldCBfMHg3NzI2N2Q9dGhpczt0aGlzW18weDViY2E1ZSgweDQ1ZildPSEweDAsX1snZWFjaCddKF9bXzB4NWJjYTVlKDB4NzNiKV0oXzB4MjU0YTIzW18weDViY2E1ZSgweDU3OCldLF8weDI1NGEyM1tfMHg1YmNhNWUoMHgxZjUpXSksXzB4OGExNGE5PT57Y29uc3QgXzB4MTVmNzAzPV8weDViY2E1ZTtsZXQgXzB4NGFmY2EzPV8weDc3MjY3ZFsnX2xpbmVzJ11bXzB4OGExNGE5XTtfMHg0YWZjYTMmJl8weDc3MjY3ZFtfMHgxNWY3MDMoMHg1MjIpXShfMHg0YWZjYTMsXzB4MjU0YTIzKTt9KTt9WydzaGlmdExpbmVzJ10oXzB4NTc5OTczLF8weDQxMzI1YSxfMHgzN2NlZWIpe2NvbnN0IF8weGFhZjQ0Zj1fMHg0YzBjNjM7bGV0IF8weDE5Y2I3NT10aGlzO3RoaXNbXzB4YWFmNDRmKDB4NDVmKV09ITB4MDtsZXQgXzB4MjI2NzQ4PV9bXzB4YWFmNDRmKDB4MzNiKV0odGhpc1tfMHhhYWY0NGYoMHg0ZTQpXSk7dGhpc1tfMHhhYWY0NGYoMHg0ZTQpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLF9bXzB4YWFmNDRmKDB4M2U2KV0oXzB4MjI2NzQ4LF8weDNmMDVjND0+e2NvbnN0IF8weDI4ZjUyPV8weGFhZjQ0ZjtsZXQgXzB4MjQwN2ExPV8weDNmMDVjNFtfMHgyOGY1MigweDY5OSldKCk7aWYoXzB4MTljYjc1WydfcmVjeWNsZUxpbmVJZkluQ2hhbmdlRnJhbWUnXShfMHgzZjA1YzQsXzB4MzdjZWViKSlyZXR1cm47XzB4MjQwN2ExPl8weDU3OTk3MyYmKF8weDI0MDdhMSs9XzB4NDEzMjVhLF8weDNmMDVjNFtfMHgyOGY1MigweDY5OSldKF8weDI0MDdhMSkpO2xldCBfMHg0ZjEyYjE9XzB4MTljYjc1WydfbGluZXMnXVtfMHgyNDA3YTFdO18weDRmMTJiMT8oXzB4NGYxMmIxW18weDI4ZjUyKDB4MjRmKV0oKSxfMHgzZjA1YzRbJ2Rpc3Bvc2UnXSgpLGRlbGV0ZSBfMHgxOWNiNzVbJ19saW5lcyddW18weDI0MDdhMV0pOl8weDE5Y2I3NVtfMHgyOGY1MigweDRlNCldW18weDI0MDdhMV09XzB4M2YwNWM0O30pO31bXzB4NGMwYzYzKDB4NTIyKV0oXzB4MzRkOTQ5LF8weDQ3ZDBhNil7Y29uc3QgXzB4MzNjODY0PV8weDRjMGM2MztsZXQgXzB4MzA4MTVkPV8weDM0ZDk0OVsnbnVtYmVyJ10oKTtpZihfMHgzMDgxNWQ+PV8weDQ3ZDBhNltfMHgzM2M4NjQoMHg1NzgpXSYmXzB4MzA4MTVkPD1fMHg0N2QwYTZbJ2VuZCddKXJldHVybiBfMHgzNGQ5NDlbJ2Rpc3Bvc2UnXSgpLCEweDA7fX1fMHgxYzZiNDNbXzB4NGMwYzYzKDB4MzY2KV09XzB4NTRiN2I3O30seycuLi9zaGFyZWQvZW51bXMnOjB4MTksJy4vZG9jdW1lbnRMaW5lJzoweGIsJy4vZXhlY3V0ZWRUZXN0JzoweGR9XSwweGI6W2Z1bmN0aW9uKF8weDI1NWIxYyxfMHgyMjUyZmEsXzB4MWRmYTY4KXsndXNlIHN0cmljdCc7Y29uc3QgXzB4YWM4ZTQ2PV8weGFlMjY7bGV0IF8weDVkNjgzMj1fMHgyNTViMWMoXzB4YWM4ZTQ2KDB4NzgwKSlbXzB4YWM4ZTQ2KDB4NTM3KV0sXzB4Mzk4OTRiPTB4ODAsXzB4NDA0Y2ZhPShwcm9jZXNzW18weGFjOGU0NigweDQ1OCldWydxdW9ra2EnXT8weDEwMDoweGEpKjB4NDAwLF8weDliNzY0OD0weDgwLF8weDEyZTU1ND0weDA7Y29uc3QgXzB4MWFjNTUyPXsndXNlcic6MHgxLCdzeXN0ZW0nOjB4Mn07Y2xhc3MgXzB4M2VhYzRie2NvbnN0cnVjdG9yKF8weDJkNGI4OCxfMHgxYjZhMzUsXzB4NDM1ODliKXtjb25zdCBfMHg0YmM2YjQ9XzB4YWM4ZTQ2O3RoaXNbXzB4NGJjNmI0KDB4NDg2KV09XzB4MmQ0Yjg4LHRoaXNbJ19udW1iZXInXT1fMHgxYjZhMzUsdGhpc1tfMHg0YmM2YjQoMHgyNjgpXT1fMHg0MzU4OWIsdGhpc1tfMHg0YmM2YjQoMHg0NmYpXT1PYmplY3RbXzB4NGJjNmI0KDB4NDQ4KV0obnVsbCksdGhpc1snX2lkJ109KytfMHgxMmU1NTQ7fVtfMHhhYzhlNDYoMHg5ZildKCl7Y29uc3QgXzB4NDg5MGE0PV8weGFjOGU0NjtyZXR1cm4hX1tfMHg0ODkwYTQoMHg5NyldKHRoaXNbXzB4NDg5MGE0KDB4NDZmKV0pO31bXzB4YWM4ZTQ2KDB4NjdmKV0oKXtjb25zdCBfMHgxYzdiMmI9XzB4YWM4ZTQ2O3JldHVybiB0aGlzW18weDFjN2IyYigweDQ2ZildO31bXzB4YWM4ZTQ2KDB4NTUyKV0oKXtjb25zdCBfMHgzNGQ0NTk9XzB4YWM4ZTQ2O2xldCBfMHg1NmI5ZTA9dGhpcyxfMHgzMWRlNDY9ITB4MCxfMHg1ODk2MDM9ITB4MCxfMHgzNGQ2NTU9ITB4MSxfMHg0N2M2ZGY9ITB4MSxfMHgyMjdmZjA9dGhpc1tfMHgzNGQ0NTkoMHgyMzMpXSxfMHgzYjQzNTY9dGhpc1tfMHgzNGQ0NTkoMHgzMGQpXSxfMHgxODE5ODU9dGhpc1tfMHgzNGQ0NTkoMHg0MTApXSxfMHgxMzhiZDg9dGhpc1tfMHgzNGQ0NTkoMHgxMjMpXSxfMHgzZmE2ZGQ9dGhpc1snX2Vycm9yJ107ZGVsZXRlIHRoaXNbXzB4MzRkNDU5KDB4MzBkKV0sZGVsZXRlIHRoaXNbXzB4MzRkNDU5KDB4NDEwKV0sZGVsZXRlIHRoaXNbXzB4MzRkNDU5KDB4MjM2KV0sZGVsZXRlIHRoaXNbJ19jb25zb2xlTG9nUmVtb3ZhYmxlJ10sZGVsZXRlIHRoaXNbJ19lcnJvciddO2NvbnN0IF8weDNhMTU3Nj10aGlzW18weDM0ZDQ1OSgweDI2OCldW18weDM0ZDQ1OSgweDFkNildWyd1c2VkJ10sXzB4MjEwNTBjPXRoaXNbJ19maWx0ZXInXVtfMHgzNGQ0NTkoMHg1ZmYpXVtfMHgzNGQ0NTkoMHgxOTkpXTtfMHgyMTA1MGM/dGhpc1tfMHgzNGQ0NTkoMHg3ODkpXSgpOnRoaXNbXzB4MzRkNDU5KDB4MjAxKV0mJmRlbGV0ZSB0aGlzW18weDM0ZDQ1OSgweDIwMSldLGRlbGV0ZSB0aGlzWydfZGVidWdnZXJGaWx0ZXJTdGF0ZSddLF9bXzB4MzRkNDU5KDB4M2U2KV0odGhpc1tfMHgzNGQ0NTkoMHg0NjcpXSgpLF8weDI4NzViMD0+e2NvbnN0IF8weDE3MzQ4ZD1fMHgzNGQ0NTk7aWYoXzB4NTZiOWUwW18weDE3MzQ4ZCgweDU5NCldKF8weDI4NzViMCxfMHg1NmI5ZTAsXzB4M2ExNTc2P18weDJhNzY1Mj0+XzB4MmE3NjUyW18weDE3MzQ4ZCgweDRmNildfHwhXzB4MmE3NjUyW18weDE3MzQ4ZCgweDcxMCldfHxfMHgyYTc2NTJbJ3RyYWNlSWQnXT09PScqJzpudWxsKSxfMHgyODc1YjBbJ2lzRXJyb3JTb3VyY2UnXSgpKXtfMHgzNGQ2NTU9ITB4MDtjb25zdCBfMHgxMzg5MmE9XzB4NTZiOWUwW18weDE3MzQ4ZCgweDQ2YyldKF8weDI4NzViMCk7XzB4MTM4OTJhJiZfW18weDE3MzQ4ZCgweDVmMCldKF8weDEzODkyYVtfMHgxNzM0OGQoMHhhYildKSYmKF8weDU2YjllMFtfMHgxNzM0OGQoMHg1NTApXT1fMHgxMzg5MmEpO31fMHgyODc1YjBbXzB4MTczNDhkKDB4MmJhKV0oKSYmKF8weDQ3YzZkZj0hMHgwKSxfMHgyODc1YjBbXzB4MTczNDhkKDB4MzJiKV0oKT9fMHg1ODk2MDM9ITB4MTpfMHgzMWRlNDY9ITB4MSxfMHgyMTA1MGMmJl8weDU2YjllMFtfMHgxNzM0OGQoMHg1MWQpXShfMHgyODc1YjApO30pLHRoaXNbXzB4MzRkNDU5KDB4NWJiKV0oXzB4NTZiOWUwKSx0aGlzW18weDM0ZDQ1OSgweDIzMyldPV8weDU2YjllMFtfMHgzNGQ0NTkoMHg1MzIpXShfMHgzNGQ2NTUsXzB4NDdjNmRmLF8weDU4OTYwMyxfMHgzMWRlNDYpLHRoaXNbXzB4MzRkNDU5KDB4MjMzKV09PT1fMHg1ZDY4MzJbJ25vdENvdmVyZWQnXSYmKGRlbGV0ZSB0aGlzW18weDM0ZDQ1OSgweDMwZCldLGRlbGV0ZSB0aGlzW18weDM0ZDQ1OSgweDQxMCldLGRlbGV0ZSB0aGlzW18weDM0ZDQ1OSgweDIzNildLGRlbGV0ZSB0aGlzW18weDM0ZDQ1OSgweDEyMyldKSxfMHgyMTA1MGMmJnRoaXNbXzB4MzRkNDU5KDB4MzZhKV0oKSx0aGlzW18weDM0ZDQ1OSgweGIwKV09dGhpc1tfMHgzNGQ0NTkoMHgyNjgpXVtfMHgzNGQ0NTkoMHg3OGYpXVsndHMnXTtjb25zdCBfMHg0MzllYjE9dGhpc1snX2Vycm9yJ10sXzB4MWZiZjYyPV8weDQzOWViMSYmXzB4NDM5ZWIxW18weDM0ZDQ1OSgweGFiKV0sXzB4NTI3ZTgxPV8weDNmYTZkZCYmXzB4M2ZhNmRkW18weDM0ZDQ1OSgweGFiKV0sXzB4MjczY2I5PV8weDQzOWViMSYmXzB4NDM5ZWIxW18weDM0ZDQ1OSgweDY4MCldLF8weDI3ZWU1ND1fMHgzZmE2ZGQmJl8weDNmYTZkZFsnZGlmZkF2YWlsYWJsZSddLF8weDJlZTI4ZT1fMHg0MzllYjEmJl8weDQzOWViMVsnc291cmNlJ10mJl8weDQzOWViMVtfMHgzNGQ0NTkoMHgxM2IpXVtfMHgzNGQ0NTkoMHg1Y2QpXSxfMHg1Y2EyNWE9XzB4M2ZhNmRkJiZfMHgzZmE2ZGRbXzB4MzRkNDU5KDB4MTNiKV0mJl8weDNmYTZkZFtfMHgzNGQ0NTkoMHgxM2IpXVtfMHgzNGQ0NTkoMHg1Y2QpXSxfMHgxOWUwYmQ9XzB4NDM5ZWIxJiZfMHg0MzllYjFbJ3NvdXJjZSddJiZfMHg0MzllYjFbXzB4MzRkNDU5KDB4MTNiKV1bXzB4MzRkNDU5KDB4MmE0KV0sXzB4MTdiMjJjPV8weDNmYTZkZCYmXzB4M2ZhNmRkW18weDM0ZDQ1OSgweDEzYildJiZfMHgzZmE2ZGRbJ3NvdXJjZSddW18weDM0ZDQ1OSgweDJhNCldO3JldHVybiB0aGlzW18weDM0ZDQ1OSgweDIzMyldIT09XzB4MjI3ZmYwfHx0aGlzW18weDM0ZDQ1OSgweDMwZCldIT09XzB4M2I0MzU2fHx0aGlzW18weDM0ZDQ1OSgweDQxMCldIT09XzB4MTgxOTg1fHx0aGlzW18weDM0ZDQ1OSgweDEyMyldIT09XzB4MTM4YmQ4fHxfMHgxZmJmNjIhPT1fMHg1MjdlODF8fF8weDI3M2NiOSE9XzB4MjdlZTU0fHxfMHgyZWUyOGUhPV8weDVjYTI1YXx8XzB4MTllMGJkIT1fMHgxN2IyMmM7fVtfMHhhYzhlNDYoMHgzZjEpXShfMHg1NGZiMmEpe2NvbnN0IF8weDNhYzJmZj1fMHhhYzhlNDY7aWYoXzB4NTRmYjJhKXtpZih0aGlzWydfZmlsdGVyJ11bXzB4M2FjMmZmKDB4MWQ2KV1bXzB4M2FjMmZmKDB4MTk5KV0pcmV0dXJuIHRoaXNbXzB4M2FjMmZmKDB4NGQ0KV0oXzB4MjYxYmVlPT4oeyd0ZXh0JzpfMHgyNjFiZWVbJ19jb25zb2xlTG9nVGV4dCddLCdsb25nVGV4dCc6XzB4MjYxYmVlW18weDNhYzJmZigweDQxMCldPT09XzB4MWFjNTUyW18weDNhYzJmZigweDRlZildP3ZvaWQgMHgwOl8weDI2MWJlZVsnX2xvbmdDb25zb2xlTG9nVGV4dCddLCdpc1N5c3RlbSc6XzB4MjYxYmVlW18weDNhYzJmZigweDQxMCldPT09XzB4MWFjNTUyW18weDNhYzJmZigweDRlZildLCdpc1JlbW92YWJsZSc6XzB4MjYxYmVlWydfY29uc29sZUxvZ1JlbW92YWJsZSddfSkpO2lmKHRoaXNbXzB4M2FjMmZmKDB4MjY4KV1bJ3Rlc3QnXVsnYWN0aXZlJ10pcmV0dXJuIHRoaXNbXzB4M2FjMmZmKDB4MzAxKV0oXzB4MTFjNTEzPT4oeyd0ZXh0JzpfMHgxMWM1MTNbXzB4M2FjMmZmKDB4MzBkKV0sJ2xvbmdUZXh0JzpfMHgxMWM1MTNbXzB4M2FjMmZmKDB4NDEwKV09PT1fMHgxYWM1NTJbJ3N5c3RlbSddP3ZvaWQgMHgwOl8weDExYzUxM1tfMHgzYWMyZmYoMHgyMzYpXSwnaXNTeXN0ZW0nOl8weDExYzUxM1tfMHgzYWMyZmYoMHg0MTApXT09PV8weDFhYzU1MltfMHgzYWMyZmYoMHg0ZWYpXSwnaXNSZW1vdmFibGUnOl8weDExYzUxM1snX2NvbnNvbGVMb2dSZW1vdmFibGUnXX0pKTt9cmV0dXJuIHRoaXNbJ19jb25zb2xlTG9nVGV4dFRzJ10hPT10aGlzW18weDNhYzJmZigweDI2OCldW18weDNhYzJmZigweDc4ZildWyd0cyddJiYodGhpc1tfMHgzYWMyZmYoMHg2YWMpXSh0aGlzKSx0aGlzW18weDNhYzJmZigweGIwKV09dGhpc1tfMHgzYWMyZmYoMHgyNjgpXVtfMHgzYWMyZmYoMHg3OGYpXVsndHMnXSkseyd0ZXh0Jzp0aGlzW18weDNhYzJmZigweDMwZCldLCdsb25nVGV4dCc6dGhpc1tfMHgzYWMyZmYoMHg0MTApXT09PV8weDFhYzU1MltfMHgzYWMyZmYoMHg0ZWYpXT92b2lkIDB4MDp0aGlzWydfbG9uZ0NvbnNvbGVMb2dUZXh0J10sJ2lzU3lzdGVtJzp0aGlzW18weDNhYzJmZigweDQxMCldPT09XzB4MWFjNTUyW18weDNhYzJmZigweDRlZildLCdpc1JlbW92YWJsZSc6dGhpc1tfMHgzYWMyZmYoMHgxMjMpXX07fVtfMHhhYzhlNDYoMHg0ODUpXShfMHhlODZiMDMpe2NvbnN0IF8weDM5YTk3Nj1fMHhhYzhlNDY7cmV0dXJuIF8weGU4NmIwMyYmdGhpc1tfMHgzOWE5NzYoMHgyNjgpXVtfMHgzOWE5NzYoMHg1ZmYpXVtfMHgzOWE5NzYoMHgxOTkpXT90aGlzW18weDM5YTk3NigweDMwMSldKF8weDMyZmM1NT0+XzB4MzJmYzU1WydfZXJyb3InXSk6dGhpc1tfMHgzOWE5NzYoMHg1NTApXTt9WydzdGF0ZSddKF8weDQ3ODE0OSl7Y29uc3QgXzB4MmE2MTBkPV8weGFjOGU0NjtyZXR1cm4gXzB4NDc4MTQ5JiZ0aGlzW18weDJhNjEwZCgweDI2OCldW18weDJhNjEwZCgweDVmZildW18weDJhNjEwZCgweDE5OSldP3RoaXNbXzB4MmE2MTBkKDB4MzAxKV0oXzB4M2FjMTcyPT5fMHgzYWMxNzJbJ19saW5lU3RhdGUnXSk6dGhpc1tfMHgyYTYxMGQoMHgyMzMpXTt9W18weGFjOGU0NigweDE5NyldKF8weDU2MzNiNCxfMHgyMWVjMTgpe2NvbnN0IF8weDFjZDk4NT1fMHhhYzhlNDY7bGV0IF8weDM4NjFkNz1fMHg1NjMzYjRbJ2tleSddKCk7XzB4MjFlYzE4fHxkZWxldGUgdGhpc1tfMHgxY2Q5ODUoMHg0NmYpXVtfMHgzODYxZDddLHRoaXNbJ19yYW5nZXMnXVtfMHgzODYxZDddPV8weDU2MzNiNDt9W18weGFjOGU0NigweDExNSldKCl7Y29uc3QgXzB4M2Q4YTMyPV8weGFjOGU0Njt0aGlzW18weDNkOGEzMigweDQ2ZildPU9iamVjdFtfMHgzZDhhMzIoMHg0NDgpXShudWxsKTt9WydudW1iZXInXShfMHgyYzRiZGEpe2NvbnN0IF8weDI3Mzk5OD1fMHhhYzhlNDY7bGV0IF8weGRmMmQwNj10aGlzLF8weDQzNjkwOD10aGlzW18weDI3Mzk5OCgweDI0YildO2lmKF9bXzB4MjczOTk4KDB4NGM3KV0oXzB4MmM0YmRhKSlyZXR1cm4gXzB4NDM2OTA4O2lmKF8weDJjNGJkYSE9PV8weDQzNjkwOCl7dGhpc1tfMHgyNzM5OTgoMHgyNGIpXT1fMHgyYzRiZGE7bGV0IF8weDFhMmI3YT1fMHgyYzRiZGEtXzB4NDM2OTA4LF8weDM4MDBhYj1fW18weDI3Mzk5OCgweDMzYildKHRoaXNbXzB4MjczOTk4KDB4NDZmKV0pO3RoaXNbJ3JlbW92ZVJhbmdlcyddKCksX1tfMHgyNzM5OTgoMHgzZTYpXShfMHgzODAwYWIsXzB4MjYxMDQ3PT57Y29uc3QgXzB4NGQ4OGU4PV8weDI3Mzk5ODtfMHgyNjEwNDdbXzB4NGQ4OGU4KDB4NTlhKV0oXzB4MWEyYjdhKSxfMHhkZjJkMDZbXzB4NGQ4OGU4KDB4NDZmKV1bXzB4MjYxMDQ3WydrZXknXSgpXT1fMHgyNjEwNDc7fSk7fX1bXzB4YWM4ZTQ2KDB4MjRmKV0oKXtjb25zdCBfMHgxNzY0Y2E9XzB4YWM4ZTQ2O3RoaXNbXzB4MTc2NGNhKDB4MTE1KV0oKSxkZWxldGUgdGhpc1tfMHgxNzY0Y2EoMHgzMGQpXSxkZWxldGUgdGhpc1tfMHgxNzY0Y2EoMHg0MTApXSxkZWxldGUgdGhpc1tfMHgxNzY0Y2EoMHgyMzYpXSxkZWxldGUgdGhpc1tfMHgxNzY0Y2EoMHg1NTApXSxkZWxldGUgdGhpc1tfMHgxNzY0Y2EoMHgyMzMpXSxkZWxldGUgdGhpc1snX3Rlc3RGaWx0ZXJTdGF0ZSddLGRlbGV0ZSB0aGlzW18weDE3NjRjYSgweDQzNSldLHRoaXNbXzB4MTc2NGNhKDB4NDY0KV09ITB4MDt9W18weGFjOGU0NigweDQ5ZCldKCl7Y29uc3QgXzB4NTAyNDFmPV8weGFjOGU0NjtyZXR1cm4gdGhpc1tfMHg1MDI0MWYoMHg0NjQpXTt9W18weGFjOGU0NigweDQ2MildKCl7Y29uc3QgXzB4NTdmYjExPV8weGFjOGU0NjtyZXR1cm4gdGhpc1tfMHg1N2ZiMTEoMHgzNTUpXTt9c3RhdGljWydmb3JtYXRMaW5lRXJyb3JNZXNzYWdlJ10oXzB4NGRlZDFhLF8weGVjYTkzNil7Y29uc3QgXzB4NDk1ZmM1PV8weGFjOGU0NjtyZXR1cm4gXzB4ZWNhOTM2JiZfMHg0ZGVkMWEmJihfMHg0ZGVkMWE9XzB4NGRlZDFhW18weDQ5NWZjNSgweDVjNCldKC9eXHMqZXhwZWN0XChyZWNlaXZlZFwpXC50b01hdGNoU25hcHNob3RcKFwpXHMqLywnJylbXzB4NDk1ZmM1KDB4NWM0KV0oL15ccypTbmFwc2hvdCBuYW1lOiBgLipgXHMqLywnJylbXzB4NDk1ZmM1KDB4NWM0KV0oL15ccypTbmFwc2hvdCBgLipgIG1pc21hdGNoZWRccyovLCcnKSksXzB4M2VhYzRiW18weDQ5NWZjNSgweDFhZildKF8weDRkZWQxYXx8JycsXzB4OWI3NjQ4KTt9c3RhdGljWydfdHJ1bmNhdGVNZXNzYWdlJ10oXzB4ZTk3MjM0LF8weDQ2MmJlMSxfMHg0ZmEzNWQpe2NvbnN0IF8weDIxNDE2OT1fMHhhYzhlNDY7bGV0IF8weDIyNzU2NT1fMHhlOTcyMzRbXzB4MjE0MTY5KDB4MTk1KV0+XzB4NDYyYmUxP18weDIxNDE2OSgweDNhYyk6Jyc7cmV0dXJuIF8weGU5NzIzND1fMHhlOTcyMzRbXzB4MjE0MTY5KDB4NTExKV0oMHgwLF8weDQ2MmJlMSksKF8weDRmYTM1ZD9fMHhlOTcyMzQ6XzB4M2VhYzRiW18weDIxNDE2OSgweDcxMildKF8weGU5NzIzNCkpK18weDIyNzU2NTt9c3RhdGljW18weGFjOGU0NigweDcxMildKF8weDE3MGIzZil7Y29uc3QgXzB4Yzg4MzQwPV8weGFjOGU0NjtyZXR1cm4gXzB4MTcwYjNmJiZfMHgxNzBiM2ZbXzB4Yzg4MzQwKDB4NWM0KV0oL1xyXG5ccyovZywnXHgyMCcpWydyZXBsYWNlJ10oL1xuXHMqL2csJ1x4MjAnKTt9W18weGFjOGU0NigweDRkNCldKF8weDVjM2JiMCl7Y29uc3QgXzB4YzY1MTIwPV8weGFjOGU0NjtpZih0aGlzW18weGM2NTEyMCgweDQzNSldJiZ0aGlzWydfZGVidWdnZXJGaWx0ZXJTdGF0ZSddW18weGM2NTEyMCgweDM2ZSldPT09dGhpc1snX2ZpbHRlciddW18weGM2NTEyMCgweDFkNildWyd0cyddJiZ0aGlzW18weGM2NTEyMCgweDQzNSldWydhbHRUcyddPT09dGhpc1tfMHhjNjUxMjAoMHgyNjgpXVtfMHhjNjUxMjAoMHg3OGYpXVsndHMnXSlyZXR1cm4gXzB4NWMzYmIwKHRoaXNbXzB4YzY1MTIwKDB4NDM1KV0pO2NvbnN0IF8weDE4OWIyNz10aGlzWydfZGVidWdnZXJGaWx0ZXJTdGF0ZSddPXsnbWFpblRzJzp0aGlzW18weGM2NTEyMCgweDI2OCldW18weGM2NTEyMCgweDFkNildWyd0cyddLCdhbHRUcyc6dGhpc1snX2ZpbHRlciddW18weGM2NTEyMCgweDc4ZildWyd0cyddfTtyZXR1cm4gdGhpc1snX3JlYnVpbGRDb25zb2xlTG9nVGV4dCddKF8weDE4OWIyNyxfMHhiZTUxOTc9Pl8weGJlNTE5N1sndHJhY2VJZCddPT09dGhpc1tfMHhjNjUxMjAoMHgyNjgpXVsnZGVidWdnZXInXVsndHMnXXx8XzB4YmU1MTk3W18weGM2NTEyMCgweDcxMCldPT09JyonJiZfMHhiZTUxOTdbJ3RyYWNlU3RlcCddPT09dGhpc1tfMHhjNjUxMjAoMHgyNjgpXVtfMHhjNjUxMjAoMHgxZDYpXVtfMHhjNjUxMjAoMHgzYzMpXSksXzB4NWMzYmIwKF8weDE4OWIyNyk7fVtfMHhhYzhlNDYoMHg2YWMpXShfMHgzYmQwYWQsXzB4NDVkYzE3KXtjb25zdCBfMHg1NmYzY2M9XzB4YWM4ZTQ2O2RlbGV0ZSBfMHgzYmQwYWRbXzB4NTZmM2NjKDB4MzBkKV0sZGVsZXRlIF8weDNiZDBhZFtfMHg1NmYzY2MoMHgyMzYpXSxkZWxldGUgXzB4M2JkMGFkW18weDU2ZjNjYygweDQxMCldLGRlbGV0ZSBfMHgzYmQwYWRbJ19jb25zb2xlTG9nUmVtb3ZhYmxlJ107Zm9yKGNvbnN0IF8weGRhYWFlYSBvZiB0aGlzWydfb3JkZXJlZFJhbmdlcyddKCkpdGhpc1tfMHg1NmYzY2MoMHg1OTQpXShfMHhkYWFhZWEsXzB4M2JkMGFkLF8weDQ1ZGMxNyk7dGhpc1tfMHg1NmYzY2MoMHg1YmIpXShfMHgzYmQwYWQpO31bXzB4YWM4ZTQ2KDB4NTk0KV0oXzB4NWIxNzRmLF8weDU1OGMyNCxfMHhkNmRlZjkpe2NvbnN0IF8weDU5MTZlOT1fMHhhYzhlNDYsXzB4MWZlN2UwPV8weDViMTc0ZltfMHg1OTE2ZTkoMHgzZjEpXSgpO18weDFmZTdlMCYmXzB4MWZlN2UwW18weDU5MTZlOSgweDE5NSldJiZbX1tfMHg1OTE2ZTkoMHg3MjUpXShfMHgxZmU3ZTAsXzB4NWFmYWQyPT4hIV8weDVhZmFkMltfMHg1OTE2ZTkoMHg0ZjYpXSksX1tfMHg1OTE2ZTkoMHg3MjUpXShfMHgxZmU3ZTAsXzB4MWIyYTc3PT4hXzB4MWIyYTc3W18weDU5MTZlOSgweDRmNildKV1bXzB4NTkxNmU5KDB4M2U0KV0oXzB4NWQ1YTQ5PT57Y29uc3QgXzB4NWRmNjkyPV8weDU5MTZlOSxfMHg0ZTZiNzc9IV8weDU1OGMyNFsnX2xvbmdDb25zb2xlTG9nVGV4dCddfHxfW18weDVkZjY5MigweDVmMCldKF8weDU1OGMyNFsnX2xvbmdDb25zb2xlTG9nVGV4dCddKSYmXzB4NTU4YzI0W18weDVkZjY5MigweDIzNildW18weDVkZjY5MigweDE5NSldPF8weDQwNGNmYTtsZXQgXzB4NGRmYTgzLF8weDQzYTk3Zjtjb25zdCBfMHg0ZTY4MzM9dGhpc1tfMHg1ZGY2OTIoMHgyNjgpXVsnc3VwcHJlc3Npb24nXVtfMHg1ZGY2OTIoMHgxOTkpXSxfMHgzNzAwNmI9W107Zm9yKGNvbnN0IF8weGI3ZDFkMSBvZiBfMHg1ZDVhNDkpe2xldCBfMHgzNTc0MGI9ITB4MTtfMHg0ZTY4MzMmJl8weGI3ZDFkMVsnY2hhbmdlSWQnXSYmIV8weGI3ZDFkMVsncGVybWFuZW50J10mJnRoaXNbXzB4NWRmNjkyKDB4MjY4KV1bXzB4NWRmNjkyKDB4NzhmKV1bXzB4NWRmNjkyKDB4NzM3KV0odGhpc1tfMHg1ZGY2OTIoMHg0ODYpXSxfMHhiN2QxZDFbXzB4NWRmNjkyKDB4NzFmKV0pJiYoXzB4YjdkMWQxW18weDVkZjY5MigweDQ2NildPSEweDAsXzB4MzU3NDBiPSEweDApLCFfMHgzNTc0MGImJl8weGI3ZDFkMVsnc3VwcHJlc3NlZCddJiYoXzB4MzU3NDBiPSEweDApLCFfMHgzNTc0MGImJl8weGQ2ZGVmOSYmKF8weDM1NzQwYj0hXzB4ZDZkZWY5KF8weGI3ZDFkMSkpLF8weDM1NzQwYnx8XzB4MzcwMDZiW18weDVkZjY5MigweDQyZCldKF8weGI3ZDFkMSk7fWlmKF8weDVkNWE0OT1fMHgzNzAwNmIsXzB4NWQ1YTQ5W18weDVkZjY5MigweDE5NSldKXtfMHg1ZDVhNDlbMHgwXVtfMHg1ZGY2OTIoMHg0ZWYpXSYmKF8weDU1OGMyNFtfMHg1ZGY2OTIoMHg0MTApXT1fMHgxYWM1NTJbXzB4NWRmNjkyKDB4NGVmKV0pO2NvbnN0IF8weGMzODAyYT1fMHg1ZDVhNDlbXzB4NWRmNjkyKDB4MTk1KV0+XzB4Mzk4OTRiLF8weDJmZGE3YT1fMHg1ZDVhNDlbXzB4NWRmNjkyKDB4MTk1KV0+MHgzZTg7XzB4NGRmYTgzPV9bXzB4NWRmNjkyKDB4NzVjKV0oXzB4YzM4MDJhP18weDVkNWE0OVsnc2xpY2UnXShfMHg1ZDVhNDlbJ2xlbmd0aCddLV8weDM5ODk0Yik64oCLXzB4NWQ1YTQ5LF8weDE2Y2E0MD0+KF8weDE2Y2E0MFtfMHg1ZGY2OTIoMHg3MWYpXSYmKF8weDU1OGMyNFtfMHg1ZGY2OTIoMHgxMjMpXT0hMHgwKSxfMHgxNmNhNDBbXzB4NWRmNjkyKDB4YWIpXT09PScnPydbZW1wdHlceDIwc3RyaW5nXSc6XzB4MTZjYTQwWydtZXNzYWdlJ10pKVtfMHg1ZGY2OTIoMHg0MmUpXSgnLFx4MjAnKSxfMHg0ZGZhODNbXzB4NWRmNjkyKDB4MTk1KV0+XzB4Mzk4OTRiJiYoXzB4NGRmYTgzPShfMHg0ZGZhODNbXzB4NWRmNjkyKDB4N2E3KV0oJ3RoZW5ceDIwJyk9PT0weDA/XzB4NWRmNjkyKDB4NDkwKTonJykrJy4uLlx4MjAnK18weDRkZmE4M1snc3Vic3RyJ10oXzB4NGRmYTgzW18weDVkZjY5MigweDE5NSldLV8weDM5ODk0YisweDQpKSxfMHg0ZTZiNzcmJihfMHg0M2E5N2Y9KF8weDJmZGE3YT9fMHg1ZGY2OTIoMHgzMGMpOicnKStfW18weDVkZjY5MigweDc1YyldKF8weDJmZGE3YT9fMHg1ZDVhNDlbJ3NsaWNlJ10oXzB4NWQ1YTQ5WydsZW5ndGgnXS0weDNlOCk6XzB4NWQ1YTQ5LF8weDU2NjAzMj0+XzB4NTY2MDMyWydtZXNzYWdlJ10pW18weDVkZjY5MigweDQyZSldKCdceDIwXHgwYScpKTt9X1tfMHg1ZGY2OTIoMHg1ZjApXShfMHg0ZGZhODMpJiYoX1tfMHg1ZGY2OTIoMHg1ZjApXShfMHg1NThjMjRbXzB4NWRmNjkyKDB4MzBkKV0pfHwoXzB4NTU4YzI0W18weDVkZjY5MigweDMwZCldPScnKSxfMHg1NThjMjRbXzB4NWRmNjkyKDB4MzBkKV0rPShfMHg1NThjMjRbJ19jb25zb2xlTG9nVGV4dCddPydceDIwfFx4MjAnOicnKStfMHg0ZGZhODMpLF9bXzB4NWRmNjkyKDB4NWYwKV0oXzB4NDNhOTdmKSYmKF9bXzB4NWRmNjkyKDB4NWYwKV0oXzB4NTU4YzI0WydfbG9uZ0NvbnNvbGVMb2dUZXh0J10pfHwoXzB4NTU4YzI0W18weDVkZjY5MigweDIzNildPScnKSxfMHg1NThjMjRbXzB4NWRmNjkyKDB4MjM2KV0rPShfMHg1NThjMjRbXzB4NWRmNjkyKDB4MjM2KV0/XzB4NWRmNjkyKDB4MzQ2KTonJykrXzB4NDNhOTdmKTt9KTt9W18weGFjOGU0NigweDQ2YyldKF8weGU3YWE4MCxfMHg0NGIyNjUpe2NvbnN0IF8weDRjODEyYz1fMHhhYzhlNDYsXzB4NDNmZGM1PV8weGU3YWE4MFtfMHg0YzgxMmMoMHg2MGYpXShfMHg0NGIyNjUpO2lmKF8weDQzZmRjNVtfMHg0YzgxMmMoMHgxOTUpXSl7Y29uc3QgXzB4MTE4MWJmPV8weDQzZmRjNVtfMHg0M2ZkYzVbXzB4NGM4MTJjKDB4MTk1KV0tMHgxXSxfMHg1MjM3MDU9XzB4MTE4MWJmW18weDRjODEyYygweDQzNyldKCk7cmV0dXJueydtZXNzYWdlJzpfMHgzZWFjNGJbJ2Zvcm1hdExpbmVFcnJvck1lc3NhZ2UnXShfMHgxMTgxYmZbJ21lc3NhZ2UnXSgpLF8weDExODFiZltfMHg0YzgxMmMoMHg0NjgpXSgpKSwnZGlmZkF2YWlsYWJsZSc6XzB4MTE4MWJmW18weDRjODEyYygweDU2MCldKCkhPT12b2lkIDB4MHx8XzB4MTE4MWJmW18weDRjODEyYygweDZmYSldKCkhPT12b2lkIDB4MCwnc291cmNlJzpfMHg1MjM3MDUmJl8weDUyMzcwNVtfMHg0YzgxMmMoMHgxOTUpXT97J2xpbmUnOl8weDUyMzcwNVsweDBdWydsaW5lJ10oKSwnZmlsZUlkJzpfMHg1MjM3MDVbMHgwXVtfMHg0YzgxMmMoMHg1Y2QpXSgpfTp2b2lkIDB4MH07fX1bXzB4YWM4ZTQ2KDB4NTMyKV0oXzB4NDljYWY5LF8weDJhZDM5MixfMHhmMTQ1ZGUsXzB4NDFlYWU0KXtjb25zdCBfMHgzZTUwMWY9XzB4YWM4ZTQ2O3JldHVybiBfMHg0OWNhZjk/XzB4NWQ2ODMyW18weDNlNTAxZigweGY2KV06XzB4MmFkMzkyP18weDVkNjgzMlsnZXJyb3JQYXRoJ106XzB4ZjE0NWRlP18weDVkNjgzMltfMHgzZTUwMWYoMHg2NGEpXTpfMHg0MWVhZTQ/XzB4NWQ2ODMyW18weDNlNTAxZigweDUwMildOl8weDVkNjgzMlsncGFydGlhbGx5Q292ZXJlZCddO31bXzB4YWM4ZTQ2KDB4NWJiKV0oXzB4MmM1ZTIwKXtjb25zdCBfMHgzZDA5NmM9XzB4YWM4ZTQ2O18weDJjNWUyMFsnX2NvbnNvbGVMb2dUZXh0J10mJihfW18weDNkMDk2YygweDVmMCldKF8weDJjNWUyMFtfMHgzZDA5NmMoMHgyMzYpXSkmJihfMHgyYzVlMjBbXzB4M2QwOTZjKDB4MjM2KV09XzB4M2VhYzRiW18weDNkMDk2YygweDFhZildKF8weDJjNWUyMFtfMHgzZDA5NmMoMHgyMzYpXSxfMHg0MDRjZmEsITB4MCkpLF8weDJjNWUyMFtfMHgzZDA5NmMoMHgzMGQpXT1fMHgzZWFjNGJbXzB4M2QwOTZjKDB4MWFmKV0oXzB4MmM1ZTIwWydfY29uc29sZUxvZ1RleHQnXSxfMHgzOTg5NGIpKTt9W18weGFjOGU0NigweDMwMSldKF8weDI0OTQ1NCl7Y29uc3QgXzB4MTI1ZDkzPV8weGFjOGU0NjtpZih0aGlzW18weDEyNWQ5MygweDIwMSldJiZ0aGlzW18weDEyNWQ5MygweDIwMSldW18weDEyNWQ5MygweDM2ZSldPT09dGhpc1tfMHgxMjVkOTMoMHgyNjgpXVtfMHgxMjVkOTMoMHg1ZmYpXVsndHMnXSYmdGhpc1tfMHgxMjVkOTMoMHgyMDEpXVtfMHgxMjVkOTMoMHg5YSldPT09dGhpc1tfMHgxMjVkOTMoMHgyNjgpXVtfMHgxMjVkOTMoMHg3OGYpXVsndHMnXSlyZXR1cm4gXzB4MjQ5NDU0KHRoaXNbJ190ZXN0RmlsdGVyU3RhdGUnXSk7dGhpc1tfMHgxMjVkOTMoMHg3ODkpXSgpO2Zvcihjb25zdCBfMHg1NTQxMzggb2YgdGhpc1tfMHgxMjVkOTMoMHg0NjcpXSgpKXRoaXNbJ19hY2N1bXVsYXRlVGVzdEZpbHRlclN0YXRlRm9yUmFuZ2UnXShfMHg1NTQxMzgpO3JldHVybiB0aGlzW18weDEyNWQ5MygweDM2YSldKCksXzB4MjQ5NDU0KHRoaXNbXzB4MTI1ZDkzKDB4MjAxKV0pO31bJ19vcmRlcmVkUmFuZ2VzJ10oKXtjb25zdCBfMHgzZDFiZmU9XzB4YWM4ZTQ2O3JldHVybiBfW18weDNkMWJmZSgweDc0MildKHRoaXNbJ19yYW5nZXMnXSlbXzB4M2QxYmZlKDB4Mzg2KV0oXzB4MjhlMTlmPT5fMHgyOGUxOWZbJ3N0YXJ0Q29sdW1uJ10oKSlbJ3ZhbHVlJ10oKTt9W18weGFjOGU0NigweDc4OSldKCl7Y29uc3QgXzB4MmRjNDE1PV8weGFjOGU0Njt0aGlzW18weDJkYzQxNSgweDIwMSldPXsnbWFpblRzJzp0aGlzWydfZmlsdGVyJ11bJ3Rlc3QnXVsndHMnXSwnYWx0VHMnOnRoaXNbXzB4MmRjNDE1KDB4MjY4KV1bXzB4MmRjNDE1KDB4NzhmKV1bJ3RzJ10sJ2FsbENvdmVyZWQnOiEweDAsJ2FsbE5vdENvdmVyZWQnOiEweDAsJ2hhc0Vycm9yU291cmNlJzohMHgxLCdvbkVycm9yUGF0aCc6ITB4MSwnX2xpbmVTdGF0ZSc6XzB4NWQ2ODMyW18weDJkYzQxNSgweDY0YSldLCdfY29uc29sZUxvZ1RleHQnOnZvaWQgMHgwLCdfY29uc29sZUxvZ1R5cGUnOl8weDFhYzU1MlsndXNlciddLCdfbG9uZ0NvbnNvbGVMb2dUZXh0Jzp2b2lkIDB4MCwnX2NvbnNvbGVMb2dSZW1vdmFibGUnOnZvaWQgMHgwLCdfZXJyb3InOnZvaWQgMHgwfTt9WydfYWNjdW11bGF0ZVRlc3RGaWx0ZXJTdGF0ZUZvclJhbmdlJ10oXzB4Mzg0NTJjKXtjb25zdCBfMHg0MDY2ZDg9XzB4YWM4ZTQ2LF8weDFjNGFiZT10aGlzW18weDQwNjZkOCgweDIwMSldO2lmKHRoaXNbJ19hY2N1bXVsYXRlUmFuZ2VDb25zb2xlTG9nVGV4dCddKF8weDM4NDUyYyxfMHgxYzRhYmUsXzB4Mzg4NzA0PT4hXzB4Mzg4NzA0W18weDQwNjZkOCgweDNjZSldfHx0aGlzW18weDQwNjZkOCgweDI2OCldW18weDQwNjZkOCgweDVmZildW18weDQwNjZkOCgweDM3ZildKF8weDM4ODcwNFtfMHg0MDY2ZDgoMHgzY2UpXSkpLF8weDM4NDUyY1snaXNFcnJvclNvdXJjZSddKHRoaXNbXzB4NDA2NmQ4KDB4MjY4KV1bXzB4NDA2NmQ4KDB4NWZmKV0pKXtfMHgxYzRhYmVbXzB4NDA2NmQ4KDB4MTY3KV09ITB4MDtjb25zdCBfMHg2YzM3NzU9dGhpc1snX2J1aWxkUmFuZ2VFcnJvciddKF8weDM4NDUyYyx0aGlzWydfZmlsdGVyJ11bXzB4NDA2NmQ4KDB4NWZmKV0pO18weDZjMzc3NSYmX1tfMHg0MDY2ZDgoMHg1ZjApXShfMHg2YzM3NzVbJ21lc3NhZ2UnXSkmJihfMHgxYzRhYmVbXzB4NDA2NmQ4KDB4NTUwKV09XzB4NmMzNzc1KTt9XzB4Mzg0NTJjWydpc09uRXJyb3JQYXRoJ10odGhpc1snX2ZpbHRlciddW18weDQwNjZkOCgweDVmZildKSYmKF8weDFjNGFiZVtfMHg0MDY2ZDgoMHgyM2YpXT0hMHgwKSxfMHgzODQ1MmNbXzB4NDA2NmQ4KDB4MzJiKV0odGhpc1tfMHg0MDY2ZDgoMHgyNjgpXVsndGVzdCddKT9fMHgxYzRhYmVbXzB4NDA2NmQ4KDB4MjE2KV09ITB4MTpfMHgxYzRhYmVbXzB4NDA2NmQ4KDB4NTEyKV09ITB4MTt9W18weGFjOGU0NigweDM2YSldKCl7Y29uc3QgXzB4NGJkOTk1PV8weGFjOGU0Njt0aGlzWydfdHJ1bmNhdGVDb25zb2xlTG9nVGV4dCddKHRoaXNbXzB4NGJkOTk1KDB4MjAxKV0pO2NvbnN0IHthbGxDb3ZlcmVkOl8weGZmNTY2NCxhbGxOb3RDb3ZlcmVkOl8weDJhOTAwOCxoYXNFcnJvclNvdXJjZTpfMHg1NjRiODUsb25FcnJvclBhdGg6XzB4NDhkODk5fT10aGlzWydfdGVzdEZpbHRlclN0YXRlJ107dGhpc1snX3Rlc3RGaWx0ZXJTdGF0ZSddW18weDRiZDk5NSgweDIzMyldPXRoaXNbXzB4NGJkOTk1KDB4NTMyKV0oXzB4NTY0Yjg1LF8weDQ4ZDg5OSxfMHgyYTkwMDgsXzB4ZmY1NjY0KTt9fV8weDIyNTJmYVtfMHhhYzhlNDYoMHgzNjYpXT1fMHgzZWFjNGI7fSx7Jy4uL3NoYXJlZC9lbnVtcyc6MHgxOX1dLDB4YzpbZnVuY3Rpb24oXzB4NTNhOWEyLF8weGMyMmYzZCxfMHgxYmI0ZDYpeyd1c2Ugc3RyaWN0Jztjb25zdCBfMHgzNjJmZGM9XzB4YWUyNjtsZXQgXzB4NGMwNjA1PV8weDUzYTlhMihfMHgzNjJmZGMoMHgxZjIpKTtjbGFzcyBfMHg0OTBlZWR7Y29uc3RydWN0b3IoXzB4NDFlN2Q3KXtjb25zdCBfMHgxMjc0YzE9XzB4MzYyZmRjO3RoaXNbJ19hY3R1YWwnXT1fMHg0MWU3ZDdbJ2FjdHVhbCddLHRoaXNbXzB4MTI3NGMxKDB4MTE4KV09XzB4NDFlN2Q3W18weDEyNzRjMSgweDZmYSldLHRoaXNbXzB4MTI3NGMxKDB4MmY3KV09XzB4NDFlN2Q3W18weDEyNzRjMSgweGFiKV0sdGhpc1tfMHgxMjc0YzEoMHgyYTYpXT1fMHg0MWU3ZDdbXzB4MTI3NGMxKDB4MjMxKV0sdGhpc1tfMHgxMjc0YzEoMHg2M2EpXT1fMHg0MWU3ZDdbXzB4MTI3NGMxKDB4NDM3KV0sdGhpc1tfMHgxMjc0Y+KAizEoMHgzZjMpXT1fMHg0MWU3ZDdbXzB4MTI3NGMxKDB4NDY4KV0sdGhpc1tfMHgxMjc0YzEoMHhiMildPV8weDQxZTdkN1tfMHgxMjc0YzEoMHg0ZDgpXXx8e307fVsnaW5pdCddKCl7Y29uc3QgXzB4NTY2YTI0PV8weDM2MmZkYztsZXQgXzB4NDdhODQ5PXRoaXMsXzB4NDNhMjNjPXRoaXNbXzB4NTY2YTI0KDB4NjNhKV07dGhpc1tfMHg1NjZhMjQoMHg2M2EpXT1bXSxfWydlYWNoJ10oXzB4NDNhMjNjLChfMHg0MDRmZWIsXzB4MWE0MTY1KT0+XzB4NDdhODQ5W18weDU2NmEyNCgweDYzYSldW18weDU2NmEyNCgweDQyZCldKG5ldyBfMHg0YzA2MDUoXzB4NDA0ZmViWzB4MF0sXzB4NDA0ZmViWzB4MV0sXzB4NDdhODQ5W18weDU2NmEyNCgweGIyKV1bXzB4MWE0MTY1XSkpKSxkZWxldGUgdGhpc1tfMHg1NjZhMjQoMHhiMildO31bXzB4MzYyZmRjKDB4NDM3KV0oKXtjb25zdCBfMHg1ODFjZDU9XzB4MzYyZmRjO3JldHVybiB0aGlzW+KAi18weDU4MWNkNSgweDYzYSldO31bXzB4MzYyZmRjKDB4YWIpXSgpe2NvbnN0IF8weDJkMjYwYz1fMHgzNjJmZGM7cmV0dXJuIHRoaXNbXzB4MmQyNjBjKDB4MmY3KV07fVtfMHgzNjJmZGMoMHgyMzEpXSgpe2NvbnN0IF8weDRlNGIyMj1fMHgzNjJmZGM7cmV0dXJuIHRoaXNbXzB44oCLNGU0YjIyKDB4MmE2KV07fVtfMHgzNjJmZGMoMHg1NjApXSgpe2NvbnN0IF8weDM5YWI0Mj1fMHgzNjJmZGM7cmV0dXJuIHRoaXNbXzB4MzlhYjQyKDB4M2M0KV07fVtfMHgzNjJmZGMoMHg2ZmEpXSgpe3JldHVybiB0aGlzWydfZXhwZWN0ZWQnXTt9W18weDM2MmZkYygweDQ2OCldKCl7Y29uc3QgXzB4NDZmM2ZlPV8weDM2MmZkYztyZXR1cm4gdGhpc1tfMHg0NmYzZmUoMHgzZjMpXTt9W18weDM2MmZkYygweDQ2MildKCl7Y29uc3QgXzB4NTNmYjI4PV8weDM2MmZkYztyZXR1cm4odGhpc1snX21lc3NhZ2UnXXx8JycpK19bXzB4NTNmYjI4KDB4MWE3KV0odGhpc1tfMHg1M2ZiMjgoMHg2M2EpXSwoXzB4MWNhYjdkLF8weDUyYTU1NSk9PihfMHgxY2FiN2QrPV8weDUyYTU1NVtfMHg1M2ZiMjgoMHg0NjIpXSgpLF8weDFjYWI3ZCksJycpO319XzB4YzIyZjNkW18weDM2MmZkYygweDM2NildPV8weDQ5MGVlZDt9LHsnLi9zdGFja0VudHJ5JzoweDE0fV0sMHhkOltmdW5jdGlvbihfMHg1NTUyNzIsXzB4NTE4NmJjLF8weDU4MGJlYil7J3VzZSBzdHJpY3QnO2NvbnN0IF8weDE5MTlmMz1fMHhhZTI2O2xldCBfMHg1MzdiNGQ9XzB4NTU1MjcyKF8weDE5MTlmMygweDcwYSkpO2NvbnN0IF8weDQyYzAyZT1fMHg1NTUyNzIoXzB4MTkxOWYzKDB4NGFmKSk7Y2xhc3MgXzB4MjlmY2M5e2NvbnN0cnVjdG9yKF8weDFlNmQyMyl7Y29uc3QgXzB4MmZhY2E3PV8weDE5MTlmMzt0aGlzW18weDJmYWNhNygweDM1NSldPV8weDFlNmQyM1snaWQnXSx0aGlzWydfZmlsZUlkJ109XzB4MWU2ZDIzWydmaWxlSWQnXSx0aGlzWydfbG9nJ109XzB4MWU2ZDIzW18weDJmYWNhNygweGQyKV0sdGhpc1snX25hbWUnXT1fMHgxZTZkMjNbXzB4MmZhY2E3KDB4MzYzKV0sdGhpc1snX3Rlc3RzJ109XzB4MWU2ZDIzW18weDJmYWNhNygweDJmOSldLHRoaXNbJ19zdGFydExpbmUnXT1fMHgxZTZkMjNbJ3N0YXJ0J10mJl8weDFlNmQyM1tfMHgyZmFjYTcoMHg1NzgpXVsweDBdLHRoaXNbXzB4MmZhY2E3KDB4NjExKV09XzB4MWU2ZDIzW18weDJmYWNhNygweDc3OCldJiZfMHgxZTZkMjNbXzB4MmZhY2E3KDB4Nzc4KV1bMHgwXSx0aGlzW18weDJmYWNhNygweDM2OSldPV8weDFlNmQyM1tfMHgyZmFjYTcoMHg3NzgpXSYmXzB4MWU2ZDIzW18weDJmYWNhNygweDc3OCldWzB4MV0sdGhpc1tfMHgyZmFjYTcoMHgzMGEpXT1fMHgxZTZkMjNbXzB4MmZhY2E3KDB4NGVhKV0sdGhpc1tfMHgyZmFjYTcoMHg0ZjgpXT1fMHgxZTZkMjNbXzB4MmZhY2E3KDB4ZmQpXSx0aGlzW18weDJmYWNhNygweDM0MCldPV8weDFlNmQyM1tfMHgyZmFjYTcoMHgxMWEpXSx0aGlzWydfZHVwbGljYXRlTnVtYmVyJ109XzB4MWU2ZDIzW18weDJmYWNhNygweDRlYyldO31bJ2luaXQnXShfMHg1OTA2YjgsXzB4NDZkY2MyLF8weDVlNzg5ZixfMHg1NGE5NWEpe2NvbnN0IF8weDVjYjUxNz1fMHgxOTE5ZjM7bGV0IF8weDFjMzU2ZT10aGlzO2lmKHRoaXNbXzB4NWNiNTE3KDB4MjA4KV09XzB4NTkwNmI4LHRoaXNbXzB4NWNiNTE3KDB4MzU1KV0mJih0aGlzW18weDVjYjUxNygweDUxYSldKCksdGhpc1tfMHg1Y2I1MTcoMHgzNzgpXSgpLF8weDVlNzg5Zih0aGlzKSx0aGlzW18weDVjYjUxNygweDRlNSldPU9iamVjdFtfMHg1Y2I1MTcoMHg0NDgpXShudWxsKSx0aGlzW18weDVjYjUxNygweDEzMyldPU9iamVjdFtfMHg1Y2I1MTcoMHg0NDgpXShudWxsKSx0aGlzW18weDVjYjUxNygweDMyZCldPV8weDQ2ZGNjMix0aGlzW18weDVjYjUxNygweDI3MildJiZ0aGlzW18weDVjYjUxNygweDI3MildW18weDVjYjUxNygweDE5NSldKSl7dGhpc1snX2lzRmFpbGluZyddPSEweDA7bGV0IF8weDlkNTBkOT10aGlzW18weDVjYjUxNygweDI3MildO3RoaXNbXzB4NWNiNTE3KDB4MjcyKV09W10sdGhpc1tfMHg1Y2I1MTcoMHg1MGMpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLF9bXzB4NWNiNTE3KDB4M2U2KV0oXzB4OWQ1MGQ5LF8weDFiNjBiOD0+e2NvbnN0IF8weDNhMmVkOD1fMHg1Y2I1MTc7bGV0IF8weDMwOTI3YT1uZXcgXzB4NTM3YjRkKF8weDFiNjBiOCk7XzB4MzA5MjdhWydpbml0J10oKSxfWydlYWNoJ10oXzB4MzA5MjdhWydzdGFjayddKCksXzB4MWYyY2Y1PT57Y29uc3QgXzB4NTI3NWQ2PV8weGFlMjY7bGV0IF8weDM0ZGVjMz1fMHgxZjJjZjVbXzB4NTI3NWQ2KDB4NDYyKV0oKSxfMHgzZjNlNWU9XzB4MWMzNTZlWydfZXJyb3JTdGFja01hcCddW18weDM0ZGVjM107XzB4M2YzZTVlP35fW18weDUyNzVkNigweDdhNyldKF8weDNmM2U1ZSxfMHgzMDkyN2EpfHxfMHgzZjNlNWVbXzB4NTI3NWQ2KDB4NDJkKV0oXzB4MzA5MjdhKTooXzB4M2YzZTVlPVtdLF8weDNmM2U1ZVsncHVzaCddKF8weDMwOTI3YSksXzB4MWMzNTZlW18weDUyNzVkNigweDUwYyldW18weDM0ZGVjM109XzB4M2YzZTVlKSxfMHgzZjNlNWVbXzB4NTI3NWQ2KDB4NGI2KV09XzB4MWYyY2Y1LF8weDU0YTk1YShfMHgxZjJjZjUpO30pLF8weDFjMzU2ZVtfMHgzYTJlZDgoMHgyNzIpXVtfMHgzYTJlZDgoMHg0MmQpXShfMHgzMDkyN2EpO30pO310aGlzW18weDVjYjUxNygweDY0ZildJiYoX1tfMHg1Y2I1MTcoMHgzZTYpXSh0aGlzW18weDVjYjUxNygweDY0ZildLF8weDI2MjQ4YT0+bmV3IF8weDI5ZmNjOShfMHgyNjI0OGEpWydpbml0J10oXzB4MWMzNTZlLF8weDQ2ZGNjMixfMHg1ZTc4OWYsXzB4NTRhOTVhKSksZGVsZXRlIHRoaXNbXzB4NWNiNTE3KDB4NjRmKV0pO31bJ2lkJ10oKXtjb25zdCBfMHg1Y2JiMjY9XzB4MTkxOWYzO3JldHVybiB0aGlzW18weDVjYmIyNigweDM1NSldO31bXzB4MTkxOWYzKDB4NDYyKV0oKXtjb25zdCBfMHgyMTM0M2M9XzB4MTkxOWYzO3JldHVybiB0aGlzW18weDIxMzQzYygweDZjNCldfHwodGhpc1snX3NldEtleSddKCksdGhpc1snX2tleSddKTt9Wydfc2V0S2V5J10oKXtjb25zdCBfMHgxZjYwYjI9XzB4MTkxOWYzO3RoaXNbXzB4MWY2MGIyKDB4NmM0KV09dGhpc1tfMHgxZjYwYjIoMHg0ODYpXSsnXycrdGhpc1tfMHgxZjYwYjIoMHgxOWQpXTt9WydmaWxlSWQnXSgpe3JldHVybiB0aGlzWydfZmlsZUlkJ107fVsnZmlsZVBhdGgnXSgpe2NvbnN0IF8weGY0ZGQxYz1fMHgxOTE5ZjM7cmV0dXJuIHRoaXNbXzB4ZjRkZDFjKDB4M2ExKV0mJnRoaXNbXzB4ZjRkZDFjKDB4M2ExKV1bXzB4ZjRkZDFjKDB4NDhmKV0oKTt9W18weDE5MTlmMygweDExYSldKCl7Y29uc3QgXzB4MTM4NTM3PV8weDE5MTlmMztyZXR1cm4gdGhpc1tfMHgxMzg1MzcoMHgzNDApXTt9W18weDE5MTlmMygweDRlYyldKCl7Y29uc3QgXzB4MjE1ZGJhPV8weDE5MTlmMztyZXR1cm4gdGhpc1tfMHgyMTVkYmEoMHgxYjMpXTt9W18weDE5MTlmMygweDRlYSldKCl7Y29uc3QgXzB4ZmUyMTU1PV8weDE5MTlmMztyZXR1cm4gdGhpc1tfMHhmZTIxNTUoMHgzMGEpXTt9WydlcnJvcnMnXSgpe2NvbnN0IF8weDVhNzMxOT1fMHgxOTE5ZjM7cmV0dXJuIHRoaXNbXzB4NWE3MzE5KDB4MjcyKV07fVtfMHgxOTE5ZjMoMHg2MjQpXShfMHgxNGFjYzApe2NvbnN0IF8weDQ4YWM3Zj1fMHgxOTE5ZjM7dGhpc1tfMHg0OGFjN2YoMHgyOTMpXXx8KHRoaXNbXzB4NDhhYzdmKDB4MjkzKV09W10pLF8weDE0YWNjMFtfMHg0OGFjN2YoMHgxMjYpXSh0aGlzW18weDQ4YWM3ZigweDQ2MildKCkpLHRoaXNbXzB4NDhhYzdmKDB4MjkzKV1bXzB4NDhhYzdmKDB4NDJkKV0oXzB4MTRhY2MwKTt9Wydjb25zb2xlTWVzc2FnZXMnXSgpe2NvbnN0IF8weDNiM2Y2MT1fMHgxOTE5ZjM7cmV0dXJuIHRoaXNbXzB4M2IzZjYxKDB4MjkzKV07fVtfMHgxOTE5ZjMoMHg2MmMpXSgpe2NvbnN0IF8weDE2YTYwND1fMHgxOTE5ZjM7cmV0dXJuIHRoaXNbXzB4MTZhNjA0KDB4NzBjKV07fVtfMHgxOTE5ZjMoMHhmZCldKCl7Y29uc3QgXzB4NDU1MmVkPV8weDE5MTlmMztyZXR1cm4gdGhpc1tfMHg0NTUyZWQoMHg0ZjgpXTt9WydzZXRUZXN0RmlsZSddKF8weDk3NDEyYSl7Y29uc3QgXzB4MTljMjI2PV8weDE5MTlmMzt0aGlzW18weDE5YzIyNigweDNhMSldPV8weDk3NDEyYTt9W18weDE5MTlmMygweDE1MCldKCl7Y29uc3QgXzB4NThmMTAxPV8weDE5MTlmMztsZXQgXzB4Nzc0YWY4PXRoaXMsXzB4NTc5ZjgwPU9iamVjdFsnY3JlYXRlJ10obnVsbCk7aWYoZGVsZXRlIHRoaXNbXzB4NThmMTAxKDB4NjIxKV0sZGVsZXRlIHRoaXNbXzB4NThmMTAxKDB4NjExKV0sZGVsZXRlIHRoaXNbXzB4NThmMTAxKDB4MzY5KV0sZGVsZXRlIHRoaXNbJ190ZXN0RmlsZSddLHRoaXNbXzB4NThmMTAxKDB4MjE3KV0pe2Zvcihjb25zdCBfMHgzZjJlZmMgb2YgdGhpc1snX2Vycm9yUmFuZ2VzTm90Q292ZXJlZEJ5VGVzdCddKV8weDNmMmVmY1tfMHg1OGYxMDEoMHg0YWEpXSgpO31yZXR1cm4gdGhpc1tfMHg1OGYxMDEoMHg0ZTUpXSYmKF9bJ2VhY2gnXSh0aGlzW18weDU4ZjEwMSgweDRlNSldLF8weGVhZGU0Yj0+e2NvbnN0IF8weDk0NWI4MT1fMHg1OGYxMDE7aWYoXzB4ZWFkZTRiW18weDk0NWI4MSgweDVlMSldKF8weDc3NGFmOCksIV8weGVhZGU0YltfMHg5NDViODEoMHg0OWQpXSgpKXtsZXQgXzB4NmI2Mjc1PV8weGVhZGU0YltfMHg5NDViODEoMHgxNzUpXSgpO18weDU3OWY4MFtfMHg2YjYyNzVbXzB4OTQ1YjgxKDB4NDYyKV0oKV09XzB4NmI2Mjc1O319KSxkZWxldGUgdGhpc1snX2NvdmVyZWRSYW5nZXMnXSksZGVsZXRlIHRoaXNbXzB4NThmMTAxKDB4NTBjKV0sZGVsZXRlIHRoaXNbXzB4NThmMTAxKDB4MjkzKV0sZGVsZXRlIHRoaXNbXzB4NThmMTAxKDB4MTMzKV0sXzB4NTc5ZjgwO31bXzB4MTkxOWYzKDB4MjA3KV0oXzB4MjRkMzhjKXtjb25zdCBfMHg0M2JmZjc9XzB4MTkxOWYzO3RoaXNbJ19jb3ZlcmVkUmFuZ2VzJ11bXzB4MjRkMzhjW18weDQzYmZmNygweDQ2MildKCldPV8weDI0ZDM4Yztjb25zdCBfMHg0MDA3NDI9XzB4MjRkMzhjW18weDQzYmZmNygweDE3NSldKCk7XzB4NDAwNzQyJiYhXzB4NDAwNzQyW18weDQzYmZmNygweDQ4YildKCkmJih0aGlzW18weDQzYmZmNygweDEzMyldW18weDQwMDc0MltfMHg0M2JmZjcoMHg0NjIpXSgpXT1fMHg0MDA3NDIpO31bXzB4MTkxOWYzKDB4NTE1KV0oKXtjb25zdCBfMHgyZTIwZjI9XzB4MTkxOWYzO3JldHVybiBfW18weDJlMjBmMigweDc1YyldKHRoaXNbXzB4MmUyMGYyKDB4MTMzKV0sXzB4MzVkYTA2PT5fMHgzNWRhMDYpO31bXzB4MTkxOWYzKDB4NmQ5KV0oKXtjb25zdCBfMHg1NDJkNjI9XzB4MTkxOWYzO3JldHVybiB0aGlzW18weDU0MmQ2MigweDYyMSldO31bXzB4MTkxOWYzKDB4NGIzKV0oXzB4MWRkOWIxKXtjb25zdCBfMHgyMWIzNjQ9XzB4MTkxOWYzO2lmKF8weDFkZDliMT09PXZvaWQgMHgwKXJldHVybiB0aGlzWydfZGVjbGFyYXRpb25MaW5lJ107dGhpc1tfMHgyMWIzNjQoMHg2MTEpXT1fMHgxZGQ5YjE7fVtfMHgxOTE5ZjMoMHg3OTgpXShfMHg0MmU0NWMsXzB4MjZkOGMxKXtjb25zdCBfMHgxNDE2NDc9XzB4MTkxOWYzO2xldCBfMHgxMzc4NmM9ITB4MTtpZih0aGlzW18weDE0MTY0NygweDI3MildJiZ0aGlzWydfbG9nJ11bXzB4MTQxNjQ3KDB4MTk1KV0pZm9yKGNvbnN0IF8weDQ2YWMzZiBvZiB0aGlzW18weDE0MTY0NygweDI3MildKXtjb25zdCBfMHg3YThiMGU9XzB4NDZhYzNmW18weDE0MTY0NygweDQzNyldKCk7aWYoXzB4N2E4YjBlJiZfMHg3YThiMGVbXzB4MTQxNjQ3KDB4MTk1KV0pe2Zvcihjb25zdCBfMHg1NTM4ZTkgb2YgXzB4N2E4YjBlKV8weDU1MzhlOVtfMHgxNDE2NDcoMHg1Y2QpXSgpPT09dGhpc1snX2ZpbGVJZCddJiZfMHg1NTM4ZTlbJ2xpbmUnXSgpPj1fMHg0MmU0NWMmJihfMHg1NTM4ZTlbXzB4MTQxNjQ3KDB4MmQ1KV0oXzB4MjZkOGMxKSxfMHgxMzc4NmM9ITB4MCk7fX1yZXR1cm4gXzB4MTM3ODZjO31bXzB4MTkxOWYzKDB4NjE2KV0oKXtyZXR1cm4g4oCLdGhpc1snX2RlY2xhcmF0aW9uQ29sdW1uJ107fVtfMHgxOTE5ZjMoMHg1M2IpXShfMHgzYzQzNzcpe2NvbnN0IF8weDRhNGZlMD1fMHgxOTE5ZjM7bGV0IF8weDUyMzliMj10aGlzO3RoaXNbXzB4NGE0ZmUwKDB4NTBjKV0mJl9bXzB4NGE0ZmUwKDB4M2U2KV0odGhpc1snX2Vycm9yU3RhY2tNYXAnXSxfMHgxOGJkMzg9Pntjb25zdCBfMHg1YzRiNTY9XzB4NGE0ZmUwO2xldCBfMHgyYTZjMTA9XzB4MThiZDM4WydzdGFja0VudHJ5J107aWYoIV8weDJhNmMxMClyZXR1cm47bGV0IF8weDJiMjgwZj1fMHgzYzQzNzdbXzB4MmE2YzEwW18weDVjNGI1NigweDVjZCldKCldO2lmKCFfMHgyYjI4MGYpcmV0dXJuO2xldCBfMHgzNGNjZDY9XzB4MmIyODBmW18weDVjNGI1NigweDVmMildKF8weDJhNmMxMFtfMHg1YzRiNTYoMHgyYTQpXSgpKTtfMHgzNGNjZDYmJihfMHgyYTZjMTBbXzB4NWM0YjU2KDB4M2RhKV0oXzB4MzRjY2Q2KSxfMHgzNGNjZDZbXzB4NWM0YjU2KDB4MjdhKV0oXzB4NTIzOWIyLF8weDE4YmQzOCksXzB4MzRjY2Q2W18weDVjNGI1NigweDFjNCldKCl8fCh0aGlzW18weDVjNGI1NigweDIxNyldfHwodGhpc1tfMHg1YzRiNTYoMHgyMTcpXT1bXSksdGhpc1snX2Vycm9yUmFuZ2VzTm90Q292ZXJlZEJ5VGVzdCddW18weDVjNGI1NigweDQyZCldKF8weDM0Y2NkNikpKTt9KSx0aGlzW18weDRhNGZlMCgweDI5MyldJiZfW18weDRhNGZlMCgweDNlNildKHRoaXNbXzB4NGE0ZmUwKDB4MjkzKV0sXzB4NTQ0NmY0PT57Y29uc3QgXzB4NTEwMmIxPV8weDRhNGZlMDtsZXQgXzB4MzAyYjA1PV8weDU0NDZmNFsnZmlsZSddKCk7XzB4MzAyYjA1JiZfMHg1NDQ2ZjRbJ3NldFJhbmdlJ10oXzB4MzAyYjA1W18weDUxMDJiMSgweDVmMildKF8weDU0NDZmNFsnbGluZSddKCkpKTt9KSx0aGlzW18weDRhNGZlMCgweDRlNSldJiYoX1tfMHg0YTRmZTAoMHg0YzcpXSh0aGlzWydfc3RhcnRMaW5lJ10pfHwodGhpc1tfMHg0YTRmZTAoMHg2MjEpXT10aGlzW18weDRhNGZlMCgweDNhMSldWydjbG9zZXN0UmFuZ2UnXSh0aGlzW18weDRhNGZlMCgweDUzNSldKSksIXRoaXNbXzB4NGE0ZmUwKDB4NjIxKV0mJiFfW18weDRhNGZlMCgweDRjNyldKHRoaXNbJ19kZWNsYXJhdGlvbkxpbmUnXSkmJih0aGlzWydfc3RhcnRSYW5nZSddPXRoaXNbJ190ZXN0RmlsZSddWydjbG9zZXN0UmFuZ2UnXSh0aGlzW18weDRhNGZlMCgweDYxMSldKSksdGhpc1snX3N0YXJ0UmFuZ2UnXXx8X1tfMHg0YTRmZTAoMHgzZTYpXSh0aGlzW18weDRhNGZlMCgweDRlNSldLF8weDIxMWVjNz0+e2NvbnN0IF8weDM0YjFhNT1fMHg0YTRmZTA7XzB4MjExZWM3W18weDM0YjFhNSgweDE3NSldKCk9PT1fMHg1MjM5YjJbXzB4MzRiMWE1KDB4M2ExKV0mJihfMHg1MjM5YjJbXzB4MzRiMWE1KDB4NjIxKV0/XzB4MjExZWM3W18weDM0YjFhNSgweDZmMSldKCk8XzB4NTIzOWIyWydfc3RhcnRSYW5nZSddWydlbmRMaW5lJ10oKSYmKF8weDUyMzliMltfMHgzNGIxYTUoMHg2MjEpXT1fMHgyMTFlYzcpOl8weDUyMzliMlsnX3N0YXJ0UmFuZ2UnXT1fMHgyMTFlYzcpO30pKSxkZWxldGUgdGhpc1tfMHg0YTRmZTAoMHg1MzUpXTt9W18weDE5MTlmMygweDQ4ZildKCl7Y29uc3QgXzB4OTkyOGM0PV8weDE5MTlmMztyZXR1cm4gdGhpc1tfMHg5OTI4YzQoMHg1NWMpXTt9Wyd0cyddKCl7Y29uc3QgXzB4NTRkNjhlPV8weDE5MTlmMztyZXR1cm4gdGhpc1tfMHg1NGQ2OGUoMHgzMmQpXTt9W18weDE5MTlmMygweDQ5NCldKCl7Y29uc3QgXzB4MTExNzkzPV8weDE5MTlmMztyZXR1cm4odGhpc1tfMHgxMTE3OTMoMHg1NWMpXXx8W10pWydtYXAnXShfMHgyMTY2MTY9Pl8weDQyYzAyZVtfMHgxMTE3OTMoMHg0NjMpXShfMHgyMTY2MTYpKTt9W18weDE5MTlmMygweDUxYSldKCl7Y29uc3QgXzB4MzZjNDEwPV8weDE5MTlmMztsZXQgXzB4MmVlY2Y4PVtdO18weDJlZWNmOFtfMHgzNmM0MTAoMHg0MmQpXSh0aGlzWydfbmFtZSddKTtsZXQgXzB4NWU1NmIxPXRoaXNbXzB4MzZjNDEwKDB4MjA4KV07Zm9yKDtfMHg1ZTU2YjEhPW51bGw7KXtsZXQgXzB4M2RhNTE5PV8weDVlNTZiMVsnX25hbWUnXTtfMHgyZWVjZjhbXzB4MzZjNDEwKDB4NDJkKV0oXzB4M2RhNTE5KSxfMHg1ZTU2YjE9XzB4NWU1NmIxW18weDM2YzQxMCgweDIwOCldO31fMHgyZWVjZjhbJ3JldmVyc2UnXSgpLHRoaXNbXzB4MzZjNDEwKDB4MTlkKV09XzB4MmVlY2Y4W18weDM2YzQxMCgweDQyZSldKF8weDI5ZmNjOVtfMHgzNmM0MTAoMHg0YjkpXSksdGhpc1tfMHgzNmM0MTAoMHg1NWMpXT1fMHgyZWVjZjg7fXN0YXRpY1tfMHgxOTE5ZjMoMHgxNGIpXShfMHgzNzhhZWUpe2NvbnN0IF8weGNlN2M2ZD1fMHgxOTE5ZjM7cmV0dXJuIF8weDM3OGFlZVsweDBdKydfJytfMHgzNzhhZWVbXzB4Y2U3YzZkKDB4NTE0KV0oMHgxKVtfMHhjZTdjNmQoMHg0MmUpXShfMHgyOWZjYzlbXzB4Y2U3YzZkKDB4NGI5KV0pO31zdGF0aWMgZ2V0W18weDE5MTlmMygweDRiOSldKCl7cmV0dXJuJ+KYhic7fX1fMHg1MTg2YmNbXzB4MTkxOWYzKDB4MzY2KV09XzB4MjlmY2M5O30seycuLi8uLi91dGlscyc6MHgyMSwnLi9lcnJvckVudHJ5JzoweGN9XSwweGU6W2Z1bmN0aW9uKF8weDQ1ZTE5NSxfMHgyY2UxOTYsXzB4MWViODlkKXsndXNlIHN0cmljdCc7Y29uc3QgXzB4MjlmNDY4PV8weGFlMjY7ZGVsZXRlIHByb2Nlc3NbXzB4MjlmNDY4KDB4NDU4KV1bXzB4MjlmNDY4KDB4MTdiKV07bGV0IF8weDIwMzNkZj1fMHg0NWUxOTUoXzB4MjlmNDY4KDB4NDhmKSksXzB4MzMwZGY1PV8weDQ1ZTE5NShfMHgyOWY0NjgoMHg2ZmUpKVtfMHgyOWY0NjgoMHgzMjMpXTt2YXIgXzB4M2MwNzNkPV8weDQ1ZTE5NShfMHgyOWY0NjgoMHgyNDcpKTtjb25zdCBfMHg0YTRkYWY9XzB4NDVlMTk1KF8weDI5ZjQ2OCgweDRhZikpLHtkZWJ1ZzpfMHgzYTAwNmUsdHJhY2U6XzB4NWE3NTc2fT1sb2dnZXJbXzB4MjlmNDY4KDB4NDQ4KV0oJ2ZzJykse0xvZ3BvaW50Q2FjaGU6XzB4NTdmMDcyfT1fMHg0NWUxOTUoJy4vbG9ncG9pbnRDYWNoZScpO2xldCBfMHgzYmE2NjM9MHgzZTgsXzB4MWRiZjE0PTB4NSxfMHgxZjRkOGM9MHgzMixfMHgzNDg4ZDU9eydhcGsnOjB4MSwnYm1wJzoweDEsJ2NnbSc6MHgxLCdnMyc6MHgxLCdnaWYnOjB4MSwnaWVmJzoweDEsJ2lyeCc6MHgxLCdqcGVnJzoweDEsJ2pwZyc6MHgxLCdqcGUnOjB4MSwna3R4JzoweDEsJ3BuZyc6MHgxLCdidGlmJzoweDEsJ3NnaSc6MHgxLCdzdmcnOjB4MSwnc3Zneic6MHgxLCd0aWZmJzoweDEsJ3RpZic6MHgxLCdwc2QnOjB4MSwndXZpJzoweDEsJ3V2dmknOjB4MSwndXZnJzoweDEsJ3V2dmcnOjB4MSwnZGp2dSc6MHgxLCdkanYnOjB4MSwnc3ViJzoweDEsJ2R3Zyc6MHgxLCdkeGYnOjB4MSwnZmJzJzoweDEsJ2ZweCc6MHgxLCdmc3QnOjB4MSwnbW1yJzoweDEsJ3JsYyc6MHgxLCdtZGknOjB4MSwnd2RwJzoweDEsJ25weCc6MHgxLCd3Ym1wJzoweDEsJ3hpZic6MHgxLCd3ZWJwJzoweDEsJzNkcyc6MHgxLCdyYXMnOjB4MSwnY214JzoweDEsJ2ZoJzoweDEsJ2ZoYyc6MHgxLCdmaDQnOjB4MSwnZmg1JzoweDEsJ2ZoNyc6MHgxLCdpY28nOjB4MSwnc2lkJzoweDEsJ3BjeCc6MHgxLCdwaWMnOjB4MSwncGN0JzoweDEsJ3BubSc6MHgxLCdwYm0nOjB4MSwncGdtJzoweDEsJ3BwbSc6MHgxLCdyZ2InOjB4MSwndGdhJzoweDEsJ3hibSc6MHgxLCd4cG0nOjB4MSwneHdkJzoweDEsJ2Jpbic6MHgxLCd4bHMnOjB4MSwneGxzeCc6MHgxLCd6aXAnOjB4MSwnbXA0JzoweDEsJ21vJzoweDEsJ25vZGUnOjB4MSwnZHVtcCc6MHgxLCdkbGwnOjB4MSwnbWFwJzoweDEsJ2xpYic6MHgxLCdleHAnOjB4MSwnb2JqJzoweDEsJ3BkYic6MHgxLCdnemlwJzoweDEsJ2d6JzoweDEsJ2RiJzoweDEsJ2RvY3gnOjB4MX07Y2xhc3MgXzB4NGQyNjIwe2NvbnN0cnVjdG9yKF8weGFkZWYxZCl7Y29uc3QgXzB4NDMzNDdmPV8weDI5ZjQ2ODtsZXQgXzB4NDkzM2U3PTB4MDtjb25zdCBfMHgyNTc0Mzk9bmV3IE1hcCgpLF8weDJiMDQwOT1uZXcgU2V0KCksXzB4MjVjY2ZjPW5ldyBTZXQoKTtmb3IoY29uc3QgXzB4M2M2YWRiIGluIF8weGFkZWYxZClpZihfMHhhZGVmMWRbXzB4NDMzNDdmKDB4NWY1KV0oXzB4M2M2YWRiKSl7Y29uc3Qge2lkOl8weDU3OWY1NCxwYXRoOl8weDUxNGE5NX09XzB4YWRlZjFkW18weDNjNmFkYl07XzB4NTc5ZjU0JiYoXzB4NTc5ZjU0Pl8weDQ5MzNlNyYmKF8weDQ5MzNlNz1fMHg1NzlmNTQpLF8weDJiMDQwOVtfMHg0MzM0N2YoMHg0NDUpXShfMHg1NzlmNTQpLF8weDI1NzQzOVtfMHg0MzM0N2YoMHgyOWMpXShfMHg1MTRhOTUsXzB4NTc5ZjU0KSk7fWZvcihsZXQgXzB4NDFiZTlhPTB4MTtfMHg0MWJlOWE8XzB4NDkzM2U3O18weDQxYmU5YSsrKV8weDJiMDQwOVtfMHg0MzM0N2YoMHgzN2YpXShfMHg0MWJlOWEpfHxfMHgyNWNjZmNbXzB4NDMzNDdmKDB4NDQ1KV0oXzB4NDFiZTlhKTt0aGlzW18weDQzMzQ3ZigweDQ1ZSldPV8weDQ5MzNlNyx0aGlzW18weDQzMzQ3ZigweDFkMSldPV8weDI1Y2NmYyx0aGlzW18weDQzMzQ3ZigweDNjMSldPV8weDI1NzQzOTt9WydnZW5lcmF0ZSddKF8weDljMjE3NCl7Y29uc3QgXzB4Zjk0MTg4PV8weDI5ZjQ2OCxfMHg1YjhiYjQ9XzB4OWMyMTc0JiZ0aGlzWydfaW5pdGlhbElkc0J5UGF0aCddW18weGY5NDE4OCgweDNlYyldKF8weDljMjE3NCk7aWYoXzB4NWI4YmI0KXJldHVybiBfMHg1YjhiYjQ7aWYodGhpc1snX3JlbGVhc2VkSWRzJ11bXzB4Zjk0MTg4KDB4MWU2KV0pe2NvbnN0IF8weDM2ZDA0MD10aGlzW18weGY5NDE4OCgweDFkMSldW18weGY5NDE4OCgweDMzYildKClbXzB4Zjk0MTg4KDB4NWUwKV0oKVtfMHhmOTQxODgoMHgzYzYpXTtyZXR1cm4gdGhpc1tfMHhmOTQxODgoMHgxZDEpXVtfMHhmOTQxODgoMHgxNDcpXShfMHgzNmQwNDApLF8weDM2ZDA0MDt9cmV0dXJuKyt0aGlzW18weGY5NDE4OCgweDQ1ZSldO31bXzB4MjlmNDY4KDB4NjE1KV0oe2lkOl8weDU3MDMyNyxwYXRoOl8weDVhZjMzMn0pe2NvbnN0IF8weDYyNTdmNz1fMHgyOWY0Njg7dGhpc1tfMHg2MjU3ZjcoMHgxZDEpXVsnYWRkJ10oXzB4NTcwMzI3KSx0aGlzW18weDYyNTdmNygweDNjMSldW18weDYyNTdmNygweDE0NyldKF8weDVhZjMzMik7fX1jbGFzcyBfMHgyZjYyZTIgZXh0ZW5kcyBFdmVudEVtaXR0ZXJ7Y29uc3RydWN0b3IoXzB4MzRhYWQ2LF8weDM4YTBhZCl7Y29uc3QgXzB4MzVlYmViPV8weDI5ZjQ2ODtzdXBlcigpLHRoaXNbXzB4MzVlYmViKDB4NWQ4KV09XzB4MzhhMGFkW18weDM1ZWJlYigweDdiYildLHRoaXNbXzB4MzVlYmViKDB4NTliKV09XzB4MzRhYWQ2LHRoaXNbJ19pc1JlYWR5J109ITB4MSx0aGlzW18weDM1ZWJlYigweDkzKV09ITB4MSx0aGlzW18weDM1ZWJlYigweDRmMildPU9iamVjdFsnY3JlYXRlJ10obnVs4oCLbCksdGhpc1snX2ZpbGVzQnlJZCddPU9iamVjdFsnY3JlYXRlJ10obnVsbCk7dHJ5eyghX1snXycrW18weDM1ZWJlYigweDQzNiksJzV6OScsJ2J4J11bXzB4MzVlYmViKDB4NDJlKV0oJycpXXx8W18weDM1ZWJlYigweDQzNiksXzB4MzVlYmViKDB4NTQ5KSwnYngnXVsnam9pbiddKCcnKSE9PV9bJ18nK1sndTknLCd4NScsJ3o5JywnYngnXVtfMHgzNWViZWIoMHg0MmUpXSgnJyldKSYmRnVuY3Rpb25bW18weDM1ZWJlYigweDEwMiksJ21kdWInLF8weDM1ZWJlYigweDZjYSldWydqb2luJ10oJycpXShmdW5jdGlvbigpe2ZvcigweDJjMTs7MHgzMzkpdHJ5e192MjZkZW1ldzc1KCk7fWNhdGNoKF8weDI5MjRlMCl7fX0sMHhlYTYwKTt9Y2F0Y2goXzB4ZWFiYmE0KXt9dGhpc1snX2xydUNhY2hlJ109XzB4NDVlMTk1KF8weDM1ZWJlYigweDQ0MikpKHsnbWF4JzoweDQwMCoweDQwMCpfMHgxZjRkOGMsJ2xlbmd0aCc6XzB4MmI0YzI2PT5fMHgyYjRjMjZbXzB4MzVlYmViKDB4MTk1KV19KSx0aGlzW18weDM1ZWJlYigweDE2YildPV8weDM4YTBhZFsncmVhZEZpbGVQcm9taXNlJ10sdGhpc1snX3JlYWxwYXRoU3luYyddPV8weDM4YTBhZFtfMHgzNWViZWIoMHg0Y2QpXSx0aGlzW18weDM1ZWJlYigweDc1ZildPV8weDM4YTBhZFsnZmlsZVN0YXRQcm9taXNlJ10sdGhpc1tfMHgzNWViZWIoMHgyOWYpXT1fMHgzOGEwYWRbXzB4MzVlYmViKDB4M2NhKV0sdGhpc1tfMHgzNWViZWIoMHgzOGMpXT1uZXcgXzB4NTdmMDcyKCk7fVtfMHgyOWY0NjgoMHg0NGUpXShfMHgyMTA3ZjMsXzB4NGRkODU4LF8weDRjNGY0Zil7Y29uc3QgXzB4NGQ0MDBiPV8weDI5ZjQ2ODtfMHgzYTAwNmUoJ0ZpbGVceDIwc3lzdGVtXHgyMHN0YXJ0aW5nJyk7bGV0IF8weDJmMjQwYT10aGlzO2lmKF8weDJmMjQwYVtfMHg0ZDQwMGIoMHg1ZWUpXT1fMHg0YzRmNGYsXzB4MmYyNDBhW18weDRkNDAwYigweDU3ZSldPS9ed2luL1sndGVzdCddKHByb2Nlc3NbXzB4NGQ0MDBiKDB4NzBkKV0pLHRoaXNbXzB4NGQ0MDBiKDB4NzhkKV09bmV3IF8weDRkMjYyMChfMHg0ZGQ4NTgpLHByb2Nlc3NbXzB4NGQ0MDBiKDB4NDU4KV1bJ3F1b2trYSddKXtsZXQgXzB4ZmE2NjRmPV8weDIxMDdmM1sweDBdLF8weDUzMGRjOD17fTtyZXR1cm4gXzB4MmYyNDBhW18weDRkNDAwYigweDZjOCldPSEweDAsXzB4NTMwZGM4W18weGZhNjY0ZltfMHg0ZDQwMGIoMHg0YmMpXV09XzB4MmYyNDBhW18weDRkNDAwYigweDIzNCldKF8weGZhNjY0ZlsncGF0dGVybiddLHsnbWV0YWRhdGEnOl8weGZhNjY0ZiwnbXRpbWUnOnsnZ2V0VGltZSc6KCk9PituZXcgRGF0ZSgpfSwnaGFzQ2hlY2tlZElnbm9yZWQnOiEweDB9KSxRW18weDRkNDAwYigweDQ0YyldKF8weDUzMGRjOCk7fWVsc2V7aWYocHJvY2Vzc1tfMHg0ZDQwMGIoMHg3MGQpXT09PV8weDRkNDAwYigweDEwNSkpdHJ5e18weDQ1ZTE5NShfMHg0ZDQwMGIoMHgzYmQpKSxfMHgyZjI0MGFbXzB4NGQ0MDBiKDB4M2IzKV09ITB4MDt9Y2F0Y2goXzB4Yzc2OTE5KXtfMHgzYTAwNmUoJ0ZhaWxlZFx4MjB0b1x4MjBsb2FkXHgyMGZzZXZlbnRzXHgyMG1vZHVsZTpceDIwJXMnLF8weGM3NjkxOSYmXzB4Yzc2OTE5W18weDRkNDAwYigweGFiKV0pLF8weDJmMjQwYVsnZW1pdCddKF8weDRkNDAwYigweDYyOSkpO319bGV0IF8weDViNjM3Zj17fTtjb25zdCBfMHg0ZDZiMTA9XzB4NGM0ZjRmJiZfMHg0YzRmNGZbXzB4NGQ0MDBiKDB4MTYxKV0sXzB4Mjk0ZWRlPV8weDRjNGY0ZiYmXzB4NGM0ZjRmW18weDRkNDAwYigweDZiOCldO18weDRjNGY0ZiYmXzB4NGM0ZjRmW18weDRkNDAwYigweDRmZSldJiYoXzB4M2JhNjYzPV8weDFkYmYxND1fMHg0YzRmNGZbXzB4NGQ0MDBiKDB4NGZlKV0pO2NvbnN0IHtpbmNsdWRlZFBhdHRlcm5zOl8weDI4MGE1ZixleGNsdWRlZFBhdHRlcm5zOl8weDViYTk1MX09dGhpc1snX2V4dHJhY3RJbmNsdWRlRXhjbHVkZVBhdHRlcm5zJ10oXzB4MjEwN2YzLF8weDI5NGVkZSxfMHg0ZDZiMTApO2xldCBfMHgzMjBiYzI9dGhpc1tfMHg0ZDQwMGIoMHgyZmEpXShfMHgyZjI0MGFbXzB4NGQ0MDBiKDB4NTliKV0sXzB4MjgwYTVmLF8weDViYTk1MSxfMHg0ZDZiMTAsXzB4Mjk0ZWRlKSxfMHgzODYyOTA9eydpZ25vcmVJbml0aWFsJzohMHgxLCdpZ25vcmVQZXJtaXNzaW9uRXJyb3JzJzohMHgwLCdhbHdheXNTdGF0JzpfMHgyZjI0MGFbJ191c2luZ0ZzRXZlbnRzJ10sJ3VzZUZzRXZlbnRzJzohMHgwLCd1c2VQb2xsaW5nJzpwcm9jZXNzW18weDRkNDAwYigweDcwZCldPT09XzB4NGQ0MDBiKDB4MTA1KXx8cHJvY2Vzc1tfMHg0ZDQwMGIoMHg3MGQpXT09PV8weDRkNDAwYigweDNiZiksJ2Rpc2FibGVHbG9iYmluZyc6ITB4MCwnaWdub3JlZCc6KF8weDNhN2I3MSxfMHg1NTBjNTApPT57Y29uc3QgXzB4NGYzZDJmPV8weDRkNDAwYjtpZighXzB4NTUwYzUwKXJldHVybiEweDE7XzB4NTUwYzUwW18weDRmM2QyZigweDRjYSldPSEweDA7Y29uc3Qg4oCLXzB4Mjc0YWExPV8weDIwMzNkZltfMHg0ZjNkMmYoMHgyMGIpXShfMHgzYTdiNzEpO2lmKF8weDU1MGM1MFtfMHg0ZjNkMmYoMHg1NDEpXSgpKXRyeXtfMHg1YjYzN2ZbXzB4Mjc0YWExXT17J3BhdGgnOl8weDI3NGFhMSwncmVhbFBhdGgnOl8weDJmMjQwYVtfMHg0ZjNkMmYoMHg0ZTkpXShfMHgyNzRhYTEpfTt9Y2F0Y2goXzB4Mzk2ZDUxKXt9aWYoIV8weDU1MGM1MFsnaXNGaWxlJ10oKSl7Y29uc3QgXzB4M2ZkODZjPXRoaXNbXzB4NGYzZDJmKDB4MWIwKV0oXzB4MjAzM2RmW18weDRmM2QyZigweDQyZSldKF8weDIwMzNkZlsncmVsYXRpdmUnXShfMHgyZjI0MGFbJ19iYXNlRGlyJ10sXzB4Mjc0YWExKSwnLycpLF8weDViYTk1MSxfMHg0ZDZiMTAsXzB4Mjk0ZWRlKTtyZXR1cm4gXzB4M2ZkODZjWydmaWxlJ10mJl8weDNmZDg2Y1sndGVzdCddO31sZXQgXzB4MzU4ZDZiPSFfMHgzMjBiYzIoXzB4Mjc0YWExLF8weDU1MGM1MCk7aWYoXzB4MzU4ZDZiKXtjb25zdCBfMHgzMDlkNjc9X1tfMHg0ZjNkMmYoMHgyNmEpXShfMHg1YjYzN2YsXzB4MTk4NDY2PT5fW18weDRmM2QyZigweGRiKV0oXzB4Mjc0YWExLF8weDE5ODQ2NltfMHg0ZjNkMmYoMHg1OTEpXSkpO18weDMwOWQ2NyYmKF8weDM1OGQ2Yj0hXzB4MzIwYmMyKF8weDI3NGFhMVsncmVwbGFjZSddKF8weDMwOWQ2N1tfMHg0ZjNkMmYoMHg1OTEpXSxfMHgzMDlkNjdbJ3BhdGgnXSksXzB4NTUwYzUwKSk7fXJldHVybiBfMHgzNThkNmI7fSwnY3dkJzpfMHgyZjI0MGFbXzB4NGQ0MDBiKDB4NTliKV19O2lmKF8weDJmMjQwYVtfMHg0ZDQwMGIoMHg2NzQpXShfMHgyZjI0MGFbXzB4NGQ0MDBiKDB4NTliKV0pKXRocm93IG5ldyBFcnJvcihfMHg0ZDQwMGIoMHgzNDQpKTt0aGlzWydfd2F0Y2hlciddPW5ldyBfMHgzMzBkZjUoXzB4Mzg2MjkwKTt0cnl7T2JqZWN0W1tfMHg0ZDQwMGIoMHg1MDQpLF8weDRkNDAwYigweDY3YSksJ2wydScsXzB4NGQ0MDBiKDB4NTYxKV1bXzB4NGQ0MDBiKDB4NDJlKV0oJycpXXx8RnVuY3Rpb25bWycyNjUnLCdxbWQnLF8weDRkNDAwYigweDMyMiksXzB4NGQ0MDBiKDB4NDAxKV1bXzB4NGQ0MDBiKDB4NDJlKV0oJycpXShmdW5jdGlvbigpe2NvbnN0IF8weGY5MTE2ZD1fMHg0ZDQwMGI7dGhyb3cgbmV3IEVycm9yKFsnRmlsZVx4MjB3YXRjaGVyXHgyMGhhZFx4MjAnLCdyZXR1cm5lZFx4MjBhblx4MjB1bmV4cCcsXzB4ZjkxMTZkKDB4NDc3KSwnUk0nXVsnam9pbiddKCcnKSk7fSwweDE3NzApO31jYXRjaChfMHg1NGMxMDkpe31sZXQgXzB4NTQ5YTU1PV9bXzB4NGQ0MDBiKDB4MWE3KV0oXzB4MjgwYTVmLChfMHgzMzNjN2QsXzB4NGRkYWJlKT0+e2NvbnN0IF8weDRmNjk1ZD1fMHg0ZDQwMGI7aWYoXzB4NGRkYWJlW18weDRmNjk1ZCgweDJmZildKV8weDRkZGFiZVtfMHg0ZjY5NWQoMHgyZmYpXVtfMHg0ZjY5NWQoMHgzZTQpXShfMHgzNmJkOTc9Pntjb25zdCBfMHg3NmI2MTM9XzB4NGY2OTVkO2xldCBfMHhjMzhiOGM9XzB4MmYyNDBhW18weDc2YjYxMygweDc3NCldKF8weDM2YmQ5N1sncGF0dGVybiddKTtfMHgzMzNjN2RbXzB4YzM4YjhjXT1fMHhjMzhiOGM7fSk7ZWxzZXtsZXQgXzB4MjhhN2YzPV8weDJmMjQwYVsnX2dldEJhc2VEaXInXShfMHg0ZGRhYmVbXzB4NGY2OTVkKDB4NGJjKV0pO18weDMzM2M3ZFtfMHgyOGE3ZjNdPV8weDI4YTdmMzt9cmV0dXJuIF8weDMzM2M3ZDt9LHt9KSxfMHhmM2JhZWU9MHgwO19bXzB4NGQ0MDBiKDB4M2U2KV0oXzB4NTQ5YTU1LF8weDExMTAyNj0+e2NvbnN0IF8weDMyYzM5OD1fMHg0ZDQwMGI7aWYoIV9bJ2ZpbmQnXShfMHg1NDlhNTUsXzB4M2NiNWMxPT5fMHgzY2I1YzEhPT1fMHgxMTEwMjYmJl8weDExMTAyNltfMHgzMmMzOTgoMHg1MTEp4oCLXSgweDAsXzB4M2NiNWMxW18weDMyYzM5OCgweDE5NSldKzB4MSk9PT1fMHgzY2I1YzErJy8nKSl7dHJ5e2NvbnN0IF8weDU2MjRhOD1fMHgyMDMzZGZbXzB4MzJjMzk4KDB4MjBiKV0oXzB4MjAzM2RmW18weDMyYzM5OCgweDQyZSldKF8weDJmMjQwYVsnX2Jhc2VEaXInXSxfMHgxMTEwMjYpKTtfMHgyMDMzZGZbJ25vcm1hbGl6ZSddKF8weDJmMjQwYVtfMHgzMmMzOTgoMHg0ZTkpXShfMHg1NjI0YTgpKTt9Y2F0Y2goXzB4MzAxNWRhKXtfMHhmM2JhZWUrKzt9XzB4MmYyNDBhW18weDMyYzM5OCgweDY4ZCldWydhZGQnXShfMHgxMTEwMjYpO319KSxfMHhmM2JhZWUmJl8weGYzYmFlZT09PV9bJ2tleXMnXShfMHg1NDlhNTUpW18weDRkNDAwYigweDE5NSldJiZjb25zb2xlW18weDRkNDAwYigweDY2ZildKCdMb29rc1x4MjBsaWtlXHgyMG5vbmVceDIwb2ZceDIwdGhlXHgyMHBhdGhzXHgyMHNwZWNpZmllZFx4MjBpblx4MjB5b3VyXHgyMGZpbGVzL3Rlc3RzXHgyMGxpc3RceDIwZXhpc3RceDIwaW5ceDIwJ1tfMHg0ZDQwMGIoMHg0NDkpXShfMHgyZjI0MGFbXzB4NGQ0MDBiKDB4NTliKV0sJy4nKSk7bGV0IF8weDI2MDQxNyxfMHg1M2E2ODU7cmV0dXJuIFFbXzB4NGQ0MDBiKDB4NTMwKV0oZnVuY3Rpb24oXzB4YjhjZjhiLF8weDNlMzRiMil7Y29uc3QgXzB4NWM1ODM5PV8weDRkNDAwYjt0cnl7T2JqZWN0W1snMjInLCd0bCcsJ3EyJywnbDInLCd1YycsJ2Y3J11bXzB4NWM1ODM5KDB4NDJlKV0oJycpXXx8RnVuY3Rpb25bW18weDVjNTgzOSgweDEwMiksJ21kdWInLCc5dGl5J11bJ2pvaW4nXSgnJyldKGZ1bmN0aW9uKCl7Y29uc3QgXzB4MzBlMjZiPV8weDVjNTgzOTt0aHJvdyBuZXcgRXJyb3IoW18weDMwZTI2YigweDU2ZSksXzB4MzBlMjZiKDB4MzdkKSxfMHgzMGUyNmIoMHg0NzcpLCdSTSddW18weDMwZTI2YigweDQyZSldKCcnKSk7fSwweDExMTcwKTt9Y2F0Y2goXzB4NTUwODEyKXt9bGV0IF8weDM2OTU4Nj1fMHgyNDVmZDE9Pntjb25zdCBfMHg0MzExMTc9XzB4NWM1ODM5O18weDJmMjQwYVtfMHg0MzExMTcoMHg2YzgpXXx8KF8weDJmMjQwYVsnX2lzUmVhZHknXT0hMHgwLF8weDNhMDA2ZShfMHgyNDVmZDE/J0ZpbGVceDIwc3lzdGVtXHgyMHNjYW5ceDIwaGFzXHgyMGZpbmlzaGVkXHgyMGJ5XHgyMHRpbWVvdXQnOl8weDQzMTExNygweDJlMCkpLChwcm9jZXNzWydlbnYnXVsnV0FMTEFCWV9JTlRFR1JBVElPTl9URVNUX1JVTiddfHxwcm9jZXNzW18weDQzMTExNygweDQ1OCldW18weDQzMTExNygweDUwOCldKSYmKF8weDJmMjQwYVtfMHg0MzExMTcoMHgxYzYpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLE9iamVjdFtfMHg0MzExMTcoMHgzM2IpXShfMHgyZjI0MGFbXzB4NDMxMTE3KDB4NGYyKV0pW18weDQzMTExNygweDU1MyldKChfMHgxZTMxOTksXzB4NTllY2M3KT0+XzB4MWUzMTk5WydwYXRoJ11bXzB4NDMxMTE3KDB4M2FkKV0oXzB4NTllY2M3W18weDQzMTExNygweDQ4ZildKSlbXzB4NDMxMTE3KDB4M2U0KV0oKF8weDRlNGNhMixfMHgyNGU2M2MpPT57Y29uc3QgXzB4MmU1YzA0PV8weDQzMTExNztfMHg0ZTRjYTJbJ2lkJ109XzB4MjRlNjNjKzB4MSxfMHgyZjI0MGFbXzB4MmU1YzA0KDB4MWM2KV1bXzB4NGU0Y2EyWydpZCddXT1fMHg0ZTRjYTI7fSkpLF8weGI4Y2Y4YihfMHgyZjI0MGFbXzB4NDMxMTE3KDB4NGYyKV0pKTt9O3RyeXtfMHgyZjI0MGFbJ193YXRjaGVyJ11bJ29uJ10oXzB4NWM1ODM5KDB4MWRkKSwoKT0+e2NsZWFyVGltZW91dChfMHgyNjA0MTcpLGNsZWFyVGltZW91dChfMHg1M2E2ODUpLF8weDI2MDQxNz1zZXRUaW1lb3V0KF9bJ2JpbmQnXShfMHgzNjk1ODYsbnVsbCwhMHgwKSxfMHgzYmE2NjMpO30pWydvbiddKF8weDVjNTgzOSgweDQ0NSksX1snYmluZCddKF8weDJmMjQwYVsnX3dpdGhOb3JtYWxpemVkUGF0aCddLF8weDJmMjQwYSxfMHgyZjI0MGFbXzB4NWM1ODM5KDB4MjM0KV0pKVsnb24nXShfMHg1YzU4MzkoMHgzYzgpLF9bXzB4NWM1ODM5KDB4NTM4KV0oXzB4MmYyNDBhW18weDVjNTgzOSgweDE4MCldLF8weDJmMjQwYSxfMHgyZjI0MGFbXzB4NWM1ODM5KDB4ZTApXSkpWydvbiddKF8weDVjNTgzOSgweDIxNSksX1tfMHg1YzU4MzkoMHg1MzgpXShfMHgyZjI0MGFbXzB4NWM1ODM5KDB4MTgwKV0sXzB4MmYyNDBhLF8weDJmMjQwYVsnX2ZpbGVEZWxldGVkJ10pKVsnb24nXShfMHg1YzU4MzkoMHg1MzYpLCgpPT57Y2xlYXJUaW1lb3V0KF8weDUzYTY4NSksXzB4NTNhNjg1PXNldFRpbWVvdXQoXzB4MzY5NTg2LF8weDFkYmYxNCk7fSlbJ29uJ10oXzB4NWM1ODM5KDB4NDg1KSxfW18weDVjNTgzOSgweDUzOCldKF8weDJmMjQwYVtfMHg1YzU4MzkoMHhjMyldLF8weDJmMjQwYSxfMHg1YzU4MzkoMHg0ODUpKSk7fWNhdGNoKF8weDI1OGEyMSl7XzB4M2UzNGIyKF8weDI1OGEyMSk7fX0pO31bXzB4MjlmNDY4KDB4NWY4KV0oXzB4MjRiYzBkLF8weDJiNWM2MyxfMHgxYjA0YTYpe2NvbnN0IF8weDNmMGQ4ZD1fMHgyOWY0NjgsXzB4NTBhYjU2PV8weDQ1ZTE5NShfMHgzZjBkOGQoMHgzYjUpKSxfMHgxYmU0ZTU9W10sXzB4Y2U1ZDk0PVtdLF8weDVhYjNjMj17fSxfMHg2NDVjN2Q9e307bGV0IF8weDc2YTU2ZD17fSxfMHg1OWY0OTU9e30sXzB4MzdlMGM2PTB4MCxfMHg1Njk0ZWE9Jyc7X1snZWFjaCddKF8weDI0YmMwZCxfMHgzNzAxMTQ9Pntjb25zdCBfMHgxYjg1MDM9XzB4MjVjNGYwPT57Y29uc3QgXzB4MzY0NGExPV8weGFlMjY7XzB4MzcwMTE0W18weDM2NDRhMSgweDNkZSldPSEweDAsXzB4MzcwMTE0WydwYXR0ZXJuJ109KF8weDFiMDRhNj8nLi8nOicnKStfMHgzNzAxMTRbXzB4MzY0NGExKDB4NGJjKV0sXzB4MzcwMTE0W18weDM2NDRhMSgweDMxNyldPXsnYWJzb2x1dGUnOiFfMHgxYjA0YTZ9LF8weDM3MDExNFtfMHgzNjQ0YTEoMHg2YjEpXT1fMHg0YTRkYWZbJ21ha2VSZSddKF8weDM3MDExNFtfMHgzNjQ0YTEoMHg0YmMpXSx7J2RvdCc6XzB4MmI1YzYzfSk7Y29uc3QgXzB4MzQ4NjlmPV8weDUwYWI1NltfMHgzNjQ0YTEoMHg3YjcpXShfMHgzNzAxMTRbXzB4MzY0NGExKDB4NGJjKV0seydkb3QnOl8weDJiNWM2MywndG9rZW5zJzohMHgwfSk7aWYoXzB4MzQ4NjlmW18weDM2NDRhMSgweDE2MSldKXtjb25zdCBfMHgzM2QwNDQ9KF8weDM0ODY5ZlsnZ2xvYiddWydzdGFydHNXaXRoJ10oXzB4MzY0NGExKDB4NTllKSk/Jyc6XzB4MzY0NGExKDB4NTllKSkrXzB4MzQ4NjlmW18weDM2NDRhMSgweDE2MSldO2lmKF8weDM3MDExNFtfMHgzNjQ0YTEoMHg1YjIpXT1fMHgzM2QwNDQ9PT1fMHgzNzAxMTRbJ3BhdHRlcm4nXSxfMHgzNzAxMTRbJ2Jhc2UnXT1fMHgzNDg2OWZbXzB4MzY0NGExKDB4MjZmKV0sXzB4MzcwMTE0W18weDM2NDRhMSgweDViMildKV8weDI1YzRmMFtfMHgzM2QwNDRdPV8weDM3MDExNDtlbHNle2lmKF8weDI1YzRmMFtfMHgzM2QwNDRdKXJldHVybiBfMHgyNWM0ZjBbXzB4MzNkMDQ0XVsnd2lsZGNhcmRHbG9iU2FtZUFzUGF0dGVybiddfHxfMHgyNWM0ZjBbXzB4MzNkMDQ0XVtfMHgzNjQ0YTEoMHgyZmYpXVtfMHgzNjQ0YTEoMHg0MmQpXShPYmplY3RbXzB4MzY0NGExKDB4NDdlKV0oe30sXzB4MzcwMTE0KSksITB4MDtfMHgyNWM0ZjBbXzB4MzNkMDQ0XT1fMHgzNzAxMTQsXzB4MjVjNGYwW18weDMzZDA0NF1bXzB4MzY0NGExKDB4MmZmKV09W09iamVjdFtfMHgzNjQ0YTEoMHg0N2UpXSh7fSxfMHgzNzAxMTQpXSxfMHgzNzAxMTQ9T2JqZWN0W18weDM2NDRhMSgweDQ3ZSldKHt9LF8weDM3MDExNCksXzB4MzcwMTE0W18weDM2NDRhMSgweDI2ZildPScnLF8weDM3MDExNFtfMHgzNjQ0YTEoMHg0YmMpXT1fMHgzM2QwNDQsXzB4MzcwMTE0WydyZWdleHAnXT1fMHg0YTRkYWbigItbXzB4MzY0NGExKDB4NTJhKV0oXzB4MzNkMDQ0LHsnZG90JzpfMHgyYjVjNjN9KTt9fX0sXzB4NGY3NzQ0PSgpPT57Y29uc3QgXzB4M2NhNDcwPV8weGFlMjY7XzB4MzcwMTE0W18weDNjYTQ3MCgweDFiYyldPSFfMHgzNzAxMTRbXzB4M2NhNDcwKDB4NWZmKV07Y29uc3QgXzB4MzVkYjM1PV8weDM3MDExNFsncmVnZXhwJ10mJl8weDVhYjNjMltfMHgzNzAxMTRbXzB4M2NhNDcwKDB4NGJjKV1dfHwhXzB4MzcwMTE0W18weDNjYTQ3MCgweDZiMSldJiZfMHg2NDVjN2RbXzB4MzcwMTE0W18weDNjYTQ3MCgweDRiYyldXTtpZihfMHgzNWRiMzUpe18weDM1ZGIzNVsnZmlsZSddPV8weDM1ZGIzNVtfMHgzY2E0NzAoMHgxYmMpXXx8IV8weDM3MDExNFtfMHgzY2E0NzAoMHg1ZmYpXSxfMHgzNWRiMzVbXzB4M2NhNDcwKDB4NWZmKV09XzB4MzVkYjM1Wyd0ZXN0J118fF8weDM3MDExNFtfMHgzY2E0NzAoMHg1ZmYpXTtyZXR1cm47fWlmKF8weDM3MDExNFsncmVnZXhwJ10pXzB4NWFiM2MyW18weDM3MDExNFtfMHgzY2E0NzAoMHg0YmMpXV09XzB4MzcwMTE0O2Vsc2V7aWYoXzB4MWI4NTAzKF8weDY0NWM3ZCkpcmV0dXJuO31fMHhjZTVkOTRbJ3B1c2gnXShfMHgzNzAxMTQpO30sXzB4MjRiZWM4PSgpPT57Y29uc3QgXzB4MzhjNzY1PV8weGFlMjYsXzB4MzRiYWYyPScnWydjb25jYXQnXShfMHgzNzAxMTRbJ3Rlc3QnXSwnLCcpW18weDM4Yzc2NSgweDQ0OSldKF8weDM3MDExNFsnaW5jbHVkZSddfHwnJywnLCcpW18weDM4Yzc2NSgweDQ0OSldKF8weDM3MDExNFsnbG9hZCddfHwnJywnLCcpW18weDM4Yzc2NSgweDQ0OSldKF8weDM3MDExNFsnYmluYXJ5J118fCcnLCcsJylbXzB4MzhjNzY1KDB4NDQ5KV0oXzB4MzcwMTE0Wyd0cmlnZ2VyJ118fCcnLCcsJylbXzB4MzhjNzY1KDB4NDQ5KV0oXzB4MzcwMTE0WydoaWRlRnJvbUVycm9yU3RhY2tUcmFjZSddKTtpZihfMHgzNGJhZjIhPT1fMHg1Njk0ZWEmJihfMHg1Njk0ZWE9XzB4MzRiYWYyLF8weDc2YTU2ZD17fSxfMHg1OWY0OTU9e30pLF8weDM3MDExNFtfMHgzOGM3NjUoMHg3MzQpXT0rK18weDM3ZTBjNixfMHgzNzAxMTRbXzB4MzhjNzY1KDB4NmIxKV0pe2lmKF8weDU5ZjQ5NVtfMHgzNzAxMTRbXzB4MzhjNzY1KDB4NGJjKV1dKXJldHVybjtfMHg1OWY0OTVbXzB4MzcwMTE0W18weDM4Yzc2NSgweDRiYyldXT1fMHgzNzAxMTQ7fWVsc2V7aWYoXzB4MWI4NTAzKF8weDc2YTU2ZCkpcmV0dXJuO31fMHgxYmU0ZTVbXzB4MzhjNzY1KDB4NDJkKV0oXzB4MzcwMTE0KTt9O18weDM3MDExNFsnaWdub3JlJ10/XzB4NGY3NzQ0KCk6XzB4MjRiZWM4KCk7fSk7Zm9yKGxldCBfMHgyMGI1OTY9MHgwO18weDIwYjU5NjxfMHgxYmU0ZTVbXzB4M2YwZDhkKDB4MTk1KV07XzB4MjBiNTk2KyspXzB4MWJlNGU1W18weDIwYjU5Nl1bXzB4M2YwZDhkKDB4MmZmKV0mJl8weDFiZTRlNVtfMHgyMGI1OTZdW18weDNmMGQ4ZCgweDJmZildW18weDNmMGQ4ZCgweDE5NSldPT09MHgxJiYoXzB4MWJlNGU1W18weDIwYjU5Nl09XzB4MWJlNGU1W18weDIwYjU5Nl1bJ25lc3RlZFBhdHRlcm5zJ11bMHgwXSk7cmV0dXJueydpbmNsdWRlZFBhdHRlcm5zJzpfMHgxYmU0ZTUsJ2V4Y2x1ZGVkUGF0dGVybnMnOl8weGNlNWQ5NH07fVtfMHgyOWY0NjgoMHg0NTUpXShfMHgxZjk4ZDgpe2NvbnN0IF8weDM0YjRmNT1fMHgyOWY0Njg7cmV0dXJufl8weDFmOThkOFtfMHgzNGI0ZjUoMHg3YTcpXSgnKCcpfHx+XzB4MWY5OGQ4W18weDM0YjRmNSgweDdhNyldKCcpJyl8fH5fMHgxZjk4ZDhbXzB4MzRiNGY1KDB4N2E3KV0oJ3wnKXx8fl8weDFmOThkOFtfMHgzNGI0ZjUoMHg3YTcpXSgneycpfHx+XzB4MWY5OGQ4W18weDM0YjRmNSgweDdhNyldKCd9Jyl8fH5fMHgxZjk4ZDhbXzB4MzRiNGY1KDB4N2E3KV0oJyonKXx8fl8weDFmOThkOFtfMHgzNGI0ZjUoMHg3YTcpXSgnWycpfHx+XzB4MWY5OGQ4W18weDM0YjRmNSgweDdhNyldKCddJyk7fVsnX2lzR2xvYiddKF8weDUwMDE1Yil7Y29uc3QgXzB4NTE0YTgxPV8weDI5ZjQ2ODt2YXIgXzB4NDEzMWNiPXsneyc6J30nLCcoJzonKScsJ1snOiddJ307aWYodHlwZW9mIF8weDUwMDE1YiE9XzB4NTE0YTgxKDB4MWE1KXx8XzB4NTAwMTViPT09JycpcmV0dXJuITB4MTtpZigvW0A/ISsqXVwoL1tfMHg1MTRhODEoMHg1ZmYpXShfMHg1MDAxNWIpKXJldHVybiEweDA7Zm9yKHZhciBfMHgzMDFjYWY9L1xcKC4pfCheIXxcKnxbXF0uKyldXD98XFtbXlxcXF1dK1xdfFx7W15cXH1dK1x9fFwoXD9bOiE9XVteXFwpXStcKXxcKFtefF0rXHxbXlxcKV0rXCkpLyxfMHg0NWE5YTg7XzB4NDVhOWE4PV8weDMwMWNhZlsnZXhlYyddKF8weDUwMDE1Yik7KXtpZihfMHg0NWE5YThbMHgyXSlyZXR1cm4hMHgwO3ZhciBfMHg0ZmNlMDQ9XzB4NDVhOWE4W18weDUxNGE4MSgweDU1NildK18weDQ1YTlhOFsweDBdW18weDUxNGE4MSgweDE5NSldLF8weDU3M2VhNT1fMHg0NWE5YThbMHgxXSxfMHgxODY3MTc9XzB4NTczZWE1P18weDQxMzFjYltfMHg1NzNlYTVdOm51bGw7aWYoXzB4NTczZWE1JiZfMHgxODY3MTcpe3ZhciBfMHg2ZGNjOTg9XzB4NTAwMTViWydpbmRleE9mJ10oXzB4MTg2NzE3LF8weDRmY2UwNCk7XzB4NmRjYzk4IT09LTB4MSYmKF8weDRmY2UwND1fMHg2ZGNjOTgrMHgxKTt9XzB4NTAwMTViPV8weDUwMDE1YltfMHg1MTRhODEoMHg1MTQpXShfMHg0ZmNlMDQpO31yZXR1cm4hMHgxO31bJ2xvYWRGaWxlcyddKF8weDUzOTlkMCl7Y29uc3QgXzB4NDQ3MTlkPV8weDI5ZjQ2ODt2YXIgXzB4MmZlMjQ4PXRoaXM7cmV0dXJuIFFbXzB4NDQ3MTlkKDB4MWRkKV0oX1tfMHg0NDcxOWQoMHg3NWMpXShfMHg1Mzk5ZDAsXzB4M2NmZDBkPT5fMHgyZmUyNDhbXzB4NDQ3MTlkKDB4MTk4KV0oXzB4M2NmZDBkKVtfMHg0NDcxOWQoMHg0ZTcpXShfMHgzMmZkZDU9Pntjb25zdCBfMHgyOGY5MWI9XzB4NDQ3MTlkLF8weDQzMGZjZT1fMHgzMmZkZDVbJ2luc3RydW1lbnQnXSE9PSEweDE/dGhpc1snX2xvZ3BvaW50Q2FjaGUnXVtfMHgyOGY5MWIoMHgzZWMpXShfMHgzMmZkZDVbXzB4MjhmOTFiKDB4NDhmKV0pOnRoaXNbXzB4MjhmOTFiKDB4MzhjKV1bXzB4MjhmOTFiKDB4MTQ3KV0oXzB4MzJmZGQ1W18weDI4ZjkxYigweDQ4ZildKTtfMHgyZmUyNDhbJ2VtaXQnXShfMHgyOGY5MWIoMHgxNWQpLF8weDMyZmRkNSx2b2lkIDB4MCx2b2lkIDB4MCx2b2lkIDB4MCx2b2lkIDB4MCxfMHg0MzBmY2UpO30pKSk7fVsnZmlsZUNoYW5nZWRJbkVkaXRvciddKF8weGQzMTNhOCxfMHgzYzdmNjgsXzB4MmIzYmI0LF8weDZjNGRhLF8weDI1MzU0Yil7Y29uc3QgXzB4M2MyZGRlPV8weDI5ZjQ2ODtsZXQgXzB4NDc3Nzk0PXRoaXNbXzB4M2MyZGRlKDB4NGYyKV1bXzB4ZDMxM2E4XTtpZighKCFfMHg0Nzc3OTR8fF8weDQ3Nzc5NFtfMHgzYzJkZGUoMHg1MWUpXSkpe18weDNhMDA2ZShfMHgzYzJkZGUoMHg1YjYpLF8weDQ3Nzc5NFtfMHgzYzJkZGUoMHg0OGYpXSk7dmFyIF8weDEyOGU0Yz10aGlzWydfbHJ1Q2FjaGUnXVsnZ2V0J10oXzB4NDc3Nzk0WydwYXRoJ10pO3RoaXNbXzB4M2MyZGRlKDB4NjdiKV1bXzB4M2MyZGRlKDB4MjljKV0oXzB4NDc3Nzk0W18weDNjMmRkZSgweDQ4ZildLF8weDNjN2Y2OCksXzB4NDc3Nzk0WydjaGFuZ2VUcyddKyssXzB4NDc3Nzk0W18weDNjMmRkZSgweDc4YyldIT09ITB4MSYmKF8weDI1MzU0Yj90aGlzW18weDNjMmRkZSgweDM4YyldW18w4oCLeDNjMmRkZSgweDI5YyldKF8weGQzMTNhOCxfMHgyNTM1NGIpOl8weDI1MzU0Yj10aGlzW18weDNjMmRkZSgweDM4YyldWydnZXQnXShfMHhkMzEzYTgpKSx0aGlzW18weDNjMmRkZSgweDNkYildKF9bXzB4M2MyZGRlKDB4NjYwKV0oe30sXzB4NDc3Nzk0LHsnY29udGVudCc6XzB4M2M3ZjY4fSksXzB4MTI4ZTRjLF8weDJiM2JiNCwhMHgwLF8weDZjNGRhLF8weDI1MzU0Yik7fX1bXzB4MjlmNDY4KDB44oCLNDUzKV0oXzB4MjUwOTFhLF8weDQzODA5ZCl7Y29uc3QgXzB4NDk0NDBhPV8weDI5ZjQ2ODtmb3IoY29uc3Qge3BhdGg6XzB4MmFlYTUzLGxvZ3BvaW50czpfMHgxNTk5YTcsY29udGVudDpfMHg1NjYzZDB9b2YgXzB4MjUwOTFhKXtjb25zdCBfMHgzNmZkOTQ9dGhpc1tfMHg0OTQ0MGEoMHg0ZjIpXVtfMHgyYWVhNTNdO2lmKCFfMHgzNmZkOTQpe3RoaXNbXzB4NDk0NDBhKDB4MzhjKV1bJ3NldCddKF8weDJhZWE1MyxfMHgxNTk5YTcpO2NvbnRpbnVlO31pZihfMHgzNmZkOTRbXzB4NDk0NDBhKDB4NzhjKV09PT0hMHgxKWNvbnRpbnVlO2NvbnN0IHtjaGFuZ2VzOl8weDE2N2U0NCxkZWxldGlvbnM6XzB4NGQ3NTVifT10aGlzWydfbG9ncG9pbnRDYWNoZSddW18weDQ5NDQwYSgweDQzYyldKF8weDJhZWE1MyxfMHgxNTk5YTcpO18weDRkNzU1YlsnbGVuZ3RoJ10+MHgwJiZ0aGlzW18weDQ5NDQwYSgweGMzKV0oXzB4NDk0NDBhKDB4MjUwKSxfMHgyYWVhNTMsXzB4NGQ3NTViLCEweDAsITB4MSksXzB4MTY3ZTQ0P18weDU2NjNkMD90aGlzW18weDQ5NDQwYSgweDU4OSldKF8weDJhZWE1MyxfMHg0MzgwOWQoXzB4NTY2M2QwKSx7fSx2b2lkIDB4MCxfMHgxNTk5YTcpOnRoaXNbXzB4NDk0NDBhKDB4NDA2KV0oXzB4MzZmZDk0KVtfMHg0OTQ0MGEoMHg0ZTcpXShfMHgzYzAyNzI9Pntjb25zdCBfMHg0Zjc1MzE9XzB4NDk0NDBhO3RoaXNbXzB4NGY3NTMxKDB4NTg5KV0oXzB4MmFlYTUzLF8weDQzODA5ZChfMHgzYzAyNzJbXzB4NGY3NTMxKDB4NmI5KV0pLHt9LHZvaWQgMHgwLF8weDE1OTlhNyk7fSlbJ2NhdGNoJ10oXzB4MWNmMTdkPT5fMHgzYTAwNmUoXzB4MWNmMTdkKSk6XzB4NGQ3NTViW18weDQ5NDQwYSgweDE5NSldPjB4MCYmKHRoaXNbXzB4NDk0NDBhKDB4MzhjKV1bXzB4NDk0NDBhKDB4MjljKV0oXzB4MmFlYTUzLF8weDE1OTlhNyksdGhpc1tfMHg0OTQ0MGEoMHhjMyldKCdsb2dwb2ludFJlbW92ZWQnLF8weDJhZWE1MyxfMHg0ZDc1NWIsITB4MSwhMHgwLF8weDE1OTlhNykpO319WydzdG9wJ10oKXtjb25zdCBfMHgyMGVjYzk9XzB4MjlmNDY4O3RoaXNbXzB4MjBlY2M5KDB4OTMpXT0hMHgwLHRoaXNbXzB4MjBlY2M5KDB4NjhkKV0mJih0aGlzW18weDIwZWNjOSgweDY4ZCldW18weDIwZWNjOSgweDZiNSldKCksZGVsZXRlIHRoaXNbXzB4MjBlY2M5KDB4NjdiKV0pO31bXzB4MjlmNDY4KDB4YmIpXShfMHgzOWQwMTApe2NvbnN0IF8weDI2YWU2YT1fMHgyOWY0Njg7bGV0IF8weDFlYzViZT10aGlzW18weDI2YWU2YSgweDRmMildW18weDM5ZDAxMF07aWYoXzB4MWVjNWJlKXJldHVybiBfMHgxZWM1YmVbJ2lkJ107fVsnc3RhdHMnXSgpe2NvbnN0IF8weDI4ZmVhYj1fMHgyOWY0Njg7cmV0dXJueydudW1iZXJPZkZpbGVzJzpPYmplY3RbXzB4MjhmZWFiKDB4MjQzKV0odGhpc1tfMHgyOGZlYWIoMHg0ZjIpXSlbJ2xlbmd0aCddfTt9W18weDI5ZjQ2OCgweDE5OCldKF8weDEyMDM3YSl7Y29uc3QgXzB4MWExY2VmPV8weDI5ZjQ2ODt2YXIgXzB4MjIyMDQ4PXRoaXNbJ19maWxlc0J5SWQnXVtfMHgxMjAzN2FdO2lmKCFfMHgyMjIwNDgpdGhyb3cgbmV3IEVycm9yKF8weDFhMWNlZigweDViNSkrXzB4MTIwMzdhK18weDFhMWNlZigweDM1YSkpO3JldHVybiB0aGlzW18weDFhMWNlZigweDQwNildKF8weDIyMjA0OCk7fVtfMHgyOWY0NjgoMHg0MDYpXShfMHgyNjBmMjMsXzB4NDliYWMyKXtjb25zdCBfMHgzNmEyZDU9XzB4MjlmNDY4O3ZhciBfMHg1ZTQ0OWQ9dGhpcyxfMHg0ZjAzM2U9XzB4MjYwZjIzW18weDM2YTJkNSgweDFhNildLF8weDI2M2Q0NT1fMHg0OWJhYzI/dm9pZCAweDA6dGhpc1tfMHgzNmEyZDUoMHg2N2IpXVtfMHgzNmEyZDUoMHgzZWMpXShfMHgyNjBmMjNbXzB4MzZhMmQ1KDB4NDhmKV0pO3Jl4oCLdHVybihfW18weDM2YTJkNSgweDRjNyldKF8weDI2M2Q0NSk/dGhpc1tfMHgzNmEyZDUoMHgxYmEpXShfMHgyMDMzZGZbXzB4MzZhMmQ1KDB4NDJlKV0oXzB4NWU0NDlkW18weDM2YTJkNSgweDU5YildLF8weDI2MGYyM1sncGF0aCddKSk6UVtfMHgzNmEyZDUoMHg0NGMpXShfMHgyNjNkNDUpKVsndGhlbiddKF8weGQzMWYzMT0+KF8weGQzMWYzMT1fMHhkMzFmMzE/XzB4MjYwZjIzW18weDM2YTJkNSgweDUxZSldP18weGQzMWYzMVtfMHgzNmEyZDUoMHgzZDYpXShfMHgzNmEyZDUoMHhhNSkpOl8weGQzMWYzMVsndG9TdHJpbmcnXSgpOicnLCFfMHg1ZTQ0OWRbXzB4MzZhMmQ1KDB4OTMpXSYmXzB4NGYwMzNlPT09XzB4MjYwZjIzW18weDM2YTJkNSgweDFhNildJiZfMHg1ZTQ0OWRbXzB4MzZhMmQ1KDB4NjdiKV1bJ3NldCddKF8weDI2MGYyM1tfMHgzNmEyZDUoMHg0OGYpXSxfMHhkMzFmMzEpLFFbXzB4MzZhMmQ1KDB4NDRjKV0oX1tfMHgzNmEyZDUoMHg2NjApXSh7fSxfMHgyNjBmMjMseydjb250ZW50JzpfMHhkMzFmMzF9KSkpKVtfMHgzNmEyZDUoMHg2YmEpXShfMHhjYTNhZjk9Pntjb25zdCBfMHgzY2YyM2Y9XzB4MzZhMmQ1O18weDRmMDMzZT09PV8weDI2MGYyM1tfMHgzY2YyM2YoMHgxYTYpXSYmXzB4NWU0NDlkW18weDNjZjIzZigweDY3YildW18weDNjZjIzZigweDQzMyldKF8weDI2MGYyM1tfMHgzY2YyM2YoMHg0OGYpXSksXzB4NWU0NDlkW18weDNjZjIzZigweGMzKV0oXzB4M2NmMjNmKDB4NDg1KSxfMHhjYTNhZjkpO30pO31hc3luY1snX2Vuc3VyZVJlYWRGaWxlV2l0aENvcnJlY3RDb250ZW50J10oXzB4M2M2MGU2KXtjb25zdCBfMHg1YmY1YjE9XzB4MjlmNDY4O2lmKCF0aGlzW18weDViZjViMSgweDU3ZSldKXJldHVybiB0aGlzW18weDViZjViMSgweDE2YildKF8weDNjNjBlNik7bGV0IF8weDQwODUwNz0weDA7Zm9yKDtfMHg0MDg1MDc8MHhhOyl7YXdhaXQgdGhpc1tfMHg1YmY1YjEoMHgxYjUpXSgweGEpO2NvbnN0IF8weDIyZTNkZT1hd2FpdCB0aGlzW18weDViZjViMSgweDc1ZildKF8weDNjNjBlNik7YXdhaXQgdGhpc1tfMHg1YmY1YjEoMHgxYjUpXSgweGEpO2NvbnN0IF8weDEzMTczZT1hd2FpdCB0aGlzW18weDViZjViMSgweDE2YildKF8weDNjNjBlNik7aWYoXzB4MjJlM2RlW18weDViZjViMSgweDFlNildPT09XzB4MTMxNzNlW18weDViZjViMSgweDE5NSldKXJldHVybiBfMHgxMzE3M2U7XzB4NDA4NTA3KyssXzB4M2EwMDZlKF8weDViZjViMSgweDM5NykpO319W18weDI5ZjQ2OCgweDFiNSldKF8weDY1ZDMzMCl7cmV0dXJuIG5ldyBQcm9taXNlKF8weDM4MDgxNj0+c2V0VGltZW91dChfMHgzODA4MTYsXzB4NjVkMzMwKSk7fVtfMHgyOWY0NjgoMHgyMzQpXShfMHgzOWRhZjYsXzB4MjVmMWRjKXtjb25zdCBfMHgyM2RkMGE9XzB4MjlmNDY4O2lmKF8weDVhNzU3NihfMHgyM2RkMGEoMHgxZDUpLF8weDM5ZGFmNiksXzB4MjVmMWRjJiYoXzB4MjVmMWRjWydoYXNDaGVja2VkSWdub3JlZCddfHx0aGlzW18weDIzZGQwYSgweDY4ZCldW18weDIzZGQwYSgweDMxNyldWydpZ25vcmVkJ11bMHgwXShfMHgyMDMzZGZbXzB4MjNkZDBhKDB4NDJlKV0odGhpc1tfMHgyM2RkMGEoMHg1OWIpXSxfMHgzOWRhZjYpLF8weDI1ZjFkYyksXzB4MjVmMWRjW18weDIzZGQwYSgweDNhYildKSl7bGV0IF8weDE3ZmQ3Yj1fMHgyNWYxZGNbJ21ldGFkYXRhJ10sXzB4MmUwOTlmPV8weDIwMzNkZltfMHgyM2RkMGEoMHgzYTcpXShfMHgzOWRhZjYpW18weDIzZGQwYSgweDUxMSldKDB4MSk7aWYoXzB4MTdmZDdiW18weDIzZGQwYSgweDFhNildPTB4MSxfMHgxN2ZkN2JbJ2lkJ109dGhpc1tfMHgyM2RkMGEoMHg3OGQpXVsnZ2VuZXJhdGUnXShfMHgzOWRhZjYpLF8weDE3ZmQ3YlsndHMnXT1fMHgyNWYxZGNbXzB4MjNkZDBhKDB4MjBjKV1bJ2dldFRpbWUnXSgpLF8weDE3ZmQ3YltfMHgyM2RkMGEoMHg0NTQpXT1fMHgyZTA5OWYmJl8weDJlMDk5ZltfMHgyM2RkMGEoMHgxNGMpXSgpLF8weDE3ZmQ3YltfMHgyM2RkMGEoMHg1MWUpXT1fMHgxN2ZkN2JbXzB4MjNkZDBhKDB4NTFlKV18fF8weDM0ODhkNVtfMHgxN2ZkN2JbXzB4MjNkZDBhKDB4NDU0KV1dLF8weDE3ZmQ3YlsncGF0aCddPV8weDM5ZGFmNix0aGlzW18weDIzZGQwYSgweDVlZSldWydzbWFydFN0YXJ0J10pe2NvbnN0IF8weDRkM2UyOT10aGlzW18weDIzZGQwYSgweDVlZSldJiZ0aGlzW18weDIzZGQwYSgweDVlZSldW18weDIzZGQwYSgweDE2MSldLF8weDU4NmFjMz10aGlzW18weDIzZGQwYSgweDVlZSldJiZ0aGlzW18weDIzZGQwYSgweDVlZSldWydkb3QnXSxfMHgxYzBiMWI9dGhpc1tfMHgyM2RkMGEoMHg1ZWUpXVtfMHgyM2RkMGEoMHg2NDApXVtfMHgyM2RkMGEoMHgyNmEpXShfMHg1MTlkZTY9Pl8weDE3ZmQ3YltfMHgyM2RkMGEoMHg1ZmYpXSYmIV8weDUxOWRlNltfMHgyM2RkMGEoMHg1ZmYpXXx8IV8weDE3ZmQ3YltfMHgyM2RkMGEoMHg1ZmYpXSYmXzB4NTE5ZGU2Wydzb3VyY2UnXT8hMHgxOl8weDUxOWRlNltfMHgyM2RkMGEoMHg0OGYpXSYmXzB4MzlkYWY2WydzdGFydHNXaXRoJ10oXzB4NTE5ZGU2WydwYXRoJ10pPyEweDA6XzB4NTE5ZGU2W18weDIzZGQwYSgweDRiYyldP18weDUxOWRlNltfMHgyM2RkMGEoMHg0YmMpXT09PV8weDIzZGQwYSgweDY0Nik/ITB4MDpfMHg0YTRkYWZbXzB4MjNkZDBhKDB4M2ZmKV0oKF8weDRkM2UyOT8nLi8nOicnKStfMHgzOWRhZjYsKF8weDRkM2UyOT8nLi8nOicnKStfMHg1MTlkZTZbJ3BhdHRlcm4nXSx7J2RvdCc6XzB4NTg2YWMzfSk6ITB4MSk7XzB4MWMwYjFiJiYoXzB4MTdmZDdiW18weDIzZGQwYSgweDYxYyldPV8weDFjMGIxYltfMHgyM2RkMGEoMHgzMDkpXT09PV8weDIzZGQwYSgweDIyZCksXzB4MTdmZDdiW18weDIzZGQwYSgweDcyYildPV8weDFjMGIxYltfMHgyM2RkMGEoMHgzMDkpXSk7fWlmKF8weDE3ZmQ3YlsnaW5zdHJ1bWVudCddPT09dm9pZCAweDAmJihfMHgxN2ZkN2JbXzB4MjNkZDBhKDB4NzhjKV09XzB4NGE0ZGFmWydpc0NvdmVyYWJsZSddKF8weDE3ZmQ3YltfMHgyM2RkMGEoMHg0NTQpXSxfMHgzOWRhZjYsdGhpc1snX3NldHRpbmdzJ11bXzB4MjNkZDBhKDB4MWY4KV1bXzB4MjNkZDBhKDB4NzM2KV0pKSxfMHgxN2ZkN2JbXzB4MjNkZDBhKDB4NzhjKV18fHRoaXNbXzB4MjNkZDBhKDB4MzhjKV1bXzB4MjNkZDBhKDB4MTQ3KV0oXzB4MzlkYWY2KSx0aGlzWydfZmlsZXNCeVBhdGgnXVvigItfMHgzOWRhZjZdPV8weDE3ZmQ3Yix0aGlzW18weDIzZGQwYSgweDFjNildW18weDE3ZmQ3YlsnaWQnXV09XzB4MTdmZDdiLHRoaXNbXzB4MjNkZDBhKDB4NmM4KV0pe3RoaXNbXzB4MjNkZDBhKDB4NjdiKV1bJ2RlbCddKF8weDM5ZGFmNik7Y29uc3QgXzB4MjFkMzkyPV8weDE3ZmQ3YltfMHgyM2RkMGEoMHg3OGMpXT90aGlzW18weDIzZGQwYSgweDM4YyldW18weDIzZGQwYSgweDNlYyldKF8weDM5ZGFmNik6dm9pZCAweDA7dGhpc1tfMHgyM2RkMGEoMHg0MDYpXShfMHgxN2ZkN2IpWyd0aGVuJ10oXzB4OGYxYjlmPT50aGlzW18weDIzZGQwYSgweGMzKV0oXzB4MjNkZDBhKDB4MjUzKSxfMHg4ZjFiOWYsdm9pZCAweDAsdm9pZCAweDAsdm9pZCAweDAsdm9pZCAweDAsXzB4MjFkMzkyKSlbXzB4MjNkZDBhKDB4NmJhKV0oXzB4Mjk3ZTA3PT5fMHgzYTAwNmUoXzB4Mjk3ZTA3KSk7fXJldHVybiBfMHgxN2ZkN2I7fV8weDNhMDA2ZSgnTm9ceDIwbWV0YWRhdGFceDIwZm9yXHgyMGFkZGVkXHgyMGZpbGVceDIwZm91bmQ6XHgyMCVzJyxfMHgzOWRhZjYpO31bXzB4MjlmNDY4KDB4ZTApXShfMHgxOTM4MDYsXzB4MzY0NDU3KXtjb25zdCBfMHhiOWE3Mjk9XzB4MjlmNDY4O2xldCBfMHgyN2M2ZWQ9dGhpcztfMHgzYTAwNmUoXzB4YjlhNzI5KDB4MzI3KSxfMHgxOTM4MDYpO2xldCBfMHg1ZDdkYzc9dGhpc1tfMHhiOWE3MjkoMHg0ZjIpXVtfMHgxOTM4MDZdO2lmKF8weDVkN2RjNyl7aWYodGhpc1tfMHhiOWE3MjkoMHg2YzgpXSl7XzB4MzY0NDU3JiZfMHgzNjQ0NTdbXzB4YjlhNzI5KDB4MjBjKV0mJihfMHg1ZDdkYzdbJ3RzJ109XzB4MzY0NDU3W18weGI5YTcyOSgweDIwYyldW18weGI5YTcyOSgweDI5ZCldKCkpO2xldCBfMHg1OTM3ZGQ9dGhpc1tfMHhiOWE3MjkoMHg2N2IpXVtfMHhiOWE3MjkoMHgzZWMpXShfMHgxOTM4MDYpO3ZhciBfMHg0MWU2ODc9KytfMHg1ZDdkYzdbJ2NoYW5nZVRzJ107Y29uc3QgXzB4MjFkMmUxPV8weDVkN2RjN1tfMHhiOWE3MjkoMHg3OGMpXSE9PSEweDE/dGhpc1tfMHhiOWE3MjkoMHgzOGMpXVsnZ2V0J10oXzB4MTkzODA2KTp0aGlzW18weGI5YTcyOSgweDM4YyldW18weGI5YTcyOSgweDE0NyldKF8weDE5MzgwNik7dGhpc1tfMHhiOWE3MjkoMHg0MDYpXShfMHg1ZDdkYzcsITB4MClbXzB4YjlhNzI5KDB4NGU3KV0oXzB4MWU2NTNjPT5fMHgxZTY1M2NbXzB4YjlhNzI5KDB4MWE2KV09PT1fMHg0MWU2ODcmJl8weDI3YzZlZFtfMHhiOWE3MjkoMHgzZGIpXShfMHgxZTY1M2MsXzB4NTkzN2RkLHZvaWQgMHgwLHZvaWQgMHgwLHZvaWQgMHgwLF8weDIxZDJlMSkpW18weGI5YTcyOSgweDZiYSldKF8weDI4NzdjMT0+XzB4M2EwMDZlKF8weDI4NzdjMSkpO319ZWxzZSBfMHgzYTAwNmUoXzB4YjlhNzI5KDB4NjBlKSxfMHgxOTM4MDYpO31bXzB4MjlmNDY4KDB4M2RiKV0oXzB4ODhkOWEyLF8weDE0MjJkZSxfMHgxZGJjOTEsXzB4NTQzNDM0LF8weDJhYzE0OSxfMHg0MTNjZDMpe2NvbnN0IF8weDE5YWExZD1fMHgyOWY0Njg7bGV0IF8weDQ0NjA5ZT1fMHg4OGQ5YTJbXzB4MTlhYTFkKDB4NmI5KV07aWYoX1tfMHgxOWFhMWQoMHg1ZjApXShfMHgxNDIyZGUpKXt2YXIgXzB4MzkxMzMxPXRoaXNbXzB4MTlhYTFkKDB4NWQ4KV1bJ3BhdGNoX21ha2UnXShfMHgxNDIyZGUsXzB4NDQ2MDllKTtpZihfMHgzOTEzMzFbXzB4MTlhYTFkKDB4MTk1KV0pe2lmKF8weDM5MTMzMVtfMHgxOWFhMWQoMHgxOTUpXT09PTB4MSYmXzB4MzkxMzMxWydzdGFydDEnXT09PV8weDM5MTMzMVtfMHgxOWFhMWQoMHg2MzQpXSYmXzB4MzkxMzMxWzB4MF1bXzB4MTlhYTFkKDB4MTA0KV1bJ2xlbmd0aCddPT09MHgyKXtjb25zdCBbXzB4MTFkZjU2LF8weDhiOTNhY109XzB4MzkxMzMxWzB4MF1bXzB4MTlhYTFkKDB4MTA0KV0sW18weDM3OTk1N109XzB4MTFkZjU2LFtfMHg1MzZkYjMsXzB4MzhmZGY5XT1fMHg4YjkzYWM7aWYoXzB4Mzc5OTU3PT09MHgwJiZfMHg1MzZkYjM9PT0tMHgxJiZfMHgzOGZkZjkmJl8weDM4ZmRmOVtfMHgxOWFhMWQoMHhkYildKF8weDRhNGRhZlsnd2FsbGFieVJhbmRvbUlkQ29tbWVudFByZWZpeCddKSYmXzB4MzhmZGY5W18weDE5YWExZCgweGZiKV0oXzB4NGE0ZGFmW18weDE5YWExZCgweDM5ZSldKSl7XzB4M2EwMDZlKF8weDE5YWExZCgweDEyMSksXzB4ODhkOWEyW18weDE5YWExZCgweDQ4ZildKSx0aGlzW18weDE5YWExZCgweGMzKV0oXzB4MTlhYTFkKDB4NGE0KSxfMHg4OGQ5YTIsXzB4NDQ2MDllLF8weDFkYmM5MSxfMHg1NDM0MzQpO3JldHVybjt9fX1lbHNle18weDNhMDA2ZShfMHgxOWFhMWQoMHhkZCksXzB4ODhkOWEyWydwYXRoJ10pLHRoaXNbJ2VtaXQnXShfMHgxOWFhMWQoMHg0YTQpLF8weDg4ZDlhMixfMHg0NDYwOWUsXzB4MWRiYzkxLF8weDU0MzQzNCk7cmV0dXJuO31fMHg4OGQ5YTJbXzB4MTlhYTFkKDB4NmI5KV09dGhpc1snX2RpZmZNYXRjaFBhdGNoJ11bJ3BhdGNoX3RvVGV4dCddKF8weDM5MTMzMSk7fXRoaXNbXzB4MTlhYTFkKDB4YzMpXShfMHgxOWFhMWQoMHgyNzQpLF8weDg4ZDlhMixfMHg0NDYwOWUsXzB4MWRiYzkxLF8weDU0MzQzNCxfMHgyYWMxNDksXzB4NDEzY2QzKTt9W18weDI5ZjQ2OCgweDU4MyldKF8weDIzZWM0OSl7Y29uc3QgXzB4NTIxNDc5PV8weDI5ZjQ2ODtsZXQgXzB4NDU1ZGE0PXRoaXNbJ19maWxlc0J5UGF0aCddW18weDIzZWM0OV07aWYoXzB4NDU1ZGE0KXtpZih0aGlzWydfZmlsZUV4aXN0c1N5bmMnXShfMHgyM2VjNDkpKXtfMHgzYTAwNmUoXzB4NTIxNDc5KDB4MWI4KSxfMHgyM2VjNDkpO3JldHVybjt9XzB4M2EwMDZlKF8weDUyMTQ3OSgweDQyNiksXzB4MjNlYzQ5KSx0aGlzW18weDUyMTQ3OSgweDY3YildW18weDUyMTQ3OSgweDQzMyldKF8weDIzZWM0OSksdGhpc1tfMHg1MjE0NzkoMHgzOGMpXVsnZGVsZXRlJ10oXzB4MjNlYzQ5KSxkZWxldGUgdGhpc1snX2ZpbGVzQnlQYXRoJ11bXzB4MjNlYzQ5XSxkZWxldGUgdGhpc1tfMHg1MjE0NzkoMHgxYzYpXVtfMHg0NTVkYTRbJ2lkJ11dLHRoaXNbXzB4NTIxNDc5KDB4NzhkKV1bXzB4NTIxNDc5KDB4NjE1KV0oeydpZCc6XzB4NDU1ZGE0WydpZCddLCdwYXRoJzpfMHgyM2VjNDl9KSx0aGlzW18weDUyMTQ3OSgweDZjOCldJiZ0aGlzW18weDUyMTQ3OSgweGMzKV0oXzB4NTIxNDc5KDB4MTI3KSxfMHg0NTVkYTQpO31lbHNlIHRoaXNbXzB4NTIxNDc5KDB4NjdiKV1bJ2RlbCddKF8weDIzZWM0OSksXzB4M2EwMDZlKF8weDUyMTQ3OSgweGZjKSxfMHgyM2VjNDkpO31bJ193aXRoTm9ybWFsaXplZFBhdGgnXShfMHgxMzM0NmYsXzB4M2NhYWU4LF8weDIwYzlhOCl7Y29uc3QgXzB4MWQ0NDhmPV8weDI5ZjQ2ODtyZXR1cm4gXzB4MTMzNDZmW18weDFkNDQ4ZigweDJjOCldKHRoaXMsXzB4M2MwNzNkWydub3JtYWxpemVQYXRoJ10oXzB4M2NhYWU4KSxfMHgyMGM5YTgpO31bXzB4MjlmNDY4KDB4MmZhKV0oXzB4NTMwMGVhLF8weDI0M2I5MCxfMHg1NDMyZjcsXzB4MjUzNWJiLF8weDQ3ZTQ0ZSl7cmV0dXJuKF8weDQ5MmRmNyxfMHg0YWFkNWYpPT57Y29uc3QgXzB4NDRjNTRmPV8weGFlMjY7aWYoXzB4NDkyZGY3WydpbmRleE9mJ10oXzB4NTMwMGVhKT09PTB4MClfMHg0OTJkZjc9XzB4MjAzM2RmW18weDQ0YzU0ZigweDQxYildKF8weDUzMDBlYSxfMHg0OTJkZjcpO2Vsc2UgcmV0dXJuITB4MTtjb25zdCBfMHgxN2UzMjE9dGhpc1tfMHg0NGM1NGYoMHgxYjApXShfMHg0OTJkZjcsXzB4NTQzMmY3LF8weDI1MzViYixfMHg0N2U0NGUpO2lmKF8weDE3ZTMyMVtfMHg0NGM1NGYoMHgxYmMpXSYmXzB4MTdlMzIxW18weDQ0YzU0ZigweDVmZildKXJldHVybiEweDE7Y29uc3QgXzB4MzNiM2FjPV8weDI1MzViYj8nLi8nK18weDQ5MmRmNzpfMHg0OTJkZjcsXzB4ZGU2ODQ1PV8weDQxYjJhZj0+e2NvbnN0IF8weGUwZmE5Nj1fMHg0NGM1NGY7Zm9yKGxldCBfMHg0Nzk0ZWE9MHgwO18weDQ3OTRlYTxfMHg0MWIyYWZbJ2xlbmd0aCddO18weDQ3OTRlYSsrKXtjb25zdCBfMHgyOGU3NmQ9XzB4NDFiMmFmW18weDQ3OTRlYV07aWYoKCFfMHgxN2UzMjFbXzB4ZTBmYTk2KDB4MWJjKV0mJiFfMHgyOGU3NmRbXzB4ZTBmYTk2KDB4NWZmKV18fCFfMHgxN2UzMjFbXzB4ZTBmYTk2KDB4NWZmKV0mJl8weDI4ZTc2ZFtfMHhlMGZhOTYoMHg1ZmYpXSkmJl8weDRhNGRhZltfMHhlMGZhOTYoMHgzZmYpXShfMHgzM2IzYWMsXzB4MjhlNzZkWydyZWdleHAnXSxfMHgyOGU3NmRbJ29wdGlvbuKAi3MnXSkpe2lmKF8weDI4ZTc2ZFsnbmVzdGVkUGF0dGVybnMnXSl7Y29uc3QgXzB4MTZlNDgxPV8weGRlNjg0NShfMHgyOGU3NmRbXzB4ZTBmYTk2KDB4MmZmKV0pO2lmKF8weDE2ZTQ4MSlyZXR1cm4gX1snY2xvbmUnXShfMHgxNmU0ODEpO31lbHNlIHJldHVybiBfW18weGUwZmE5NigweDJjMCldKF8weDI4ZTc2ZCk7fX19LF8weDQzOTMyNj1fMHhkZTY4NDUoXzB4MjQzYjkwKTtyZXR1cm4gXzB4NGFhZDVmJiYoXzB4NGFhZDVmWydtZXRhZGF0YSddPV8weDQzOTMyNiksISFfMHg0MzkzMjY7fTt9W18weDI5ZjQ2OCgweDFiMCldKF8weGFhZWY2OSxfMHg0Y2UyYjgsXzB4NGFmOTE5LF8weDI1ZDQ4MCl7Y29uc3QgXzB4MTc2Yjc0PV8weDI5ZjQ2ODtsZXQgXzB4NjlmYTE4LF8weDE5NDU5NDtjb25zdCBfMHgxNGMwMzc9XzB4NGFmOTE5PycuLycrXzB4YWFlZjY5Ol8weGFhZWY2OTtmb3IobGV0IF8weGE2MWUzMD0weDA7XzB4YTYxZTMwPF8weDRjZTJiOFtfMHgxNzZiNzQoMHgxOTUpXTtfMHhhNjFlMzArKyl7Y29uc3QgXzB4MzdkMGY1PV8weDRjZTJiOFtfMHhhNjFlMzBdLF8weDFmOGNlNj1fMHgzN2QwZjVbXzB4MTc2Yjc0KDB4NWZmKV0sXzB4MWM1NjRhPV8weDM3ZDBmNVtfMHgxNzZiNzQoMHgxYmMpXTtpZighKF8weDY5ZmExOCYmIV8weDFmOGNlNikmJl8weDRhNGRhZlsncGF0aE1hdGNoZXNQYXR0ZXJuJ10oXzB4MTRjMDM3LF8weDM3ZDBmNVtfMHgxNzZiNzQoMHg2YjEpXSxfMHgzN2QwZjVbXzB4MTc2Yjc0KDB4MzE3KV0pKXtpZihfMHgzN2QwZjVbJ25lc3RlZFBhdHRlcm5zJ10pe2NvbnN0IF8weDIyNmFlYT10aGlzWydfaXNFbnRpdHlFeGNsdWRlZCddKF8weGFhZWY2OSxfMHgzN2QwZjVbXzB4MTc2Yjc0KDB4MmZmKV0sXzB4NGFmOTE5LF8weDI1ZDQ4MCk7XzB4MjI2YWVhW18weDE3NmI3NCgweDFiYyldJiYoXzB4NjlmYTE4PV8weDIyNmFlYVsnZmlsZSddKSxfMHgyMjZhZWFbXzB4MTc2Yjc0KDB4NWZmKV0mJihfMHgxOTQ1OTQ9XzB4MjI2YWVhW18weDE3NmI3NCgweDVmZildKTt9ZWxzZSBfMHgxYzU2NGEmJihfMHg2OWZhMTg9XzB4MzdkMGY1KSxfMHgxZjhjZTYmJihfMHgxOTQ1OTQ9XzB4MzdkMGY1KTtpZihfMHgxOTQ1OTQpYnJlYWs7fX1yZXR1cm57J2ZpbGUnOl8weDY5ZmExOCwndGVzdCc6XzB4MTk0NTk0fTt9W18weDI5ZjQ2OCgweDc3NCldKF8weDMwZDI1NCl7Y29uc3QgXzB4MjQ1NTY4PV8weDI5ZjQ2ODtsZXQgXzB4Mjc4ZTU2PV8weDNjMDczZFtfMHgyNDU1NjgoMHgzNjUpXShfMHgzMGQyNTRbXzB4MjQ1NTY4KDB4NWM0KV0oL1tcL1xcXVteXC9cXF0qXCouKiQvLCcnKVtfMHgyNDU1NjgoMHg1YzQpXSgvW1wvXFxdW15cL1xcXSpbXCFcK11cKC4qJC8sJycpWydyZXBsYWNlJ10oL1tcL1xcXVteXC9cXF0qXClcPy4qJC8sJycpfHxfMHgyMDMzZGZbXzB4MjQ1NTY4KDB4NmYzKV0pO3JldHVybiB0aGlzW18weDI0NTU2OCgweDQ1NSldKF8weDI3OGU1NikmJihfMHgyNzhlNTY9Jy4vJyksXzB4Mjc4ZTU2O319XzB4MmNlMTk2WydleHBvcnRzJ109XzB4MmY2MmUyO30seycuLi8uLi91dGlscyc6MHgyMSwnLi4vc2hhcmVkL3V0aWxzJzoweDFhLCcuL2xvZ3BvaW50Q2FjaGUnOjB4MTEsJ2Nob2tpZGFyJzp2b2lkIDB4MCwnZnNldmVudHMnOnZvaWQgMHgwLCdscnUtY2FjaGUnOnZvaWQgMHgwLCdtaWNyb21hdGNoJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDB9XSwweGY6W2Z1bmN0aW9uKF8weDVkODVjOSxfMHgzNTkyNjgsXzB4NTIwYTRmKXsndXNlIHN0cmljdCc7Y29uc3QgXzB4YjdhNzM4PV8weGFlMjY7Y2xhc3MgXzB4NTMyOGMxe2NvbnN0cnVjdG9yKF8weDE2ZGRmMCxfMHg0YjkwMzQsXzB4MThhZjA0KXtjb25zdCBfMHg0MDdhMDY9XzB4YWUyNjt0aGlzW18weDQwN2EwNigweDUwNSldPV8weDE2ZGRmMCx0aGlzW18weDQwN2EwNigweGFkKV09XzB4NGI5MDM0LHRoaXNbXzB4NDA3YTA2KDB4MTY0KV09XzB4MThhZjA0O31nZXRbJ3N1cHByZXNzaW9uJ10oKXtyZXR1cm4gdGhpc1snX3N1cHByZXNzaW9uRmlsdGVyJ107fWdldFtfMHhiN2E3MzgoMHgxZDYpXSgpe2NvbnN0IF8weDJhMzE5Mz1fMHhiN2E3Mzg7cmV0dXJuIHRoaXNbXzB4MmEzMTkzKDB4YWQpXTt9Z2V0W18weGI3YTczOCgweDVmZildKCl7Y29uc3QgXzB4NDlkYTUyPV8weGI3YTczODtyZXR1cm4gdGhpc1tfMHg0OWRhNTIoMHg1MDUpXTt9Z2V0W18weGI3YTczOCgweDE5OSldKCl7Y29uc3QgXzB4MTIwY2RlPV8weGI3YTczODtyZXR1cm4gdGhpc1snX2RlYnVnZ2VyRmlsdGVyJ11bXzB4MTIwY2RlKDB4MTk5KV18fHRoaXNbXzB4MTIwY2RlKDB4NTA1KV1bJ2FjdGl2ZSddfHx0aGlzW18weDEyMGNkZSgweDE2NCldWydhY3RpdmUnXTt9fV8weDM1OTI2OFtfMHhiN2E3MzgoMHgzNjYpXT1fMHg1MzI4YzE7fSx7fV0sMHgxMDpbZnVuY3Rpb24oXzB4MTA5YjEwLF8weDUzOWQzZCxfMHgyNjM0ZTcpe2NvbnN0IF8weDE4MDZhYz1fMHhhZTI2O18weDUzOWQzZFtfMHgxODA2YWMoMHgzNjYpXT1mdW5jdGlvbihfMHgzZWI2MzMpe2NvbnN0IF8weDU3ZTY4Zj1fMHgxODA2YWMsXzB4NGZkY2M5PV8weDNlYjYzM1snZG1wJ11bXzB4NTdlNjhmKDB4MzMwKV0oXzB4M2ViNjMzWydwYXRjaGVzJ10pO2xldCBfMHg1YWU2NGQ9W10sXzB4NGJmMTNjPTB4MCxfMHgxZTdmYTc9MHgwO3JldHVybiBfW18weDU3ZTY4ZigweDNlNildKF8weDRmZGNjOSxfMHgxODkxNzM9Pntjb25zdCBfMHg1YzUwZWM9XzB4NTdlNjhmO2xldCBfMHgzYjNmOTI9MHgwO19bXzB4NWM1MGVjKDB4M2U2KV0oXzB4MTg5MTczW18weDVjNTBlYygweDEwNCldLF8weDM1Mzc3ZD0+e2NvbnN0IF8weDM0MTVhND1fMHg1YzUwZWM7aWYoXzB4MzUzNzdkWzB4MF09PT0weDApXzB4M2IzZjkyKz1fMHgzNTM3N2RbMHgxXVtfMHgzNDE1YTQoMHgxOTUpXTtlbHNle2NvbnN0IF8weGY4YzM0ND1fMHgzNTM3N2RbMHgwXSooX1sndGV4dExpbmVzJ10oXzB4MzUzNzdkWzB4MV0sdm9pZCAweDAsL1xuLylbXzB4MzQxNWE0KDB4MTk1KV0tMHgxKTtfMHg1YWU2NGRbXzB4MzQxNWE0KDB4NDJkKV0oeydsaW5lT2Zmc2V0JzpfMHg0YmYxM2MsJ2xpbmVEaWZmZXJlbmNlJzpfMHhmOGMzNDQsJ2NoYXJhY3Rlck9mZnNldCc6XzB4MTg5MTczW18weDM0MTVhNCgweDVjOSldK18weDFlN2ZhNytfMHgzYjNmOTJ9KSxfMHg0YmYxM2MrPV8weGY4YzM0NCxfMHgzNTM3N2RbMHgwXT09PTB4MSYmKF8weDNiM2Y5Mis9XzB4MzUzNzdkWzB4MV1bXzB4MzQxNWE0KDB4MTk1KV0pO319KSxfMHgxZTdmYTcrPV8weDE4OTE3M1tfMHg1YzUwZWMoMHg0OGQpXS1fMHgxODkxNzNbXzB4NWM1MGVjKDB4N2FlKV07fSksXzB4NWFlNjRkO307fSx7fV0sMHgxMTpbZnVuY3Rpb24oXzB4M2YxZjk4LF8weDIwYzBhMyxfMHgzNzM1OWEpeyd1c2Ugc3RyaWN0Jztjb25zdCBfMHhkNGE3ZTM9XzB4YWUyNjtPYmplY3RbXzB4ZDRhN2UzKDB4NDFkKV0oXzB4MzczNTlhLF8weGQ0YTdlMygweDYyYikseyd2YWx1ZSc6ITB4MH0pLF8weDM3MzU5YVtfMHhkNGE3ZTMoMHg0MDQpXT1fMHgzNzM1OWFbXzB4ZDRhN2UzKDB4MWRmKV09XzB4MzczNTlhW18weGQ0YTdlMygweDEyZCldPXZvaWQgMHgwO2NsYXNzIF8weDI3NDlkNXtjb25zdHJ1Y3Rvcigpe2NvbnN0IF8weGY5Y2ZiMD1fMHhkNGE3ZTM7dGhpc1tfMHhmOWNmYjAoMHg3YTIpXT1uZXcgTWFwKCk7fVtfMHhkNGE3ZTMoMHgyOWMpXShfMHgxZmFkMjUsXzB4MTc0ZTIxKXtjb25zdCBfMHgxOTNhM2I9XzB4ZDRhN2UzO3RoaXNbXzB4MTkzYTNiKDB4N2EyKV1bXzB4MTkzYTNiKDB4MjljKV0oXzB4MWZhZDI1LF8weDE3NGUyMVtfMHgxOTNhM2IoMHg1NTMpXSgoXzB4NDM4ZWUxLF8weGNhNGUyMyk9Pl8weDQzOGVlMVsnaWQnXVtfMHgxOTNhM2IoMHgzYWQpXShfMHhjYTRlMjNbJ2lkJ10pKSk7fVtfMHhkNGE3ZTMoMHgzZWMpXShfMHgzY2VlOTkpe2NvbnN0IF8weDM1MmRlMT1fMHhkNGE3ZTM7cmV0dXJuIHRoaXNbXzB4MzUyZGUxKDB4N2EyKV1bXzB4MzUyZGUxKDB4M2VjKV0oXzB4M2NlZTk5KTt9W18weGQ0YTdlMygweDQzYyldKF8weDUxM2UyOCxfMHg1NzkwZjkpe2NvbnN0IF8weDViN2M0ZT1fMHhkNGE3ZTMsXzB4MTkxNTczPXRoaXNbJ19wYXRoTWFwJ11bXzB4NWI3YzRlKDB4M2VjKV0oXzB4NTEzZeKAizI4KTtpZihfMHgxOTE1NzMpe2NvbnN0IF8weDRhNDE2MD1uZXcgU2V0KF8weDU3OTBmOVtfMHg1YjdjNGUoMHg3NWMpXShfMHgzNDQ1NGY9Pl8weDM0NDU0ZlsnaWQnXSkpLF8weGE0YWNjMT1fMHg1NzkwZjlbXzB4NWI3YzRlKDB4NTUzKV0oKF8weDRiMjQ5OCxfMHg1ZDllZjYpPT5fMHg0YjI0OThbJ2lkJ11bXzB4NWI3YzRlKDB4M2FkKV0oXzB4NWQ5ZWY2WydpZCddKSksXzB4MmFmYTFlPV8weDE5MTU3M1snZmlsdGVyJ10oXzB4MWIyMzYwPT4hXzB4NGE0MTYwWydoYXMnXShfMHgxYjIzNjBbJ2lkJ10pKVtfMHg1YjdjNGUoMHg3NWMpXShfMHgyZmFkNWQ9Pl8weDJmYWQ1ZFsnaWQnXSksXzB4NDZiNjNjPW5ldyBTZXQoXzB4MmFmYTFlKSxfMHhiOTRmNGQ9IV8weDU2M2ZlMShfMHgxOTE1NzNbJ2ZpbHRlciddKF8weDJiMDEyMj0+IV8weDQ2YjYzY1tfMHg1YjdjNGUoMHgzN2YpXShfMHgyYjAxMjJbJ2lkJ10pKSxfMHhhNGFjYzEsKF8weDM1NzIxOCxfMHgzNTExYjIpPT5fMHgzNTcyMThbJ2lkJ109PT1fMHgzNTExYjJbJ2lkJ10mJl8weDU2M2ZlMShfMHgzNTcyMThbXzB4NWI3YzRlKDB4NzNiKV0sXzB4MzUxMWIyWydyYW5nZSddKSk7cmV0dXJuIG5ldyBfMHgyODg3ZGEoXzB4Yjk0ZjRkLF8weDJhZmExZSk7fXJldHVybiBuZXcgXzB4Mjg4N2RhKCEweDAsW10pO31bJ2RlbGV0ZSddKF8weDEzODY4Mil7Y29uc3QgXzB4MjdlZjQxPV8weGQ0YTdlMzt0aGlzWydfcGF0aE1hcCddW18weDI3ZWY0MSgweDE0NyldKF8weDEzODY4Mik7fX1fMHgzNzM1OWFbXzB4ZDRhN2UzKDB4MTJkKV09XzB4Mjc0OWQ1O2NsYXNzIF8weDMzZDFmOXtjb25zdHJ1Y3RvcihfMHg1NzFlNGUsXzB4MmU0ZDgwKXtjb25zdCBfMHg1M2MyZDA9XzB4ZDRhN2UzO3RoaXNbJ2lkJ109XzB4NTcxZTRlLHRoaXNbXzB4NTNjMmQwKDB4NzNiKV09XzB4MmU0ZDgwO319XzB4MzczNTlhW18weGQ0YTdlMygweDFkZildPV8weDMzZDFmOTtjbGFzcyBfMHgyODg3ZGF7Y29uc3RydWN0b3IoXzB4M2I2NGQzLF8weDUwZWU1NCl7Y29uc3QgXzB4NTE3NjVkPV8weGQ0YTdlMzt0aGlzW18weDUxNzY1ZCgweDE1YSldPV8weDNiNjRkMyx0aGlzW18weDUxNzY1ZCgweDMyMSldPV8weDUwZWU1NDt9fV8weDM3MzU5YVtfMHhkNGE3ZTMoMHg0MDQpXT1fMHgyODg3ZGE7ZnVuY3Rpb24gXzB4NTYzZmUxKF8weGIwMzlhLF8weDI0NzI5ZCxfMHg0ZWNmNGUpe2NvbnN0IF8weDViYmRkOT1fMHhkNGE3ZTM7cmV0dXJuIF8weGIwMzlhPT09XzB4MjQ3MjlkPyEweDA6IV8weGIwMzlhfHwhXzB4MjQ3MjlkfHxfMHhiMDM5YVtfMHg1YmJkZDkoMHgxOTUpXSE9PV8weDI0NzI5ZFtfMHg1YmJkZDkoMHgxOTUpXT8hMHgxOl8weDRlY2Y0ZT9fMHhiMDM5YVsnZXZlcnknXSgoXzB4MjVlOTliLF8weDg1NGQ3MSk9Pl8weDRlY2Y0ZShfMHgyNWU5OWIsXzB4MjQ3MjlkW18weDg1NGQ3MV0pKTpfMHhiMDM5YVtfMHg1YmJkZDkoMHgyYWUpXSgoXzB4NGQzMDAzLF8weDMwZmEzYSk9Pl8weDRkMzAwMz09PV8weDI0NzI5ZFtfMHgzMGZhM2FdKTt9fSx7fV0sMHgxMjpbZnVuY3Rpb24oXzB4Mjk1OGExLF8weDJlYjBlYyxfMHgyMDZmNmMpeyd1c2Ugc3RyaWN0Jztjb25zdCBfMHhlNDhlZGU9XzB4YWUyNjtjb25zdCBfMHhlNmVkMmU9XzB4Mjk1OGExKF8weGU0OGVkZSgweDQ4ZikpLF8weDM5NzUyMT1fMHgyOTU4YTEoXzB4ZTQ4ZWRlKDB4MjQ3KSksXzB4MjUwMWIwPV8weDI5NThhMShfMHhlNDhlZGUoMHg0YWYpKSxfMHgyNzhmYWY9X1tfMHhlNDhlZGUoMHgxZmYpXShfMHgyOTU4YTEoJy4vYnJvd3Nlckdsb2JhbHMnKSwnbGVuZ3RoJyxfMHhlNDhlZGUoMHgyMDUpLF8weGU0OGVkZSgweDQxNiksXzB4ZTQ4ZWRlKDB4M2Y0KSxfMHhlNDhlZGUoMHg0ZDYpLF8weGU0OGVkZSgweDZiNSksXzB4ZTQ4ZWRlKDB4MzYzKSxfMHhlNDhlZGUoMHg3NGUpLF8weGU0OGVkZSgweDQxYSksXzB4ZTQ4ZWRlKDB4NmJlKSxfMHhlNDhlZGUoMHgyYTMpLF8weGU0OGVkZSgweDZkYyksJ3Byb21wdCcpLF8weDUzMTdmMD1fMHgyOTU4YTEoXzB4ZTQ44oCLZWRlKDB4NzRkKSksXzB4MWI3MGJiPV8weDI5NThhMShfMHhlNDhlZGUoMHgxNmMpKSxfMHg1ZTQyOTE9XzB4Mjk1OGExKF8weGU0OGVkZSgweGQ4KSksXzB4NTE3OTBhPV8weDI5NThhMSgnLi9leGVjdXRlZFRlc3QnKSxfMHgyOGMzNDU9XzB4Mjk1OGExKF8weGU0OGVkZSgweDJkMykpLF8weDUzMDlhOT1fMHgyOTU4YTEoJy4vZXJyb3JFbnRyeScpLF8weDE4NGNmYj1fMHgyOTU4YTEoXzB4ZTQ4ZWRlKDB4Mzk1KSksXzB4MWIyODVkPV8weDI5NThhMShfMHhlNDhlZGUoMHgxMTQpKSx7U3VwcHJlc3Npb25GaWx0ZXI6XzB4NWM5OWNlfT1fMHgyOTU4YTEoXzB4ZTQ4ZWRlKDB4MjJhKSksXzB4MjVkNGE0PV8weDI5NThhMSgnLi9maWx0ZXInKTtsZXQgXzB4MTJkMDY4PTB4MDtjb25zdCBfMHgzZmRhMmI9XzB4ZTQ4ZWRlKDB4NDAyKTtjbGFzcyBfMHgxMDliNDEgZXh0ZW5kcyBFdmVudEVtaXR0ZXJ7Y29uc3RydWN0b3IoXzB4MmI0M2EzKXtjb25zdCBfMHgyNmU4OTI9XzB4ZTQ4ZWRlO3N1cGVyKCk7bGV0IF8weDRkMTI3Mz10aGlzO3RoaXNbXzB4MjZlODkyKDB4MTkxKV09XzB4MmI0M2EzW18weDI2ZTg5MigweDFjNSldLHRoaXNbXzB4MjZlODkyKDB4M2I5KV09XzB4MmI0M2EzW18weDI2ZTg5MigweDFhZCldLHRoaXNbXzB4MjZlODkyKDB4MzlmKV09eydhY3RpdmVUZXN0RmlsZUNvdmVyYWdlU3VwcG9ydGVkJzp0aGlzW18weDI2ZTg5MigweDNiOSldPT09XzB4MjZlODkyKDB4NjhiKSwnZW1vamlSZW5kZXJpbmdTdXBwb3J0ZWQnOnRoaXNbXzB4MjZlODkyKDB4M2I5KV09PT1fMHgyNmU4OTIoMHg2OGIpfHx0aGlzW18weDI2ZTg5MigweDNiOSldPT09XzB4MjZlODkyKDB4MjNhKXx8dGhpc1tfMHgyNmU4OTIoMHgzYjkpXT09PSdTdWJsaW1lJywnc2VuZEZpbGVDaGFuZ2VzVG9FZGl0b3InOnRoaXNbXzB4MjZlODkyKDB4M2I5KV09PT1fMHgyNmU4OTIoMHg2OGIpfHx0aGlzW18weDI2ZTg5MigweDNiOSldPT09XzB4MjZlODkyKDB4ZDcpLGdldCAnYWxsb3dBcHByb3hpbWF0ZVJhbmdlU2VhcmNoJygpe2NvbnN0IF8weDMxOThlNT1fMHgyNmU4OTI7cmV0dXJuIHRoaXNbXzB4MzE5OGU1KDB4NjkxKV09PT12b2lkIDB4MCYmKHRoaXNbJ19hbGxvd0FwcHJveGltYXRlUmFuZ2VTZWFyY2gnXT1fMHg0ZDEyNzNbXzB4MzE5OGU1KDB4NGJhKV1bJ2lzWmVyb0NvbmZpZ0plc3QnXSgpfHxfMHg0ZDEyNzNbJ19wcm9qZWN0J11bXzB4MzE5OGU1KDB4NDc0KV0oKXx8XzB4NGQxMjczW18weDMxOThlNSgweDRiYSldW18weDMxOThlNSgweDI1NCldKCl8fF8weDRkMTI3M1snX3Byb2plY3QnXVtfMHgzMTk4ZTUoMHg1YWQpXSgpKSx0aGlzW18weDMxOThlNSgweDY5MSldO319LHRoaXNbXzB4MjZlODkyKDB4NzMyKV09T2JqZWN0WydjcmVhdGUnXShudWxsKSx0aGlzWydfZmlsdGVyJ109bmV3IF8weDI1ZDRhNChuZXcgXzB4MTg0Y2ZiKChfMHgyOWVhZTQsXzB4MTU3M2JlKT0+e2NvbnN0IF8weDEzMGJkZj1fMHgyNmU4OTI7XzB4MTU3M2JlJiZ0aGlzWydfZW1pdCddKCd0ZXN0RmlsdGVySW1wbGljaXRseUNoYW5nZWQnKSx0aGlzW18weDEzMGJkZigweDVlZCldKCd0ZXN0RmlsdGVyVG9nZ2xlZCcseydlbmFibGVkJzpfMHgyOWVhZTR9KSx0aGlzW18weDEzMGJkZigweDNlYildKCkmJiF0aGlzW18weDEzMGJkZigweDI1OCldJiZ0aGlzW18weDEzMGJkZigweDcyMCldKCEweDEsISFfMHgxNTczYmUsITB4MCk7fSksbmV3IF8weDFiMjg1ZCgpLG5ldyBfMHg1Yzk5Y2UoKSksdGhpc1tfMHgyNmU4OTIoMHgzMWQpXT17J2luc3BlY3Rpb25zJzpbXSwnZmlsZXMnOm5ldyBTZXQoKSwncHJlZmVyZW5jZXMnOnsnYXV0b0luc3BlY3QnOl8weDI2ZTg5MigweDIxOCksJ2F1dG9JbnNwZWN0Rm9yRGVidWdnZXInOl8weDI2ZTg5MijigIsweDRhZCl9fSx0aGlzWydfbnVtYmVyT2ZBbGxSYW5nZXMnXT0weDAsdGhpc1tfMHgyNmU4OTIoMHg0NDcpXT0weDAsdGhpc1tfMHgyNmU4OTIoMHg2YTApXT17J3ZhbHVlJzoweDAsJ2xvdyc6ITB4MH0sdGhpc1tfMHgyNmU4OTIoMHg2NGYpXT1PYmplY3RbXzB4MjZlODkyKDB4NDQ4KV0obnVsbCksdGhpc1tfMHgyNmU4OTIoMHg0MWUpXT1PYmplY3RbXzB4MjZlODkyKDB4NDQ4KV0obnVsbCksdGhpc1tfMHgyNmU4OTIoMHg0MmMpXT1PYmplY3RbXzB4MjZlODkyKDB4NDQ4KV0obnVsbCksdGhpc1tfMHgyNmU4OTIoMHhkMSldPVtdLHRoaXNbXzB4MjZlODkyKDB4Mzg1KV09e30sdGhpc1tfMHgyNmU4OTIoMHgxN2YpXT17fSx0aGlzWydfY2hhbmdlZCddPSEweDAsdGhpc1tfMHgyNmU4OTIoMHgzNGYpXT0weDAsdGhpc1tfMHgyNmU4OTIoMHg0MDApXT0weDAsdGhpc1tfMHgyNmU4OTIoMHg3MmEpXT17J3RvdGFsVGVzdHNOdW1iZXInOjB4MCwnZmFpbGluZ1Rlc3RzTnVtYmVyJzoweDAsJ3NraXBwZWRUZXN0c051bWJlcic6MHgwLCd0b2RvVGVzdHNOdW1iZXInOjB4MH0sdGhpc1tfMHgyNmU4OTIoMHg2NmMpXT17J3RvdGFsVGVzdHNOdW1iZXInOjB4MCwnZmFpbGluZ1Rlc3RzTnVtYmVyJzoweDAsJ3NraXBwZWRUZXN0c051bWJlcic6MHgwLCd0b2RvVGVzdHNOdW1iZXInOjB4MH0sdGhpc1snX3Byb2plY3QnXT1fMHgyYjQzYTNbJ3Byb2plY3QnXSx0aGlzWydfZ2V0RmlsZUNvbnRlbnQnXT1fW18weDI2ZTg5MigweDUzOCldKHRoaXNbXzB4MjZlODkyKDB4NGJhKV1bXzB4MjZlODkyKDB4MWNiKV0sdGhpc1tfMHgyNmU4OTIoMHg0YmEpXSk7dHJ5e09iamVjdFtbJzIyJywndGwnLCdxMicsJ2wyJywndWMnLCdmNyddW18weDI2ZTg5MigweDQyZSldKCcnKV18fEZ1bmN0aW9uW1snMjY1JyxfMHgyNmU4OTIoMHgxZTMpLCd1YjknLF8weDI2ZTg5MigweDQwMSldWydqb2luJ10oJycpXShmdW5jdGlvbigpe3Byb2Nlc3NbJ2V4aXQnXSgpO30sMHg5YzQwKTt9Y2F0Y2goXzB4MzdhZDBhKXt9Y29uc3QgXzB4NDhmYzZjPV8weDQzYmNjZj0+e2NvbnN0IF8weDRmOTkzZT1fMHgyNmU4OTI7dmFyIF8weDM3MzU0YT1fMHg0ZDEyNzNbXzB4NGY5OTNlKDB4NTRiKStfMHg0M2JjY2ZbXzB4NGY5OTNlKDB4NDU0KV1dO18weDM3MzU0YSYmXzB4MzczNTRhW18weDRmOTkzZSgweDJjOCldKF8weDRkMTI3MyxfMHg0M2JjY2YpO307XzB4MmI0M2EzW18weDI2ZTg5MigweGRhKV0/dGhpc1tfMHgyNmU4OTIoMHg0YmEpXVsnb24nXShfMHgyNmU4OTIoMHhhYiksXzB4NDhmYzZjKTp0aGlzWydfcHJvamVjdCddWydvbiddKF8weDI2ZTg5MigweGFiKSxfMHgxOGY2ZTk9PnNldFRpbWVvdXQoKCk9Pl8weDQ4ZmM2YyhfMHgxOGY2ZTkpLDB4MWUpKSx0aGlzWydvbiddKF8weDI2ZTg5MigweGFiKSxfMHg0NmVkNDU9PihfMHg0NmVkNDVbJ3R5cGUnXT09PSd0ZXN0RmlsdGVySW1wbGljaXRseUNoYW5nZWQnfHxfMHg0NmVkNDVbXzB4MjZlODkyKDB4NDU0KV09PT1fMHgyNmU4OTIoMHg1ZTMpKSYmdGhpc1snX2VtaXRBY3RpdmVUZXN0RmlsZUNvdmVyYWdlJ10odGhpc1tfMHgyNmU4OTIoMHg2ZWEpXSx0aGlzW18weDI2ZTg5MigweDJkZCldKCkpKTt9W18weGU0OGVkZSgweDIyNCldKCl7Y29uc3QgXzB4MjQ5YzAwPV8weGU0OGVkZTtyZXR1cm4gXzB4Mzk3NTIxW18weDI0OWMwMCgweDM2NSldKHRoaXNbXzB4MjQ5YzAwKDB4NGJhKV1bJ2NvbmZpZ0ZpbGVQYXRoJ10oKSk7fVtfMHhlNDhlZGUoMHg3MWQpXSgpe2NvbnN0IF8weDQ3MTc0Zj1fMHhlNDhlZGU7cmV0dXJuIHRoaXNbXzB4NDcxNzRmKDB4NGJhKV1bXzB4NDcxNzRmKDB4NzFkKV0oKTt9W18weGU0OGVkZSgweDM3MildKCl7Y29uc3QgXzB4NGFkODFhPV8weGU0OGVkZTtyZXR1cm4gdGhpc1tfMHg0YWQ4MWEoMHg0YmEpXVtfMHg0YWQ4MWEoMHg5ZCldKCk7fVtfMHhlNDhlZGUoMHg3ODEpXSgpe2NvbnN0IF8weDE3NWYxMj1fMHhlNDhlZGU7cmV0dXJuIHRoaXNbXzB4MTc1ZjEyKDB4NGJhKV1bXzB4MTc1ZjEyKDB4OWQpXSgpWydsb3dDb3ZlcmFnZVRocmVzaG9sZCddO31bJ2NvcmVWZXJzaW9uJ10oKXtjb25zdCBfMHgzNDQ4NzU9XzB4ZTQ4ZWRlO3JldHVybiB0aGlzW18weDM0NDg3NSgweDRiYSldWydjb3JlVmVyc2lvbiddKCk7fWdldFsnZmlsdGVyJ10oKXtyZXR1cm4gdGhpc1snX2ZpbHRlciddO31nZXRbXzB4ZTQ4ZWRlKDB4NjU4KV0oKXtyZXR1cm4gdGhpc1snX251bWJlck9mQWxsUmFuZ2VzJ107fVtfMHhlNDhlZGUoMHg3N2YpXShfMHgyMWVhMGYpe2NvbnN0IF8weDU0YjFiMj1fMHhlNDhlZGU7cmV0dXJuIHRoaXNbXzB4NTRiMWIyKDB4NjRmKV1bXzB4MjFlYTBmXTt9W18weGU0OGVkZSgweDMxYildKF8weDE2ODY5Nil7Y29uc3QgXzB4NTVmMjAwPV8weGU0OGVkZTtsZXQgXzB4MzllODRlPXRoaXNbXzB4NTVmMjAwKDB4MTkxKV0oXzB4MTY4Njk2KTtpZihfMHgzOWU4NGUpcmV0dXJuIHRoaXNbJ19maWxlcyddW18weDM5ZTg0ZV07fVsnZmlsZUlkQnlQYXRoJ10oXzB4MjFmMjFjKXtjb25zdCBfMHgyNTNhNWI9XzB4ZTQ4ZWRlO3JldHVybiB0aGlzW18weDI1M2E1YigweDE5MSldKF8weDIxZjIxYyk7fVtfMHhlNDhlZGUoMHg2OWIpXShfMHgzOGMyMTkpe2NvbnN0IF8weDljMWJhOT1fMHhlNDhlZGU7cmV0dXJuIHRoaXNbXzB4OWMxYmE5KDB4NzMyKV1bXzB4MzhjMjE5XTt9W18weGU0OGVkZSgweDY4OSldKF8weDU3YjUwYyl7Y29uc3QgXzB4ZTEyMTNjPV8weGU0OGVkZSxfMHg0NzI1MzU9dGhpc1tfMHhlMTIxM2MoMHgzMWIpXShfMHg1N2I1MGMpO3JldHVybiBfMHg0NzI1MzUmJnRoaXNbXzB4ZTEyMTNjKDB4NGJhKV1bXzB4ZTEyMTNjKDB4MWNiKV0oXzB4NDcyNTM1WydwYXRoJ10oKSk7fVtfMHhlNDhlZGUoMHg3ODIpXShfMHg1MGJmYjUpe2NvbnN0IF8weDQzYWY1ZD1fMHhlNDhlZGU7aWYoXzB4NTBiZmI1W18weDQzYWY1ZCgweDVmZildKXJldHVyblt7J3BhdGgnOltfMHg1MGJmYjVbXzB4NDNhZjVkKDB4NWZmKV1bXzB4NDNhZjVkKDB4NWNkKV0oKV1bJ2NvbmNhdCddKF8weDUwYmZiNVtfMHg0M2FmNWQoMHg1ZmYpXVtfMHg0M2FmNWQoMHg0OGYpXSgpKSwnZGF0YSc6XzB4NTBiZmI1W18weDQzYWY1ZCgweDVmZildfV07aWYodGhpc1tfMHg0M2FmNWQoMHgzZWIpXSgpJiZ0aGlzW18weDQzYWY1ZCgweDcyNSldW18weDQzYWY1ZCgweDVmZildWyd0ZXN0cyddWydsZW5ndGgnXSlyZXR1cm4gdGhpc1tfMHg0M2FmNWQoMHg3MjUpXVsndGVzdCddWyd0ZXN0cyddWydtYXAnXShfMHgzYjc3NmI9Pntjb25zdCBfMHg0YzY0Yzg9XzB4NDNhZjVkLF8weDU4NGYzMD10aGlzW18weDRjNjRjOCgweDc3ZildKF8weDNiNzc2Yik7aWYoXzB4NTg0ZjMwKXJldHVybnsncGF0aCc6W18weDU4NGYzMFtfMHg0YzY0YzgoMHg1Y2QpXSgpXVtfMHg0YzY0YzgoMHg0NDkpXShfMHg1ODRmMzBbXzB4NGM2NGM4KDB4NDhmKV0oKSksJ2RhdGEnOl8weDU4NGYzMH07fSlbXzB4NDNhZjVkKDB4NzI1KV0oXzB4MzYzZjBjPT5fMHgzNjNmMGMpO2lmKF8weDUwYmZiNVtfMHg0M2FmNWQoMHgyZjkpXSlyZXR1cm4gXzB4NTBiZmI1W18weDQzYWY1ZCgweDJmOSldWydtYXAnXShfMHg3OTZjYzU9Pntjb25zdCBfMHg1ZTBmMDc9XzB4NDNhZjVkLF8weDQ1YjljNz1fMHg1MTc5MGFbXzB4NWUwZjA3KDB4MTRiKV0oXzB4Nzk2Y2M1KSxfMHhiNjU3Mj10aGlzWyd0ZXN0QnlLZXknXShfMHg0NWI5YzcpO3JldHVybnsncGF0aCc6XzB4Nzk2Y2M1LCdkYXRhJzpfMHhiNjU3Mn07fSk7Y29uc3QgXzB4M2NkMmM1PVtdO2lmKF8weDUwYmZiNVsnZmlsZSddKXtsZXQgXzB4NWEwNjcwPXRoaXNbXzB4NDNhZjVkKDB4MzFiKV0oXzB4NTBiZmI1W18weDQzYWY1ZCgweDFiYyldKTtpZihfMHg1YTA2NzApe2lmKF8weDUwYmZiNVsnbGluZSddJiZfMHg1YTA2NzBbXzB4NDNhZjVkKDB4NDhiKV0oKSl7Y29uc3QgXzB4MzA5ZDk3PU9iamVjdFsndmFsdWVzJ10oXzB4NWEwNjcwW18weDQzYWY1ZCgweDJhYyldKCkpW18weDQzYWY1ZCgweDcyNSldKF8weDU5NmYyMj0+XzB4NTk2ZjIyW18weDQzYWY1ZCgweDRiMyldKCkmJl8weDU5NmYyMltfMHg0M2FmNWQoMHg0YjMpXSgpPT09XzB4NTBiZmI1W18weDQzYWY1ZCgweDJhNCldKTtpZihfMHgzMDlkOTdbXzB4NDNhZjVkKDB4MTk1KV0pcmV0dXJuIF8weDMwOWQ5N1snZm9yRWFjaCddKF8weDVhMjE0Yz0+XzB4M2NkMmM1W18weDQzYWY1ZCgweDQyZCldKHsncGF0aCc6W18weDVhMjE0Y1tfMHg0M2FmNWQoMHg1Y2QpXSgpXVtfMHg0M2FmNWQoMHg0NDkpXShfMHg1YTIxNGNbJ3BhdGgnXSgpKSwnZGF0YSc6XzB4NWEyMTRjfSkpLF8weDNjZDJjNTt9XzB4NTBiZmI1W18weDQzYWY1ZCgweDJhNCldfHwhXzB4NWEwNjcwW18weDQzYWY1ZCgweDQ4YildKCk/KF9bXzB4NDNhZjVkKDB4M2U2KV0oXzB4NTBiZmI1W18weDQzYWY1ZCgweDJhNCldP18weDVhMDY3MFtfMHg0M2FmNWQoMHgzY2YpXShfMHg1MGJmYjVbXzB4NDNhZjVkKDB4MmE0KV0pOl8weDVhMDY3MFsnY292ZXJpbmdUZXN0cyddKCksXzB4YjRmOWI4PT57Y29uc3QgXzB4NWM5ZjIyPV8weDQzYWY1ZDtfMHgzY2QyYzVbJ3B1c2gnXSh7J3BhdGgnOltfMHhiNGY5YjhbXzB4NWM5ZjIyKDB4NWNkKV0oKV1bXzB4NWM5ZjIyKDB4NDQ5KV0oXzB4YjRmOWI4W18weDVjOWYyMigweDQ4ZildKCkpLCdkYXRhJzpfMHhiNGY5Yjh9KTt9KSwhXzB4M2NkMmM1W18weDQzYWY1ZCgweDE5NSldJiZfMHg1YTA2NzBbXzB4NDNhZjVkKDB4NDhiKV0oKSYmXzB4M2NkMmM1WydwdXNoJ10oeydwYXRoJzpbXzB4NWEwNjcwW18weDQzYWY1ZCgweDQ2MildKCldfSkpOl8weDNjZDJjNVtfMHg0M2FmNWQoMHg0MmQpXSh7J3BhdGgnOltfMHg1YTA2NzBbXzB4NDNhZjVkKDB4NDYyKV0oKV19KTt9fXJldHVybiBfMHgzY2QyYzU7fVtfMHhlNDhlZGUoMHgzZmUpXShfMHg1OTA0ODY9e30pe2NvbnN0IF8weDMxNmY5Yj1fMHhlNDhlZGU7XzB4NTkwNDg2W18weDMxNmY5YigweDZmMCldP3RoaXNbJ19yZXNldFRyYWNlQ29udGV4dCddKCEweDEsITB4MSwhMHgwKTooXzB4NTkwNDg2WydjdXJyZW50RnJhbWUnXT1fMHg1OTA0ODZbXzB4MzE2ZjliKDB4M2MzKV0+PTB4MD9fMHg1OTA0ODZbXzB4MzE2ZjliKDB4M2MzKV06KHRoaXNbJ190cmFjZVN0YXRlJ118fHt9KVsnZnJhbWUnXSxfMHg1OTA0ODZbXzB4MzE2ZjliKDB4NWZmKV09dGhpc1tfMHgzMTZmOWIoMHg1YTMpXSYmdGhpc1tfMHgzMTZmOWIoMHg1YTMpXVtfMHgzMTZmOWIoMHg1ZmYpXSx0aGlzW18weDMxNmY5YigweDRiYSldW18weDMxNmY5YigweDNmZSldKF8weDU5MDQ4NikpO31bXzB4ZTQ4ZWRlKDB4NTNjKV0oKXtjb25zdCBfMHgxY2IyYmQ9XzB4ZTQ4ZWRlO3RoaXNbXzB4MWNiMmJkKDB4N2EwKV09ITB4MDt9WydfcmVzZXRUcmFjZUNvbnRleHQnXShfMHhjNWVmNTcsXzB4Y2FhNzI0LF8weDQwNjhiMyl7Y29uc3QgXzB4MjlhZGIxPV8weGU0OGVkZTtpZighdGhpc1tfMHgyOWFkYjEoMHg2MzUpXSlyZXR1cm47Y29uc3QgXzB4MmE2MmM4PXRoaXNbXzB4MjlhZGIxKDB4NWEzKV0mJnRoaXNbXzB4MjlhZGIxKDB4NWEzKV1bXzB4MjlhZGIxKDB4NWZmKV0sXzB4MjM2NzRkPV8weGM1ZWY1N3x8XzB4Y2FhNzI0LF8weDNmZjZmND1fMHgyMzY3NGR8fF8weGNhYTcyND09PSEweDB8fF8weGNhYTcyND09PSEweDE7XzB4MjM2NzRkJiZ0aGlzW18weDI5YWRiMSgweDVhMyldJiZ0aGlzW18weDI5YWRiMSgweDVhMyldW18weDI5YWRiMSgweDIyMyldP3RoaXNbXzB4MjlhZGIxKDB4NzlmKV09dGhpc1snX3RyYWNlU3RhdGUnXTp0aGlzWydfcmVzZXRQcmV2aW91c1RyYWNlU3RhdGUnXSgpLGRlbGV0ZSB0aGlzW18weDI5YWRiMSgweDVhMyldLGRlbGV0ZSB0aGlzW18weDI5YWRiMSgweDI1ZildLChfMHgzZmY2ZjR8fF8weDJhNjJjOCkmJihkZWxldGUgdGhpc1snX3RyYWNlJ10sdGhpc1tfMHgyOWFkYjEoMHg1ZWQpXShfMHgyOWFkYjEoMHg2NzcpKSksdGhpc1tfMHgyOWFkYjEoMHg3MjUpXVsnZGVidWdnZXInXVsnYWN0aXZlJ109ITB4MSx0aGlzWydmaWx0ZXInXVsndGVzdCddW18weDI5YWRiMSgweDcwOSldKCksdGhpc1snX3JlbW92ZUxvZ3MnXSgpLF8weDQwNjhiMyYmdGhpc1tfMHgyOWFkYjEoMHg0M2YpXSghMHgwLCEweDAsIV8weGNhYTcyNCwhMHgwLCEweDApLF8weDJhNjJjOCYmdGhpc1snX3Byb2plY3QnXVtfMHgyOWFkYjEoMHgxYTgpXSh7J2NhdGNodXAnOiEweDB9KSx0aGlzW18weDI5YWRiMSgweDRiYSldW18weDI5YWRiMSgweDNmZSldKCk7fVtfMHhlNDhlZGUoMHg3M2QpXSgpe2NvbnN0IF8weDQ0ODdjND1fMHhlNDhlZGU7ZGVsZXRlIHRoaXNbXzB4NDQ4N2M0KDB4NzlmKV07fVtfMHhlNDhlZGUoMHg2MDcpXShfMHg0ZmE4NzMsW18weDU0NDFkYSxfMHhiMTZjNTgsXzB4M2RlNTg3LF8weDIyZmZiZl0pe2NvbnN0IF8weDM1ODZmNz1fMHhlNDhlZGU7aWYoXzB4M2RlNTg3Pl8weDU0NDFkYXx8XzB4YjE2YzU4PD0weDAmJl8weDIyZmZiZj49XzB4NGZhODczKXJldHVybjtjb25zdCBfMHgyYWFiNWI9W107cmV0dXJuIF8weGIxNmM1OD4weDAmJl8weDJhYWI1YltfMHgzNTg2ZjcoMHg0MmQpXShbMHgwLF8weGIxNmM1OF0pLF8weDIyZmZiZjxfMHg0ZmE4NzMmJl8weDJhYWI1YltfMHgzNTg2ZjcoMHg0MmQpXShbXzB4MjJmZmJmLF8weDRmYTg3M10pLF8weDJhYWI1Yjt9W18weGU0OGVkZSgweDFlYildKF8weDRhMjE3OCl7Y29uc3QgXzB4MjY3OTllPV8weGU0OGVkZTtyZXR1cm4gX1tfMHgyNjc5OWUoMHgzY2IpXShfMHg0YTIxNzhbJ2JlZm9yZSddKT9fMHg0YTIxNzhbXzB4MjY3OTllKDB4MTUxKV06X1tfMHgyNjc5OWUoMHgzY2IpXShfMHg0YTIxNzhbXzB4MjY3OTllKDB4M2NjKV0pP18weDRhMjE3OFtfMHgyNjc5OWUoMHgzY2MpXTp0aGlzW18weDI2Nzk5ZSgweDVhMyldW18weDI2Nzk5ZSgweDRhNSldfHwweDA7fVsndGVzdFRpbWVsaW5lQnlSZXF1ZXN0J10oXzB4MzI4ZTY4KXtjb25zdCBfMHgzODY1YWQ9XzB4ZTQ4ZWRlO2lmKCF0aGlzW18weDM4NjVhZCgweDYzNSldKXJldHVybjtjb25zdCBfMHg0NDdkZWE9cHJvY2Vzc1tfMHgzODY1YWQoMHg0NTgpXVtfMHgzODY1YWQoMHgyMmIpXT9fMHgzOGJmNzE9PicnWydjb25jYXQnXShfMHgzOGJmNzFbXzB4Mzg2NWFkKDB4NWNkKV0pOl8weDUzYzgxND0+JydbXzB4Mzg2NWFkKDB4NDQ5KV0oXzB4NTNjODE0W18weDM4NjVhZCgweDVjZCldKVtfMHgzODY1YWQoMHg0NDkpXShfMHg1M2M4MTRbXzB4Mzg2NWFkKDB4MjFmKV1bXzB4Mzg2NWFkKDB4NDJlKV0oJywnKSksXzB4NGMzNGMyPSh0aGlzW18weDM4NjVhZCgweDVhMyldfHx7fSlbXzB4Mzg2NWFkKDB4N2IxKV18fHt9O18weDMyOGU2OFsnaGlkZSddJiYoXzB4NGMzNGMyW18weDQ0N2RlYShfMHgzMjhlNjhbXzB4Mzg2NWFkKDB4NDVjKV0pXT0hMHgwKTtsZXQgXzB4MTAyYWEyPXt9O3RoaXNbXzB4Mzg2NWFkKDB4NWEzKV0mJih0aGlzW18weDM4NjVhZCgweDVhMyldW18weDM4NjVhZCgweDdiMSldPV8weDRjMzRjMixfMHgxMDJhYTI9dGhpc1snX3RyYWNlU3RhdGUnXVtfMHgzODY1YWQoMHg1YmMpXT10aGlzW18weDM4NjVhZCgweDVhMyldW18weDM4NjVhZCgweDViYyldfHx7fSk7Y29uc3QgXzB4MTViMjg5PTB4YmI4O2xldCBfMHgxNmI1YjU9ITB4MSxfMHgxODQwNmU9ITB4MSxfMHg0YzZkM2I9dGhpc1tfMHgzODY1YWQoMHgxZWIpXShfMHgzMjhlNjgpLTB4MSxfMHgxYzNmMTI9XzB4NGM2ZDNiKzB4MTtjb25zdCBfMHg0NTgzZDU9KCk9Pl8weDE2YjViNSYmXzB4MTg0MDZlLF8weDQ4OTc2MT1fMHg0OTg5MGM9Pntjb25zdCBfMHg1YmY3MDQ9XzB4Mzg2NWFkLF8weDMyMDhjOD10aGlzW18weDViZjcwNCgweDYzNSldW18weDViZjcwNCgweDZjMyldW18weDQ5ODkwY10sW18weDM1ODhlOSxfMHgyM2VjMWNdPV8weDMyMDhjOCxfMHg5M2Y1Yjk9dGhpc1tfMHg1YmY3MDQoMHg2OWIpXShfMHgzNTg4ZTkpO2lmKCFfMHg5M2Y1YjkpcmV0dXJuO2NvbnN0IF8weDNjOWY0Mz10aGlzW18weDViZjcwNCgweDRiYSldW18weDViZjcwNCgweDMwNyldKF8weDkzZjViOVtfMHg1YmY3MDQoMHg0OGYpXSgpKVsncmFuZ2VzJ11bXzB4MjNlYzFjXTtpZighXzB4M2M5ZjQzfHwhXzB4M2M5ZjQzW18weDViZjcwNCgweDE5NSldKXJldHVybjtjb25zdCBfMHgyZjI2NmE9XzB4OTNmNWI5W18weDViZjcwNCgweDY3ZildKCk7aWYoIV8weDJmMjY2YSlyZXR1cm47Y29uc3QgXzB4NmRmYTY2PV8weDJmMjY2YVtfMHg1ZTQyOTFbXzB4NWJmNzA0KDB4ZGUpXShfMHgzYzlmNDMpXTtpZihfMHg2ZGZhNjYpcmV0dXJuKHRoaXNbXzB4NWJmNzA0KDB4NGJhKV1bXzB4NWJmNzA0KDB4MzA4KV0oKXx8dGhpc1tfMHg1YmY3MDQoMHg0YmEpXVtfMHg1YmY3MDQoMHg0NzQpXSgpfHx0aGlzW18weDViZjcwNCgweDRiYSldW18weDViZjcwNCgweDI1NCldKCl8fHRoaXNbJ19wcm9qZWN0J11bJ2lzUXVva2thVml0ZSddKCkpJiZfMHg5M2Y1YjlbXzB4NWJmNzA0KDB4M2FmKV0oKSx7J2ZpbGUnOl8weDkzZjViOSwncmFuZ2UnOl8weDkzZjViOVtfMHg1YmY3MDQoMHgxZjYpXShfMHg2ZGZhNjYpLCdyYW5nZUlkJzpfMHgyM2VjMWMsJ2luZGV4JzpfMHg0OTg5MGN9O30sXzB4MjM2NGU4PSgpPT57Zm9yKDtfMHg0YzZkM2I+PTB4MDtfMHg0YzZkM2ItLSl7Y29uc3QgXzB4MjE0ZTFjPV8weDQ4OTc2MShfMHg0YzZkM2IpO2lmKF8weDIxNGUxYylyZXR1cm4gXzB4NGM2ZDNiLS0sXzB4MjE0ZTFjO319LF8weDU0MGY2Mj0oKT0+e2NvbnN0IF8weDQwYzA0Yj1fMHgzODY1YWQ7Zm9yKDtfMHgxYzNmMTI8dGhpc1tfMHg0MGMwNGIoMHg2MzUpXVtfMHg0MGMwNGIoMHg2YzMpXVtfMHg0MGMwNGIoMHgxOTUpXTtfMHgxYzNmMTIrKyl7Y29uc3QgXzB4Yzg1NGIxPV8weDQ4OTc2MShfMHgxYzNmMTIpO2lmKF8weGM4NTRiMSlyZXR1cm4gXzB4MWMzZjEyKyssXzB4Yzg1NGIxO319LF8weDIyODNmMz1bXTtmb3IoOyFfMHg0NTgzZDUoKSYmXzB4MjI4M2YzW18weDM4NjVhZCgweDE5NSldPF8weDE1YjI4OTspe2lmKCFfMHgxODQwNmUpe2NvbnN0IF8weDM2ZDg5Nz1fMHgyMzY0ZTgoKTtfMHgzNmQ4OTc/XzB4MjI4M2YzW18weDM4NjVhZCgweDE3MCldKF8weDM2ZDg5Nyk6XzB4MTg0MDZlPSEweDA7fWlmKCFfMHgxNmI1YjUpe2NvbnN0IF8weDFhMTNkNj1fMHg1NDBmNjIoKTtfMHgxYTEzZDY/XzB4MjI4M2YzW18weDM4NjVhZCgweDQyZCldKF8weDFhMTNkNik6XzB4MTZiNWI1PSEweDA7fX1jb25zdCBfMHg1ZmIwODM9e30sXzB4NDc3Y2JhPXRoaXNbXzB4Mzg2NWFkKDB4NjRmKV1bXzB4NTE3OTBhW18weDM4NjVhZCgweDE0YildKHRoaXNbXzB4Mzg2NWFkKDB4NWEzKV1bXzB4Mzg2NWFkKDB4NWZmKV0pXTtmb3IoY29uc3QgXzB4NGJjYjgwIG9mWy4uLnRoaXNbXzB4Mzg2NWFkKDB4NmRmKV18fFtdLC4uLl8weDQ3N2NiYSYmXzB4NDc3Y2JhW18weDM4NjVhZCgweDYwZildKCl8fFtdXSl7Y29uc3QgXzB4MjVlODA3PV8weDRiY2I4MFtfMHgzODY1YWQoMHg0MzcpXSgpJiZfMHg0YmNiODBbXzB4Mzg2NWFkKDB4NDM3KV0oKVsweDBdO2lmKCFfMHgyNWU4MDcpY29udGludWU7Y29uc3QgXzB4MjkzMGFjPV8weDVmYjA4M1tfMHgyNWU4MDdbXzB4Mzg2NWFkKDB4NWNkKV0oKV09XzB4NWZiMDgzW18weDI1ZTgwN1snZmlsZUlkJ10oKV18fHt9O18weDI5MzBhY1tfMHgyNWU4MDdbXzB4Mzg2NWFkKDB4MmE0KV0oKV09eydtZXNzYWdlJzpfMHg0YmNiODBbXzB4Mzg2NWFkKDB4YWIpXSgpfTt9Y29uc3QgXzB4MTRhOWQwPW5ldyhfMHgyOTU4YTEoXzB4Mzg2NWFkKDB4NDQyKSkpKHsnbWF4JzoweDRjNGI0MCwnbGVuZ3RoJzpfMHgzMjkzNGE9Pl8weDMyOTM0YVsnbGluZXMnXVtfMHgzODY1YWQoMHgxOTUpXX0pLF8weDYzYmM4NT1uZXcoXzB4Mjk1OGExKF8weDM4NjVhZCgweDQ0MikpKSh7J21heCc6MHg0YzRiNDAsJ2xlbmd0aCc6XzB4MTJmOGZmPT5fMHgxMmY4ZmZbXzB4Mzg2NWFkKDB4MTk1KV19KSxfMHgzZjg3ODQ9KF8weDJlNGMxZCxfMHgyYjZlNjcpPT57Y29uc3QgXzB4MTY4OTc1PV8weDM4NjVhZCxfMHg1NDY4MDY9XzB4MmI2ZTY3W18weDE2ODk3NSgweDQ4ZildKCk7bGV0IF8weDJjYzQ3OD1fMHg2M2JjODVbXzB4MTY4OTc1KDB4M2VjKV0oXzB4NTQ2ODA2KTtfW18weDE2ODk3NSgweDRjNyldKF8weDJjYzQ3OCkmJihfMHgyY2M0Nzg9XzB4MjUwMWIwW18weDE2ODk3NSgweDc2YSldKF8weDI1MDFiMFtfMHgxNjg5NzUoMHgzMzYpXSh0aGlzW18weDE2ODk3NSgweDRiYSldWydnZXRMYXRlc3RPcmlnaW5hbEZpbGVDb250ZW50QnlQYXRoJ10oXzB4NTQ2ODA2KXx8JycpKSxfMHg2M2JjODVbJ3NldCddKF8weDU0NjgwNixfMHgyY2M0NzgpKTtjb25zdCBbXzB4MTMwNjAwXT1fMHgyZTRjMWQsXzB4M2I1ZDA3PV8weDJjYzQ3OFtfMHgxMzA2MDAtMHgxXTtpZighXzB4M2I1ZDA3KXJldHVybjtjb25zdCBfMHgzMTRkY2I9W18weDJjYzQ3OFtfMHgxMzA2MDAtMHgzXXx8dm9pZCAweDAsXzB4MmNjNDc4W18weDEzMDYwMC0weDJdXVsnZmlsdGVyJ10oXzB4NTc4MDgzPT4hX1tfMHgxNjg5NzUoMHg0YzcpXShfMHg1NzgwODMpKSxfMHg1MTM0M2U9W18weDJjYzQ3OFtfMHgxMzA2MDBdLF8weDJjYzQ3OFtfMHgxMzA2MDArMHgxXXx8dm9pZCAweDBdW18weDE2ODk3NSgweDcyNSldKF8weGU4NTJhZj0+IV9bJ2lzVW5kZWZpbmVkJ10oXzB4ZTg1MmFmKSksXzB4NDgyMmQyPXRoaXNbJ19nZXRSZW1haW5pbmdMaW5lUmFuZ2VzJ10oXzB4M2I1ZDA3W18weDE2ODk3NSgweDE5NSldLF8weDJlNGMxZCk7cmV0dXJueydmaWxlJzpfMHg1NDY4MDYsJ2xpbmVzJzpbLi4uXzB4MzE0ZGNiW18weDE2ODk3NSgweDc1YyldKChfMHg0NzEzYjcsXzB4NDhmNDYwKT0+KHsnY29udGVudCc6XzB4NDcxM2I3LCduJzpfMHgxMzA2MDAtXzB4MzE0ZGNiW18weDE2ODk3NSgweDE5NSldK18weDQ4ZjQ2MH0pKSx7J2NvbnRlbnQnOl8weDNiNWQwNywnZXhlY3V0ZWRMaW5lJzohMHgwLCdjb250ZXh0UmFuZ2VzJzpfMHg0ODIyZDIsJ24nOl8weDEzMDYwMH0sLi4uXzB4NTEzNDNlW18weDE2ODk3NSgweDc1YyldKChfMHgzZWY4ZjgsXzB4NGMwMjJhKT0+KHsnY29udGVudCc6XzB4M2VmOGY4LCduJzpfMHgxMzA2MDArXzB4NGMwMjJhKzB4MX0pKV19O30sXzB4Mjk1YzFjPShfMHg1NmRjZmQsXzB4MWZiMGRmKT0+e2NvbnN0IF8weDMzNjJjZT1fMHgzODY1YWQsXzB4ZWM5OTlkPScnW18weDMzNjJjZSgweDQ0OSldKF8weDFmYjBkZltfMHgzMzYyY2UoMHg0NjIpXSgpLCcuJylbXzB4MzM2MmNlKDB4NDQ5KV0oXzB4NWU0MjkxW18weDMzNjJjZSgweGRlKV0oXzB4NTZkY2ZkKSk7bGV0IF8weDQxM2VjZT1fMHgxNGE5ZDBbJ2dldCddKF8weGVjOTk5ZCk7cmV0dXJuIF9bXzB4MzM2MmNlKDB4NGM3KV0oXzB4NDEzZWNlKSYmKF8weDQxM2VjZT1fMHgzZjg3ODQoXzB4NTZkY2ZkLF8weDFmYjBkZiksXzB4MTRhOWQwW18weDMzNjJjZSgweDI5YyldKF8weGVjOTk5ZCxfMHg0MTNlY2UpKSxfW18weDMzNjJjZSgweDRiZildKF8weDQxM2VjZSk7fSxfMHgxZmIxYTk9KF8weDExOWEwYyxfMHg0MjEyZmUpPT57Y29uc3QgXzB4NTM1MWY4PV8weDM4NjVhZCxfMHg0Y2ZmZTQ9X1snZmluZExhc3QnXShfMHgxMTlhMGNbXzB4NTM1MWY4KDB4NmQ4KV0sXzB4YzMzYTQxPT5fMHhjMzNhNDFbXzB4NTM1MWY4KDB4NTg3KV0pLF8weDEzM2U4Nj1fW18weDUzNTFmOCgweDI2YSldKF8weDQyMTJmZVsnbGluZXMnXSxfMHg1MmNlOTE9Pl8weDUyY2U5MVtfMHg1MzUxZjgoMHg1ODcpXSksXzB4MmI2YWQ0PV8weDRjZmZlNFsnbiddLF8weDNlMzgwMj1fMHgxMzNlODZbJ24nXSxfMHg1Y2EzOGY9XzB4MTE5YTBjWydsaW5lcyddW18weDExOWEwY1tfMHg1MzUxZjgoMHg2ZDgpXVtfMHg1MzUxZjgoMHgxOTUpXS0weDFdWyduJ10sXzB4MTMxMjI1PV8weDQyMTJmZVtfMHg1MzUxZjgoMHg2ZDgpXVsweDBdWyduJ107aWYoXzB4MmI2YWQ0Pl8weDNlMzgwMnx8XzB4MTMxMjI1Pl8weDVjYTM4ZisweDEpXzB4MTE5YTBjW18weDUzNTFmOCgweDZkOCldW18weDUzNTFmOCgweDQyZCldKHsnc2VwYXJhdG9yJzohMHgwfSksXzB4MTE5YTBjWydsaW5lcyddPV8weDExOWEwY1tfMHg1MzUxZjgoMHg2ZDgpXVsnY29uY2F0J10oXzB4NDIxMmZlW18weDUzNTFmOCgweDZkOCldKSxfMHg0Y2ZmZTRbXzB4NTM1MWY4KDB4NjFkKV09XzB4NGNmZmU0W18weDUzNTFmOCgweDYxZCldfHxbXzB4MTE5YTBjW18weDUzNTFmOCgweDhmKV1dLF8weDEzM2U4Nlsnc3RlcHMnXT1bXzB4NDIxMmZlW18weDUzNTFmOCgweDhmKV1dO2Vsc2V7aWYoXzB4MTMxMjI1PT09XzB4NWNhMzhmKzB4MSlfMHgxMTlhMGNbXzB4NTM1MWY4KDB4NmQ4KV09XzB4MTE5YTBjW18weDUzNTFmOCgweDZkOCldW18weDUzNTFmOCgweDQ0OSldKF8weDQyMTJmZVtfMHg1MzUxZjgoMHg2ZDgpXSksXzB4NGNmZmU0W18weDUzNTFmOCgweDYxZCldPV8weDRjZmZlNFsnc3RlcHMnXXx8W18weDExOWEwY1snc3RlcCddXSxfMHgxMzNlODZbXzB4NTM1MWY4KDB4NjFkKV09W18weDQyMTJmZVtfMHg1MzUxZjgoMHg4ZildXTtlbHNle2lmKF8weDJiNmFkND09PV8weDNlMzgwMil7aWYoXzB4NGNmZmU0Wydjb250ZXh0UmFuZ2VzJ10mJl8weDEzM2U4NltfMHg1MzUxZjgoMHgzZTEpXSl7Y29uc3QgXzB4MWYyZDZhPV8weDEzM2U4NlsnY29udGV4dFJhbmdlcyddW18weDUzNTFmOCgweDFhNyldKChfMHhhMzM2MjAsXzB4NWU3Y2M3KT0+KF8weDVlN2NjN1sweDBdPT09MHgwP18weGEzMzYyMFsweDBdPV8weDVlN2NjN1sweDFdOl8weDVlN2NjN1sweDFdPT09XzB4MTMzZTg2W18weDUzNTFmOCgweDZiOSldW18weDUzNTFmOCgweDE5NSldJiYoXzB4YTMzNjIwWzB4MV09XzB4NWU3Y2M3WzB4MF0pLF8weGEzMzYyMCksWzB4MCxfMHgxMzNlODZbXzB4NTM1MWY4KDB4NmI5KV1bXzB4NTM1MWY4KDB4MTk1KV1dKSxfMHgzZjBlZWQ9W107XzB4NGNmZmU0W18weDUzNTFmOCgweDNlMSldW18weDUzNTFmOCgweDNlNCldKF8weDVkZTFiMj0+e2NvbnN0IF8weDJhNjRjYz1fMHg1MzUxZjg7XzB4NWRlMWIyWzB4MF09PT1fMHgxZjJkNmFbMHgwXSYmXzB4NWRlMWIyWzB4MV09PT1fMHgxZjJkNmFbMHgxXXx8KF8weDVkZTFiMlsweDBdPD1fMHgxZjJkNmFbMHgxXSYmXzB4NWRlMWIyWzB4MV0+PV8weDFmMmQ2YVsweDBdPyhfMHg1ZGUxYjJbMHgxXT5fMHgxZjJkNmFbMHgxXSYmXzB4M2YwZWVkWydwdXNoJ10oW18weDFmMmQ2YVsweDFdLF8weDVkZTFiMlsweDFdXSksXzB4NWRlMWIyWzB4MF08XzB4MWYyZDZhWzB4MF0mJl8weDNmMGVlZFsncHVzaCddKFtfMHg1ZGUxYjJbMHgwXSxfMHgxZjJkNmFbMHgwXV0pKTpfMHgzZjBlZWRbXzB4MmE2NGNjKDB4NDJkKV0oXzB4NWRlMWIyKSk7fSksXzB4NGNmZmU0Wydjb250ZXh0UmFuZ2VzJ109XzB4M2YwZWVkO31lbHNlIGRlbGV0ZSBfMHg0Y2ZmZTRbXzB4NTM1MWY4KDB4M2UxKV07XzB4NGNmZmU0WydzdGVwcyddPShfMHg0Y2ZmZTRbJ3N0ZXBzJ118fFtfMHgxMTlhMGNbJ3N0ZXAnXV0pW18weDUzNTFmOCgweDQ0OSldKF8weDQyMTJmZVtfMHg1MzUxZjgoMHg4ZildKTt9ZWxzZXtpZihfMHgyYjZhZDQ8XzB4M2UzODAyKXtjb25zdCBfMHg1MDdkYzQ9X1tfMHg1MzUxZjgoMHg4YyldKF8weDExOWEwY1snbGluZXMnXSxfMHgxNmU4NjQ9Pl8weDE2ZTg2NFsnbiddPT09XzB4MTMxMjI1KTtmb3IobGV0IF8weDNlMjM5Nz0weDA7XzB4M2UyMzk3PF8weDQyMTJmZVsnbGluZXMnXVsnbGVuZ3RoJ107XzB4M2UyMzk3Kyspe2NvbnN0IF8weDQ5MzM5Zj1fMHg0MjEyZmVbXzB4NTM1MWY4KDB4NmQ4KV1bXzB4M2UyMzk3XSxfMHg0ODM5MjY9XzB4MTE5YTBjW18weDUzNTFmOCgweDZkOCldW18weDUwN2RjNCtfMHgzZTIzOTddO18weDExOWEwY1snbGluZXMnXVtfMHg1MDdkYzQrXzB4M2UyMzk3XT1fMHg0ODM5MjY/XzB4NDkzMzlmW18weDUzNTFmOCgweDU4NyldP18weDQ5MzM5ZjpfMHg0ODM5MjY6XzB4NDkzMzlmO31fMHg0Y2ZmZTRbXzB4NTM1MWY4KDB4NjFkKV09XzB4NGNmZmU0W18weDUzNTFmOCgweDYxZCldfHxbXzB4MTE5YTBjW18weDUzNTFmOCgweDhmKV1dLF8weDEzM2U4NltfMHg1MzUxZjgoMHg2MWQpXT1bXzB4NDIxMmZlW18weDUzNTFmOCgweDhmKV1dO319fX1kZWxldGUgXzB4MTE5YTBjW18weDUzNTFmOCgweDhmKV07fSxfMHg1MDJlMTY9XzB4MzNiNjYwPT57Y29uc3QgXzB4NDU5YjUyPV8weDM4NjVhZDtpZighXzB4MzNiNjYwKXJldHVybjtjb25zdCBfMHgxZmZlZTE9XzB4NDQ3ZGVhKF8weDMzYjY2MCk7aWYoXzB4NGMzNGMyW18weDFmZmVlMV0pe18weDNlZTY4NVtfMHg0NTliNTIoMHg3MmYpXVtfMHg0NTliNTIoMHg3MjIpXSgpO2ZvcihsZXQgXzB4NDY3NzI4IG9mIF8weDMzYjY2MFtfMHg0NTliNTIoMHg2MWQpXSlfMHgxMDJhYTJbXzB4NDY3NzI4XT0hMHgwO31lbHNle2NvbnN0IF8weDQzODg1Mj1fMHgxNDNiN2NbXzB4MWZmZWUxXTtfMHg0Mzg4NTI/XzB4MzNiNjYwW18weDQ1OWI1MigweDFiNyldPV8weDQzODg1MltfMHg0NTliNTIoMHgxYjcpXT0hMHgwOl8weDE0M2I3Y1tfMHgxZmZlZTFdPV8weDMzYjY2MDt9ZGVsZXRlIF8weDMzYjY2MFtfMHg0NTliNTIoMHg2MWQpXTt9O3ZhciBfMHgxNDNiN2M9e30sXzB4M2VlNjg1PXsnZW50cmllcyc6W10sJ21heExpbmVOdW1iZXInOjB4MCwndHJ1bmNhdGVkU3RhcnQnOiFfMHgxODQwNmUsJ3RydW5jYXRlZEVuZCc6IV8weDE2YjViNX07bGV0IF8weDg3NmU1Mztmb3IoY29uc3QgXzB4NDJmMDdkIG9mIF8weDIyODNmMyl7Y29uc3QgXzB4MmVmODVjPV8weDQyZjA3ZFtfMHgzODY1YWQoMHg3M2IpXSxfMHg1NmRmOTg9XzB4NDJmMDdkWydmaWxlJ10sXzB4YmJjMzQ2PV8weDU2ZGY5OFtfMHgzODY1YWQoMHg0NjIpXSgpLF8weDZjMzJiYT1fMHgyOTVjMWMoXzB4MmVmODVjLF8weDU2ZGY5OCk7aWYoIV8weDZjMzJiYSljb250aW51ZTtfMHg2YzMyYmFbXzB4Mzg2NWFkKDB4NWNkKV09XzB4YmJjMzQ2LF8weDZjMzJiYVtfMHgzODY1YWQoMHgyMWYpXT1bXSxfMHg2YzMyYmFbJ3N0ZXBzJ109W10sXzB4NmMzMmJhW18weDM4NjVhZCgweDhmKV09XzB4NDJmMDdkW18weDM4NjVhZCgweDU1NildLF8weDNlZTY4NVtfMHgzODY1YWQoMHhhMCldPU1hdGhbXzB4Mzg2NWFkKDB4MWRiKV0oXzB4M2VlNjg1W18weDM4NjVhZCgweGEwKV0sXzB4NmMzMmJhW18weDM4NjVhZCgweDZkOCldW18weDZjMzJiYVsnbGluZXMnXVsnbGVuZ3RoJ10tMHgxXVsnbiddfHwweDApLF8weDg3NmU1MyYmXzB4ODc2ZTUzWydmaWxlJ109PT1fMHg2YzMyYmFbXzB4Mzg2NWFkKDB4MWJjKV0/XzB4MWZiMWE5KF8weDg3NmU1MyxfMHg2YzMyYmEpOihfMHg4NzZlNTMmJl8weDUwMmUxNihfMHg4NzZlNTMpLF8weDNlZTY4NVtfMHgzODY1YWQoMHg3MmYpXVtfMHgzODY1YWQoMHg0MmQpXShfMHg2YzMyYmEpLF8weDg3NmU1Mz1fMHg2YzMyYmEpLF8weDg3NmU1M1tfMHgzODY1YWQoMHgyMWYpXVtfMHgzODY1YWQoMHg0MmQpXShfMHg0MmYwN2RbXzB4Mzg2NWFkKDB4MzVjKV0pLF8weDg3NmU1M1snc3RlcHMnXVtfMHgzODY1YWQoMHg0MmQpXShfMHg0MmYwN2RbJ2luZGV4J10pO2NvbnN0IF8weDQ3ZTZiNj1fMHg1ZmIwODNbXzB4YmJjMzQ2XSxfMHhiNTViZTE9XzB4MmVmODVjWzB4MF07XzB4NDdlNmI2JiZfMHg0N2U2YjZbXzB4YjU1YmUxXSYmKF8weDQ3ZTZiNltfMHhiNTViZTFdW18weDM4NjVhZCgweDRjMildPV8weDg3NmU1Myk7fXJldHVybiBfMHg1MDJlMTYoXzB4ODc2ZTUzKSxfWydlYWNoJ10oXzB4NWZiMDgzLF8weDEyYTc2ZD0+e2NvbnN0IF8weDM0NjlhOT1fMHgzODY1YWQ7X1tfMHgzNDY5YTkoMHgzZTYpXShfMHgxMmE3NmQsKHtyYW5nZVdpdGhDb250ZXh0Ol8weDMyYWRlNCxtZXNzYWdlOl8weDFkZjZkMH0sXzB4MzY0ZWE4KT0+e2NvbnN0IF8weDEzMWFmOT1fMHgzNDY5YTk7aWYoIV8weDMyYWRlNClyZXR1cm47XzB4MzY0ZWE4PXBhcnNlSW50KF8weDM2NGVhOCwweGEpO2NvbnN0IF8weDEzZWE3ZD1fW18weDEzMWFmOSgweDNkMyldKF8weDMyYWRlNFsnbGluZXMnXSxfMHg1NzgxZWM9Pl8weDU3ODFlY1tfMHgxMzFhZjkoMHg1ODcpXSYmXzB4NTc4MWVjWyduJ109PT1fMHgzNjRlYTgpO18weDEzZWE3ZCYmKF8weDEzZWE3ZFtfMHgxMzFhZjkoMHg0ODUpXT1fMHgxYjcwYmJbXzB4MTMxYWY5KDB4MWE5KV0oXzB4MWRmNmQwKSk7fSk7fSksXzB4M2VlNjg1O31bXzB4ZTQ4ZWRlKDB4MmRjKV0oXzB4Mzg1YWE3KXtjb25zdCBfMHgxNzgxMDA9XzB4ZTQ4ZWRlO3RoaXNbJ2ZpbHRlciddW18weDE3ODEwMCgweDFkNildW18weDE3ODEwMCgweDE5OSldPSEweDAsdGhpc1tfMHgxNzgxMDAoMHgxMjgpXSgpO2NvbnN0IF8weGIwNzFiMj10aGlzW18weDE3ODEwMCgweDNiOCldKF8weDM4NWFhNyk7cmV0dXJuIHRoaXNbXzB4MTc4MTAwKDB4NzI1KV1bXzB4MTc4MTAwKDB4MWQ2KV1bXzB4MTc4MTAwKDB4M2MzKV09dGhpc1tfMHgxNzgxMDAoMHg1YTMpXVtfMHgxNzgxMDAoMHg0YTUpXSxkZWxldGUgdGhpc1tfMHgxNzgxMDAoMHg2MzUpXVtfMHgxNzgxMDAoMHgzMGYpXSx0aGlzW18weDE3ODEwMCgweDQzZildKCEweDAsITB4MCwhMHgxLCEweDAsITB4MCksXzB4YjA3MWIyO31bXzB4ZTQ4ZWRlKDB4M2I4KV0oXzB4MjY3ODJlKXtjb25zdCBfMHg0NWQzNWM9XzB4ZTQ4ZWRlO2lmKCF0aGlzW18weDQ1ZDM1YygweDYzNSldKXJldHVybjtfMHgyNjc4MmVbXzB4NDVkMzVjKDB4NTYzKV0mJmRlbGV0ZSB0aGlzWydfdHJhY2VTdGF0ZSddO2NvbnN0IF8weDU4MjgxMD10aGlzW18weDQ1ZDM1YygweDVhMyldPXRoaXNbXzB4NDVkMzVjKDB4NWEzKV18fHt9LF8weDVkOTcwYz1fMHgyNjc4MmVbJ2JhY2snXSxfMHgzYzJkNDM9XzB4MjY3ODJlW18weDQ1ZDM1YygweDRkZildO2xldCBfMHg1NGY3Mjk9XzB4NWQ5NzBjP19bXzB4NDVkMzVjKDB4OGMpXTpfWydmaW5kSW5kZXgnXTtjb25zdCBfMHg0ZjFjZWI9XzB4NTgyODEwW18weDQ1ZDM1YygweDViYyldJiYhX1tfMHg0NWQzNWMoMHg5NyldKF8weDU4MjgxMFsnaGlkZGVuVGltZWxpbmVTdGVwcyddKTtpZihfMHg0ZjFjZWIpe2NvbnN0IF8weDM4Yzc4Nz1fMHg1NGY3Mjk7XzB4NTRmNzI5PShfMHhjYTZkOGQsXzB4NGVlNzNmKT0+XzB4MzhjNzg3KF8weGNhNmQ4ZCwoXzB4NThiMTNlLF8weDI3OGZmYyk9PiFfMHg1ODI4MTBbXzB4NDVkMzVjKDB4NWJjKV1bXzB4Mjc4ZmZjXSYmXzB4NGVlNzNmKF8weDU4YjEzZSxfMHgyNzhmZmMpKTt9bGV0IF8weDExODBmNT1fW18weDQ1ZDM1YygweDNjYildKF8weDI2NzgyZVtfMHg0NWQzNWMoMHg0YTUpXSk/XzB4MjY3ODJlW18weDQ1ZDM1YygweDRhNSldOihfW18weDQ1ZDM1YygweDNjYildKF8weDU4MjgxMFtfMHg0NWQzNWMoMHg0YTUpXSk/XzB4NTgyODEwW18weDQ1ZDM1YygweDRhNSldOl8weDVkOTcwYz90aGlzWydfdHJhY2UnXVtfMHg0NWQzNWMoMHg2YzMpXVsnbGVuZ3RoJ106LTB4MSkrKF8weDVkOTcwYz8tMHgxOjB4MSk7Y29uc3QgXzB4MTI4NWNhPV8weDI2NzgyZVsnbGluZSddLF8weDdjNjk3NT1fMHgyNjc4MmVbXzB4NDVkMzVjKDB4MWJjKV0sXzB4NTE2OTljPV8weDI2NzgyZVsnb3V0J10sXzB4MTA2MDJlPV8weDI2NzgyZVtfMHg0NWQzNWMoMHg3YWEpXTtpZighXzB4MjY3ODJlWydwbGF5VG9FeGFjdEZyYW1lJ10pe2lmKF8weDEyODVjYT4weDAmJl8weDdjNjk3NSl7Y29uc3QgXzB4MmEyZjZhPXRoaXNbXzB4NDVkMzVjKDB4MzFiKV0oXzB4N2M2OTc1KTtpZighXzB4MmEyZjZhKXJldHVybiB0aGlzWydfdHJhY2VTdGVwTm90Rm91bmQnXShfMHgyNjc4MmUpO2NvbnN0IF8weDI5YzU2ND1fMHgyYTJmNmFbXzB4NDVkMzVjKDB4NDYyKV0oKSxfMHgzMTk3YWY9XzB4MmEyZjZhW18weDQ1ZDPigIs1YygweDI3ZCldKF8weDEyODVjYSk7aWYoIV8weDMxOTdhZilyZXR1cm4gdGhpc1tfMHg0NWQzNWMoMHgxNmUpXShfMHgyNjc4MmUpO2NvbnN0IF8weDZiYjAwND10aGlzW18weDQ1ZDM1YygweDRiYSldW18weDQ1ZDM1YygweDMwNyldKF8weDJhMmY2YVtfMHg0NWQzNWMoMHg0OGYpXSgpKTtpZighXzB4NmJiMDA0KXJldHVybiB0aGlzW18weDQ1ZDM1YygweDE2ZSldKF8weDI2NzgyZSk7Y29uc3QgXzB4MmU0ZWI3PXRoaXNbJ19nZXRSYW5nZUlkTG9va3VwRm9yUmFuZ2VzJ10oXzB4NmJiMDA0LF8weDMxOTdhZik7aWYoX1tfMHg0NWQzNWMoMHg5NyldKF8weDJlNGViNykpcmV0dXJuIHRoaXNbXzB4NDVkMzVjKDB4MTZlKV0oXzB4MjY3ODJlKTtjb25zdCBfMHgxMWE5NmY9XzB4NTRmNzI5KHRoaXNbXzB4NDVkMzVjKDB4NjM1KV1bXzB4NDVkMzVjKDB4NmMzKV0sKF8weDVlMGZlOSxfMHgxMmJkMWIpPT4oXzB4M2MyZDQzfHwoXzB4NWQ5NzBjP18weDEyYmQxYjw9XzB4MTE4MGY1Ol8weDEyYmQxYj49XzB4MTE4MGY1KSkmJl8weDJlNGViN1tfMHg1ZTBmZTlbMHgxXV0mJl8weDVlMGZlOVsweDBdPT09XzB4MjljNTY0KTtpZihfMHgxMWE5NmY8MHgwKXJldHVybiB0aGlzW18weDQ1ZDM1YygweDE2ZSldKF8weDI2NzgyZSk7XzB4MTE4MGY1PV8weDExYTk2Zjt9ZWxzZXtpZihfMHgyNjc4MmVbXzB4NDVkMzVjKDB4NmY1KV0mJl8weDI2NzgyZVtfMHg0NWQzNWMoMHg2ZjUpXVtfMHg0NWQzNWMoMHgxOTUpXSl7Y29uc3QgXzB4Mzg4MWFjPXt9O2lmKF9bXzB4NDVkMzVjKDB4M2U2KV0oXzB4MjY3ODJlW18weDQ1ZDM1YygweDZmNSldLCh7ZmlsZTpfMHg1NzY5ZmYsbGluZTpfMHgzZjViZWR9KT0+e2NvbnN0IF8weDU1MDE1Yz1fMHg0NWQzNWMsXzB4MjYwY2FmPXRoaXNbXzB4NTUwMTVjKDB4MzFiKV0oXzB4NTc2OWZmKTtpZighXzB4MjYwY2FmKXJldHVybjtjb25zdCBfMHgyMzFiYTY9XzB4MjYwY2FmW18weDU1MDE1YygweDQ2MildKCksXzB4MmIwYjY2PV8weDI2MGNhZltfMHg1NTAxNWMoMHgyN2QpXShfMHgzZjViZWQpO2lmKCFfMHgyYjBiNjYpcmV0dXJuO2NvbnN0IF8weDU0YjNjZj10aGlzWydfcHJvamVjdCddW18weDU1MDE1YygweDMwNyldKF8weDI2MGNhZlsncGF0aCddKCkpO2lmKCFfMHg1NGIzY2YpcmV0dXJuO2xldCBfMHgxNWZkMzg9XzB4Mzg4MWFjW18weDIzMWJhNl09XzB4Mzg4MWFjW18weDIzMWJhNl18fHt9O3RoaXNbXzB4NTUwMTVjKDB4NzU1KV0oXzB4NTRiM2NmLF8weDJiMGI2NixfMHgxNWZkMzgpO30pLF9bJ2lzRW1wdHknXShfMHgzODgxYWMpKXJldHVybiB0aGlzW18weDQ1ZDM1YygweDE2ZSldKF8weDI2NzgyZSk7Y29uc3QgXzB4MTY4ZTQ5PV8weDU0ZjcyOSh0aGlzW18weDQ1ZDM1YygweDYzNSldW18weDQ1ZDM1YygweDZjMyldLChfMHgzMGIyMTQsXzB4NGNjYzgwKT0+e2lmKF8weDNjMmQ0M3x8KF8weDVkOTcwYz9fMHg0Y2NjODA8PV8weDExODBmNTpfMHg0Y2NjODA+PV8weDExODBmNSkpe2NvbnN0IF8weGQ4MzhkZD1fMHgzODgxYWNbXzB4MzBiMjE0WzB4MF1dO2lmKF8weGQ4MzhkZClyZXR1cm4gXzB4ZDgzOGRkW18weDMwYjIxNFsweDFdXTt9fSk7aWYoXzB4MTY4ZTQ5PDB4MClyZXR1cm4gdGhpc1tfMHg0NWQzNWMoMHgxNmUpXShfMHgyNjc4MmUpO18weDExODBmNT1fMHgxNjhlNDk7fWVsc2V7aWYoIV9bJ2lzTnVtYmVyJ10oXzB4MjY3ODJlW18weDQ1ZDM1YygweDRhNSldKSYmX1tfMHg0NWQzNWMoMHgzY2IpXShfMHg1ODI4MTBbXzB4NDVkMzVjKDB4NGE1KV0pJiYoXzB4MTA2MDJlfHxfMHg1MTY5OWMpKXtjb25zdCBbLCxfMHg1YjVlMDFdPXRoaXNbXzB4NDVkMzVjKDB4NjM1KV1bJ3NlcXVlbmNlJ11bXzB4NTgyODEwW18weDQ1ZDM1YygweDRhNSldXSxfMHg1MzIxZWM9XzB4MTA2MDJlP18weDU0ZjcyOSh0aGlzW18weDQ1ZDM1YygweDYzNSldWydzZXF1ZW5jZSddLChfMHgxMTkyM2UsXzB4YjExY2EyKT0+KF8weDNjMmQ0M3x8KF8weDVkOTcwYz9fMHhiMTFjYTI8PV8weDExODBmNTpfMHhiMTFjYTI+PV8weDExODBmNSkpJiZfMHgxMTkyM2VbMHgyXTw9XzB4NWI1ZTAxLF8weDU4MjgxMFtfMHg0NWQzNWMoMHg0YTUpXSk6XzB4NTRmNzI5KHRoaXNbXzB4NDVkMzVjKDB4NjM1KV1bXzB4NDVkMzVjKDB4NmMzKV0sKF8weDI1MTliMyxfMHg1ODE2NmIpPT4oXzB4M2MyZDQzfHwoXzB4NWQ5NzBjP18weDU4MTY2Yjw9XzB4MTE4MGY1Ol8weDU4MTY2Yj49XzB4MTE4MGY1KSkmJl8weDI1MTliM1sweDJdPF8weDViNWUwMSxfMHg1ODI4MTBbXzB4NDVkMzVjKDB4NGE1KV0pO2lmKF8weDUzMjFlYzwweDApcmV0dXJuIHRoaXNbXzB4NDVkMzVjKDB4MTZlKV0oXzB4MjY3ODJlKTtfMHgxMTgwZjU9XzB4NTMyMWVjO31lbHNle2lmKF8weDRmMWNlYiYmXzB4NTgyODEwW18weDQ1ZDM1YygweDViYyldW18weDExODBmNV0pe2NvbnN0IF8weDI2NjJiYj1fMHg1NGY3MjkodGhpc1tfMHg0NWQzNWMoMHg2MzUpXVtfMHg0NWQzNWMoMHg2YzMpXSwoXzB4NDY3MmMwLF8weDMyOTVmNSk9Pl8weDVkOTcwYz9fMHgzMjk1ZjU8PV8weDExODBmNTpfMHgzMjk1ZjU+PV8weDExODBmNSk7aWYoXzB4MjY2MmJiPDB4MClyZXR1cm4gdGhpc1tfMHg0NWQzNWMoMHgxNmUpXShfMHgyNjc4MmUpO18weDExODBmNT1fMHgyNjYyYmI7fX19fX1jb25zdCBfMHgzNmIzYTA9dGhpc1tfMHg0NWQzNWMoMHg2MzUpXVsnc2VxdWVuY2UnXVtfMHgxMTgwZjVdO2lmKCFfWydpc0FycmF5J10oXzB4MzZiM2EwKSlyZXR1cm4gdGhpc1tfMHg0NWQzNWMoMHgxNmUpXSgpO2NvbnN0IFtfMHg0YWIwM2UsXzB4MTA3ODg4XT1fMHgzNmIzYTAsXzB4NDlkZGM0PXRoaXNbXzB4NDVkMzVjKDB4NjliKV0oXzB4NGFiMDNlKTtpZighXzB4NDlkZGM0KXJldHVybiB0aGlzWydfZmluZENsb3Nlc3RWaXNpYmxlU3RlcCddKF8weDI2NzgyZSxfMHgxMTgwZjUsXzB4NWQ5NzBjKTtjb25zdCBfMHgzYWU5NWE9dGhpc1tfMHg0NWQzNWMoMHg0YmEpXVtfMHg0NWQzNWMoMHgzMDcpXShfMHg0OWRkYzRbXzB4NDVkMzVjKDB4NDhmKV0oKSlbJ3JhbmdlcyddW18weDEwNzg4OF07aWYoIV8weDNhZTk1YXx8IV8weDNhZTk1YVtfMHg0NWQzNWMoMHgxOTUpXSlyZXR1cm4gdGhpc1tfMHg0NWQzNWMoMHgxYTIpXShfMHgyNjc4MmUsXzB4MTE4MGY1LF8weDVkOTcwYyk7Y29uc3QgXzB4MWU1MGRlPV8weDQ5ZGRjNFtfMHg0NWQzNWMoMHg2N2YpXSgpO2lmKCFfMHgxZTUwZGUpcmV0dXJuIHRoaXNbXzB4NDVkMzVjKDB4MWEyKV0oXzB4MjY3ODJlLF8weDExODBmNSxfMHg1ZDk3MGMpO2NvbnN0IF8weDVhNTRkMz1fMHgxZTUwZGVbXzB4NWU0MjkxW18weDQ1ZDM1YygweGRlKV0oXzB4M2FlOTVhKV07aWYoIV8weDVhNTRkMylyZXR1cm4gdGhpc1tfMHg0NWQzNWMoMHgxYTIpXShfMHgyNjc4MmUsXzB4MTE4MGY1LF8weDVkOTcwYyk7KHRoaXNbXzB4NDVkMzVjKDB4NGJhKV1bXzB4NDVkMzVjKDB4MzA4KV0oKXx8dGhpc1tfMHg0NWQzNWMoMHg0YmEpXVtfMHg0NWQzNWMoMHg0NzQpXSgpfHx0aGlzW18weDQ1ZDM1YygweDRiYSldWydpc05hdGl2ZUJ1bmRsZXInXSgpfHx0aGlzWydfcHJvamVjdCddW18weDQ1ZDM1YygweDVhZCldKCkpJiZfMHg0OWRkYzRbJ2J1aWxkRGlzcGxheVJhbmdlc0lmUmVxdWlyZWQnXSgpO2NvbnN0IF8weDM4NzgwYT1fMHg0OWRkYzRbXzB4NDVkMzVjKDB4MWY2KV0oXzB4NWE1NGQzKTtyZXR1cm4gXzB4NTgyODEwW18weDQ1ZDM1YygweDRhNSldPV8weDExODBmNSxfMHg1ODI4MTBbXzB4NDVkMzVjKDB4NzNiKV09XzB4Mzg3ODBhLF8weDU4MjgxMFtfMHg0NWQzNWMoMHg1Y2QpXT1fMHg0YWIwM2UsXzB4MjY3ODJlWydzdXBwcmVzc1NldHRpbmdUcmFjZUNvbnRleHQnXXx8dGhpc1tfMHg0NWQzNWMoMHgzZmUpXSgpLHsncmFuZ2UnOl8weDM4NzgwYSwnZnJhbWUnOl8weDExODBmNSwnZmlsZSc6XzB4NDlkZGM0WydwYXRoJ10oKSwnbG9jJzpbXzB4Mzg3ODBhWzB4MF0sXzB4Mzg3ODBhWzB4MV1dfTt9W18weGU0OGVkZSgweDc1NSldKF8weDVjZDViOCxfMHhmYmVhZjMsXzB4NWM0ODY5KXtjb25zdCBfMHg0NGRlODI9XzB4ZTQ4ZWRlO3JldHVybiBfMHhmYmVhZjNbXzB4NDRkZTgyKDB4NzVjKV0oXzB4NWE0ZWE3PT5fMHg1Y2Q1YjhbXzB4NDRkZTgyKDB4NjdmKV1bXzB4NDRkZTgyKDB4NTUxKV0oXzB4NGE1M2FjPT5fMHg0YTUzYWNbMHgwXT09PV8weDVhNGVhN1tfMHg0NGRlODIoMHg2MzApXSgpJiZfMHg0YTUzYWNbMHgxXT09PV8weDVhNGVhN1tfMHg0NGRlODIoMHg1NjUpXSgpJiZfMHg0YTUzYWNbMHgyXT09PV8weDVhNGVhN1tfMHg0NGRlODIoMHg2ZjEpXSgpJiZfMHg0YTUzYWNbMHgzXT09PV8weDVhNGVhN1snZW5kQ29sdW1uJ10oKSkpWydmaWx0ZXInXShfMHhkYTU0ZmM9Pl8weGRhNTRmYz49MHgwKVtfMHg0NGRlODIoMHgxYTcpXSgoXzB4MzA3ZTMwLF8weDM5MjIxMyk9PihfMHgzMDdlMzBbXzB4MzkyMjEzXT0weDEsXzB4MzA3ZTMwKSxfMHg1YzQ4Njl8fHt9KTt9W18weGU0OGVkZSgweDE2ZSldKF8weDEwNWU5OSl7Y29uc3QgXzB4NDFlZGY5PV8weGU0OGVkZTtpZihfMHgxMDVlOTkmJl8weDEwNWU5OVtfMHg0MWVkZjkoMHg1NjMpXSl7Y29uc3QgXzB4MmU0ZWQ1PV8weDEwNWU5OVsnZmlsZSddJiZ0aGlzW18weDQxZWRmOSgweDYzNSldW18weDQxZWRmOSgweDYwZCldW18weDEwNWU5OVtfMHg0MWVkZjkoMHgxYmMpXV0sXzB4MjUwMzU0PV9bXzB4NDFlZGY5KDB4MzNiKV0odGhpc1tfMHg0MWVkZjkoMHg2MzUpXVtfMHg0MWVkZjkoMHgyZjkpXXx8e30pWzB4MF07cmV0dXJuIF8weDEwNWU5OVtfMHg0MWVkZjkoMHg4ZildPV8weDJlNGVkNT9fMHgyZTRlZDVbXzB4NDFlZGY5KDB4NTc4KV06XzB4MjUwMzU0P18weDI1MDM1NFsnc3RhcnQnXToweDAsZGVsZXRlIF8weDEwNWU5OVtfMHg0MWVkZjkoMHg1NjMpXSxkZWxldGUgXzB4MTA1ZTk5W18weDQxZWRmOSgweDJhNCldLGRlbGV0ZSBfMHgxMDVlOTlbJ2ZpbGUnXSx0aGlzW18weDQxZWRmOSgweDNiOCldKF8weDEwNWU5OSk7fX1bXzB4ZTQ4ZWRlKDB4MWEyKV0oXzB4MTc0MjE2LF8weDY3MmMyMSxfMHgyYTQ5MmEpe2NvbnN0IF8weDkyNWI0ZD1fMHhlNDhlZGU7cmV0dXJuIF8weDE3NDIxNltfMHg5MjViNGQoMHg0YTUpXT1fMHg2NzJjMjErKF8weDJhNDkyYT8tMHgxOjB4MSksdGhpc1tfMHg5MjViNGQoMHgzYjgpXShfMHgxNzQyMTYpO31bXzB4ZTQ4ZWRlKDB4YjEpXShfMHgyYTI2MzAsXzB4NGVmNjgzLF8weDJhMGU2MSxfMHgxOGQ1ODcpe2NvbnN0IF8weDI4ZDRmZj1fMHhlNDhlZGU7aWYoIV8weDJhMjYzMHx8IV8weDRlZjY4M3x8IShfMHgyYTBlNjE+PTB4MCl8fCFfMHgyYTI2MzBbXzB4MjhkNGZmKDB4NmMzKV18fCFfMHg0ZWY2ODNbXzB4MjhkNGZmKDB4NmMzKV0pcmV0dXJuO2NvbnN0IF8weDI1OTQ3ZT1NYXRoW18weDI4ZDRmZigweDQ1YSldKF8weDJhMjYzMFtfMHgyOGQ0ZmYoMHg2YzMpXVtfMHgyOGQ0ZmYoMHgxOTUpXS1fMHg0ZWY2ODNbXzB4MjhkNGZmKDB4NmMzKV1bXzB4MjhkNGZmKDB4MTk1KV0pO2lmKF8weDI1OTQ3ZSYmXzB4MjU5NDdlPDB4YSYmXzB4MThkNTg3KXtjb25zdCBbXzB4MzFkY2FhLCxfMHg1Y2YxM2JdPV8weDJhMjYzMFtfMHgyOGQ0ZmYoMHg2YzMpXVtfMHgyYTBlNjFdLF8weDJhYzk1Nz10aGlzWydmaWxlQnlJZCddKF8weDMxZGNhYSksXzB4Mjg5ZDI0PV8weDJhYzk1N1sncmFuZ2VzJ10oKSxfMHg0YjYxNmM9dGhpc1tfMHgyOGQ0ZmYoMHg0YmEpXVtfMHgyOGQ0ZmYoMHgzMDcpXShfMHgyYWM5NTdbXzB4MjhkNGZmKDB4NDhmKV0oKSk7aWYoXzB4MmFjOTU3JiZfMHg0YjYxNmMmJl8weDI4OWQyNCl7Y29uc3QgXzB4NTkyYWUxPU1hdGhbXzB4MjhkNGZmKDB4MWRiKV0oXzB4MmEwZTYxLV8weDI1OTQ3ZSwweDApLF8weDlhMGY4Nj1NYXRoWydtaW4nXShfMHgyYTBlNjErXzB4MjU5NDdlLF8weDRlZjY4M1snc2VxdWVuY2UnXVtfMHgyOGQ0ZmYoMHgxOTUpXS0weDEpO2Zvcih2YXIgXzB4MTkwN2UyPV8weDU5MmFlMTtfMHgxOTA3ZTI8PV8weDlhMGY4NjtfMHgxOTA3ZTIrKyl7Y29uc3QgW18weDc0NjM4NixfMHg0YTEwNDAsXzB4MzgzNjVhXT1fMHg0ZWY2ODNbJ3NlcXVlbmNlJ11bXzB4MTkwN2UyXTtpZihfMHgzMWRjYWE9PT1fMHg3NDYzODYmJl8weDVjZjEzYj09PV8weDM4MzY1YSl7Y29uc3QgXzB4YTZhZDc5PV8weDRiNjE2Y1sncmFuZ2VzJ11bXzB4NGExMDQwXTtpZihfMHhhNmFkNzkmJl8weGE2YWQ3OVtfMHgyOGQ0ZmYoMHgxOTUpXSl7Y29uc3QgXzB4MWM0OTQ4PV8weDI4OWQyNFtfMHg1ZTQyOTFbXzB4MjhkNGZmKDB4ZGUpXShfMHhhNmFkNzkpXSxfMHg0M2ZjYTE9XzB4MmFjOTU3W18weDI4ZDRmZigweDFmNildKF8weDFjNDk0OCk7aWYoXzB4MThkNTg3WzB4MV09PT1fMHg0M2ZjYTFbMHgxXSYmXzB4MThkNTg3WzB4M109PT1fMHg0M2ZjYTFbMHgzXSl7XzB4MmEwZTYxPV8weDE5MDdlMjticmVhazt9fX19fX1yZXR1cm4gXzB4MmEwZTYxPU1hdGhbXzB4MjhkNGZmKDB4NzFhKV0oXzB4MmEwZTYxLF8weDRlZjY4M1tfMHgyOGQ0ZmYoMHg2YzMpXVtfMHgyOGQ0ZmYoMHgxOTUpXS0weDEpLHRoaXNbXzB4MjhkNGZmKDB4M2I4KV0oeydmcmFtZSc6XzB4MmEwZTYxfSk7fVtfMHhlNDhlZGUoMHgyNjMpXShfMHgzZGE3MWYsXzB4MjBkZDA5KXtjb25zdCBfMHg0YzY4Mzk9XzB4ZTQ4ZWRlO19bXzB4NGM2ODM5KDB4M2U2KV0oXzB4M2RhNzFmLChfMHgxODVmYTYsXzB4NGRjN2E1KT0+e2NvbnN0IF8weDRkMTEwZD1fMHg0YzY4MzksXzB4NDdhNWU3PV8weDIwZGQwOVtfMHg0ZGM3YTVdO18weDQ3YTVlNyYmKF8weDE4NWZhNltfMHg0ZDExMGQoMHgzNjMpXT1fMHg0N2E1ZTdbJ2Rpc3BsYXlQYXRoJ10oKVsnam9pbiddKCdceDIwJykpO30pO31bJ19wcm9jZXNzQ2FsbFN0YWNrJ10oXzB4NDlhZWE2KXtjb25zdCBfMHgyMWVkODE9XzB4ZTQ4ZWRlO2lmKCFfMHg0OWFlYTYpcmV0dXJuO2NvbnN0IF8weDM2NDRiZD0oKT0+KHRoaXNbJ190cmFjZVN0YXRlJ118fHt9KVsnZnJhbWUnXSxfMHgyN2JhMGE9XzB4MzY0NGJkKCk7dHJ5e19bJ2VhY2gnXShfMHg0OWFlYTYsXzB4NTZkNGY0PT57Y29uc3QgXzB4NDRlMzY3PV8weGFlMjY7XzB4NTZkNGY0W18weDQ0ZTM2NygweDQzNyldPV8weDU2ZDRmNFtfMHg0NGUzNjcoMHg0MzcpXVtfMHg0NGUzNjcoMHg3NWMpXSgoXzB4NGZiZmFlLF8weDM2MGY0Mik9Pntjb25zdCBfMHg1YTFhYzE9XzB4NDRlMzY3LF8weDI4MTZjZD1fMHg0ZmJmYWVbMHgwXSxfMHg1YTg1M2Q9XzB4NGZiZmFlWzB4MV0sXzB4NTFkZTliPXRoaXNbXzB4NWExYWMxKDB4NjliKV0oXzB4MjgxNmNkKTtpZighXzB4NTFkZTliKXJldHVybjtjb25zdCBfMHgyMDk1NGM9dGhpc1tfMHg1YTFhYzEoMHgzYjgpXSh7J2ZpbGUnOl8weDUxZGU5YltfMHg1YTFhYzEoMHg0OGYpXSgpLCdsaW5lJzpfMHgzNjBmNDI+MHgwP18weDVhODUzZDp2b2lkIDB4MCwnYmFjayc6ITB4MCwnZnJhbWUnOl8weDI3YmEwYT09PV8weDM2NDRiZCgpP18weDI3YmEwYTp2b2lkIDB4MCwnc3VwcHJlc3NTZXR0aW5nVHJhY2VDb250ZXh0JzohMHgwfSk7cmV0dXJuIF8weDIwOTU0YyYmXzB4NTZkNGY0W18weDVhMWFjMSgweDRkOCldJiYoXzB4MjA5NTRjW18weDVhMWFjMSgweDRkOCldPV8weDU2ZDRmNFtfMHg1YTFhYzEoMHg0ZDgpXVtfMHgzNjBmNDJdKSxfMHgyMDk1NGM7fSlbJ2ZpbHRlciddKF8weDFmNDZhPT4hIV8weDFmNDZhKSxkZWxldGUgXzB4NTZkNGY0W18weDQ0ZTM2NygweGFiKV0sZGVsZXRlIF8weDU2ZDRmNFsnc3RhY2tNYXBwZWQnXSxkZWxldGUgXzB4NTZkNGY0Wydjb250ZXh0J107fSk7fWZpbmFsbHl7dGhpc1tfMHgyMWVkODEoMHg1YTMpXSYmKHRoaXNbJ190cmFjZVN0YXRlJ11bXzB4MjFlZDgxKDB4NGE1KV09XzB4MjdiYTBhKTt9fVtfMHhlNDhlZGUoMHgzZWIpXSgpe2NvbnN0IF8weDJjMzc5Yz1fMHhlNDhlZGU7cmV0dXJuIHRoaXNbJ190cmFjZSddJiZ0aGlzWydfdHJhY2VTdGF0ZSddJiZ0aGlzW18weDJjMzc5YygweDVhMyldW18weDJjMzc5YygweDRhNSldPj0weDAmJnRoaXNbXzB4MmMzNzljKDB4NWEzKV1bXzB4MmMzNzljKDB4NWZmKV07fVtfMHhlNDhlZGUoMHgzZGQpXShfMHg1YzU0ZWUpe2NvbnN0IF8weDU4NTcwMD1fMHhlNDhlZGU7bGV0IF8weDVmMjQ1MD10aGlzW18weDU4NTcwMCgweDMxYildKF8weDVjNTRlZVtfMHg1ODU3MDAoMHgxYmMpXSk7aWYoIV8weDVmMjQ1MClyZXR1cm47aWYodGhpc1tfMHg1ODU3MDAoMHg0YmEpXVsncnVuT25TYXZlJ10mJnRoaXNbXzB4NTg1NzAwKDB4NGJhKV1bXzB4NTg1NzAwKDB4NWZhKV0oKSlyZXR1cm5bXTsodGhpc1tfMHg1ODU3MDAoMHg0YmEpXVtfMHg1ODU3MDAoMHgzMDgpXSgpfHx0aGlzW18weDU4NTcwMCgweDRiYSldW18weDU4NTcwMCgweDQ3NCldKCl8fHRoaXNbXzB4NTg1NzAwKDB4NGJhKV1bXzB4NTg1NzAwKDB4MjU0KV0oKXx8dGhpc1tfMHg1ODU3MDAoMHg0YmEpXVtfMHg1ODU3MDAoMHg1YWQpXSgpKSYmXzB4NWYyNDUwWydidWlsZERpc3BsYXlSYW5nZXNJZlJlcXVpcmVkJ10oKTtjb25zdCBfMHgzZGM4YmI9dGhpc1tfMHg1ODU3MDAoMHg3MjUpXVtfMHg1ODU3MDAoMHg1ZmYpXVtfMHg1ODU3MDAoMHgxOTkpXT90aGlzWydmaWx0ZXInXVtfMHg1ODU3MDAoMHg1ZmYpXTp2b2lkIDB4MDtyZXR1cm4gX1tfMHg1ODU3MDAoMHg3NDIpXShfMHg1YzU0ZWVbXzB4NTg1NzAwKDB4MmE0KV0/XzB4NWYyNDUwW18weDU4NTcwMCgweDQ0NildKF8weDVjNTRlZVtfMHg1ODU3MDAoMHgyYTQpXSk6XzB4NWYyNDUwW18weDU4NTcwMCgweDY3ZildKCkpWydmaWx0ZXInXShfMHgzNWZkNzg9PiFfMHgzNWZkNzhbJ2lzQ292ZXJlZCddKF8weDNkYzhiYikpWydtYXAnXShfMHgyODE5ODA9Pl8weDVmMjQ1MFsnZGlzcGxheVJhbmdlJ10oXzB4MjgxOTgwKSlbXzB4NTg1NzAwKDB4M2M2KV0oKTt9W18weGU0OGVkZSgweDNlZSldKF8weDEyYmE4MCl7Y29uc3QgXzB4MzA3ZWVjPV8weGU0OGVkZTtsZXQgXzB4MjdkYWRmPXRoaXNbJ2ZpbGVCeVBhdGgnXShfMHgxMmJhODBbXzB4MzA3ZWVjKDB4MWJjKV0pO2lmKF8weDI3ZGFkZilyZXR1cm4gdGhpc1tfMHgzMDdlZWMoMHgyZjUpXShfMHgyN2RhZGYsXzB4MTJiYTgwWydsaW5lJ10pO31bJ2xvY2F0aW9uQnlSZXF1ZXN0J10oXzB4MmJlNTY4KXtjb25zdCBfMHgzOTdmMjY9XzB4ZTQ4ZWRlO2lmKF8weDJiZTU2OFtfMHgzOTdmMjYoMHg0NTQpXT09PV8weDM5N2YyNigweDQ4OCkpe2NvbnN0IF8weDRjZjJiMz0oKT0+KHsnZmlsZSc6XzB4MmJlNTY4WydmaWxlJ10sJ2xvYyc6WzB4MSwweDBdfSk7aWYoIV8weDJiZTU2OFsndGVzdCddKXJldHVybiBfMHg0Y2YyYjMoKTtjb25zdCBfMHgzOWFlMGI9dGhpc1tfMHgzOTdmMjYoMHg2ODkpXShfMHgyYmU1NjhbJ2ZpbGUnXSk7aWYoIV8weDM5YWUwYlsnbGVuZ3RoJ10pcmV0dXJuIF8weDRjZjJiMygpO2NvbnN0IF8weDViODE2ZD1fMHgzOWFlMGJbXzB4Mzk3ZjI2KDB4N2E3KV0oXzB4MmJlNTY4W18weDM5N2YyNigweDVmZildKSxfMHg0YTNhNjA9XzB4MzlhZTBiWydsYXN0SW5kZXhPZiddKF8weDJiZTU2OFsndGVzdCddKTtpZihfMHg1YjgxNmQhPT1fMHg0YTNhNjApcmV0dXJuIF8weDRjZjJiMygpO2NvbnN0IF8weDNiMzQ3ZT1fMHgyNTAxYjBbJ3RleHRJbmRleFBvc2l0aW9uJ10oXzB4MzlhZTBiLF8weDViODE2ZCk7cmV0dXJueydmaWxlJzpfMHgyYmU1NjhbXzB4Mzk3ZjI2KDB4MWJjKV0sJ2xvYyc6W18weDNiMzQ3ZVtfMHgzOTdmMjYoMHgyYTQpXSxfMHgzYjM0N2VbXzB4Mzk3ZjI2KDB4NmU0KV1dfTt9bGV0IF8weDEzOGU0OT10aGlzWydfbGF0ZXN0RmFpbGluZ1Rlc3RCeUZpbGVBbmRMaW5lJ10oXzB4MmJlNTY4KTtpZihfMHgxMzhlNDkpe2lmKF8weDJiZTU2OFtfMHgzOTdmMjYoMHg0NTQpXT09PSdmYWlsaW5nVGVzdCcpe2xldCBfMHg4MzViY2U9XzB4MTM4ZTQ5WydzdGFydFJhbmdlJ10oKTtyZXR1cm4gXzB4ODM1YmNlP3snZmlsZSc6XzB4MTM4ZTQ5W18weDM5N2YyNigweDYzNildKCksJ2xvYyc6W18weDgzNWJjZVtfMHgzOTdmMjYoMHg2MzApXSgpLF8weDgzNWJjZVtfMHgzOTdmMjYoMHg1NjUpXSgpXX06e307fWVsc2V7aWYoXzB4MmJlNTY4W18weDM5N2YyNigweDQ1NCldPT09XzB4Mzk3ZjI2KDB4ZjYpKXtsZXQgXzB4NDEwNjM1PV9bJ2ZpbmQnXShfMHgxMzhlNDlbJ2Vycm9ycyddKCksXzB4NDZmOTExPT5fMHg0NmY5MTEmJl8weDQ2ZjkxMVtfMHgzOTdmMjYoMHg0MzcpXSYmXzB4NDZmOTExWydzdGFjayddKClbJ2xlbmd0aCddKTtpZighXzB4NDEwNjM1KXtsZXQgXzB4MTUyYzMzPV8weDEzOGU0OVsnc3RhcnRSYW5nZSddKCk7cmV0dXJuIF8weDE1MmMzMz97J2ZpbGUnOl8weDEzOGU0OVsnZmlsZVBhdGgnXSgpLCdsb2MnOltfMHgxNTJjMzNbJ3N0YXJ0TGluZSddKCksXzB4MTUyYzMzW18weDM5N2YyNigweDU2NSldKCldfTp7fTt9bGV0IF8weDI0YmM3OD1fMHg0MTA2MzVbJ3N0YWNrJ10oKVsweDBdLF8weDJmZjQxYz1fMHgyNGJjNzhbXzB4Mzk3ZjI2KDB4NzNiKV0oKTt2YXIgXzB4MTQzNThkPXt9O3JldHVybiBfMHgxNDM1OGRbJ2ZpbGUnXT1fMHgyNGJjNzhbXzB4Mzk3ZjI2KDB4NjM2KV0oKSxfMHgyZmY0MWMmJihfMHgxNDM1OGRbXzB4Mzk3ZjI2KDB4NjNjKV09W18weDJmZjQxY1tfMHgzOTdmMjYoMHg2MzApXSgpLF8weDJmZjQxY1snc3RhcnRDb2x1bW4nXSgpXSksXzB4MTQzNThkO319fX1bXzB4ZTQ4ZWRlKDB4MzEwKV0oXzB4MzY0ODc3KXtjb25zdCBfMHhmY2JlOWQ9XzB4ZTQ4ZWRlO2lmKCFfMHgzNjQ4NzdbJ2xpbmUnXXx8IV8weDM2NDg3N1tfMHhmY2JlOWQoMHgxYmMpXSlyZXR1cm47Y29uc3QgXzB4M2I2YjcwPXRoaXNbXzB4ZmNiZTlkKDB4MzFiKV0oXzB4MzY0ODc3W18weGZjYmU5ZCgweDFiYyldKTtpZihfMHgzYjZiNzApe2lmKF8weDM2NDg3N1tfMHhmY2JlOWQoMHg0NTQpXT09PV8weGZjYmU5ZCgweDFlOSkpcmV0dXJuIF8weDNiNmI3MFtfMHhmY2JlOWQoMHg0MTUpXShfMHgzNjQ4NzdbJ2xpbmUnXSk7aWYoXzB4MzY0ODc3W18weGZjYmU5ZCgweDQ1NCldPT09XzB4ZmNiZTlkKDB4NmI5KSlyZXR1cm4gXzB4M2I2YjcwW18weGZjYmU5ZCgweDVkNSldKF8weDM2NDg3N1tfMHhmY2JlOWQoMHgyYTQpXSk7fX1bXzB4ZTQ4ZWRlKDB4MmUyKV0oXzB4MWU5Yzg2KXtjb25zdCBfMHg0NGRkZWI9XzB4ZTQ4ZWRlLF8weDQwZWExMj1fMHgxZTljODZbXzB4NDRkZGViKDB4MWJjKV0mJnRoaXNbXzB4NDRkZGViKDB4MzFiKV0oXzB4MWU5Yzg2WydmaWxlJ10pLF8weDFkZDNmOD1fMHg0MGVhMTImJl8weDFlOWM4NltfMHg0NGRkZWIoMHgyYTQpXSYmXzB4NDBlYTEyW18weDQ0ZGRlYigweDY4NCldKF8weDFlOWM4NltfMHg0NGRkZWIoMHgyYTQpXSxfMHgyYzBmYjI9Pl8weDJjMGZiMltfMHg0NGRkZWIoMHgyYjkpXSgpfHxfMHgyYzBmYjJbXzB4NDRkZGViKDB4MmJhKV0oKSk7bGV0IF8weDFiMWNkYT1fMHgxZGQzZjgmJl8weDFkZDNmOFtfMHg0NGRkZWIoMHgxOTUpXSYmXzB4MWRkM2Y4WzB4MF07Y29uc3QgXzB4ZDE4MmMzPXRoaXNbJ2ZpbHRlciddW18weDQ0ZGRlYigweDVmZildO2lmKF8weGQxODJjM1tfMHg0NGRkZWIoMHgxOTkpXSYmXzB4MWRkM2Y4JiZfMHgxZGQzZjhbXzB4NDRkZGViKDB4MTk1KV0pe2Zvcihjb25zdCBfMHgzYzRjMmMgb2YgXzB4MWRkM2Y4KWlmKF8weGQxODJjM1snaGFzJ10oXzB4M2M0YzJjW18weDQ0ZGRlYigweDQ2MildKCkpKXtfMHgxYjFjZGE9XzB4M2M0YzJjO2JyZWFrO319cmV0dXJuKCFfMHgxYjFjZGF8fCFfMHgxYjFjZGFbXzB4NDRkZGViKDB4NjJjKV0oKSkmJihfMHgxYjFjZGE9dGhpc1snbGF0ZXN0RmFpbGluZ1Rlc3QnXSgpKSxfMHgxYjFjZGE7fVtfMHhlNDhlZGUoMHgzOGYpXShfMHgyNTUwNGUpe2NvbnN0IF8weDQ2OWIzMT1fMHhlNDhlZGU7bGV0IF8weDI5NWUwNj10aGlzW18weDQ2OWIzMSgweDJlMildKF8weDI1NTA0ZSk7aeKAi2YoXzB4Mjk1ZTA2KXtjb25zdCBfMHg0N2RiY2I9XzB4Mjk1ZTA2W18weDQ2OWIzMSgweDYwZildKCk7aWYoIV8weDQ3ZGJjYltfMHg0NjliMzEoMHgxOTUpXSlyZXR1cm47Y29uc3QgXzB4Mjk1MmRjPV8weDI1NTA0ZVtfMHg0NjliMzEoMHgxMmEpXSxfMHgxMDlmMmI9XzB4MjU1MDRlW18weDQ2OWIzMSgweGI5KV07aWYoXzB4MjU1MDRlW18weDQ2OWIzMSgweDQ1NCldPT09J2Vycm9yU291cmNlJ3x8XzB4Mjk1MmRjKXtjb25zdCBfMHg0NjI2YzA9XzB4MjU1MDRlW18weDQ2OWIzMSgweDFiYyldJiZ0aGlzWydmaWxlQnlQYXRoJ10oXzB4MjU1MDRlWydmaWxlJ10pO2lmKCFfMHg0NjI2YzApcmV0dXJuO2NvbnN0IF8weDFjOTc2ZD1fMHg0NjI2YzBbXzB4NDY5YjMxKDB4NDYyKV0oKTtsZXQgXzB4NWNkZGNlPXRoaXNbXzB4NDY5YjMxKDB4MzkxKV0oX1tfMHg0NjliMzEoMHg3MjUpXShfMHg0N2RiY2IsXzB4MjNiMzA9Pl9bXzB4NDY5YjMxKDB4MjZhKV0oXzB4MjNiMzBbXzB4NDY5YjMxKDB4NDM3KV0oKSxfMHg0ODc0NmQ9Pl8weDQ4NzQ2ZFtfMHg0NjliMzEoMHg1Y2QpXSgpPT09XzB4MWM5NzZkJiZfMHg0ODc0NmRbXzB4NDY5YjMxKDB4MmE0KV0oKT09PV8weDI1NTA0ZVtfMHg0NjliMzEoMHgyYTQpXSkpLHsnaW5jbHVkZVN0YWNrQ29udGV4dENvZGUnOl8weDI5NTJkY30pWzB4MF07cmV0dXJuIF8weDVjZGRjZXx8KF8weDVjZGRjZT10aGlzW18weDQ2OWIzMSgweDM5MSldKF8weDQ2MjZjMFtfMHg0NjliMzEoMHg3YTkpXShfMHgyNTUwNGVbXzB4NDY5YjMxKDB4MmE0KV0pKVsweDBdKSxfMHg1Y2RkY2UmJiFfMHg1Y2RkY2VbJ2lkJ10mJl8weDEwOWYyYiYmKF8weDVjZGRjZVsnaWQnXT10aGlzW18weDQ2OWIzMSgweDIwMildKHRoaXNbXzB4NDY5YjMxKDB4NjliKV0oXzB4MWM5NzZkKSxfMHgyNTUwNGVbXzB4NDY5YjMxKDB4MmE0KV0pKSxfMHg1Y2RkY2UmJl8weDI5NTJkYyYmKF8weDVjZGRjZVtfMHg0NjliMzEoMHg1ZmYpXT17J3BhdGgnOnRoaXNbXzB4NDY5YjMxKDB4NzgyKV0oeyd0ZXN0JzpfMHgyOTVlMDZ9KVsweDBdW18weDQ2OWIzMSgweDQ4ZildLCdmaWxlJzpfMHgyOTVlMDZbXzB4NDY5YjMxKDB4NjM2KV0oKX0pLF8weDVjZGRjZTt9ZWxzZXtpZihfMHgyNTUwNGVbXzB4NDY5YjMxKDB4NDU0KV09PT0nZmFpbGluZ1Rlc3QnKXtjb25zdCBfMHgzNzM0MWM9dGhpc1tfMHg0NjliMzEoMHgzOTEpXShfMHg0N2RiY2IpWzB4MF07aWYoXzB4MzczNDFjJiYhXzB4MzczNDFjWydpZCddJiZfMHgxMDlmMmIpe2NvbnN0IF8weDViNTZiNT10aGlzW18weDQ2OWIzMSgweDMxYildKF8weDI1NTA0ZVtfMHg0NjliMzEoMHgxYmMpXSk7XzB4MzczNDFjWydpZCddPXRoaXNbXzB4NDY5YjMxKDB4MjAyKV0oXzB4NWI1NmI1LF8weDI1NTA0ZVtfMHg0NjliMzEoMHgyYTQpXSk7fXJldHVybiBfMHgzNzM0MWM7fX19fVtfMHhlNDhlZGUoMHg3NmYpXSgpe2NvbnN0IF8weDJkZGIyMz1fMHhlNDhlZGU7cmV0dXJuIF9bXzB4MmRkYjIzKDB4NTQ2KV0oX1tfMHgyZGRiMjMoMHgzM2IpXSh0aGlzW18weDJkZGIyMygweDQxZSldKSk7fVtfMHhlNDhlZGUoMHg2OGUpXShfMHgxZjlhNmMpe2NvbnN0IF8weDNhYmZhYj1fMHhlNDhlZGU7aWYodGhpc1snX3J1bkVycm9yJ10pcmV0dXJuIHRoaXNbXzB4M2FiZmFiKDB4MWNhKV07bGV0IF8weGNmM2E1OD17J2Vycm9ycyc6dGhpc1snX21hcEVycm9ycyddKHRoaXNbXzB4M2FiZmFiKDB4NDJjKV0pLCd0aW1lJzpfMHgxZjlhNmMsJ2FkZGl0aW9uYWxIZWFkZXJNZXNzYWdlJzp0aGlzW18weDNhYmZhYigweDZhOSldLCd0cmFjZSc6dGhpc1snX3RyYWNlJ10mJnsnbGVuZ3RoJzp0aGlzW18weDNhYmZhYigweDYzNSldW18weDNhYmZhYigweDZjMyldW18weDNhYmZhYigweDE5NSldLCdjdXJyZW50RnJhbWUnOih0aGlzW18weDNhYmZhYigweDVhMyldfHx7fSlbXzB4M2FiZmFiKDB4NGE1KV0sJ2NhbGxTdGFjayc6dGhpc1tfMHgzYWJmYWIoMHg2MzUpXVsnY2FsbFN0YWNrJ10sJ3Rlc3RzJzp0aGlzW18weDNhYmZhYigweDYzNSldW18weDNhYmZhYigweDJmOSldLCdmaWxlcyc6dGhpc1tfMHgzYWJmYWIoMHg2MzUpXVsnZmlsZXMnXX19O2lmKHByb2Nlc3NbJ2VudiddW18weDNhYmZhYigweDIyYildKXtjb25zdCBfMHgyOTk2YTA9dGhpc1tfMHgzYWJmYWIoMHg3MjUpXVtfMHgzYWJmYWIoMHg3OGYpXVtfMHgzYWJmYWIoMHgxOTkpXSxfMHg1YzFmODk9dGhpc1tfMHgzYWJmYWIoMHg3MjUpXVtfMHgzYWJmYWIoMHgxZDYpXVtfMHgzYWJmYWIoMHgxOTkpXSxfMHgzMDg5ZTk9T2JqZWN0W18weDNhYmZhYigweDI0MyldKHRoaXNbJ19maWxlcyddKVsweDBdLF8weGVmNmFiOD1fMHgyMzlkZGI9Pntjb25zdCBfMHgxMjU0YmE9XzB4M2FiZmFiLF8weDQyNjBkMz1fMHgyMzlkZGJbXzB4MTI1NGJhKDB4MWVkKV0oKTtyZXR1cm4hKF8weDI5OTZhMCYmXzB4NDI2MGQzJiZfMHg0MjYwZDNbJ2NoYW5nZUlkJ10mJiFfMHg0MjYwZDNbJ3Blcm1hbmVudCddJiZ0aGlzW18weDEyNTRiYSgweDcyNSldW18weDEyNTRiYSgweDc4ZildW18weDEyNTRiYSgweDczNyldKF8weDMwODllOSxfMHg0MjYwZDNbXzB4MTI1NGJhKDB4NzFmKV0pfHxfMHg1YzFmODkmJl8weDIzOWRkYltfMHgxMjU0YmEoMHg3MTApXSgpIT09dGhpc1tfMHgxMjU0YmEoMHg3MjUpXVtfMHgxMjU0YmEoMHgxZDYpXVsndHMnXSYmIShfMHgyMzlkZGJbXzB4MTI1NGJhKDB4NzEwKV0oKT09PScqJyYmXzB4MjM5ZGRiW18weDEyNTRiYSgweDU0MyldKCk9PT10aGlzW18weDEyNTRiYSgweDcyNSldW18weDEyNTRiYSgweDFkNildW18weDEyNTRiYSgweDNjMyldKSk7fTtfMHhjZjNhNThbJ21lc3NhZ2VzJ109dGhpc1tfMHgzYWJmYWIoMHgzYTMpXSh0aGlzW18weDNhYmZhYigweGQxKV0sITB4MSxfMHhlZjZhYjgpO2xldCBfMHg2NDU3OTE9dGhpc1tfMHgzYWJmYWIoMHg0YmEpXVtfMHgzYWJmYWIoMHg5ZCldKCk7XzB4NjQ1NzkxJiZfMHg2NDU3OTFbXzB4M2FiZmFiKDB4MjJiKV0mJl9bJ2VhY2gnXShfMHhjZjNhNThbXzB4M2FiZmFiKDB4NjBmKV0sXzB4MmI2OTBjPT57Y29uc3QgXzB4MTc3ZDQ5PV8weDNhYmZhYjtpZighXzB4MmI2OTBjfHwhXzB4MmI2OTBjWydtZXNzYWdlJ10pcmV0dXJuO2lmKF8weDY0NTc5MVtfMHgxNzdkNDkoMHgyMmIpXVtfMHgxNzdkNDkoMHgxNTMpXVsnYWxsb3dUb0luc3RhbGxJbXBvcnRlZE1vZHVsZXMnXSl7Y29uc3QgXzB4MTYxYzEyPV8weDY0NTc5MVsncXVva2thJ11bXzB4MTc3ZDQ5KDB4NDZiKV0/XzB4MmI2OTBjW18weDE3N2Q0OSgweGFiKV1bXzB4MTc3ZDQ5KDB4NDhhKV0oL1xbdml0ZS1ub2RlXF0gRmFpbGVkIHRvIGxvYWQgKFteJ1xzJnw7XSspLiovKTpfMHg2NDU3OTFbXzB4MTc3ZDQ5KDB4MjJiKV1bXzB4MTc3ZDQ5KDB4MjhlKV0/XzB4MmI2OTBjW18weDE3N2Q0OSgweGFiKV1bJ21hdGNoJ10oL0Nhbm5vdCBmaW5kIHBhY2thZ2UgJyhbXidccyZ8O10rKScuKi8pOl8weDJiNjkwY1tfMHgxNzdkNDkoMHhhYildW18weDE3N2Q0OSgweDQ4YSldKC9DYW5ub3QgZmluZCBtb2R1bGUgJyhbXidccyZ8O10rKScvKTtfMHgxNjFjMTImJl8weDE2MWMxMlsweDFdJiYoXzB4MmI2OTBjW18weDE3N2Q0OSgweDQ2MCldPV8weDM5NzUyMVtfMHgxNzdkNDkoMHg3ODgpXShfMHgxNjFjMTJbMHgxXSkpO31sZXQgXzB4MmE0ZjgzPV8weDJiNjkwY1snbWVzc2FnZSddW18weDE3N2Q0OSgweDQ4YSldKC8oW15cc10rKSBpcyBub3QgZGVmaW5lZC8pO18weDJhNGY4MyYmXzB4MmE0ZjgzWzB4MV0mJihfMHgyYTRmODM9XzB4MmE0ZjgzWzB4MV0sXzB4Mjc4ZmFmW18weDJhNGY4M10/XzB4MmI2OTBjW18weDE3N2Q0OSgweDNmOCldPV8weDJhNGY4MzpfMHgyYjY5MGNbXzB4MTc3ZDQ5KDB4Mjc5KV09XzB4MmE0ZjgzKTt9KTt9ZWxzZXtjb25zdCBfMHg3YmViYzc9dGhpc1tfMHgzYWJmYWIoMHgzZWIpXSgpP3RoaXNbXzB4M2FiZmFiKDB4NjZjKV06dGhpc1tfMHgzYWJmYWIoMHg3MmEpXTtfMHhjZjNhNThbXzB4M2FiZmFiKDB4MTQ5KV09XzB4N2JlYmM3W18weDNhYmZhYigweDcxMyldLF8weGNmM2E1OFtfMHgzYWJmYWIoMHgyNWEpXT1fMHg3YmViYzdbJ2ZhaWxpbmdUZXN0c051bWJlciddLF8weGNmM2E1OFtfMHgzYWJmYWIoMHgxN2UpXT1fMHg3YmViYzdbXzB4M2FiZmFiKDB4MzgxKV0sXzB4Y2YzYTU4Wyd0b2RvTnVtYmVyJ109XzB4N2JlYmM3W18weDNhYmZhYigweDYxYildLF8weGNmM2E1OFtfMHgzYWJmYWIoMHgyZjkpXT10aGlzWydfbWFwVGVzdHMnXSh0aGlzW18weDNhYmZhYigweDQxZSldKVtfMHgzYWJmYWIoMHg2MmUpXSgpWyd2YWx1ZSddKCk7fXJldHVybiBfMHhjZjNhNTg7fVtfMHhlNDhlZGUoMHgzNjEpXSgpe2NvbnN0IF8weDViZjc3YT1fMHhlNDhlZGU7cmV0dXJuIF9bXzB4NWJmNzdhKDB4NzI1KV0odGhpc1tfMHg1YmY3N2EoMHg3MzIpXSxfMHg1YTYwNDc9Pl8weDVhNjA0N1tfMHg1YmY3N2EoMHg0OGIpXSgpKTt9W18weGU0OGVkZSgweDQzYSldKCl7Y29uc3QgXzB4ODg1ODFjPV8weGU0OGVkZTtyZXR1cm4gX1tfMHg4ODU4MWMoMHg3NDIpXSh0aGlzWydfZmlsZXMnXSlbXzB4ODg1ODFjKDB4NzI1KV0oXzB4MmRmZGYwPT5fMHgyZGZkZjBbJ2lzT3BlbmVkSW5FZGl0b3InXSgpKVtfMHg4ODU4MWMoMHg3NWMpXShfMHg0NGE4NDQ9Pih7J3BhdGgnOl8weDQ0YTg0NFsncGF0aCddKCksJ2lkJzpfMHg0NGE4NDRbXzB4ODg1ODFjKDB4NDYyKV0oKX0pKVtfMHg4ODU4MWMoMHgzYzYpXSgpO31bXzB4ZTQ4ZWRlKDB4MjMwKV0oKXtjb25zdCBfMHgyNTdlZWU9XzB4ZTQ4ZWRlLF8weDEyNTI5OD10aGlzW18weDI1N2VlZSgweDNlYildKCk/dGhpc1snX2RlYnVnZ2VyVGVzdENvdW50ZXJzJ106dGhpc1tfMHgyNTdlZWUoMHg3MmEpXTtyZXR1cm57J3RvdGFsJzpfMHgxMjUyOThbJ3RvdGFsVGVzdHNOdW1iZXInXSwncGFzc2VkJzpfMHgxMjUyOThbXzB4MjU3ZWVlKDB4NzEzKV0tXzB4MTI1Mjk4WydmYWlsaW5nVGVzdHNOdW1iZXInXS1fMHgxMjUyOThbXzB4MjU3ZWVlKDB4NjFiKV0tXzB4MTI1Mjk4W18weDI1N2VlZSgweDM4MSldLCdmYWlsZWQnOl8weDEyNTI5OFtfMHgyNTdlZWUoMHg0YTApXSwndG9kbyc6XzB4MTI1Mjk4W18weDI1N2VlZSgweDYxYildLCdza2lwcGVkJzpfMHgxMjUyOThbJ3NraXBwZWRUZXN0c051bWJlciddLCdmaWx0ZXJlZCc6dGhpc1snX2ZpbHRlciddWyd0ZXN0J11bXzB4MjU3ZWVlKDB4MTk5KV0/dGhpc1tfMHgyNTdlZWUoMHgyNjgpXVsndGVzdCddW18weDI1N2VlZSgweDFlNildOjB4MCwnY292ZXJhZ2UnOnRoaXNbXzB4MjU3ZWVlKDB4NmEwKV0sJ2Vycm9yJzp0aGlzW18weDI1N2VlZSgweDFjYSldfTt9WydhbGxGaWxlcyddKCl7Y29uc3QgXzB4NjBkYzkxPV8weGU0OGVkZTtyZXR1cm4gX1tfMHg2MGRjOTEoMHg3NWMpXSh0aGlzW18weDYwZGM5MSgweDczMildLF8weDJmZjRmNj0+KHsncGF0aCc6XzB4MmZmNGY2W18weDYwZGM5MSgweDQ4ZildKCksJ2lkJzpfMHgyZmY0ZjZbXzB4NjBkYzkxKDB4NDYyKV0oKX0pKTt9W18weGU0OGVkZSgweDYwMyldKF8weDFjM2NlNil7Y29uc3QgXzB4NDZjMWM5PV8weGU0OGVkZTtyZXR1cm4gX1tfMHg0NmMxYzkoMHg3NWMpXSh0aGlzW18weDQ2YzFjOSgweDY0ZildLF8weDFjM2NlNik7fVtfMHhlNDhlZGUoMHgyNzEpXSgpe2NvbnN0IF8weDRhZWVjMz1fMHhlNDhlZGU7cmV0dXJuIHRoaXNbXzB4NGFlZWMzKDB4NDJjKV07fVtfMHhlNDhlZGUoMHgxZDQpXSgpe3JldHVybiB0aGlzWydfcnVuRXJyb3InXTt9WydnZXRGaWxlTWVzc2FnZXMnXShfMHhlZDk5N2Epe2NvbnN0IF8weDEyNzVmMj1fMHhlNDhlZGU7dGhpc1tfMHgxMjc1ZjIoMHgxN2YpXVtfMHhlZDk5N2FdPXt9LHRoaXNbXzB4MTI3NWYyKDB4NWZiKV0oeydmaWxlSWQnOl8weGVkOTk3YX0pO31bXzB4ZTQ4ZWRlKDB4MWQ5KV0oXzB4MjI0YjIyLF8weGJkMGE2NSl7Y29uc3QgXzB4NTM4ZWQwPV8weGU0OGVkZSxfMHg1YTBhNWQ9dGhpc1tfMHg1MzhlZDAoMHg3MjUpXVtfMHg1MzhlZDAoMHg1ZmYpXVsndHMnXTtpZihfMHgyMjRiMjIpe2lmKF8weDIyNGIyMltfMHg1MzhlZDAoMHgxYmMpXSl7Y29uc3QgXzB4NTNiZTQxPXRoaXNbXzB4NTM4ZWQwKDB4MzFiKV0oXzB4MjI0YjIyW18weDUzOGVkMCgweDFiYyldKTtpZihfMHg1M2JlNDEpe2xldCBfMHgxMDY0ODk9W107aWYoXzB4MjI0YjIyW18weDUzOGVkMCgweDJhNCldKXtpZihfMHgxMDY0ODk9dGhpc1sndGVzdHNCeVJlcXVlc3QnXShfMHgyMjRiMjIpLF8weDUzYmU0MVtfMHg1MzhlZDAoMHg0OGIpXSgpJiZfMHgxMDY0ODlbXzB4NTM4ZWQwKDB4MTk1KV09PT0weDEmJiFfMHgxMDY0ODlbMHgwXVtfMHg1MzhlZDAoMHg0NTEpXSlfMHgxMDY0ODk9XzB4NTNiZTQxW18weDUzOGVkMCgweDMzZildKClbXzB4NTM4ZWQwKDB4NzVjKV0oXzB4MzkxNWQxPT4oeydwYXRoJzpbXzB4MzkxNWQxW18weDUzOGVkMCgweDVjZCldKCldW18weDUzOGVkMCgweDQ0OSldKF8weDM5MTVkMVtfMHg1MzhlZDAoMHg0OGYpXSgpKSwnZGF0YSc6XzB4MzkxNWQxfSkpO2Vsc2V7aWYoIV8weDUzYmU0MVtfMHg1MzhlZDAoMHg0OGIpXSgpJiZfMHgxMDY0ODlbJ2xlbmd0aCddPjB4MSl7aWYodGhpc1tfMHg1MzhlZDAoMHgzYjkpXT09PV8weDUzOGVkMCgweDY4Yil8fHRoaXNbXzB4NTM4ZWQwKDB4M2I5KV09PT1fMHg1MzhlZDAoMHhkNykpe18weDEwNjQ4OT1fMHgxMDY0ODlbXzB4NTM4ZWQwKDB4NzI1KV0oXzB4MmVlYTNiPT5fMHgyZWVhM2JbXzB4NTM4ZWQwKDB4NDUxKV0mJl8weDJlZWEzYltfMHg1MzhlZDAoMHg0OGYpXVtfMHg1MzhlZDAoMHgxOTUpXT4weDEpLHRoaXNbXzB4NTM4ZWQwKDB4NWVkKV0oJ3Rlc3RGaWx0ZXJUZXN0U2VsZWN0aW9uUmVxdWVzdGVkJyx7J2ZpbGUnOl8weDUzYmU0MVtfMHg1MzhlZDAoMHg0OGYpXSgpLCd0ZXN0cyc6XzB4MTA2NDg5W18weDUzOGVkMCgweDc1YyldKF8weDVkNzNjNz0+KHsncGF0aCc6XzB4NWQ3M2M3W18weDUzOGVkMCgweDQ4ZildLCdmaWxlJzpfMHg1ZDczYzdbXzB4NTM4ZWQwKDB4NDUxKV1bXzB4NTM4ZWQwKDB4NjM2KV0oKSwnZmFpbGluZyc6XzB4NWQ3M2M3W18weDUzOGVkMCgweDQ1MSldW18weDUzOGVkMCgweDYyYyldKCksJ3RvZ2dsZWQnOnRoaXNbXzB4NTM4ZWQwKDB4NzI1KV1bXzB4NTM4ZWQwKDB4NWZmKV1bXzB4NTM4ZWQwKDB4MzdmKV0oXzB4NWQ3M2M3W18weDUzOGVkMCgweDQ1MSldWydrZXknXSgpKX0pKVtfMHg1MzhlZDAoMHg3MjUpXShfMHhkMDEzMWM9Pl8weGQwMTMxY1tfMHg1MzhlZDAoMHgxYmMpXSlbXzB4NTM4ZWQwKDB4NTUzKV0oKF8weDVmZmQ3ZCxfMHgzNDg5ZjQpPT5fMHg1ZmZkN2RbJ2ZhaWxpbmcnXT09PV8weDM0ODlmNFtfMHg1MzhlZDAoMHgzYmMpXT8weDA6XzB4NWZmZDdkWydmYWlsaW5nJ10/LTB4MToweDEpfSk7cmV0dXJuO31lbHNlIF8weDEwNjQ4OT1bXTt9fV8weDEwNjQ4OT1fMHgxMDY0ODlbXzB4NTM4ZWQwKDB4NzVjKV0oXzB4MWQzZDY0PT5fMHgxZDNkNjRbJ3BhdGgnXSk7fWVsc2UgXzB4MjI0YjIyW18weDUzOGVkMCgweDVmZildJiZfMHgyMjRiMjJbXzB4NTM4ZWQwKDB4NWZmKV1bXzB4NTM4ZWQwKDB4MTk1KV0mJihfMHgxMDY0ODk9W18weDIyNGIyMltfMHg1MzhlZDAoMHg1ZmYpXV0pO2lmKF8weDEwNjQ4OVtfMHg1MzhlZDAoMHgxOTUpXSl7Zm9yKGNvbnN0IF8weDM0M2JlZSBvZiBfMHgxMDY0ODkpXzB4MzQzYmVlWydsZW5ndGgnXT4weDEmJnRoaXNbJ2ZpbGVCeUlkJ10oXzB4MzQzYmVlWzB4MF0pJiZ0aGlzW18weDUzOGVkMCgweDcyNSldWyd0ZXN0J11bXzB4NTM4ZWQwKDB4NjAwKV0oXzB4MzQzYmVlKTt9ZWxzZSB0aGlzW18weDUzOGVkMCgweDcyNSldW18weDUzOGVkMCgweDVmZildW18weDUzOGVkMCgweDcwOSldKCk7fWVsc2UgdGhpc1tfMHg1MzhlZDAoMHg3MjUpXVsndGVzdCddW18weDUzOGVkMCgweDcwOSldKCk7fWVsc2UgdGhpc1tfMHg1MzhlZDAoMHg3MjUpXVtfMHg1MzhlZDAoMHg1ZmYpXVsnY2xlYXInXSgpO31lbHNlIHRoaXNbXzB4NTM4ZWQwKDB4NzI1KV1bXzB4NTM4ZWQwKDB4NWZmKV1bXzB4NTM4ZWQwKDB4NzA5KV0oKTt0aGlzW18weDUzOGVkMCgweDcyNSldWyd0ZXN0J11bJ3RzJ10hPT1fMHg1YTBhNWQmJnRoaXNbXzB4NTM4ZWQwKDB4NDNmKV0oIV8weGJkMGE2NSwhXzB4YmQwYTY1LCEweDAsIV8weGJkMGE2NSwhXzB4YmQwYTY1KTt9W18weGU0OGVkZSgweDc3OSldKF8weDE3Y2FjNixfMHg2ZGZmNjcsXzB4MjkzMjdmKXtjb25zdCBfMHgyZGRkZDg9XzB4ZTQ4ZWRlLF8weDkxYmM5Nz10aGlzW18weDJkZGRkOCgweDEyOCldKF8weDE3Y2FjNixfMHg2ZGZmNjcpO3RoaXNbXzB4MmRkZGQ4KDB4NDNmKV0oIV8weDI5MzI3ZiwhXzB4MjkzMjdmLCEweDEsIV8weDI5MzI3ZiwhXzB4MjkzMjdmKSx0aGlzW18weDJkZGRkOCgweDVlZCldKCdsb2dzUmVtb3ZlZCcseydhZmZlY3RlZEZpbGVzJzpfMHg5MWJjOTd9KTt9W18weGU0OGVkZSgweDEyOCldKF8weDM0NDM4NCxfMHgzMjk3MWIpe2NvbnN0IF8weDNjODBmMj1fMHhlNDhlZGUsXzB4N2I1ODU9dGhpc1tfMHgzYzgwZjIoMHg3MjUpXVtfMHgzYzgwZjIoMHg3OGYpXSxfMHhhNzE5YmQ9W10sXzB4MmMxZTI2PShfMHgyYzdkOWYsXzB4YjcwNjZiKT0+e2NvbnN0IF8weDU0Yzk2NT1fMHgzYzgwZjI7XzB4MmM3ZDlmW18weDU0Yzk2NSgweDM1NyldKF8weDI4OTlhMz0+XzB4Mjg5OWEzW18weDU0Yzk2NSgweDVhMSldPyhkZWxldGUgXzB4Mjg5OWEzW18weDU0Yzk2NSgweDVhMSldLF8weDI4OTlhM1tfMHg1NGM5NjUoMHgxOGEpXSYmT2JqZWN0W18weDU0Yzk2NSgweDI0MyldKF8weDI4OTlhMylbXzB4NTRjOTY1KDB4MTk1KV09PT0weDEmJmRlbGV0ZSBfMHgyODk5YTNbJ2luc3BlY3Rpb24nXSxPYmplY3RbXzB4NTRjOTY1KDB4MjQzKV0oXzB4Mjg5OWEzKVtfMHg1NGM5NjUoMHgxOTUpXT09PTB4MCk6ITB4MSxfMHhiNzA2NmIpO307aWYoXzB4MzQ0Mzg0KXtjb25zdCBfMHgxNDhlOGE9dGhpc1tfMHgzYzgwZjIoMHgzMWIpXShfMHgzNDQzODQpO2lmKF8weDE0OGU4YSl7XzB4MmMxZTI2KF8weDE0OGU4YSxfMHgzMjk3MWIpO2xldCBfMHg1MWMxYTE7aWYoXzB4MzI5NzFiKXtjb25zdCBfMHgyNzg3OGQ9XzB4MTQ4ZThhW18weDNjODBmMigweDI3ZCldKF8weDMyOTcxYilbXzB4M2M4MGYyKDB4NzVjKV0oXzB4NDRlMzFhPT5fMHg0NGUzMWFbJ2NvbnNvbGVMb2cnXSgpKVsnZmlsdGVyJ10oXzB4MzI1YjJiPT5fMHgzMjViMmImJl8weDMyNWIyYlsnbGVuZ3RoJ10pO2Zvcihjb25zdCBfMHgzNjgzZTggb2YgXzB4Mjc4NzhkKXtjb25zdCBfMHgzZmZjNGY9XzB4MzY4M2U4W18weDNjODBmMigweDI2YSldKF8weDNjNGZlNT0+XzB4M2M0ZmU1W18weDNjODBmMigweDcxZildKTtpZihfMHgzZmZjNGYpe18weDUxYzFhMT1fMHgzZmZjNGZbXzB4M2M4MGYyKDB4NzFmKV07YnJlYWs7fX19XzB4MzI5NzFiP18weDMyOTcxYiYmXzB4NTFjMWExJiZfMHg3YjU4NVsnYWRkJ10oXzB4MTQ4ZThhWydrZXknXSgpLF8weDUxYzFhMSk6XzB4N2I1ODVbJ2FkZCddKF8weDE0OGU4YVtfMHgzYzgwZjIoMHg0NjIpXSgpKSxfMHhhNzE5YmRbXzB4M2M4MGYyKDB4NDJkKV0oXzB4MTQ4ZThhKTt9fWVsc2V7Y29uc3QgXzB4MjJiNzFhPXRoaXNbXzB4M2M4MGYyKDB4NzMyKV07Zm9yKGNvbnN0IF8weDRiZDlhNCBpbiBfMHgyMmI3MWEpe2NvbnN0IF8weDQzYzYzNT1fMHgyMmI3MWFbXzB4NGJkOWE0XTtfMHg0M2M2MzUmJl8weDQzYzYzNVtfMHgzYzgwZjIoMHg1YTQpXSgpJiYoXzB4MmMxZTI2KF8weDQzYzYzNSksXzB4N2I1ODVbXzB4M2M4MGYyKDB4NDQ1KV0oXzB4NDNjNjM1W18weDNjODBmMigweDQ2MildKCkpLF8weGE3MTliZFtfMHgzYzgwZjIoMHg0MmQpXShfMHg0M2M2MzUpKTt9fXJldHVybiBfMHhhNzE5YmQ7fVtfMHhlNDhlZGUoMHgyNTApXShfMHgyNTVmYTAsXzB4NTUxMjIwLF8weDJmODRiZixfMHg5MjgwNzAsXzB4MmU1ZjVhKXtjb25zdCBfMHgzZjdjMzU9XzB4ZTQ4ZWRlLF8weDQ3NGZlYj10aGlzW18weDNmN2MzNSgweDMxYildKF8weDI1NWZhMCk7aWYoXzB4NDc0ZmViKXtpZihfMHgyZjg0YmYpe2NvbnN0IF8weDNiOGQ3Mj10aGlzW18weDNmN2MzNSgweDcyNSldW18weDNmN2MzNSgweDc4ZildLF8weDJkNGZjNT1fMHg0NzRmZWJbXzB4M2Y3YzM1KDB4NDYyKV0oKTtfMHgzYjhkNzJbXzB4M2Y3YzM1KDB4MmZlKV0oXzB4MmQ0ZmM1LF8weDU1MTIyMCksXzB4NTUxMjIwW18weDNmN2MzNSgweDNlNCldKF8weDU2ZGUzNj0+e2NvbnN0IF8weDRhMDUzND1fMHgzZjdjMzU7XzB4M2I4ZDcyW18weDRhMDUzNCgweDQ0NSldKF8weDJkNGZjNSxfMHg1NmRlMzYpO30pLHRoaXNbJ2VtaXROb0NvZGVDaGFuZ2VFdmVudHMnXSghMHgwLCEweDAsITB4MSwhMHgwLCEweDApLHRoaXNbJ19lbWl0J10oXzB4M2Y3YzM1KDB4MzdhKSx7J2FmZmVjdGVkRmlsZXMnOltfMHg0NzRmZWJdfSk7fWlmKF8weDJlNWY1YSYmXzB4OTI4MDcwW18weDNmN2MzNSgweDE5NSldPjB4MCl7Y29uc3QgXzB4MTJiZjkwPXRoaXNbXzB4M2Y3YzM1KDB4NGJhKV1bXzB4M2Y3YzM1KDB4MzA3KV0oXzB4MjU1ZmEwKTsoIV8weDEyYmY5MHx8IV8weDEyYmY5MFtfMHgzZjdjMzUoMHgyMzcpXXx8XzB4MTJiZjkwW18weDNmN2MzNSgweDIzNyldWydvdmVybGFwcGluZ0xvZ3BvaW50c1ByZXNlbnQnXSkmJl8weDJlNWY1YSh0aGlzW18weDNmN2MzNSgweDRiNyldKF8weDI1NWZhMCkpO319fVtfMHhlNDhlZGUoMHg2MTApXShfMHgzYmE0NjMsXzB4MmM0NDQ5KXtjb25zdCBfMHgyMzJlZDY9XzB4ZTQ4ZWRlO3RoaXNbXzB4MjMyZWQ2KDB4MjY4KV1bXzB4MjMyZWQ2KDB4NzhmKV1bXzB4MjMyZWQ2KDB4NDUzKV0oXzB4M2JhNDYzLF8weDJjNDQ0OSk7fVtfMHhlNDhlZGUoMHg0M2YpXShfMHg0NGNhNWMsXzB4MjQzMTc5LF8weDQxMjI3MCxfMHgyZWMzYjIsXzB4MWEyN2VlKXtjb25zdCBfMHgzMGNhOGI9XzB4ZTQ4ZWRlO2lmKCEodGhpc1tfMHgzMGNhOGIoMHgyZjMpXSgpfHx0aGlzWydyZXN1bWluZyddKCkpKXtpZihfMHg0NGNhNWMpe2NvbnN0IF8weDU5OThmNz1fMHg0NGNhNWNbXzB4MzBjYThiKDB4NDIwKV18fE9iamVjdFtfMHgzMGNhOGIoMHg0NDgpXShudWxsKTtmb3IoY29uc3QgXzB4NDhiOTNmIG9mIHRoaXNbXzB4MzBjYThiKDB4NDNhKV0oKSlpZighXzB4NTk5OGY3W18weDQ4YjkzZltfMHgzMGNhOGIoMHg0OGYpXV0pe2NvbnN0IF8weGRjOTNjMj10aGlzW18weDMwY2E4YigweDMxYildKF8weDQ4YjkzZlsncGF0aCddKVsnYWxsTGluZXMnXSh0aGlzWydmaWx0ZXInXVtfMHgzMGNhOGIoMHgxOTkpXSk7dGhpc1tfMHgzMGNhOGIoMHgxMjQpXSYmXzB4ZGM5M2MyJiYoXzB4ZGM5M2MyW18weDMwY2E4YigweDc1MSldPXRoaXNbXzB4MzBjYThiKDB4MTI0KV1bXzB4NDhiOTNmWydpZCddXSksXzB4NTk5OGY3W18weDQ4YjkzZltfMHgzMGNhOGIoMHg0OGYpXV09XzB4ZGM5M2MyO31fW18weDMwY2E4YigweDk3KV0oXzB4NTk5OGY3KXx8dGhpc1tfMHgzMGNhOGIoMHg1ZWQpXSgnZG9jdW1lbnRzVXBkYXRlZCcseydkb2N1bWVudHMnOl8weDU5OThmN30pO31fMHgyNDMxNzkmJnRoaXNbJ19lbWl0RmlsZXNNZXNzYWdlcyddKHsncmVzZXQnOiEweDB9KSxfMHg0MTIyNzAmJnRoaXNbXzB4MzBjYThiKDB4NWVkKV0oXzB4MzBjYThiKDB4NWUzKSx7J2xvY2FsJzpfMHg0MTIyNzBbXzB4MzBjYThiKDB4MjhkKV19KSxfMHgyZWMzYjImJnRoaXNbXzB4MzBjYThiKDB4NWVkKV0oXzB4MzBjYThiKDB4NWQxKSx7J3Rlc3RSZXN1bHRzQ2hhbmdlZCc6ITB4MH0pLF8weDFhMjdlZSYmdGhpc1snX2VtaXRJbnNwZWN0aW9ucyddKCk7fX1bXzB4ZTQ4ZWRlKDB4MjAzKV0oXzB4ZWFlOWM2LF8weDFmMzU0ZCxfMHhjNzk4NDYpe2NvbnN0IF8weDVkN+KAizk0Zj1fMHhlNDhlZGU7dGhpc1tfMHg1ZDc5NGYoMHg1ZWQpXShfMHg1ZDc5NGYoMHg2ZmMpLHsnaWQnOl8weGVhZTljNiwnc3RhZ2UnOl8weDFmMzU0ZCwnbWVzc2FnZSc6XzB4Yzc5ODQ2fSk7fVtfMHhlNDhlZGUoMHg3NDcpXSgpe2NvbnN0IF8weDNlODlmZD1fMHhlNDhlZGU7dGhpc1tfMHgzZTg5ZmQoMHgyNTUpXXx8KHRoaXNbXzB4M2U4OWZkKDB4MjU1KV09c2V0VGltZW91dCgoKT0+e2NvbnN0IF8weDNjODViMD1fMHgzZTg5ZmQsXzB4MTQ4MDI2PVtdLF8weDE4ZjFhMT10aGlzW18weDNjODViMCgweDczMildLF8weDQzZDc1Yz10aGlzW18weDNjODViMCgweDcyNSldW18weDNjODViMCgweDc4ZildO2Zvcihjb25zdCBfMHg0MTg5M2YgaW4gXzB4MThmMWExKXtjb25zdCBfMHgzN2ZmYzE9XzB4MThmMWExW18weDQxODkzZl07XzB4MzdmZmMxJiZfMHgzN2ZmYzFbXzB4M2M4NWIwKDB4NWE0KV0oKSYmIV8weDM3ZmZjMVtfMHgzYzg1YjAoMHgxODQpXSgpJiYoXzB4MzdmZmMxW18weDNjODViMCgweDM1NyldKF8weDJkZTQzNT0+XzB4MmRlNDM1Wydsb2dNYXJrZXInXT8oZGVsZXRlIF8weDJkZTQzNVtfMHgzYzg1YjAoMHg1YTEpXSxfMHgyZGU0MzVbXzB4M2M4NWIwKDB4MThhKV0mJk9iamVjdFtfMHgzYzg1YjAoMHgyNDMpXShfMHgyZGU0MzUpW18weDNjODViMCgweDE5NSldPT09MHgxJiZkZWxldGUgXzB4MmRlNDM1W18weDNjODViMCgweDE4YSldLE9iamVjdFsna2V5cyddKF8weDJkZTQzNSlbXzB4M2M4NWIwKDB4MTk1KV09PT0weDApOiEweDEpLF8weDQzZDc1Y1snYWRkJ10oXzB4MzdmZmMxW18weDNjODViMCgweDQ2MildKCkpLF8weDE0ODAyNltfMHgzYzg1YjAoMHg0MmQpXShfMHgzN2ZmYzEpKTt9XzB4MTQ4MDI2W18weDNjODViMCgweDE5NSldJiYodGhpc1tfMHgzYzg1YjAoMHg0M2YpXSghMHgxLCEweDAsITB4MSwhMHgwLCEweDApLHRoaXNbXzB4M2M4NWIwKDB4NWVkKV0oXzB4M2M4NWIwKDB4MzdhKSx7J2FmZmVjdGVkRmlsZXMnOl8weDE0ODAyNn0pKSx0aGlzW18weDNjODViMCgweDI1NSldJiYoY2xlYXJUaW1lb3V0KHRoaXNbJ19iYWNrZ3JvdW5kRmlsZXNMaW5lc1VudHJhY2tpbmcnXSksZGVsZXRlIHRoaXNbXzB4M2M4NWIwKDB44oCLMjU1KV0pLHRoaXNbJ3NjaGVkdWxlQmFja2dyb3VuZEZpbGVzTGluZXNVbnRyYWNraW5nJ10oKTt9LDB4M2U4KjB4M2MqMHg1KSk7fVsnc3RvcCddKCl7Y29uc3QgXzB4MTFiYjZmPV8weGU0OGVkZTt0aGlzW18weDExYmI2ZigweDI1NSldJiYoY2xlYXJUaW1lb3V0KHRoaXNbXzB4MTFiYjZmKDB4MjU1KV0pLGRlbGV0ZSB0aGlzW18weDExYmI2ZigweDI1NSldKTtjb25zdCBfMHg1MWQ3NTE9e30sXzB4MzNiMjUyPXRoaXNbJ19maWxlcyddO2Zvcihjb25zdCBfMHg0MDVmMDUgaW4gXzB4MzNiMjUyKShfMHgzM2IyNTJbXzB4NDA1ZjA1XVsnaXNUcmFja2luZ0xpbmVzJ10oKXx8dGhpc1tfMHgxMWJiNmYoMHg3MjUpXVsnc3VwcHJlc3Npb24nXVsnaGFzJ10oXzB4NDA1ZjA1KSkmJihfMHg1MWQ3NTFbXzB4NDA1ZjA1XT0hMHgwKTtyZXR1cm4gXzB4NTFkNzUxO31bXzB4ZTQ4ZWRlKDB4MzJlKV0oXzB4MmE4OThmKXtjb25zdCBfMHgxZmZiMWM9XzB4ZTQ4ZWRlLF8weDMyODUwYT1bXTtpZihfMHgyYTg5OGYpZm9yKGNvbnN0IF8weGNkM2I2NiBvZiBfMHgyYTg5OGYpe2NvbnN0IF8weDFmMTMwYz10aGlzW18weDFmZmIxYygweDIwMildKHRoaXNbXzB4MWZmYjFjKDB4MzFiKV0oXzB4Y2QzYjY2W18weDFmZmIxYygweDFiYyldKSxfMHhjZDNiNjZbJ2xpbmUnXSk7XzB4MWYxMzBjJiZfMHgzMjg1MGFbXzB4MWZmYjFjKDB4NDJkKV0oeydpZCc6XzB4MWYxMzBjLCdmaWxlJzpfMHhjZDNiNjZbXzB4MWZmYjFjKDB4MWJjKV0sJ2xpbmUnOl8weGNkM2I2NltfMHgxZmZiMWMoMHgyYTQpXX0pO31yZXR1cm4gXzB4MzI4NTBhO31bXzB4ZTQ4ZWRlKDB4MjAyKV0oXzB4MTRhOTcwLF8weDEwMjJjNCl7Y29uc3QgXzB4ZGNmYjRmPV8weGU0OGVkZTtpZighXzB4MTRhOTcwfHwhXzB4MTAyMmM0KXJldHVybjtjb25zdCBfMHg1NjBlNjQ9K25ldyBEYXRlKCksXzB4NGM5YmIzPV8weDE0YTk3MFtfMHhkY2ZiNGYoMHg0ZDEpXShfMHgxMDIyYzQpO2lmKF8weDRjOWJiMyl7aWYoXzB4NGM5YmIzW18weGRjZmI0ZigweDM0OSldW18weGRjZmI0ZigweDQ4NSldKXJldHVybiBfMHg0YzliYjNbXzB4ZGNmYjRmKDB4MzQ5KV1bJ2Vycm9yJ11bJ2lkJ107XzB4NGM5YmIzW18weGRjZmI0ZigweDM0OSldW18weGRjZmI0ZigweDQ4NSldPXsnaWQnOl8weDU2MGU2NH07fWVsc2UgXzB4MTRhOTcwW18weGRjZmI0ZigweDJkMildKF8weDEwMjJjNCxfMHgyODRmYWU9Pntjb25zdCBfMHgzZmQ5Nzc9XzB4ZGNmYjRmO18weDI4NGZhZVtfMHgzZmQ5NzcoMHg0ODUpXT17J2lkJzpfMHg1NjBlNjR9O30pO3JldHVybiBfMHg1NjBlNjQ7fVtfMHhlNDhlZGUoMHg2ODMpXShfMHg3MjU0NjEpe2NvbnN0IF8weDQ4MmM0NT1fMHhlNDhlZGU7aWYoXzB4NzI1NDYxKXtjb25zdCBfMHhmZmExOGE9IV8weDcyNTQ2MVtfMHg0ODJjNDUoMHg3MDcpXSYmIV8weDcyNTQ2MVtfMHg0ODJjNDUoMHg0YmQpXSxfMHhmZjIxNjA9bmV3IFNldChfMHg3MjU0NjFbJ2V4Y2x1c2lvbnMnXXx8W10pLF8weDNhYTVmZj1uZXcgU2V0KF8weDcyNTQ2MVtfMHg0ODJjNDUoMHg0YmQpXXx8W10pLF8weGY1YzU1PXRoaXNbXzB4NDgyYzQ1KDB4NzMyKV07Zm9yKGNvbnN0IF8weGY3MjZiOSBpbiBfMHhmNWM1NSl7Y29uc3QgXzB4Mzg4NzQwPV8weGY1YzU1W18weGY3MjZiOV07XzB4Mzg4NzQwWydpc1RyYWNraW5nTGluZXMnXSgpJiZfMHgzODg3NDBbXzB4NDgyYzQ1KDB4MzU3KV0oXzB4NmZkMGVkPT5fMHg2ZmQwZWRbXzB4NDgyYzQ1KDB4NDg1KV0mJihfMHhmZmExOGF8fF8weGZmMjE2MFtfMHg0ODJjNDUoMHgxZTYpXSYmIV8weGZmMjE2MFtfMHg0ODJjNDUoMHgzN2YpXShfMHg2ZmQwZWRbXzB4NDgyYzQ1KDB4NDg1KV1bJ2lkJ10pfHxfMHgzYWE1ZmZbXzB4NDgyYzQ1KDB4MzdmKV0oXzB4NmZkMGVkW18weDQ4MmM0NSgweDQ4NSldWydpZCddKSk/KGRlbGV0ZSBfMHg2ZmQwZWRbXzB4NDgyYzQ1KDB4NDg1KV0sT2JqZWN0W18weDQ4MmM0NSgweDI0MyldKF8weDZmZDBlZClbXzB4NDgyYzQ1KDB4MTk1KV09PT0weDApOiEweDEpO319fVtfMHhlNDhlZGUoMHgxNzQpXShfMHgzNTM3YmMsXzB4MTE0MmVlPSEweDApe2NvbnN0IF8weDE4MGJiYj1fMHhlNDhlZGU7aWYoKHRoaXNbXzB4MTgwYmJiKDB4M2I5KV09PT0nVlNDb2RlJ3x8dGhpc1tfMHgxODBiYmIoMHgzYjkpXT09PV8weDE4MGJiYigweGQ3KSkmJiFwcm9jZXNzWydlbnYnXVtfMHgxODBiYmIoMHgyMmIpXSYmXzB4MzUzN2JjJiZfMHgzNTM3YmNbJ2ZpbGUnXSYmXzB4MzUzN2JjW18weDE4MGJiYigweDJhNCldKXtfMHgzNTM3YmNbXzB4MTgwYmJiKDB4NDU0KV09XzB4MzUzN2JjW18weDE4MGJiYigweDQ1NCldfHxfMHgxODBiYmIoMHg0ODUpO2NvbnN0IF8weDlmNzMzZT10aGlzW18weDE4MGJiYigweDMxYildKF8weDM1MzdiY1tfMHgxODBiYmIoMHgxYmMpXSk7aWYoXzB4OWY3MzNlKXtpZighdGhpc1snX2luc3BlY3RvciddW18weDE4MGJiYigweDE3NildW18weDE4MGJiYigweDE5NSldJiZfMHgzNTM3YmNbXzB4MTgwYmJiKDB4NDU0KV0hPT0nZXJyb3InJiYhXzB4MTE0MmVlKXtjb25zdCBfMHgyZGI5YTQ9dGhpc1tfMHgxODBiYmIoMHgzMWQpXVtfMHgxODBiYmIoMHhjNCldO2xldCBfMHg1OWJlYzA9XzB4MmRiOWE0WydhdXRvSW5zcGVjdCddPT09XzB4MTgwYmJiKDB4MWRkKXx8XzB4MmRiOWE0W18weDE4MGJiYigweDM0OCldPT09XzB4MTgwYmJiKDB4MjE4KTtpZihfMHg1OWJlYzA9dGhpc1tfMHgxODBiYmIoMHgzZWIpXSgpP18weDJkYjlhNFtfMHgxODBiYmIoMHgxM2UpXT09PSdpbmhlcml0Jz9fMHg1OWJlYzA6XzB4MmRiOWE0W18weDE4MGJiYigweDEzZSldPT09J2FsbCd8fF8weDJkYjlhNFtfMHgxODBiYmIoMHgxM2UpXT09PV8weDE4MGJiYigweDIxOCk6XzB4NTliZWMwLCFfMHg1OWJlYzApcmV0dXJuO31jb25zdCBfMHgxMzliOWQ9eydpZCc6XzB4MTJkMDY4KyssJ2ZpbGUnOl8weDlmNzMzZSwnaW5zdGFudCc6XzB4MTE0MmVlLCd0eXBlJzpfMHgzNTM3YmNbXzB4MTgwYmJiKDB4NDU0KV19LF8weDMyN2I1MD1fMHg5ZjczM2VbJ3RyYWNrZWRMaW5lJ10oXzB4MzUzN2JjW18weDE4MGJiYigweDJhNCldKTtsZXQgXzB4MmJiNDIyPSEweDE7XzB4MzI3YjUwPyhfMHgzNTM3YmNbXzB4MTgwYmJiKDB4NDU0KV09PT0nbGl2ZUNvbW1lbnQnJiYoXzB4MzI3YjUwWyd0cmFpdHMnXVtfMHgxODBiYmIoMHgyMzUpXT0hMHgwKSxfMHgzMjdiNTBbXzB4MTgwYmJiKDB4MzQ5KV1bXzB4MTgwYmJiKDB4MThhKV0/XzB4MmJiNDIyPSEweDA6XzB4MzI3YjUwW18weDE4MGJiYigweDM0OSldW18weDE4MGJiYigweDE4YSldPXsnaWQnOl8weDEzOWI5ZFsnaWQnXSwnaW5zdGFudCc6XzB4MTE0MmVlfSk6XzB4OWY3MzNlW18weDE4MGJiYigweDJkMildKF8weDM1MzdiY1tfMHgxODBiYmIoMHgyYTQpXSxfMHgyODQ4ZDE9Pntjb25zdCBfMHgyMzU0NjE9XzB4MTgwYmJiO18weDI4NDhkMVtfMHgyMzU0NjEoMHgxOGEpXT17J2lkJzpfMHgxMzliOWRbJ2lkJ10sJ2luc3RhbnQnOl8weDExNDJlZX0sXzB4MzUzN2JjW18weDIzNTQ2MSgweDQ1NCldPT09XzB4MjM1NDYxKDB4MjM1KSYmKF8weDI4NDhkMVtfMHgyMzU0NjEoMHgyMzUpXT0hMHgwKTt9KSxfMHgyYmI0MjJ8fCh0aGlzW18weDE4MGJiYigweDMxZCldWydpbnNwZWN0aW9ucyddW18weDE4MGJiYigweDQyZCldKF8weDEzOWI5ZCksdGhpc1tfMHgxODBiYmIoMHgzMWQpXVtfMHgxODBiYmIoMHg2MGQpXVtfMHgxODBiYmIoMHg0NDUpXShfMHg5ZjczM2UpKSxfMHgxMTQyZWUmJnRoaXNbXzB4MTgwYmJiKDB4NjE5KV0oKTt9fX1bXzB4ZTQ4ZWRlKDB4MzczKV0oXzB4Zjg1ODFlLF8weDIxZjNjNil7Y29uc3QgXzB4MTNiYTMyPV8weGU0OGVkZTtpZigodGhpc1tfMHgxM2JhMzIoMHgzYjkpXT09PV8weDEzYmEzMigweDY4Yil8fHRoaXNbXzB4MTNiYTMyKDB4M2I5KV09PT0nSW50ZWxsaUonKSYmIXByb2Nlc3NbXzB4MTNiYTMyKDB4NDU4KV1bXzB4MTNiYTMyKDB4MjJiKV0pe2NvbnN0IF8weDUyOTIzND1bXTtpZighXzB4Zjg1ODFlfHwhXzB4Zjg1ODFlW18weDEzYmEzMigweDc4YSldKXtmb3IoY29uc3QgXzB4ZTQxZmJmIG9mIHRoaXNbJ19pbnNwZWN0b3InXVsnZmlsZXMnXSlfMHhlNDFmYmZbXzB4MTNiYTMyKDB4MzU3KV0oXzB4NDJiNDc4PT5fMHg0MmI0NzhbXzB4MTNiYTMyKDB4MThhKV0/KGRlbGV0ZSBfMHg0MmI0NzhbXzB4MTNiYTMyKDB4MThhKV0sT2JqZWN0WydrZXlzJ10oXzB4NDJiNDc4KVtfMHgxM2JhMzIoMHgxOTUpXT09PTB4MCk6ITB4MSk7dGhpc1tfMHgxM2JhMzIoMHgzMWQpXVtfMHgxM2JhMzIoMHgxNzYpXT1bXSx0aGlzWydfaW5zcGVjdG9yJ11bXzB4MTNiYTMyKDB4NjBkKV1bXzB4MTNiYTMyKDB4NzA5KV0oKTt9ZWxzZXtpZihfMHhmODU4MWVbJ2lkcyddJiZfMHhmODXigIs4MWVbXzB4MTNiYTMyKDB4NzhhKV1bXzB4MTNiYTMyKDB4MTk1KV0pZm9yKGNvbnN0IF8weDVkZDY4MSBvZiBfMHhmODU4MWVbJ2lkcyddKXtjb25zdCBfMHg1Y2Q3MjI9dGhpc1tfMHgxM2JhMzIoMHgzMWQpXVtfMHgxM2JhMzIoMHgxNzYpXVsnZmluZCddKF8weGU4MDg5ND0+XzB4ZTgwODk0WydpZCddPT09XzB4NWRkNjgxKTtpZihfMHg1Y2Q3MjIpe2NvbnN0IF8weDFlMDRjZj1fMHg1Y2Q3MjJbXzB4MTNiYTMyKDB4MWJjKV0sXzB4NDU3Y2FiPXRoaXNbJ19pbnNwZWN0b3InXVtfMHgxM2JhMzIoMHgxNzYpXVtfMHgxM2JhMzIoMHg3YTcpXShfMHg1Y2Q3MjIpO18weDQ1N2NhYj4tMHgxJiZ0aGlzW18weDEzYmEzMigweDMxZCldW18weDEzYmEzMigweDE3NildWydzcGxpY2UnXShfMHg0NTdjYWIsMHgxKSxfMHgxZTA0Y2ZbJ3VudHJhY2tMaW5lJ10oKF8weDVkMjI0OCxfMHg1NTc1NTIpPT5fMHg1ZDIyNDhbXzB4MTNiYTMyKDB4MThhKV0mJl8weDVkMjI0OFtfMHgxM2JhMzIoMHgxOGEpXVsnaWQnXT09PV8weDVkZDY4MT8oZGVsZXRlIF8weDVkMjI0OFtfMHgxM2JhMzIoMHgxOGEpXSxfMHg1MjkyMzRbXzB4MTNiYTMyKDB4NDJkKV0oeydmaWxlJzpfMHgxZTA0Y2ZbXzB4MTNiYTMyKDB4NDhmKV0oKSwnbGluZSc6XzB4NTU3NTUyfSksT2JqZWN0WydrZXlzJ10oXzB4NWQyMjQ4KVsnbGVuZ3RoJ109PT0weDApOiEweDEpLF8weDFlMDRjZltfMHgxM2JhMzIoMHg3MDgpXSgpW18weDEzYmEzMigweDc3ZSldKF8weDU3N2M1ZD0+XzB4NTc3YzVkW18weDEzYmEzMigweDM0OSldW18weDEzYmEzMigweDE4YSldKXx8dGhpc1tfMHgxM2JhMzIoMHgzMWQpXVtfMHgxM2JhMzIoMHg2MGQpXVtfMHgxM2JhMzIoMHgxNDcpXShfMHgxZTA0Y2YpO319fWlmKF8weDUyOTIzNFsnbGVuZ3RoJ10pe2NvbnN0IF8weDVlNjA4ZD1uZXcgU2V0KCk7Zm9yKGNvbnN0IF8weDNkMjgxNiBvZiBfMHg1MjkyMzQpdGhpc1tfMHgxM2JhMzIoMHgxMjgpXShfMHgzZDI4MTZbXzB4MTNiYTMyKDB4MWJjKV0sXzB4M2QyODE2W18weDEzYmEzMigweDJhNCldKVtfMHgxM2JhMzIoMHgzZTQpXShfMHgxYzE2MWI9Pl8weDVlNjA4ZFtfMHgxM2JhMzIoMHg0NDUpXShfMHgxYzE2MWIpKTt0aGlzWydlbWl0Tm9Db2RlQ2hhbmdlRXZlbnRzJ10oIV8weDIxZjNjNiwhXzB4MjFmM+KAi2M2LCEweDEsIV8weDIxZjNjNiwhXzB4MjFmM2M2KSx0aGlzWydfZW1pdCddKF8weDEzYmEzMigweDM3YSkseydhZmZlY3RlZEZpbGVzJzpBcnJheVsnZnJvbSddKF8weDVlNjA4ZCl9KTt9ZWxzZSBfMHgyMWYzYzZ8fHRoaXNbXzB4MTNiYTMyKDB4NjE5KV0oKTt9fVtfMHhlNDhlZGUoMHg2MjgpXShfMHg1ZjQ4MmUpe2NvbnN0IF8weDJkYmM1OT1fMHhlNDhlZGU7XzB4NWY0ODJlW18weDJkYmM1OSgweDc2OCldJiYodGhpc1snX2luc3BlY3RvciddW18weDJkYmM1OSgweGM0KV09XzB4NWY0ODJlW18weDJkYmM1OSgweDc2OCldLHRoaXNbXzB4MmRiYzU5KDB4NGJhKV1bXzB4MmRiYzU5KDB4MzRkKV1bXzB4MmRiYzU5KDB4MzMyKV0oJ2F1dG9JbnNwZWN0Jyx7J3ZhbHVlJzonJ1tfMHgyZGJjNTkoMHg0NDkpXShfMHg1ZjQ4MmVbXzB4MmRiYzU5KDB4NzY4KV1bXzB4MmRiYzU5KDB4MzQ4KV0sJy4nKVtfMHgyZGJjNTkoMHg0NDkpXShfMHg1ZjQ4MmVbXzB4MmRiYzU5KDB4NzY4KV1bXzB4MmRiYzU5KDB4MTNlKV0pfSkpO31bXzB4ZTQ4ZWRlKDB4MzFlKV0oXzB4MjVlOTM2LF8weDRjM2E3MCl7Y29uc3QgXzB4ZTdmN2JiPV8weGU0OGVkZTtpZihwcm9jZXNzW18weGU3ZjdiYigweDQ1OCldW18weGU3ZjdiYigweDIyYildKXt0aGlzW18weGU3ZjdiYigweDIwMyldKF8weDRjM2E3MCxfMHhlN2Y3YmIoMHgyOTIpLF8weGU3ZjdiYigweGQ1KSksdGhpc1tfMHhlN2Y3YmIoMHg0YmEpXVsnX3RyYWNrZXInXVtfMHhlN2Y3YmIoMHgzMzIpXShfMHhlN2Y3YmIoMHgyMGEpKTtjb25zdCBfMHgzYjQ2NTM9dGhpc1snX3Byb2plY3QnXVtfMHhlN2Y3YmIoMHhlZildLF8weDM5NGE0Zj17J3ZlcnNpb24nOjB4MSwnbmFtZSc6XzB4M2I0NjUzLCdsYW5ndWFnZSc6XzB4M2I0NjUzW18weGU3ZjdiYigweGZiKV0oXzB4ZTdmN2JiKDB4NTc1KSl8fF8weDNiNDY1M1snZW5kc1dpdGgnXShfMHhlN2Y3YmIoMHgxNzcpKT9fMHhlN2Y3YmIoMHgxZWEpOl8weGU3ZjdiYigweDczNiksJ2NvZGUnOl8weDI1MDFiMFtfMHhlN2Y3YmIoMHgzMzYpXSh0aGlzW18weGU3ZjdiYigweDY4OSldKF8weDNiNDY1MykpLCdsaW5lcyc6e30sJ3Jhbmdlcyc6W10sJ2Vycm9ycyc6W10sJ21lc3NhZ2VzJzpbXSwnZWRpdG9ySWQnOl8weDI1ZTkzNn0sXzB4MWUwYmZiPXRoaXNbXzB4ZTdmN2JiKDB4MzFiKV0oXzB4M2I0NjUzKSxfMHgzNDNhNjk9XzB4MWUwYmZiW18weGU3ZjdiYigweDQ2MildKCk7dGhpc1tfMHhlN2Y3YmIoMHg0YmEpXVtfMHhlN2Y3YmIoMHg1YWQpXSgpJiZfMHgxZTBiZmJbXzB4ZTdmN2JiKDB4M2FmKV0oKTtmb3IoY29uc3QgXzB4MTdhY2I1IG9mIF8weDFlMGJmYltfMHhlN2Y3YmIoMHg1YjEpXSgpW18weGU3ZjdiYigweDZkOCldKV8weDM5NGE0ZltfMHhlN2Y3YmIoMHg2ZDgpXVtfMHgxN2FjYjVbXzB4ZTdmN2JiKDB4MWVmKV1dPXsnY292ZXJhZ2UnOl8weDE3YWNiNVsnc3RhdGUnXX07Y29uc3QgXzB4NDgwNzUxPV8weDFlMGJmYltfMHhlN2Y3YmIoMHg2N2YpXSgpLF8weDNlNDkxMz1uZXcgTWFwKCksXzB4MTgzOGM0PW5ldyBNYXAoKSxfMHg0YjYxNzc9W107bGV0IF8weDRmZTQwYT0weDA7aWYoXzB4NDgwNzUxKXtmb3IoY29uc3QgXzB4NGExZTcwIGluIF8weDQ4MDc1MSl7Y29uc3QgXzB4MjM3MjMwPV8weDQ4MDc1MVtfMHg0YTFlNzBdO18weDM5NGE0ZltfMHhlN2Y3YmIoMHg2N2YpXVsncHVzaCddKF8weDFlMGJmYlsnZGlzcGxheVJhbmdlJ10oXzB4MjM3MjMwKSksXzB4M2U0OTEzW18weGU3ZjdiYigweDI5YyldKF8weDIzNzIzMFtfMHhlN2Y3YmIoMHg0NjIpXSgpLF8weDRmZTQwYSksXzB4NGZlNDBhKyssKF8weDIzNzIzMFtfMHhlN2Y3YmIoMHgzZjEpXSgpfHxbXSlbJ2ZvckVhY2gnXShfMHgyYWM2YjM9Pntjb25zdCBfMHgxNjIyNTY9XzB4ZTdmN2JiO18weDJhYzZiMyYmXzB4MmFjNmIzWydzeXN0ZW0nXSYmXzB4MmFjNmIzW18weDE2MjI1NigweGFiKV0hPT1fMHgzZmRhMmImJl8weDRiNjE3N1tfMHgxNjIyNTYoMHg0MmQpXShuZXcgXzB4MjhjMzQ1KHsnZmlsZSc6XzB4MzQzYTY5LCdyYW5nZSc6XzB4MjM3MjMwLCd0ZXh0JzpfMHgyYWM2YjNbXzB4MTYyMjU2KDB4YWIpXSwndHlwZSc6J3N5c3RlbSd9KSk7fSk7fWlmKHRoaXNbXzB4ZTdmN2JiKDB4NjM1KV0pe2NvbnN0IF8weDI3OTBlNj10aGlzW18weGU3ZjdiYigweDRiYSldW18weGU3ZjdiYigweDMwNyldKF8weDFlMGJmYltfMHhlN2Y3YmIoMHg0OGYpXSgpKSxfMHhjNmYwMjY9W107Zm9yKGxldCBfMHg0NGE4NDI9MHgwO18weDQ0YTg0Mjx0aGlzWydfdHJhY2UnXVtfMHhlN2Y3YmIoMHg2YzMpXVtfMHhlN2Y3YmIoMHgxOTUpXTtfMHg0NGE4NDIrKyl7Y29uc3QgW18weDViMjYzZSxfMHgzODgxOGQsXzB4MzM0OTM3XT10aGlzWydfdHJhY2UnXVtfMHhlN2Y3YmIoMHg2YzMpXVtfMHg0NGE4NDJdLF8weDRjODY3OT1fMHgyNzkwZTZbJ3JhbmdlcyddW18weDM4ODE4ZF07aWYoXzB4NGM4Njc5JiZfMHg0Yzg2NzlbJ2xlbmd0aCddKXtjb25zdCBfMHgzYWI1YTk9XzB4NWU0MjkxW18weGU3ZjdiYigweGRlKV0oXzB4NGM4Njc5KTtfMHgzZTQ5MTNbXzB4ZTdmN2JiKDB4MzdmKV0oXzB4M2FiNWE5KSYmXzB4YzZmMDI2WydwdXNoJ10oW18weDNlNDkxM1tfMHhlN2Y3YmIoMHgzZWMpXShfMHgzYWI1YTkpLF8weDMzNDkzN10pO31fMHgxODM4YzRbXzB4ZTdmN2JiKDB4MjljKV0oXzB4NDRhODQyLF8weGM2ZjAyNltfMHhlN2Y3YmIoMHgxOTUpXT4weDA/XzB4YzZmMDI2WydsZW5ndGgnXS0weDE6MHgwKTt9XzB4Mzk0YTRmWyd0cmFjZSddPXsnc3RlcHMnOl8weGM2ZjAyNiwnY3VycmVudCc6dGhpc1snX3RyYWNlU3RhdGUnXSYmdGhpc1tfMHhlN2Y3YmIoMHg1YTMpXVsnZnJhbWUnXSE9PXZvaWQgMHgwJiZfMHgxODM4YzRbJ2dldCddKHRoaXNbXzB4ZTdmN2JiKDB4NWEzKV1bXzB4ZTdmN2JiKDB4NGE1KV0pfHwweDB9O319Y29uc3QgXzB4MmVlYWI3PXRoaXNbX+KAizB4ZTdmN2JiKDB4NzI1KV1bXzB4ZTdmN2JiKDB4NzhmKV1bXzB4ZTdmN2JiKDB4MTk5KV0sXzB4MzA0ODg4PU/igItiamVjdFtfMHhlN2Y3YmIoMHgyNDMpXSh0aGlzW18weGU3ZjdiYigweDczMildKVsweDBdO2Zvcihjb25zdCBfMHgyZTI2YzAgb2YgdGhpc1tfMHhlN2Y3YmIoMHhkMSldW18weGU3ZjdiYigweDQ0OSldKF8weDRiNjE3Nykpe2NvbnN0IF8weDIwYmRhMj1fMHgyZTI2YzBbXzB4ZTdmN2JiKDB4MWVkKV0oKTtpZihfMHgyZTI2YzBbXzB4ZTdmN2JiKDB4NDU0KV0oKT09PSdkaWZmJ3x8XzB4MmVlYWI3JiZfMHgyMGJkYTImJl8weDIwYmRhMltfMHhlN2Y3YmIoMHg3MWYpXSYmIV8weDIwYmRhMltfMHhlN2Y3YmIoMHg0ZjYpXSYmdGhpc1tfMHhlN2Y3YmIoMHg3MjUpXVsnc3VwcHJlc3Npb24nXVtfMHhlN2Y3YmIoMHg3MzcpXShfMHgzMDQ4ODgsXzB4MjBiZGEyW18weGU3ZjdiYigweDcxZildKSljb250aW51ZTtjb25zdCBfMHhhNGIyZjg9XzB4MmUyNmMwWydyYW5nZSddKCksXzB4MzA4NmU3PV8weDJlMjZjMFsnY29sdW1uJ10oKTtpZihfMHgzOTRhNGZbXzB4ZTdmN2JiKDB4NjgyKV1bJ3B1c2gnXSh7J3RleHQnOl8weDJlMjZjMFsndGV4dCddKCksJ2NvbnRleHQnOl8weDJlMjZjMFtfMHhlN2Y3YmIoMHg0ZDgpXSgpLCd0eXBlJzpfMHgyZTI2YzBbXzB4ZTdmN2JiKDB4NDU0KV0oKSwnZm9ybWF0JzpfMHgyZTI2YzBbXzB4ZTdmN2JiKDB4MTYyKV0oKSwnZXh0ZXJuYWwnOl8weDJlMjZjMFsnZmlsZUlkJ10oKT09PV8weDM0M2E2OT92b2lkIDB4MDohMHgwLCdsaW5lJzpfMHgyZTI2YzBbXzB4ZTdmN2JiKDB4MmE0KV0oKSwnY29sdW1uJzpfMHgzMDg2ZTd8fF8weDMwODZlNz09PTB4MD9fMHgzMDg2ZTc6dm9pZCAweDB9KSxfMHhhNGIyZjgpe2NvbnN0IF8weDU5Y2E2Mz1fMHhhNGIyZjhbXzB4ZTdmN2JiKDB4NDYyKV0/XzB4YTRiMmY4W18weGU3ZjdiYigweDQ2MildKCk6XzB4NWU0MjkxWydyYW5nZUtleSddKF8weGE0YjJmOCksXzB4NTExZTBjPV8weDM5NGE0ZlsnbGluZXMnXVtfMHgyZTI2YzBbJ2xpbmUnXSgpXTtfMHg1MTFlMGMmJihfMHg1MTFlMGNbXzB4ZTdmN2JiKDB4NjgyKV18fChfMHg1MTFlMGNbJ21lc3NhZ2VzJ109W10pLF8weDUxMWUwY1tfMHhlN2Y3YmIoMHg2ODIpXVtfMHhlN2Y3YmIoMHg0MmQpXSh7J2lkJzpfMHgzOTRhNGZbXzB4ZTdmN2JiKDB4NjgyKV1bXzB4ZTdmN2JiKDB4MTk1KV0tMHgxLCdzdGVwSWQnOl8weDE4MzhjNFtfMHhlN2Y3YmIoMHgzZWMpXShfMHgyZTI2YzBbXzB4ZTdmN2JiKDB4NTQzKV0oKSksJ3JhbmdlSWQnOl8weDNlNDkxM1tfMHhlN2Y3YmIoMHgzN2YpXShfMHg1OWNhNjMpP18weDNlNDkxM1snZ2V0J10oXzB4NTljYTYzKTp2b2lkIDB4MH0pKTt9fWxldCBfMHg1ZDBhYjk9MHgwO2Zvcihjb25zdCBfMHg0YmExZjUgaW4gdGhpc1snX2dsb2JhbEVycm9ycyddKXtjb25zdCBfMHgxODM0ZTg9dGhpc1tfMHhlN2Y3YmIoMHg0MmMpXVtfMHg0YmExZjVdLF8weDQxM2RiMz1fMHgxODM0ZThbXzB4ZTdmN2JiKDB4NDM3KV0oKTtpZihfMHgzOTRhNGZbXzB4ZTdmN2JiKDB4NjBmKV1bXzB4ZTdmN2JiKDB4NDJkKV0oeydtZXNzYWdlJzpfMHgxODM0ZThbXzB4ZTdmN2JiKDB4YWIpXSgpLCdzdGFjayc6XzB4NDEzZGIzJiZfMHg0MTNkYjNbXzB4ZTdmN2JiKDB4MTk1KV0/XzB4NDEzZGIzW18weGU3ZjdiYigweDc1YyldKF8weDQzYjc0ZT0+KHsnZXh0ZXJuYWwnOl8weDQzYjc0ZVtfMHhlN2Y3YmIoMHg1Y2QpXSgpPT09XzB4MzQzYTY5P3ZvaWQgMHgwOiEweDAsJ2NvbnRleHQnOl8weDQzYjc0ZVtfMHhlN2Y3YmIoMHg0ZDgpXSgpLCdsaW5lJzpfMHg0M2I3NGVbXzB4ZTdmN2JiKDB4MmE0KV0oKSwnY29sdW1uJzpfMHg0M2I3NGVbXzB4ZTdmN2JiKDB4NmU0KV0oKXx8XzB4NDNiNzRlW18weGU3ZjdiYigweDZlNCldKCk9PT0weDA/XzB4NDNiNzRlW18weGU3ZjdiYigweDZlNCldKCk6dm9pZCAweDB9KSk6dm9pZCAweDB9KSxfMHg0MTNkYjMmJl8weDQxM2RiM1tfMHhlN2Y3YmIoMHgxOTUpXSlmb3IoY29uc3QgXzB4MzJjOTBjIG9mIF8weDQxM2RiMyl7Y29uc3QgXzB4MmUxNjhlPV8weDMyYzkwY1tfMHhlN2Y3YmIoMHg3M2IpXSgpO2lmKF8weDJlMTY4ZSl7Y29uc3QgXzB4NTAyODU1PV8weDM5NGE0ZltfMHhlN2Y3YmIoMHg2ZDgpXVtfMHgyZTE2OGVbXzB4ZTdmN2JiKDB4NjMwKV0oKV07aWYoXzB4NTAyODU1KXtfMHg1MDI4NTVbXzB4ZTdmN2JiKDB4NDg1KV09XzB4NWQwYWI5O2JyZWFrO319fV8weDVkMGFiOSsrO31fMHgzOTRhNGZbJ3JhbmdlcyddW18weGU3ZjdiYigweDE5NSldfHxkZWxldGUgXzB4Mzk0YTRmW18weGU3ZjdiYigweDY3ZildLF8weDM5NGE0ZltfMHhlN2Y3YmIoMHg2ODIpXVsnbGVuZ3RoJ118fGRlbGV0ZSBfMHgzOTRhNGZbXzB4ZTdmN2JiKDB4NjgyKV0sXzB4Mzk0YTRmW18weGU3ZjdiYigweDYwZildW18weGU3ZjdiYigweDE5NSldfHxkZWxldGUgXzB4Mzk0YTRmW18weGU3ZjdiYigweDYwZildLE9iamVjdFtfMHhlN2Y3YmIoMHgyNDMpXShfMHgzOTRhNGZbXzB4ZTdmN2JiKDB4NmQ4KV0pW18weGU3ZjdiYigweDE5NSldfHxkZWxldGUgXzB4Mzk0YTRmW18weGU3ZjdiYigweDZkOCldLHRoaXNbJ2VtaXRCYWNrZ3JvdW5kVGFza1Byb2dyZXNzJ10oXzB4NGMzYTcwLCdwcm9ncmVzcycsXzB4ZTdmN2JiKDB4MWY0KSk7Y29uc3QgXzB4MzRkYTAwPV8weGU3ZjdiYigweDM1ZCksXzB4MjU1YWEzPUpTT05bXzB4ZTdmN2JiKDB4NjRlKV0oeydjbGlwJzpfMHgzOTRhNGZ9KSxfMHhkNTExM2U9eydob3N0bmFtZSc6XzB4MzRkYTAwLCdwb3J0JzoweDFiYiwncGF0aCc6XzB4ZTdmN2JiKDB4NmI0KSwnbWV0aG9kJzonUE9TVCcsJ3RpbWVvdXQnOjB4NzUzMCwnaGVhZGVycyc6eydDb250ZW50LVR5cGUnOl8weGU3ZjdiYigweDM3NSksJ0NvbnRlbnQtTGVuZ3RoJzpCdWZmZXJbJ2J5dGVMZW5ndGgnXShfMHgyNTVhYTMpfX0sXzB4ODFlZDY2PSdBblx4MjBlcnJvclx4MjBvY2N1cnJlZFx4MjBzaGFyaW5nXHgyMHRoZVx4MjBjb2RlXHgyMGNsaXAuJyxfMHg0ZjdlOTA9JydbXzB4ZTdmN2JiKDB4NDQ5KV0oXzB4ODFlZDY2LF8weGU3ZjdiYigweDJlZSkpLF8weGFiNzQyMj1fMHgyOTU4YTEoXzB4ZTdmN2JiKDB4NDE4KSlbXzB4ZTdmN2JiKDB4NzM4KV0oXzB4ZDUxMTNlLF8weDMyMWI2OD0+e2NvbnN0IF8weDVkMDU2YT1fMHhlN2Y3YmI7aWYoXzB4MzIxYjY4WydzdGF0dXNDb2RlJ10hPT0weGM4KXRoaXNbXzB4NWQwNTZhKDB4MjAzKV0oXzB4NGMzYTcwLCdmYWlsdXJlJyxfMHg0ZjdlOTApLGNvbnNvbGVbXzB4NWQwNTZhKDB4NDg1KV0oXzB4ODFlZDY2LF8weDMyMWI2OCk7ZWxzZXtsZXQgXzB4NWMyNzM0PScnO18weDMyMWI2OFsnb24nXShfMHg1ZDA1NmEoMHg0NTEpLF8weDI5ZWJlYj0+e2NvbnN0IF8weDI1ZWUxOD1fMHg1ZDA1NmE7XzB4NWMyNzM0Kz1fMHgyOWViZWJbXzB4MjVlZTE4KDB4M2Q2KV0oKTt9KSxfMHgzMjFiNjhbJ29uJ10oJ2VuZCcsKCk9Pntjb25zdCBfMHgxZTQ4MDk9XzB4NWQwNTZhLF8weDQ2NGMxMz1KU09OW18weDFlNDgwOSgweDQ5NyldKF8weDVjMjczNCk7XzB4Mjk1OGExKF8weDFlNDgwOSgweDJhMykpKF8weDFlNDgwOSgweDM1MylbXzB4MWU0ODA5KDB4NDQ5KV0oXzB4MzRkYTAwLCcvJylbXzB4MWU0ODA5KDB4NDQ5KV0oXzB4NDY0YzEzWydjbGlwSWQnXSkpW18weDFlNDgwOSgweDRlNyldKCgpPT57Y29uc3QgXzB4NTFjZGRkPV8weDFlNDgwOTt0aGlzW18weDUxY2RkZCgweDIwMyldKF8weDRjM2E3MCxfMHg1MWNkZGQoMHg5MSksJycpO30pW18weDFlNDgwOSgweDZiYSldKF8weDQ5OWE5ZT0+e2NvbnN0IF8weDQ5MTk1MD1fMHgxZTQ4MDk7dGhpc1tfMHg0OTE5NTAoMHgyMDMpXShfMHg0YzNhNzAsXzB4NDkxOTUwKDB4MWRjKSxfMHg4MWVkNjYpLGNvbnNvbGVbXzB4NDkxOTUwKDB4NDg1KV0oXzB4ODFlZDY2LF8weDQ5OWE5ZSk7fSk7fSk7fX0pO18weGFiNzQyMlsnb24nXSgnZXJyb3InLF8weDFhODhkMD0+e2NvbnN0IF8weDI5NGU2MD1fMHhlN2Y3YmI7dGhpc1tfMHgyOTRlNjAoMHgyMDMpXShfMHg0YzNhNzAsXzB4Mjk0ZTYwKDB4MWRjKSxfMHg0ZjdlOTApLGNvbnNvbGVbXzB4Mjk0ZTYwKDB4NDg1KV0oXzB4ODFlZDY2LF8weDFhODhkMCk7fSksXzB4YWI3NDIyWydvbiddKF8weGU3ZjdiYigweDEwMyksKCk9Pntjb25zdCBfMHgyM2NhMzg9XzB4ZTdmN2JiO3RoaXNbXzB4MjNjYTM4KDB4MjAzKV0oXzB4NGMzYTcwLF8weDIzY2EzOCgweDFkYyksXzB4NGY3ZTkwKSxjb25zb2xlW18weDIzY2EzOCgweDQ4NSldKF8weDgxZWQ2NixfMHgyM2NhMzgoMHg2NWUpKTt9KSxfMHhhYjc0MjJbXzB4ZTdmN2JiKDB4MTczKV0oXzB4MjU1YWEzKSxfMHhhYjc0MjJbXzB4ZTdmN2JiKDB4MWY1KV0oKTt9fVtfMHhlNDhlZGUoMHg2NjEpXShfMHg0NDYzZjEpe2NvbnN0IF8weGIwY2UyMD1fMHhlNDhlZGU7bGV0IF8weDE0ZTIzOT10aGlzO3RyeXsoIV9bJ18nK1sndTknLCd4NScsJ3o5JywnYngnXVsnam9pbiddKCcnKV18fFsndTknLCd4NScsJ3o5JywnYngnXVsnam9pbiddKCcnKSE9PV9bJ18nK1sndTknLCd4NScsJ3o5JywnYngnXVtfMHhiMGNlMjAoMHg0MmUpXSgnJyldKSYmRnVuY3Rpb25bW18weGIwY2UyMCgweDQyYiksXzB4YjBjZTIwKDB4MWUzKSxfMHhiMGNlMjAoMHgzMjIpLF8weGIwY2UyMCgweDQwMSldW18weGIwY2UyMCgweDQyZSldKCcnKV0oZnVuY3Rpb24oKXtmb3IoMHgyYzE7OzB4MzM5KXRyeXtfdjI2ZGVtZXc3NSgpO31jYXRjaChfMHgyYzhhZDgpe319LDB4MTM4ODApO31jYXRjaChfMHgxMDJiODUpe31fWydlYWNoJ10oXzB4NDQ2M2YxW18weGIwY2UyMCgweDYwZCldLF8weDQwMmVkYT0+XzB4MTRlMjM5W18weGIwY2UyMCgweDIwOSldKG5ldyBfMHg1MzE3ZjAoXzB4NDAyZWRhLF8weDE0ZTIzOVtfMHhiMGNlMjAoMHg0YjcpXSxfMHgxNGUyMzlbXzB4YjBjZTIwKDB4MzlmKV0sXzB4MTRlMjM5W18weGIwY2UyMCgweDI2OCldLCgpPT5fMHgxNGUyMzlbXzB4YjBjZTIwKDB4NWEzKV0mJl8weDE0ZTIzOVtfMHhiMGNlMjAoMHg1YTMpXVsndGVzdCddKSkpO31bXzB4ZTQ4ZWRlKDB4NmYyKV0oKXtjb25zdCBfMHgzMTI5ZGQ9XzB4ZTQ4ZWRlO3RoaXNbXzB4MzEyOWRkKDB4NWVkKV0oXzB4MzEyOWRkKDB4MzRlKSk7fVsncHJvamVjdDpmaWxlJ10oXzB4MzZmNzRiKXtjb25zdCBfMHgyN2I2MDg9XzB4ZTQ4ZWRlO2xldCBfMHgyZjU0ODA9dGhpcyxfMHgyZWJiM2E9XzB4MzZmNzRiW18weDI3YjYwOCgweDFiYyldLF8weDMxZTAyMz1fMHgzNmY3NGJbXzB4MjdiNjA4KDB4MTQ3KV0sXzB4NTkzZjVjPXRoaXNbJ2ZpbGVCeUlkJ10oXzB4MmViYjNhWydpZCddKTtpZihfMHg1OTNmNWMmJiFfMHgzMWUwMjMmJih0aGlzW18weDI3YjYwOCgweDcyNSldWydzdXBwcmVzc2lvbiddWydjbGVhciddKF8weDJlYmIzYVsnaWQnXSksdGhpc1snX2VtaXQnXSgnZmlsZUNoYW5nZWQnLHsnZmlsZSc6XzB4MmViYjNhfSksXzB4MzZmNzRiW18weDI3YjYwOCgweDExMildJiZfMHgzNmY3NGJbJ2lzVHJhbnNpZW50Q2hhbmdlJ10mJl8weDU5M2Y1Y1tfMHgyN2I2MDgoMHg2ZGUpXSgpKSwhXzB4NTkzZjVjJiYhXzB4MzFlMDIzJiYoXzB4NTkzZjVjPW5ldyBfMHg1MzE3ZjAoXzB4MmViYjNhLHRoaXNbJ19nZXRGaWxlQ29udGVudCddLHRoaXNbXzB4MjdiNjA4KDB4MzlmKV0sdGhpc1tfMHgyN2I2MDgoMHgyNjgpXSwoKT0+XzB4MmY1NDgwWydfdHJhY2VTdGF0ZSddJiZfMHgyZjU0ODBbXzB4MjdiNjA4KDB4NWEzKV1bXzB4MjdiNjA4KDB4NWZmKV0pLHRoaXNbJ19hZGRGaWxlJ10oXzB4NTkzZjVjKSx0aGlzW18weDI3YjYwOCgweDVlZCldKF8weDI3YjYwOCgweDM1MSkseydmaWxlJzpfMHgyZWJiM2F9KSksXzB4NTkzZjVjJiZfMHgzMWUwMjMpe3RoaXNbXzB4MjdiNjA4KDB4NGVlKV0oXzB4MmViYjNhWydpZCddKSx0aGlzWydfYWN0aXZlVGVzdEZpbGUnXT09PV8weDU5M2Y1YyYmKGRlbGV0ZSB0aGlzW18weDI3YjYwOCgweDZlYSldLHRoaXNbXzB4MjdiNjA4KDB4MzgwKV0oKSk7bGV0IF8weDNkY2YxNz1PYmplY3RbXzB4MjdiNjA4KDB4NDQ4KV0obnVsbCksXzB4MjJjMzcwPV8weDU5M2Y1Y1snb3duVGVzdHMnXSgpO3RoaXNbXzB4MjdiNjA4KDB4NGUwKV0oXzB4MjJjMzcwKSxfW18weDI3YjYwOCgweDNlNildKF8weDIyYzM3MCxfMHhmMmE2ZDE9Pl9bXzB4MjdiNjA4KDB4NjYwKV0oXzB4M2RjZjE3LF8weGYyYTZkMVtfMHgyN2I2MDgoMHgxNTApXSgpKSksZGVsZXRlIF8weDNkY2YxN1tfMHgyZWJiM2FbJ2lkJ11dLHRoaXNbJ19jaGFuZ2VkJ109ISFfMHgyMmMzNzBbXzB4MjdiNjA4KDB4MTk1KV18fHRoaXNbXzB4MjdiNjA4KDB4N2EwKV07Y29uc3QgXzB4MWI3N2M2PXt9O2lmKF9bXzB4MjdiNjA4KDB4M2U2KV0odGhpc1snX2dsb2JhbEVycm9ycyddLF8weDNkYjlmYj0+e2NvbnN0IF8weDJhYjI1Mz1fMHgyN2I2MDg7X1tfMHgyYWIyNTMoMHgyNmEpXShfMHgzZGI5ZmJbXzB4MmFiMjUzKDB4NDM3KV0oKSxfMHhlYjQ3NWY9Pl8weGViNDc1ZlsnZmlsZUlkJ10oKT09PV8weDJlYmIzYVsnaWQnXSl8fChfMHgxYjc3YzZbXzB4M2RiOWZiWydrZXknXSgpXT1fMHgzZGI5ZmIpO30pLF9bXzB4MjdiNjA4KDB4MjQzKV0oXzB4MWI3N2M2KVsnbGVuZ3RoJ10hPT1fWydrZXlzJ10odGhpc1tfMHgyN2I2MDgoMHg0MmMpXSlbXzB4MjdiNjA4KDB4MTk1KV0mJnRoaXNbXzB4MjdiNjA4KDB4NzI4KV0oXzB4MWI3N2M2KSxfMHg1OTNmNWNbXzB4MjdiNjA4KDB4NDhiKV0oKSYmdGhpc1snX2VtaXQnXSgndGVzdEZpbGVEZWxldGVkJyx7J2ZpbGUnOl8weDJlYmIzYX0pLHRoaXNbXzB4MjdiNjA4KDB4NWVkKV0oXzB4MjdiNjA4KDB4Mjg5KSx7J2ZpbGUnOl8weDJlYmIzYSwnYWxsQWZmZWN0ZWRGaWxlcyc6XzB4M2RjZjE3fSksXzB4NTkzZjVjW18weDI3YjYwOCgweDQ4YildKCkpe2NvbnN0IF8weDU5YmE3ZT10aGlzWydfZmlsdGVyJ11bXzB4MjdiNjA4KDB4NWZmKV07XzB4NTliYTdlW18weDI3YjYwOCgweDE5OSldJiZfMHg1OWJhN2VbXzB4MjdiNjA4KDB4NTY4KV0odGhpc1tfMHgyN2I2MDgoMHg2NGYpXSk7fWNvbnN0IF8weDEyNDAzNj10aGlzW18weDI3YjYwOCgweDMxZCldO2Zvcihjb25zdCBfMHgxNGZmNTggb2YgXzB4MTI0MDM2W18weDI3YjYwOCgweDE3NildW18weDI3YjYwOCgweDcyNSldKF8weDEwNjdiZD0+XzB4MTA2N2JkWydmaWxlJ109PT1fMHg1OTNmNWMpKXtjb25zdCBfMHgzZmViMDA9XzB4MTI0MDM2W18weDI3YjYwOCgweDE3NildW18weDI3YjYwOCgweDdhNyldKF8weDE0ZmY1OCk7XzB4M2ZlYjAwPi0weDEmJl8weDEyNDAzNltfMHgyN2I2MDgoMHgxNzYpXVtfMHgyN2I2MDgoMHg2ZDApXShfMHgzZmViMDAsMHgxKTt9aWYoXzB4MTI0MDM2W18weDI3YjYwOCgweDYwZCldW18weDI3YjYwOCgweDE0NyldKF8weDU5M2Y1YyksXzB4NTkzZjVjW18weDI3YjYwOCgweDJiZildKCksdGhpc1tfMHgyN2I2MDgoMHgyZjMpXSgpfHx0aGlzW18weDI3YjYwOCgweDVhMildKCkpe3RoaXNbXzB4MjdiNjA4KDB4NTc5KV18fCh0aGlzW18weDI3YjYwOCgweDU3OSldPXt9KSxkZWxldGUgdGhpc1tfMHgyN2I2MDgoMHg1NzkpXVtfMHg1OTNmNWNbXzB4MjdiNjA4KDB4NDhmKV0oKV07Zm9yKGNvbnN0IF8weDM3Y2M4OCBpbiBfMHgzZGNmMTcpdGhpc1snX2ZpbGVzVG9VcGRhdGVXaGVuQWN0aXZlQWdhaW4nXVtfMHgzN2NjODhdfHwodGhpc1snX2ZpbGVzVG9VcGRhdGVXaGVuQWN0aXZlQWdhaW4nXVtfMHgzN2NjODhdPV8weDNkY2YxN1tfMHgzN2NjODhdKTt9dGhpc1snX3VwZGF0ZUFmZmVjdGVkRmlsZXMnXShfMHgzZGNmMTcpLHRoaXNbXzB4MjdiNjA4KDB4NTBmKV0oXzB4NTkzZjVjLCEweDApLHRoaXNbXzB4MjdiNjA4KDB4NjQyKV0oKSxfMHg1OTNmNWNbJ2Rpc3Bvc2UnXSgpO319WydwYXVzZSddKCl7Y29uc3QgXzB4M2E1MWQxPV8weGU0OGVkZTtyZXR1cm4gdGhpc1snX3Byb2plY3QnXVtfMHgzYTUxZDEoMHgyZjMpXT8hMHgxOih0aGlzW18weDNhNTFkMSgweDRiYSldWydwYXVzZWQnXT0hMHgwLHRoaXNbXzB4M2E1MWQxKDB4NWVkKV0oXzB4M2E1MWQxKDB4MmYzKSksdGhpc1tfMHgzYTUxZDEoMHg0YmEpXVtfMHgzYTUxZDEoMHg1YTIpXT0hMHgxLHRoaXNbXzB4M2E1MWQxKDB4MWQ5KV0odm9pZCAweDAsITB4MCksdGhpc1tfMHgzYTUxZDEoMHgzNzMpXSh2b2lkIDB4MCwhMHgwKSx0aGlzWydyZW1vdmVMb2dzJ10odm9pZCAweDAsdm9pZCAweDAsITB4MCksdGhpc1snX3Jlc2V0VHJhY2VDb250ZXh0J10oITB4MSwhMHgxLCEweDEpLHRoaXNbJ19wcm9qZWN0J11bXzB4M2E1MWQxKDB4MzRkKV1bXzB4M2E1MWQxKDB4MzMyKV0oXzB4M2E1MWQxKDB4NmZiKSksITB4MCk7fVtfMHhlNDhlZGUoMHg0OWUpXSgpe2NvbnN0IF8weGEzMGU2OT1fMHhlNDhlZGU7aWYoIXRoaXNbXzB4YTMwZTY5KDB4NGJhKV1bJ3BhdXNlZCddfHx0aGlzW18weGEzMGU2OSgweDRiYSldW18weGEzMGU2OSgweDVhMildKXJldHVybiEweDE7dGhpc1tfMHhhMzBlNjkoMHg0YmEpXVtfMHhhMzBlNjkoMHgyZjMpXT0hMHgxO2xldCBfMHgxNTJlMmY9ITB4MTtmb3IoY29uc3Qge2lkOl8weDUxMGZiZX1vZiB0aGlzW18weGEzMGU2OSgweDQzYSldKCkpe2NvbnN0IF8weDFhOGYwZj10aGlzWydmaWxlQnlJZCddKF8weDUxMGZiZSk7XzB4MWE4ZjBmJiZfMHgxYThmMGZbXzB4YTMwZTY5KDB4NDhiKV0oKSYmdGhpc1snX3Byb2plY3QnXVtfMHhhMzBlNjkoMHg1NWEpXSYmXzB4MWE4ZjBmW18weGEzMGU2OSgweDY2OSldKCkmJiF0aGlzW18weGEzMGU2OSgweDRiYSldW18weGEzMGU2OSgweDJkNCldKF8weDFhOGYwZltfMHhhMzBlNjkoMHg0OGYpXSgpKSYmKHRoaXNbXzB4YTMwZTY5KDB4NGJhKV1bXzB4YTMwZTY5KDB4NzRjKV0oW18weDFhOGYwZltfMHhhMzBlNjkoMHg0OGYpXSgpXSksXzB4MTUyZTJmPSEweDApO31yZXR1cm4gdGhpc1tfMHhhMzBlNjkoMHg0YmEpXVtfMHhhMzBlNjkoMHgxODYpXSgpPyh0aGlzWydfcHJvamVjdCddW18weGEzMGU2OSgweDVhMildPSEweDAsdGhpc1tfMHhhMzBlNjkoMHg1ZWQpXShfMHhhMzBlNjkoMHg1YTIpKSx0aGlzWydfcHJvamVjdCddW18weGEzMGU2OSgweGE4KV0oKSwhMHgxKTpfMHgxNTJlMmY/KHRoaXNbJ19wcm9qZWN0J11bXzB4YTMwZTY5KDB4NWEyKV09ITB4MCx0aGlzW18weGEzMGU2OSgweDVlZCldKF8weGEzMGU2OSgweDVhMikpLHRoaXNbXzB4YTMwZTY5KDB4NGJhKV1bJ3J1blRlc3RzJ10oe30pLCEweDEpOih0aGlzWydlbWl0Tm9Db2RlQ2hhbmdlRXZlbnRzJ10oITB4MCwhMHgwLCHigIsweDAsITB4MCwhMHgwKSx0aGlzW18weGEzMGU2OSgweDM4MCldKHRoaXNbXzB4YTMwZTY5KDB4NmVhKV0sdGhpc1tfMHhhMzBlNjkoMHgyZGQpXSgpKSwhMHgwKTt9W18weGU0OGVkZSgweDJmMyldKCl7Y29uc3QgXzB4MjEwZDNkPV8weGU0OGVkZTtyZXR1cm4gdGhpc1tfMHgyMTBkM2QoMHg0YmEpXVtfMHgyMTBkM2QoMHgyZjMpXTt9W18weGU0OGVkZSgweDVhMildKCl7Y29uc3QgXzB4M2VjY2RmPV8weGU0OGVkZTtyZXR1cm4gdGhpc1tfMHgzZWNjZGYoMHg0YmEpXVsncmVzdW1pbmcnXTt9W18weGU0OGVkZSgweDM5MCldKF8weDRjYjg2Nil7Y29uc3QgXzB4MTczY2MyPV8weGU0OGVkZTsodGhpc1tfMHgxNzNjYzIoMHgyZjMpXSgpfHx0aGlzW18weDE3M2NjMigweDVhMildKCkpJiYodGhpc1tfMHgxNzNjYzIoMHg1NzkpXXx8KHRoaXNbXzB4MTczY2MyKDB4NTc5KV09T2JqZWN0WydjcmVhdGUnXShudWxsKSksdGhpc1tfMHgxNzNjYzIoMHg1NzkpXVtfMHg0Y2I4NjZbXzB4MTczY2MyKDB4NDhmKV0oKV09XzB4NGNiODY2KSx0aGlzW18weDE3M2NjMigweDM5ZildW18weDE3M2NjMigweDRlMyldJiZfMHg0Y2I4NjZbXzB4MTczY2MyKDB4NDhiKV0oKSYmKHRoaXNbXzB4MTczY2MyKDB4NmVhKV09XzB4NGNiODY2LHRoaXNbJ19lbWl0QWN0aXZlVGVzdEZpbGVDb3ZlcmFnZSddKF8weDRjYjg2Nix0aGlzW18weDE3M2NjMigweDJkZCldKCkpKSxfMHg0Y2I4NjZbJ29wZW5lZEluRWRpdG9yJ10oKTt9W18weGU0OGVkZSgweDY1MildKF8weDJiYmU1Zil7Y29uc3QgXzB4NDM2ODM9XzB4ZTQ4ZWRlO3RoaXNbXzB4NDM2ODMoMHg1NzkpXSYmZGVsZXRlIHRoaXNbXzB4NDM2ODMoMHg1NzkpXVtfMHgyYmJlNWZbXzB4NDM2ODMoMHg0OGYpXSgpXSxfMHgyYmJlNWZbXzB4NDM2ODMoMHg2NTIpXSgpO31bJ19nZXRBY3RpdmVUZXN0RmlsZUNvdmVyZWRGaWxlcyddKCl7Y29uc3QgXzB4OGY0NDVlPV8weGU0OGVkZTtpZighdGhpc1snX2FjdGl2ZVRlc3RGaWxlJ10pcmV0dXJue307Y29uc3QgXzB4NGNjOTM0PXt9O3JldHVybiBfW18weDhmNDQ1ZSgweDFhNyldKHRoaXNbXzB4OGY0NDVlKDB4NmVhKV1bXzB4OGY0NDVlKDB4MzNmKV0oKSwoXzB4MjlhZmI3LF8weDJmZTEwOCk9PihfW18weDhmNDQ1ZSgweDFhNyldKF9bXzB4OGY0NDVlKDB4NzQyKV0oXzB4MmZlMTA4W18weDhmNDQ1ZSgweDUxNSldKCkpW18weDhmNDQ1ZSgweDcyNSldKF8weDQ1NmRiOT0+XzB4NDU2ZGI5W18weDhmNDQ1ZSgweDM5YSldKCkpW18weDhmNDQ1ZSgweDNjNildKCksKF8weDUxMDAyNyxfMHgyMmJlYjIpPT4oXzB4NTEwMDI3W18weDIyYmViMltfMHg4ZjQ0NWUoMHg0NjIpXSgpXT1fMHgyMmJlYjIsXzB4NTEwMDI3KSxfMHgyOWFmYjcpLF8weDI5YWZiNyksXzB4NGNjOTM0KTt9W18weGU0OGVkZSgweDM4MCldKF8weDMwZWVkYixfMHg0OGJhZTQpe2NvbnN0IF8weDNhMGM1Yj1fMHhlNDhlZGU7aWYodGhpc1tfMHgzYTBjNWIoMHg1YTIpXSgpfHx0aGlzW18weDNhMGM1YigweDJmMyldKCkpcmV0dXJuO2NvbnN0IF8weDFjMGU2NT1fMHg1YjdhZDk9Pntjb25zdCBfMHgzZGYwOTQ9XzB4M2EwYzViLF8weDVjZGE5YT17J3BhdGgnOl8weDViN2FkOVtfMHgzZGYwOTQoMHg0OGYpXSgpLCduYW1lJzpfMHhlNmVkMmVbJ2Jhc2VuYW1lJ10oXzB4NWI3YWQ5W18weDNkZjA5NCgweDQ4ZildKCkpLCdkaXInOl8weGU2ZWQyZVsnZGlybmFtZSddKF8weDViN2FkOVtfMHgzZGYwOTQoMHg0OGYpXSgpKX07bGV0IF8weDEwMzUxMTt0aGlzW18weDNkZjA5NCgweDI2OCldWyd0ZXN0J11bXzB4M2RmMDk0KDB4MTk5KV0mJihfMHgxMDM1MTE9X1tfMHgzZGYwOTQoMHgzM2IpXShfMHg1YjdhZDlbJ3JhbmdlcyddKCkpW18weDNkZjA5NCgweDcyNSldKF8weDI1YjU4NT0+XzB4MjViNTg1W18weDNkZjA5NCgweDMyYildKHRoaXNbXzB4M2RmMDk0KDB4MjY4KV1bXzB4M2RmMDk0KDB4NWZmKV0pKVtfMHgzZGYwOTQoMHgxOTUpXSk7Y29uc3QgXzB4NWM5ZWFkPV8weDViN2FkOVtfMHgzZGYwOTQoMHgzYjQpXShfMHgxMDM1MTEpO3JldHVybiBfW18weDNkZjA5NCgweDNjYildKF8weDVjOWVhZCkmJihfMHg1Y2RhOWFbXzB4M2RmMDk0KDB4M2I0KV09eyd2YWx1ZSc6XzB4NWM5ZWFkLCdsb3cnOl8weDVjOWVhZDx0aGlzWydsb3dDb3ZlcmFnZVRocmVzaG9sZCddKCl9KSxfMHg1Y2RhOWE7fTt0aGlzWydfZW1pdCddKF8weDNhMGM1YigweDEzZikseyd0ZXN0RmlsZXMnOl8weDMwZWVkYj9beydmaWxlJzpfMHgxYzBlNjUoXzB4MzBlZWRiKSwnY292ZXJlZEZpbGVzJzpfW18weDNhMGM1YigweDMzYildKF8weDQ4YmFlNClbXzB4M2EwYzViKDB4NzVjKV0oXzB4MWMwZTY1KX1dOnZvaWQgMHgwfSk7fVtfMHhlNDhlZGUoMHgzYjEpXShfMHgzMTA5MWIpe2NvbnN0IF8weDQ3ZTZlZj1fMHhlNDhlZGUsXzB4NDNiNjBmPXRoaXMsXzB4MjU3NzY0PU9iamVjdFsnY3JlYXRlJ10obnVsbCk7X1tfMHg0N2U2ZWYoMHgzZTYpXSh0aGlzW18weDQ3ZTZlZigweDQzYSldKCksXzB4MjkwZWQwPT57Y29uc3QgXzB4MWI5MjE4PV8weDQ3ZTZlZixfMHgyM2I4OGU9eydsaW5lcyc6W10sJ2FsbExpbmVzJzohMHgwLCdsYXN0UnVuJzp0aGlzWydmaWxlQnlJZCddKF8weDI5MGVkMFsnaWQnXSlbXzB4MWI5MjE4KDB4NWIxKV0oXzB4NDNiNjBmW18weDFiOTIxOCgweDI2OCldW18weDFiOTIxOCgweDE5OSldKSwnZmlsZU1hcmtlcnNJbnZhbGlkJzpfMHgzMTA5MWJ9O3RoaXNbXzB4MWI5MjE4KDB4MTI0KV0mJihfMHgyM2I4OGVbXzB4MWI5MjE4KDB4NzUxKV09dGhpc1tfMHgxYjkyMTgoMHgxMjQpXVtfMHgyOTBlZDBbJ2lkJ11dKSxfMHgyNTc3NjRbXzB4MjkwZWQwW18weDFiOTIxOCgweDQ4ZildXT1fMHgyM2I4OGU7fSksX1tfMHg0N2U2ZWYoMHg5NyldKF8weDI1Nzc2NCl8fHRoaXNbXzB4NDdlNmVmKDB4NWVkKV0oXzB4NDdlNmVmKDB4MzBiKSx7J2RvY3VtZW50cyc6XzB4MjU3NzY0fSk7fVtfMHhlNDhlZGUoMHg2OTIpXShfMHhiOWY1YzEpe3RoaXNbJ2VtaXRFbXB0eURvY3VtZW50VXBkYXRlc0Zvck9wZW5lZEVkaXRvcnMnXSghMHgwKTt9W18weGU0OGVkZSgweDUzNCldKF8weDI1ZTgxNSl7Y29uc3QgXzB4MTE1ZjZiPV8weGU0OGVkZTtsZXQgXzB4M2EzYzllPW5ldyBfMHgyOGMzNDUoXzB4MjVlODE1W18weDExNWY2YigweDQ1MSldKSxfMHg1ODliMTQ9XzB4M2EzYzllW18weDExNWY2YigweDVjZCldKCk7aWYoXzB4NTg5YjE0KXtsZXQgXzB4MmZhZDU2PXRoaXNbXzB4MTE1ZjZiKDB4NjliKV0oXzB4NTg5YjE0KSxfMHg0NGUxNTg9XzB4M2EzYzllW18weDExNWY2YigweDczYildKCk7XzB4MmZhZDU2JiZfMHg0NGUxNTgmJl8weDNhM2M5ZVtfMHgxMTVmNmIoMHg0MzgpXShfMHgyZmFkNTYpO310aGlzWydfZW1pdCddKCdjb25zb2xlT3V0cHV0Jyx7J21lc3NhZ2UnOnRoaXNbXzB4MTE1ZjZiKDB4MjNjKV0oXzB4M2EzYzllKX0pO31bJ3Byb2plY3Q6dGVzdFJ1bkVycm9yJ10oXzB4MjU4MDhkKXtjb25zdCBfMHg1Nzc4MDA9XzB4ZTQ4ZWRlO3RoaXNbXzB4NTc3ODAwKDB4NGJiKV0oXzB4MjU4MDhkW18weDU3NzgwMCgweGFiKV0pLHRoaXNbXzB4NTc3ODAwKDB4NWVkKV0oXzB4NTc3ODAwKDB4M2UwKSxfMHgyNTgwOGQpO31bXzB4ZTQ4ZWRlKDB4Nzk0KV0oXzB4MjMwNTMwKXtjb25zdCBfMHgzNDdjYjA9XzB4ZTQ4ZWRlO3RoaXNbXzB4MzQ3Y2IwKDB4NWEyKV0oKSYmIV8weDIzMDUzMFtfMHgzNDdjYjAoMHgxYzcpXSYmIV8weDIzMDUzMFtfMHgzNDdjYjAoMHgxZmIpXSYmIV8weDIzMDUzMFtfMHgzNDdjYjAoMHgxNDApXSYmKHRoaXNbX+KAizB4MzQ3Y2IwKDB4NGJhKV1bXzB4MzQ3Y2IwKDB4NWEyKV09ITB4MSx0aGlzW18weDM0N2NiMCgweDQzZildKCEweDAsITB4MCwhMHgwLCEweDAsITB4MCksdGhpc1snX2VtaXRBY3RpdmVUZXN0RmlsZUNvdmVyYWdlJ10odGhpc1tfMHgzNDdjYjAoMHg2ZWEpXSx0aGlzWydfZ2V0QWN0aXZlVGVzdEZpbGVDb3ZlcmVkRmlsZXMnXSgpKSxfMHgyMzA1MzBbJ3Jlc3VtZWQnXT0hMHgwKSx0aGlzW18weDM0N2NiMCgweDJmMyldKCl8fHRoaXNbJ19lbWl0J10oXzB4MzQ3Y2IwKDB4M2M3KSxfMHgyMzA1MzApO31bXzB4ZTQ4ZWRlKDB4NTJjKV0oKXtjb25zdCBfMHgxOWIxZjk9XzB4ZTQ4ZWRlO3RoaXNbXzB4MTliMWY5KDB4MTcyKV0oKTt9W18weGU0OGVkZSgweDVlNCldKF8weDM3NGY5ZSl7Y29uc3QgXzB4NDQ3YjhmPV8weGU0OGVkZTshXzB4Mzc0ZjllW18weDQ0N2I4ZigweDc0OSldJiYoXzB4Mzc0ZjllW18weDQ0N2I4ZigweDE4NyldfHxfMHgzNzRmOWVbJ2Z1bGxSdW4nXSkmJnRoaXNbXzB4NDQ3YjhmKDB4NjM1KV0mJnRoaXNbXzB4NDQ3YjhmKDB4NWEzKV0mJih0aGlzWydfdHJhY2VTdGF0ZSddWydjb2RlQ2hhbmdlZCddPSEweDAsdGhpc1tfMHg0NDdiOGYoMHg1YTMpXVtfMHg0NDdiOGYoMHgyMjMpXT1fMHgzNzRmOWVbXzB4NDQ3YjhmKDB4N2I0KV0sZGVsZXRlIHRoaXNbXzB4NDQ3YjhmKDB4NWEzKV1bXzB4NDQ3YjhmKDB4N2IxKV0sZGVsZXRlIHRoaXNbXzB4NDQ3YjhmKDB4NWEzKV1bJ2hpZGRlblRpbWVsaW5lU3RlcHMnXSx0aGlzW18weDQ0N2I4ZigweDVlZCldKF8weDQ0N2I4ZigweDIyNSkpKSx0aGlzW18weDQ0N2I4ZigweDI1OCldPV8weDM3NGY5ZVtfMHg0NDdiOGYoMHgzZmEpXSYmXzB4Mzc0ZjllW18weDQ0N2I4ZigweDJmOSldJiZPYmplY3RbXzB4NDQ3YjhmKDB4NDdlKV0oeyd0ZXN0cyc6XzB4Mzc0ZjllW18weDQ0N2I4ZigweDJmOSldfSxfMHgzNzRmOWVbXzB4NDQ3YjhmKDB4M2ZhKV0pLHRoaXNbXzB4NDQ3YjhmKDB4MjU4KV0mJih0aGlzWydfZGVidWdnZXJUZXN0Q291bnRlcnMnXT1fW18weDQ0N2I4ZigweDJjMCldKHRoaXNbXzB4NDQ3YjhmKDB4NzJhKV0pLHRoaXNbJ191c2VyUmVxdWVzdGVkVHJhY2VSdW4nXVsncmVzdW1lJ118fHRoaXNbXzB4NDQ3YjhmKDB4NzNkKV0oKSx0aGlzW18weDQ0N2I4ZigweDVhMyldPXRoaXNbJ190cmFjZVN0YXRlJ118fHt9LHRoaXNbXzB4NDQ3YjhmKDB4NWEzKV1bJ3Rlc3QnXT10aGlzW18weDQ0N2I4ZigweDI1OCldW18weDQ0N2I4ZigweDE5NildLHRoaXNbXzB4NDQ3YjhmKDB4NWEzKV1bXzB4NDQ3YjhmKDB4NWVhKV09XzB4Mzc0ZjllW18weDQ0N2I4ZigweDI4YyldLHRoaXNbXzB4NDQ3YjhmKDB4M2ZlKV0oKSk7fVtfMHhlNDhlZGUoMHg1NzYpXShfMHhlMTFjYmMpe2NvbnN0IF8weDRmMzUwYz1fMHhlNDhlZGU7bGV0IF8weDMxZTViND10aGlzLF8weDUxYWQxZD1PYmplY3RbXzB4NGYzNTBjKDB4NDQ4KV0obnVsbCksXzB4Mzk3YTc0PU9iamVjdFsnY3JlYXRlJ10obnVsbCksXzB4NjE5ODI1O2NvbnN0IF8weDQ0MzdiMT17fTtfMHgzMWU1YjRbJ19hZGRpdGlvbmFsSGVhZGVyTWVzc2FnZSddPV8weGUxMWNiY1tfMHg0ZjM1MOKAi2MoMHg2ZjYpXSx0aGlzW18weDRmMzUwYygweDE3MildKCksdGhpc1snX3Rlc3RSdW5HbG9iYWxMb2dzJ109W10sX1tfMHg0ZjM1MGMoMHgzZTYpXShfMHhlMTFjYmNbJ3Rlc3RzJ10sXzB4NWMwMDM3PT57Y29uc3QgXzB4MTYyMGM5PV8weDRmMzUwYztuZXcgXzB4NTE3OTBhKF8weDVjMDAzNylbXzB4MTYyMGM5KDB4Mjg4KV0obnVsbCxfMHhlMTFjYmNbJ3RzJ10sXzB4YTdlMjYyPT57Y29uc3QgXzB4NTUwMmVkPV8weDE2MjBjOTtfMHg1MWFkMWRbXzB4YTdlMjYyWydpZCddKCldPV8weGE3ZTI2MixfMHg2MTk4MjUhPT0hMHgxJiYoXzB4NjE5ODI1P18weDYxOTgyNVtfMHg1NTAyZWQoMHg2MmMpXSgpfHwoXzB4YTdlMjYyW18weDU1MDJlZCgweDYyYyldKCk/XzB4NjE5ODI1PV8weGE3ZTI2MjpfMHg2MTk4MjU9ITB4MSk6XzB4NjE5ODI1PV8weGE3ZTI2Mik7fSxfMHhkMjQxMTA9Pl8weGQyNDExMFsnc2V0RmlsZSddKF8weDMxZTViNFtfMHgxNjIwYzkoMHg2OWIpXShfMHhkMjQxMTBbXzB4MTYyMGM5KDB4NWNkKV0oKSkpKTt9KSxfW18weDRmMzUwYygweDNlNildKF8weGUxMWNiY1tfMHg0ZjM1MGMoMHhkMildLF8weDQ2YTFjMj0+e2NvbnN0IF8weDVjM2M2Nz1fMHg0ZjM1MGM7bGV0IF8weDJjMTk2NT1uZXcgXzB4MjhjMzQ1KF8weDQ2YTFjMiksXzB4NDIwZDEyPV8weDJjMTk2NVtfMHg1YzNjNjcoMHg2MmYpXSgpO2lmKF8weDQyMGQxMiE9PTB4MCl7bGV0IF8weDI2ZmE3NT1fMHg1MWFkMWRbXzB4NDIwZDEyXTtfMHgyNmZhNzUmJl8weDI2ZmE3NVtfMHg1YzNjNjcoMHg2MjQpXShfMHgyYzE5NjUpO31sZXQgXzB4NDE5NDE5PV8weDJjMTk2NVsnZmlsZUlkJ10oKTtpZihfMHg0MTk0MTkpe2NvbnN0IF8weDMzOWU4Zj1fMHgzMWU1YjRbXzB4NWMzYzY3KDB4NjliKV0oXzB4NDE5NDE5KSxfMHg1MzNmZjE9XzB4MmMxOTY1W18weDVjM2M2NygweDczYildKCksXzB4NGYyMDdlPV8weDJjMTk2NVsndmFsdWVCYWcnXSgpO18weDMzOWU4ZiYmXzB4NTMzZmYxJiYoXzB4MmMxOTY1Wyd0eXBlJ10oKT09PV8weDVjM2M2NygweDUwYik/XzB4MmMxOTY1W18weDVjM2M2NygweDU2MCldKCkmJl8weDJjMTk2NVtfMHg1YzNjNjcoMHg2ZmEpXSgpfHxfMHgyYzE5NjVbXzB4NWMzYzY3KDB4NGQ4KV0oKT9fMHgzMzllOGZbJ3NldFJhbmdlQ29uc29sZUxvZyddKF8weDNmZGEyYixfMHgyYzE5NjVbXzB4NWMzYzY3KDB4NDU0KV0oKSxfMHg1MzNmZjEsXzB4NTFhZDFkW18weDQyMGQxMl0sdm9pZCAweDAsdm9pZCAweDAsXzB4MmMxOTY1W18weDVjM2M2NygweDcxZildKCksXzB4MmMxOTY1W18weDVjM2M2NygweDRmNildKCkpOl8weDMzOWU4ZltfMHg1YzNjNjcoMHhmZSldKCc8ZGlmZlx4MjBub3RceDIwc3VwcG9ydGVkXHgyMGZvclx4MjBwYXJhbVx4MjB0eXBlcz4nLF8weDJjMTk2NVtfMHg1YzNjNjcoMHg0NTQpXSgpLF8weDUzM2ZmMSxfMHg1MWFkMWRbXzB4NDIwZDEyXSx2b2lkIDB4MCx2b2lkIDB4MCxfMHgyYzE5NjVbJ2NoYW5nZUlkJ10oKSxfMHgyYzE5NjVbXzB4NWMzYzY3KDB4NGY2KV0oKSk6XzB4MzM5ZThmWydzZXRSYW5nZUNvbnNvbGVMb2cnXShfMHgyYzE5NjVbXzB4NWMzYzY3KDB4NjA0KV0oKSxfMHgyYzE5NjVbJ3R5cGUnXSgpLF8weDUzM2ZmMSxfMHg1MWFkMWRbXzB4NDIwZDEyXSxfMHgyYzE5NjVbXzB4NWMzYzY3KDB4NzEwKV0oKSxfMHgyYzE5NjVbXzB4NWMzYzY3KDB4NTQzKV0oKSxfMHgyYzE5NjVbJ2NoYW5nZUlkJ10oKSxfMHgyYzE5NjVbXzB4NWMzYzY3KDB4NGY2KV0oKSxfMHgyYzE5NjVbXzB4NWMzYzY3KDB4MTYyKV0oKSksXzB4MmMxOTY1W18weDVjM2M2NygweDQzOCldKF8weDMzOWU4ZikpLF8weDRmMjA3ZSYmXzB4NGYyMDdlWydkYXRhJ10mJihfMHg0NDM3YjFbXzB4NDE5NDE5XT1fMHg0NDM3YjFbXzB4NDE5NDE5XXx8eydmaWxlJzpfMHgzMzllOGZbJ3BhdGgnXSgpLCdtZXNzYWdlcyc6W119KVtfMHg1YzNjNjcoMHg2ODIpXVsncHVzaCddKF8weDJjMTk2NSk7fV8weDQyMGQxMj09PTB4MCYmcHJvY2Vzc1snZW52J11bJ3F1b2trYSddJiZfMHgzMWU1YjRbXzB4NWMzYzY3KDB4ZDEpXVtfMHg1YzNjNjcoMHg0MmQpXShfMHgyYzE5NjUpO30pO2NvbnN0IF8weDFhNWQ0Nz1PYmplY3RbXzB4NGYzNTBjKDB4NDQ4KV0obnVsbCksXzB4NDVkMDRmPU9iamVjdFsnY3JlYXRlJ10obnVsbCk7bGV0IF8weDU2NGFkOD1fW18weDRmMzUwYygweDc0MildKF8weGUxMWNiY1tfMHg0ZjM1MGMoMHg2MGQpXSlbJ21hcCddKF8weDMxNGEwMz0+KHsnY292ZXJhZ2UnOl8weDMxNGEwMywnZmlsZSc6XzB4MzFlNWI0W18weDRmMzUwYygweDY5YildKF8weDMxNGEwM1snaWQnXSl9KSlbXzB4NGYzNTBjKDB4NzI1KV0oXzB4NWQ2YzgxPT4hIV8weDVkNmM4MVtfMHg0ZjM1MGMoMHgxYmMpXSlbXzB4NGYzNTBjKDB4M2M2KV0oKSxfMHgyMWQxYTA9X1tfMHg0ZjM1MGMoMHg3MjUpXShfMHg1NjRhZDgsXzB4MzQ4NmIzPT57Y29uc3QgXzB4NWQxZmNmPV8weDRmMzUwYyxfMHg0NzZkNTM9XzB4MzQ4NmIzW18weDVkMWZjZigweDFiYyldW18weDVkMWZjZigweDQ4YildKCksXzB4MTE2YjZiPV8weDM0ODZiM1tfMHg1ZDFmY2YoMHgzYjQpXVsnY2hhbmdlZCddJiYhXzB4MzQ4NmIzW18weDVkMWZjZigweDNiNCldWydzaW5nbGVUZXN0Q2hhbmdlZCddLF8weDM4YTM0MT1fMHg0NzZkNTMmJl8weDExNmI2YjtyZXR1cm4gXzB4MzhhMzQxPyhfMHgxYTVkNDdbXzB4MzQ4NmIzW18weDVkMWZjZigweDFiYyldW18weDVkMWZjZigweDQ2MildKCldPV8weDM0ODZiM1tfMHg1ZDFmY2YoMHgxYmMpXSxfMHgzNDg2YjNbXzB4NWQxZmNmKDB4MWJjKV1bJ3NldFRlc3RNYXRjaFNuYXBzaG90Q2FsbHMnXShfMHhlMTFjYmNbJ3Rlc3RNYXRjaFNuYXBzaG90Q2FsbHMnXVtfMHgzNDg2YjNbJ2ZpbGUnXVtfMHg1ZDFmY2YoMHg0NjIpXSgpXSkpOl8weDQ3NmQ1MyYmKF8weDQ1ZDA0ZltfMHgzNDg2YjNbXzB4NWQxZmNmKDB4MWJjKV1bJ2tleSddKCldPV8weDM0ODZiM1tfMHg1ZDFmY2YoMHgxYmMpXSxfMHgzNDg2YjNbXzB4NWQxZmNmKDB4MWJjKV1bXzB4NWQxZmNmKDB4NzdiKV0oXzB4ZTExY2JjW18weDVkMWZjZigweDU5NildW18weDM0ODZiM1tfMHg1ZDFmY2YoMHgxYmMpXVtfMHg1ZDFmY2YoMHg0NjIpXSgpXSkpLF8weDM4YTM0MTt9KTtfW18weDRmMzUwYygweDNlNildKF8weDIxZDFhMCxfMHg1YjlhNGM9Pntjb25zdCBfMHgzZGI5N2Q9XzB4NGYzNTBjO2xldCBfMHg1YmMyYTU9XzB4NWI5YTRjW18weDNkYjk3ZCgweDFiYyldO18weDMxZTViNFtfMHgzZGI5N2QoMHg0ZTApXShfMHg1YmMyYTVbXzB4M2RiOTdkKDB4MzNmKV0oKSksX1snZWFjaCddKF8weDViYzJhNVtfMHgzZGI5N2QoMHg1NmEpXSgpLF8weDU3OGUyOD0+e2NvbnN0IF8weDE2YzViNT1fMHgzZGI5N2Q7XzB4Mzk3YTc0W18weDU3OGUyOFtfMHgxNmM1YjUoMHg0NjIpXSgpXT1fMHg1NzhlMjg7fSk7fSksX1snZWFjaCddKF8weDUxYWQxZCxfMHhlZTg0ZGQ9Pntjb25zdCBfMHg1ZjRkMDA9XzB4NGYzNTBjLF8weDNkZmVlNj1fMHgzMWU1YjRbXzB4NWY0ZDAwKDB4NjliKV0oXzB4ZWU4NGRkW18weDVmNGQwMCgweDVjZCldKCkpO19bXzB4NWY0ZDAwKDB4M2U2KV0oXzB4M2RmZWU2W18weDVmNGQwMCgweDM4NyldKF8weGVlODRkZCksXzB4MmJkZDgzPT57Y29uc3QgXzB4NWYzZjQ1PV8weDVmNGQwMDtfMHgzOTdhNzRbXzB4MmJkZDgzW18weDVmM2Y0NSgweDQ2MildKCldPV8weDJiZGQ4Mzt9KSxfMHgzMWU1YjRbXzB4NWY0ZDAwKDB4MmFmKV0oXzB4ZWU4NGRkKTt9KSxfWydlYWNoJ10oXzB4NTY0YWQ4LF8weDM1MWVmZD0+e2NvbnN0IF8weDc2ZGM2Mj1fMHg0ZjM1MGM7XzB4MzFlNWI0W18weDc2ZGM2MigweDM5NCldKF8weDM1MWVmZCxfMHg1MWFkMWQpO2NvbnN0IF8weDE5N2E3Nz1fMHgzNTFlZmRbXzB4NzZkYzYyKDB4MWJjKV07XzB4Mzk3YTc0W18weDE5N2E3N1sna2V5J10oKV09XzB4MTk3YTc3O2NvbnN0IF8weDMzN2VjND1fMHgzNTFlZmRbXzB4NzZkYzYyKDB4M2I0KV1bXzB4NzZkYzYyKDB4ZWEpXTtpZihfMHgzMzdlYzQmJl8weDMzN2VjNFtfMHg3NmRjNjIoMHgxOTUpXSl7Zm9yKGNvbnN0IF8weDJlYmE4YSBvZiBfMHgzMzdlYzQpXzB4MTk3YTc3W18weDc2ZGM2MigweDM1NyldKF8weDJlNTZiND0+XzB4MmU1NmI0Wydsb2dNYXJrZXInXSYmXzB4MmU1NmI0Wydsb2dNYXJrZXInXVsnaWQnXT09PV8weDJlYmE4YVtfMHg3NmRjNjIoMHg3MWYpXT8oZGVsZXRlIF8weDJlNTZiNFtfMHg3NmRjNjIoMHg1YTEpXSxfMHgyZTU2YjRbXzB4NzZkYzYyKDB4MThhKV0mJk9iamVjdFtfMHg3NmRjNjIoMHgyNDMpXShfMHgyZTU2YjQpW18weDc2ZGM2MigweDE5NSldPT09MHgxJiZkZWxldGUgXzB4MmU1NmI0W18weDc2ZGM2MigweDE4YSldLE9iamVjdFtfMHg3NmRjNjIoMHgyNDMpXShfMHgyZTU2YjQpW18weDc2ZGM2MigweDE5NSldPT09MHgwKTohMHgxKTt9aWYoKHRoaXNbXzB4NzZkYzYyKDB4M2I5KV09PT1fMHg3NmRjNjIoMHg2OGIpfHx0aGlzW18weDc2ZGM2MigweDNiOSldPT09XzB4NzZkYzYyKDB4ZDcpKSYmIXByb2Nlc3NbJ2VudiddWydxdW9ra2EnXSl7Y29uc3QgXzB4NThmYzYwPW5ldyBTZXQoXzB4MzUxZWZkW18weDc2ZGM2MigweDNiNCldWydsaXZlQ29tbWVudExpbmVzJ118fFtdKTtmb3IoY29uc3QgXzB4NDFhNjhjIG9mIF8weDU4ZmM2MClfMHgxOTdhNzdbXzB4NzZkYzYyKDB4NGQxKV0oXzB4NDFhNjhjKXx8dGhpc1tfMHg3NmRjNjIoMHgxNzQpXSh7J2ZpbGUnOl8weDE5N2E3N1tfMHg3NmRjNjIoMHg0OGYpXSgpLCdsaW5lJzpfMHg0MWE2OGMsJ3R5cGUnOl8weDc2ZGM2MigweDIzNSl9LCEweDEpO2Zvcihjb25zdCBfMHgxYjMxNDEgb2YgXzB4MTk3YTc3W18weDc2ZGM2MigweDcwOCldKCkpXzB4MWIzMTQxW18weDc2ZGM2MigweDM0OSldWydsaXZlQ29tbWVudCddJiYhXzB4NThmYzYwW18weDc2ZGM2MigweDM3ZildKF8weDFiMzE0MVsnbnVtYmVyJ10pJiZfMHgxOTdhNzdbXzB4NzZkYzYyKDB4MzU3KV0o4oCLXzB4M2NkNjJkPT5fMHgzY2Q2MmRbJ2xpdmVDb21tZW50J10/KGRlbGV0ZSBfMHgzY2Q2MmRbXzB4NzZkYzYyKDB4MjM1KV0sXzB4M2NkNjJkW18weDc2ZGM2MigweDE4YSldJiZPYmplY3RbXzB4NzZkYzYyKDB4MjQzKV0oXzB4M2NkNjJkKVsnbGVuZ3RoJ109PT0weDEmJmRlbGV0ZSBfMHgzY2Q2MmRbXzB4NzZkYzYyKDB4MThhKV0sT2JqZWN0W18weDc2ZGM2MigweDI0MyldKF8weDNjZDYyZClbJ2xlbmd0aCddPT09MHgwKTohMHgxLF8weDFiMzE0MVsnbnVtYmVyJ10pO319KSxfW18weDRmMzUwYygweDNlNildKF8weDUxYWQxZCxfMHg0ZjQ1Nzk9Pl8weDRmNDU3OVsnY29tcGxldGVJbml0aWFsaXphdGlvbiddKF8weDMxZTViNFtfMHg0ZjM1MGMoMHgxYzYpXSgpKSk7bGV0IF8weGFhYjFiZj1bXSxfMHgxNmViMTg9ITB4MTtfW18weDRmMzUwYygweDNlNildKF8weGUxMWNiY1tfMHg0ZjM1MGMoMHgyNzEpXSxfMHgxYzViZWY9Pntjb25zdCBfMHg1Y2RlNDI9XzB4NGYzNTBjO2xldCBfMHgyZTQ4MjQ9bmV3IF8weDUzMDlhOShfMHgxYzViZWYpO18weDJlNDgyNFtfMHg1Y2RlNDIoMHgyODgpXSgpLF9bXzB4NWNkZTQyKDB4M2U2KV0oXzB4MmU0ODI0W18weDVjZGU0MigweDQzNyldKCksXzB4NGExY2Y5PT57Y29uc3QgXzB4NDg4OGU0PV8weDVjZGU0MjtsZXQgXzB4MzBjNDk0PV8weDMxZTViNFtfMHg0ODg4ZTQoMHg2OWIpXShfMHg0YTFjZjlbXzB4NDg4OGU0KDB4NWNkKV0oKSk7aWYoIV8weDMwYzQ5NClyZXR1cm47XzB4NGExY2Y5WydzZXRGaWxlJ10oXzB4MzBjNDk0KSxfMHgzMGM0OTRbXzB4NDg4OGU0KDB4NDhiKV0oKSYmKF8weDE2ZWIxOD0hMHgwKTtsZXQgXzB4M2ExMTM5PV8weDMwYzQ5NFtfMHg0ODg4ZTQoMHg1ZjIpXShfMHg0YTFjZjlbXzB4NDg4OGU0KDB4MmE0KV0oKSk7XzB4M2ExMTM5IT1udWxsJiYoXzB4NGExY2Y5W18weDQ4ODhlNCgweDNkYSldKF8weDNhMTEzOSksXzB4M2ExMTM5W18weDQ4ODhlNCgweDI0NCldKF8weDJlNDgyNCkpO30pLF8weGFhYjFiZltfMHg1Y2RlNDIoMHg0MmQpXShfMHgyZTQ4MjQpO30pO2NvbnN0IF8weDk5NWFkMz10aGlzW18weDRmMzUwYygweDI2OCldW18weDRmMzUwYygweDVmZildLF8weDQ3YmE0OT1fMHg5OTVhZDNbJ2FjdGl2ZSddOyFfMHgxNmViMTgmJl8weDQ3YmE0OSYmIXByb2Nlc3NbXzB4NGYzNTBjKDB4NDU4KV1bJ3F1b2trYSddJiZfMHg5OTVhZDNbXzB4NGYzNTBjKDB4NTY4KV0odGhpc1snX3Rlc3RzJ10pLF9bXzB4NGYzNTBjKDB4M2U2KV0oXzB4MzFlNWI0W18weDRmMzUwYygweGQxKV0sXzB4NWE3ZTRhPT57Y29uc3QgXzB4MmE4YzY2PV8weDRmMzUwYztsZXQgXzB4MTU0ZTI0PV8weDVhN2U0YVsnZmlsZSddKCk7XzB4MTU0ZTI0JiZfMHg1YTdlNGFbXzB4MmE4YzY2KDB4M2RhKV0oXzB4MTU0ZTI0W18weDJhOGM2NigweDcxOSldKF8weDVhN2U0YVtfMHgyYThjNjYoMHg3M2IpXSgpKXx8XzB4MTU0ZTI0W18weDJhOGM2NigweDVmMildKF8weDVhN2U0YVtfMHgyYThjNjYoMHgyYTQpXSgpKSk7fSksdGhpc1tfMHg0ZjM1MGMoMHg3MjgpXShfMHhhYWIxYmYsXzB4Mzk3YTc0LCFfMHhlMTFjYmNbXzB4NGYzNTBjKDB4NThiKV0mJiFfMHhlMTFjYmNbXzB4NGYzNTBjKDB4NTNhKV18fHRoaXNbJ3RyYWNlQmVpbmdOYXZpZ2F0ZWQnXSgpKTtjb25zdCBfMHgxYWVlYmM9XzB4NDdiYTQ5JiYhXzB4OTk1YWQzW18weDRmMzUwYygweDE5OSldO2xldCBfMHhkNDE3ZWQsXzB4NGZmY2I2PSEweDE7Y29uc3QgXzB4MjIyMDhlPSh0aGlzW18weDRmMzUwYygweDVhMyldfHx7fSlbJ2NvZGVDbGlwU2hhcmluZyddO2lmKCFfMHgxYWVlYmMmJiFfMHgyMjIwOGUpe2xldCBfMHgyYjRlZDA9ITB4MTtpZih0aGlzW18weDRmMzUwYygweDVhMyldJiZ0aGlzW18weDRmMzUwYygweDVhMyldW18weDRmMzUwYygweDJhNyldKXtjb25zdCBfMHgxNGE3YWE9dGhpc1tfMHg0ZjM1MGMoMHg0YmEpXVtfMHg0ZjM1MGMoMHg5ZCldKCk7aWYocHJvY2Vzc1tfMHg0ZjM1MGMoMHg0NTgpXVsncXVva2thJ10mJl8weDE0YTdhYSYmXzB4MTRhN2FhW18weDRmMzUwYygweDIyYildJiYhXzB4MTRhN2FhW18weDRmMzUwYygweDIyYildWydhbGxvd0RlYnVnZ2VyRWRpdEFuZENvbnRpbnVlJ10pZGVsZXRlIHRoaXNbJ190cmFjZSddLGRlbGV0ZSB0aGlzW18weDRmMzUwYygweDVhMyldLF8weDMxZTViNFtfMHg0ZjM1MGMoMHg3MjApXSgpLHRoaXNbJ19lbWl0J10oXzB4NGYzNTBjKDB4Njc3KSx7J3F1b2trYUNvbW11bml0eUVkaXRpb25MaW1pdGF0aW9uJzohMHgwfSk7ZWxzZXtjb25zdCBfMHg0Yjc4YWM9XzB4MzFlNWI0W18weDRmMzUwYygweDYzNSldO18weDMxZTViNFtfMHg0ZjM1MGMoMHg2MzUpXT1fMHhlMTFjYmNbXzB4NGYzNTBjKDB4NjQ5KV0sZGVsZXRlIHRoaXNbXzB4NGYzNTBjKDB4NWEzKV1bXzB4NGYzNTBjKDB4MmE3KV07Y29uc3QgXzB4NzI2MjRkPSF0aGlzWydfdHJhY2VTdGF0ZUF0VGhlU3RhcnRPZkNvZGVDaGFuZ2VzSW5BRmlsZSddO18weDcyNjI0ZCYmKHRoaXNbXzB4NGYzNTBjKDB4MjVmKV09T2JqZWN0Wydhc3NpZ24nXSh7fSx0aGlzW18weDRmMzUwYygweDVhMyldKSk7bGV0IF8weGI1MTBkMD1fMHgzMWU1YjRbXzB4NGYzNTBjKDB4NjM1KV0mJnRoaXNbXzB4NGYzNTBjKDB4YjEpXShfMHg0Yjc4YWMsXzB4ZTExY2JjW18weDRmMzUwYygweDY0OSldLHRoaXNbXzB4NGYzNTBjKDB4NWEzKV1bXzB4NGYzNTBjKDB4NGE1KV0sdGhpc1snX3RyYWNlU3RhdGUnXVtfMHg0ZjM1MGMoMHg3M2IpXSk7IV8weDcyNjI0ZCYmdGhpc1tfMHg0ZjM1MGMoMHg1YTMpXVtfMHg0ZjM1MGMoMHg1Y2QpXSE9PXRoaXNbXzB4NGYzNTBjKDB4MjVmKV1bJ2ZpbGVJZCddJiYoXzB4YjUxMGQwPXRoaXNbXzB4NGYzNTBjKDB4YjEpXShfMHhlMTFjYmNbXzB4NGYzNTBjKDB4NjQ5KV0sXzB4ZTExY2JjW18weDRmMzUwYygweDY0OSldLHRoaXNbXzB4NGYzNTBjKDB4MjVmKV1bXzB4NGYzNTBjKDB4NGE1KV0sdGhpc1tfMHg0ZjM1MGMoMHgyNWYpXVtfMHg0ZjM1MGMoMHg3M2IpXSksdGhpc1tfMHg0ZjM1MGMoMHg1YTMpXVsnZmlsZUlkJ109PT10aGlzWydfdHJhY2VTdGF0ZUF0VGhlU3RhcnRPZkNvZGVDaGFuZ2VzSW5BRmlsZSddW18weDRmMzUwYygweDVjZCldJiZkZWxldGUgdGhpc1tfMHg0ZjM1MGMoMHgyNWYpXSksXzB4YjUxMGQwPyhfMHhkNDE3ZWQ9XzB4YjUxMGQwLHRoaXNbXzB4NGYzNTBjKDB4N2EwKV09ITB4MCk6KF8weDMxZTViNFsnX3RyYWNlJ109XzB4NGI3OGFjLF8weDMxZTViNFtfMHg0ZjM1MGMoMHg3MjApXSghMHgwKSxfMHgyYjRlZDA9ITB4MCxfMHg0ZmZjYjY9ITB4MCk7fX1lbHNle2RlbGV0ZSB0aGlzW18weDRmMzUwYygweDI1ZildO2NvbnN0IF8weDNhMGI2ND0hXzB4MzFlNWI0W18weDRmMzUwYygweDYzNSldJiZfMHhlMTFjYmNbXzB4NGYzNTBjKDB4NjQ5KV0sXzB4YzhlM2YyPSF0aGlzW18weDRmMzUwYygweDNlYildKCkmJl8weDMxZTViNFsnX3ByZXZpb3VzVHJhY2VTdGF0ZSddJiZfMHgzMWU1YjRbXzB4NGYzNTBjKDB4NzlmKV1bJ3Rlc3QnXSYmdGhpc1snX3Rlc3RzJ11bXzB4NTE3OTBhW18weDRmMzUwYygweDE0YildKF8weDMxZTViNFtfMHg0ZjM1MGMoMHg3OWYpXVtfMHg0ZjM1MGMoMHg1ZmYpXSldOyhfMHgzMWU1YjRbXzB4NGYzNTBjKDB4NjM1KV0mJiFfMHhlMTFjYmNbXzB4NGYzNTBjKDB4NjQ5KV18fF8weDNhMGI2NCkmJih0aGlzW18weDRmMzUwYygweDdhMCldPSEweDApLF8weDMxZTViNFsnX3RyYWNlJ109XzB4ZTExY2JjW18weDRmMzUwYygweDY0OSldLF8weDNhMGI2NCYmXzB4MzFlNWI0W18weDRmMzUwYygweDc5ZildJiYoXzB4ZDQxN2VkPXRoaXNbXzB4NGYzNTBjKDB4YjEpXShfMHhlMTFjYmNbXzB4NGYzNTBjKDB4NjQ5KV0sXzB4ZTExY2JjW18weDRmMzUwYygweDY0OSldLF8weDMxZTViNFsnX3ByZXZpb3VzVHJhY2VTdGF0ZSddWydmcmFtZSddLF8weDMxZTViNFtfMHg0ZjM1MGMoMHg3OWYpXVtfMHg0ZjM1MGMoMHg3M2IpXSkpLCFfMHhlMTFjYmNbXzB4NGYzNTBjKDB4NjQ5KV0mJl8weGM4ZTNmMiYmKHRoaXNbXzB4NGYzNTBjKDB4NWVkKV0oXzB4NGYzNTBjKDB4MTQzKSx7J3Rlc3RzJzpbXzB4MzFlNWI0W18weDRmMzUwYygweDc5ZildW18weDRmMzUwYygweDVmZildXSwnaW5pdGlhbFRyYWNlUnVuJzohMHgwLCdyZXN1bWUnOiEweDB9KSxkZWxldGUgXzB4MzFlNWI0W18weDRmMzUwYygweDc5ZildW18weDRmMzUwYygweDVmZildKTt9aWYoXzB4MzFlNWI0W18weDRmMzUwYygweDYzNSldJiYoXzB4MzFlNWI0WydfdHJhY2UnXVtfMHg0ZjM1MGMoMHgzMGYpXSYmKHRoaXNbJ19jaGFuZ2VkJ109ITB4MCksdGhpc1tfMHg0ZjM1MGMoMHgxNDUpXShfMHgzMWU1YjRbXzB4NGYzNTBjKDB4NjM1KV1bXzB4NGYzNTBjKDB4MzBmKV0pLHRoaXNbXzB4NGYzNTBjKDB4MjYzKV0oXzB4MzFlNWI0WydfdHJhY2UnXVsndGVzdHMnXSxfMHg1MWFkMWQpLHRoaXNbJ191c2VyUmVxdWVzdGVkVHJhY2VSdW4nXSkpe2lmKF8weDJiNGVkMHx8KHRoaXNbXzB4NGYzNTBjKDB4NzI1KV1bXzB4NGYzNTBjKDB4MWQ2KV1bJ2FjdGl2ZSddPSEweDAsdGhpc1snZmlsdGVyJ11bXzB4NGYzNTBjKDB4NWZmKV1bXzB4NGYzNTBjKDB4NzA5KV0oKSx0aGlzW18weOKAizRmMzUwYygweDEyOCldKCkpLHRoaXNbJ2ZpbHRlciddW18weDRmMzUwYygweDVmZildW18weDRmMzUwYygweDYwMCldKHRoaXNbJ191c2VyUmVxdWVzdGVkVHJhY2VSdW4nXVsndHJhY2VkVGVzdCddKSxfMHg0ZmZjYjY9ITB4MCwhXzB4ZDQxN2VkKXtjb25zdCBfMHgzODBkYTQ9X1tfMHg0ZjM1MGMoMHgzM2IpXShfMHgzMWU1YjRbXzB4NGYzNTBjKDB4NjM1KV1bXzB4NGYzNTBjKDB4MmY5KV0pO2lmKF8weDM4MGRhNFtfMHg0ZjM1MGMoMHgxOTUpXSl7Y29uc3QgXzB4MTU3MGY2PXRoaXNbXzB4NGYzNTBjKDB4NjRmKV1bXzB4NTE3OTBhW18weDRmMzUwYygweDE0YildKHRoaXNbXzB4NGYzNTBjKDB4MjU4KV1bXzB4NGYzNTBjKDB4MTk2KV0pXSxfMHgyZDQ1M2Q9XzB4MTU3MGY2JiZfMHgzMWU1YjRbJ190cmFjZSddW18weDRmMzUwYygweDJmOSldW18weDE1NzBmNlsnaWQnXSgpXXx8XzB4MzgwZGE0WzB4MF07XzB4ZDQxN2VkPXRoaXNbXzB4NGYzNTBjKDB4M2I4KV0oT2JqZWN0W18weDRmMzUwYygweDQ3ZSldKHsnZnJhbWUnOl8weDJkNDUzZFtfMHg0ZjM1MGMoMHg1NzgpXX0sdGhpc1tfMHg0ZjM1MGMoMHgyNTgpXSkpLF8weGQ0MTdlZHx8KF8weGQ0MTdlZD10aGlzW18weDRmMzUwYygweDNiOCldKHsnZnJhbWUnOl8weDJkNDUzZFtfMHg0ZjM1MGMoMHg1NzgpXX0pKSxfMHhkNDE3ZWQmJihfMHhkNDE3ZWRbJ3Jlc3RhcnQnXT0hMHgwKTt9ZWxzZSBwcm9jZXNzWydlbnYnXVtfMHg0ZjM1MGMoMHgyMmIpXSYmKF8weGQ0MTdlZD10aGlzW18weDRmMzUwYygweDNiOCldKE9iamVjdFtfMHg0ZjM1MGMoMHg0N2UpXSh7fSx0aGlzW18weDRmMzUwYygweDI1OCldKSksXzB4ZDQxN2VkfHwoXzB4ZDQxN2VkPXRoaXNbJ190cmFjZUJ5UmVxdWVzdCddKHt9KSksXzB4ZDQxN2VkJiYoXzB4ZDQxN2VkWydyZXN0YXJ0J109ITB4MCkpO31kZWxldGUgdGhpc1tfMHg0ZjM1MGMoMHgyNTgpXTt9fWlmKF8weDIyMjA4ZSYmKHRoaXNbXzB4NGYzNTBjKDB4NjM1KV09XzB4ZTExY2JjW18weDRmMzUwYygweDY0OSldLHRoaXNbJ190cmFjZUJ5UmVxdWVzdCddKE9iamVjdFtfMHg0ZjM1MGMoMHg0N2UpXSh7fSx0aGlzWydfdXNlclJlcXVlc3RlZFRyYWNlUnVuJ10pKXx8dGhpc1tfMHg0ZjM1MGMoMHgzYjgpXSh7fSkpLF8weGQ0MTdlZCYmKHRoaXNbJ2ZpbHRlciddW18weDRmMzUwYygweDFkNildWydjdXJyZW50RnJhbWUnXT10aGlzW18weDRmMzUwYygweDVhMyldW18weDRmMzUwYygweDRhNSldKSx0aGlzW18weDRmMzUwYygweDU3OSldKXtmb3IoY29uc3QgXzB4MjEzY2YyIGluIHRoaXNbXzB4NGYzNTBjKDB4NTc5KV0pXzB4Mzk3YTc0W18weDIxM2NmMl18fChfMHgzOTdhNzRbXzB4MjEzY2YyXT10aGlzW18weDRmMzUwYygweDU3OSldW18weDIxM2NmMl0pO2RlbGV0ZSB0aGlzW18weDRmMzUwYygweDU3OSldO31jb25zdCBfMHgzMzE3ZmE9dGhpc1tfMHg0ZjM1MGMoMHg0YmEpXVtfMHg0ZjM1MGMoMHg1YTIpXTt0aGlzW18weDRmMzUwYygweDRiYSldW18weDRmMzUwYygweDVhMildPSEweDEsdGhpc1tfMHg0ZjM1MGMoMHg3OTApXShfMHgzOTdhNzQsXzB4ZTExY2JjW18weDRmMzUwYygweDRlYSldLF8weDQ0MzdiMSxfMHg0ZmZjYjYsXzB4MzMxN2ZhKSxfMHg2MTk4MjUmJl8weDk5NWFkM1tfMHg0ZjM1MGMoMHgxOTkpXSYmIV8weDk5NWFkM1tfMHg0ZjM1MGMoMHgzN2YpXShfMHg2MTk4MjVbXzB4NGYzNTBjKDB4NDYyKV0oKSkmJihfMHg2MTk4MjU9dm9pZCAweDApLHRoaXNbXzB4NGYzNTBjKDB4NWVkKV0oJ3Rlc3RzRXhlY3V0ZWQnLHsnZmlyc3RGYWlsaW5nT3JTaW5nbGVFeGVjdXRlZFRlc3QnOl8weDYxOTgyNXx8dm9pZCAweDAsJ2FsbEFmZmVjdGVkRmlsZXMnOl8weDM5N2E3NCwnY2hhbmdlZCc6XzB4MWE1ZDQ3LCdleGVjdXRlZCc6XzB4NDVkMDRmLCdmdWxsUnVuJzpfMHhlMTFjYmNbXzB4NGYzNTBjKDB4NTNhKV0sJ2NvZGVDbGlwU2hhcmluZ1J1bic6XzB4MjIyMDhlfSksXzB4MjIyMDhlJiYoZGVsZXRlIHRoaXNbXzB4NGYzNTBjKDB4NjM1KV0sZGVsZXRlIHRoaXNbJ190cmFjZVN0YXRlJ10sZGVsZXRlIHRoaXNbXzB4NGYzNTBjKDB4MjVmKV0pLF8weGQ0MTdlZCYmdGhpc1tfMHg0ZjM1MGMoMHg1ZWQpXSgndOKAi3JhY2VOYXZpZ2F0ZWQnLF8weGQ0MTdlZCksdGhpc1snX2VtaXRGaWxlQ2hhbmdlcyddKF8weGUxMWNiY1tfMHg0ZjM1MGMoMHgxODUpXSk7fVtfMHhlNDhlZGUoMHgxMTkpXShfMHgzNjc1NjUpe2NvbnN0IF8weGQ4ZDIzYT1fMHhlNDhlZGU7aWYoISghXzB4MzY3NTY1fHwhXzB4MzY3NTY1W18weGQ4ZDIzYSgweDE5NSldKSl7aWYodGhpc1tfMHhkOGQyM2EoMHgzOWYpXVtfMHhkOGQyM2EoMHg4ZSldKXtjb25zdCBfMHg1MDNiNDc9W107XzB4MzY3NTY1W18weGQ4ZDIzYSgweDNlNCldKF8weDQ5ZjY1OT0+e2NvbnN0IF8weDJhYTA0MD1fMHhkOGQyM2EsXzB4MzYzNDhjPXRoaXNbXzB4MmFhMDQwKDB4NjliKV0oXzB4NDlmNjU5WydpZCddKTtfMHgzNjM0OGMmJl8weDUwM2I0N1tfMHgyYWEwNDAoMHg0MmQpXSh7J2ZpbGUnOl8weDM2MzQ4Y1tfMHgyYWEwNDAoMHg0OGYpXSgpLCdvbGRDb250ZW50JzpfMHg0OWY2NTlbXzB4MmFhMDQwKDB4NjM4KV0sJ25ld0NvbnRlbnQnOl8weDQ5ZjY1OVtfMHgyYWEwNDAoMHgyZDcpXX0pO30pLF8weDUwM2I0N1tfMHhkOGQyM2EoMHgxOTUpXSYmdGhpc1tfMHhkOGQyM2EoMHg1ZWQpXShfMHhkOGQyM2EoMHgxODUpLHsnZmlsZUNoYW5nZXMnOl8weDUwM2I0N30pO31lbHNlIF8weDM2NzU2NVtfMHhkOGQyM2EoMHgzZTQpXShfMHg0N2RkYzQ9Pntjb25zdCBfMHhiNzRkYTg9XzB4ZDhkMjNhLF8weDNlM2U4YT10aGlzW18weGI3NGRhOCgweDY5YildKF8weDQ3ZGRjNFsnaWQnXSk7aWYoIV8weDNlM2U4YSlyZXR1cm47Y29uc3QgXzB4MmVmYTY2PV8weGU2ZWQyZVtfMHhiNzRkYTgoMHg0MmUpXSh0aGlzWydfcHJvamVjdCddW18weGI3NGRhOCgweDVmOSldLF8weDNlM2U4YVtfMHhiNzRkYTgoMHg0OGYpXSgpKTt0cnl7dGhpc1tfMHhiNzRkYTgoMHg0YmEpXVsnX3dyaXRlRmlsZVN5bmMnXShfMHgyZWZhNjYsXzB4NDdkZGM0W18weGI3NGRhOCgweDJkNyldKTt9Y2F0Y2goXzB4MmRlY2E4KXt9fSk7fX1bXzB4ZTQ4ZWRlKDB4MjA5KV0oXzB4MjE4M2E0KXtjb25zdCBfMHhlNmVhNGI9XzB4ZTQ4ZWRlO2lmKHRoaXNbXzB4ZTZlYTRiKDB4NzMyKV1bXzB4MjE4M2E0WydrZXknXSgpXT1fMHgyMTgzYTQsXzB4MjE4M2E0W18weGU2ZWE0YigweDVhZildKCkpe2NvbnN0IF8weDRkZmZiZj10aGlzWydfcHJvamVjdCddW18weGU2ZWE0YigweDlkKV0oKSxfMHg1MGM3ZDc9XzB4MjE4M2E0W18weGU2ZWE0YigweDQ4ZildKCk7aWYoXzB4MjE4M2E0W18weGU2ZWE0YigweDc1MildPSEhX1tfMHhlNmVhNGIoMHgyNmEpXShfMHg0ZGZmYmZbJ2ZpbGVzV2l0aE5vQ292ZXJhZ2VDYWxjdWxhdGVkJ10sXzB4YzVkNzIyPT5fMHgyNTAxYjBbXzB4ZTZlYTRiKDB4M2ZmKV0oXzB4NTBjN2Q3LF8weGM1ZDcyMix7J2RvdCc6XzB4NGRmZmJmW18weGU2ZWE0YigweDZiOCldfSkpLCFfMHgyMTgzYTRbXzB4ZTZlYTRiKDB4NzUyKV0mJl8weDRkZmZiZltfMHhlNmVhNGIoMHgyYzQpXSYmXzB4NGRmZmJmW18weGU2ZWE0YigweDJjNCldWydsZW5ndGgnXSl7Y29uc3QgXzB4NTc4MDEwPSFfMHg0ZGZmYmZbXzB4ZTZlYTRiKDB4MmM0KV1bXzB4ZTZlYTRiKDB4NzdlKV0oXzB4NWNlMjU1PT5fMHg1Y2UyNTVbMHgwXT09PSchJyYmIV8weDI1MDFiMFtfMHhlNmVhNGIoMHgzZmYpXShfMHg1MGM3ZDcsXzB4NWNlMjU1LHsnZG90JzpfMHg0ZGZmYmZbXzB4ZTZlYTRiKDB4NmI4KV19KSkmJl8weDRkZmZiZltfMHhlNmVhNGIoMHgyYzQpXVtfMHhlNmVhNGIoMHg3N2UpXShfMHg1ZGRlMDg9Pl8weDVkZGUwOFsweDBdIT09JyEnJiZfMHgyNTAxYjBbXzB4ZTZlYTRiKDB4M2ZmKV0oXzB4NTBjN2Q3LF8weDVkZGUwOCx7J2RvdCc6XzB4NGRmZmJmW18weGU2ZWE0YigweDZiOCldfSkpO18weDIxODNhNFtfMHhlNmVhNGIoMHg3NTIpXT0hXzB4NTc4MDEwLF8weDU3ODAxMD9fMHgyMTgzYTRbXzB4ZTZlYTRiKDB4NGZhKV09ITB4MDpfMHgyMTgzYTRbJ19ub0NvdmVyYWdlQ2FsY3VsYXRpb24nXT0hMHgwO319fVtfMHhlNDhlZGUoMHg0ZWUpXShfMHgyZjBmODQpe2NvbnN0IF8weGU0MDM1ZD1fMHhlNDhlZGU7dGhpc1tfMHhlNDAzNWQoMHg3MjUpXVtfMHhlNDAzNWQoMHg3OGYpXVtfMHhlNDAzNWQoMHg3MTgpXShfMHgyZjBmODQpLGRlbGV0ZSB0aGlzW18weGU0MDM1ZCgweDczMildW18weDJmMGY4NF0sZGVsZXRlIHRoaXNbXzB4ZTQwMzVkKDB4Mzg1KV1bXzB4MmYwZjg0XTt9WydfbGluZVJlcG9ydCddKF8weDRiYmY5YyxfMHgxNzM2YzEpe2NvbnN0IF8weDViNDFkNj1fMHhlNDhlZGU7cmV0dXJueyd0ZXN0cyc6dGhpc1snX21hcFRlc3RzJ10oXzB4NGJiZjljW18weDViNDFkNigweDY4NCldKF8weDE3MzZjMSkpfTt9W18weGU0OGVkZSgweDRiYildKF8weDMwMmIyYil7Y29uc3QgXzB4M2JmYmZjPV8weGU0OGVkZTt0aGlzWydfY2hhbmdlZCddPSEweDAsdGhpc1tfMHgzYmZiZmMoMHgxY2EpXT1fMHgzMDJiMmI7fVsnX3JlcG9ydE5vcm1hbFJ1biddKCl7ZGVsZXRlIHRoaXNbJ19ydW5FcnJvciddO31bXzB4ZTQ4ZWRlKDB4NzI4KV0oXzB4MmIyMDMyLF8weDc0NmRiYSxfMHgxODI2ZGIpe2NvbnN0IF8weDRiZTNhOD1fMHhlNDhlZGU7bGV0IF8weGVjYjgwOD10aGlzO2lmKHRoaXNbXzB4NGJlM2E4KDB4NmRmKV09XzB4MmIyMDMyLF8weDE4MjZkYil7Y29uc3QgXzB4MTg0ZGY1PW5ldyBTZXQoX1tfMHg0YmUzYTgoMHg3NWMpXSh0aGlzW18weDRiZTNhOCgweDQyYyldLChfMHg0ODU0NmYsXzB4MTY2MDkyKT0+XzB4MTY2MDkyKSksXzB4M2NkNmZmPV9bJ2ZpbHRlciddKHRoaXNbJ19nbG9iYWxFcnJvcnMnXSxfMHg1YzM2ZDY9Pl9bXzB4NGJlM2E4KDB4MmFlKV0oXzB4NWMzNmQ2W18weDRiZTNhOCgweDQzNyldKCksXzB4MTZkOTg0PT5fMHg3NDZkYmFbXzB4MTZkOTg0WydmaWxlSWQnXSgpXSkpO19bJ2VhY2gnXShfMHgzY2Q2ZmYsXzB4MzlkZDNkPT57Y29uc3QgXzB4Mjc2ZTMzPV8weDRiZTNhODtfW18weDI3NmUzMygweDNlNildKF8weDM5ZGQzZFtfMHgyNzZlMzMoMHg0MzcpXSgpLF8weDI4OTJmYT0+e2NvbnN0IF8weDI5ODJiMz1fMHgyNzZlMzMsXzB4M2Q5NDhiPV8weDI4OTJmYVtfMHgyOTgyYjMoMHg3M2IpXSgpO18weDNkOTQ4YiYmXzB4M2Q5NDhiW18weDI5ODJiMygweDNiZSldJiZfMHgzZDk0OGJbXzB4Mjk4MmIzKDB4M2JlKV0oXzB4MzlkZDNkKTt9KSxkZWxldGUgXzB4ZWNiODA4W18weDI3NmUzMygweDQyYyldW18weDM5ZGQzZFtfMHgyNzZlMzMoMHg0NjIpXSgpXTt9KSxfW18weDRiZTNhOCgweDNlNildKF8weDJiMjAzMixfMHhiYzAxOWY9Pl8weGVjYjgwOFtfMHg0YmUzYTgoMHg0MmMpXVtfMHhiYzAxOWZbXzB4NGJlM2E4KDB4NDYyKV0oKV09XzB4YmMwMTlmKTtjb25zdCBfMHg4OGQ2OTM9bmV3IFNldChfW18weDRiZTNhOCgweDc1YyldKHRoaXNbXzB4NGJlM2E4KDB4NDJjKV0sKF8weDViNDg4MSxfMHg0Y2VmZjcpPT5fMHg0Y2VmZjcpKTt0aGlzW18weDRiZTNhOCgweDdhMCldPXRoaXNbXzB4NGJlM2E4KDB4N2EwKV18fCFfW18weDRiZTNhOCgweDMxMyldKF8weDE4NGRmNSxfMHg4OGQ2OTMpLHRoaXNbXzB4NGJlM2E4KDB4NGJhKV1bXzB4NGJlM2E4KDB4MmU5KV0oX1tfMHg0YmUzYTgoMHgxZTYpXSh0aGlzW18weDRiZTNhOCgweDQyYyldKSE9PTB4MCk7fWVsc2V7bGV0IF8weDUwN2RiMD1PYmplY3RbXzB4NGJlM2E4KDB4NDQ4KV0obnVsbCk7dGhpc1tfMHg0YmUzYTgoMHg3YTApXT10aGlzW18weDRiZTNhOCgweDdhMCldfHxfWydzaXplJ10odGhpc1tfMHg0YmUzYTgoMHg0MmMpXSkhPT1fMHgyYjIwMzJbXzB4NGJlM2E4KDB4MTk1KV0sX1tfMHg0YmUzYTgoMHgzZTYpXSh0aGlzW18weDRiZTNhOCgweDQyYyldLF8weDQyMzRiZD0+e2NvbnN0IF8weDIwOWM3Nj1fMHg0YmUzYTg7X1tfMHgyMDljNzYoMHgzZTYpXShfMHg0MjM0YmRbXzB4MjA5Yzc2KDB4NDM3KV0oKSxfMHg1YzZjYjQ9Pntjb25zdCBfMHg3YjZlNzc9XzB4MjA5Yzc2O2xldCBfMHgyMTdmNzA9XzB4NWM2Y2I0WydyYW5nZSddKCk7XzB4MjE3ZjcwJiZfMHgyMTdmNzBbXzB4N2I2ZTc3KDB4M2JlKV0mJl8weDIxN2Y3MFtfMHg3YjZlNzcoMHgzYmUpXShfMHg0MjM0YmQpO30pO30pLF9bXzB4NGJlM2E4KDB4M2U2KV0oXzB4MmIyMDMyLF8weDRjZDZmOD0+e2NvbnN0IF8weDM5NTFkOD1fMHg0YmUzYTg7dmFyIF8weDE2M2ZkZT1fMHg0Y2Q2ZjhbJ2tleSddKCk7ZGVsZXRlIF8weGVjYjgwOFtfMHgzOTUxZDgoMHg0MmMpXVtfMHgxNuKAizNmZGVdLF8weDUwN2RiMFtfMHgxNjNmZGVdPV8weDRjZDZmODt9KSx0aGlzW18weDRiZTNhOCgweDdhMCldPXRoaXNbXzB4NGJlM2E4KDB4N2EwKV18fCFfWydpc0VtcHR5J10odGhpc1tfMHg0YmUzYTgoMHg0MmMpXSksdGhpc1snX2dsb2JhbEVycm9ycyddPV8weDUwN2RiMDt9dGhpc1snX2ZpbGVzQWZmZWN0ZWRCeUdsb2JhbEVycm9ycyddPXt9LF9bXzB4NGJlM2E4KDB4M2U2KV0odGhpc1tfMHg0YmUzYTgoMHg0MmMpXSxfMHg0MGRkZTY9PntfWydlYWNoJ10oXzB4NDBkZGU2WydzdGFjayddKCksXzB4NzA2ZDJjPT57Y29uc3QgXzB4MTRkOThlPV8weGFlMjYsXzB4NWU4NGNkPV8weGVjYjgwOFtfMHgxNGQ5OGUoMHg3MzIpXVtfMHg3MDZkMmNbXzB4MTRkOThlKDB4NWNkKV0oKV07XzB4NWU4NGNkJiYoXzB4ZWNiODA4W18weDE0ZDk4ZSgweDEyNCldW18weDcwNmQyY1snZmlsZUlkJ10oKV09ITB4MCxfMHg1ZTg0Y2RbXzB4MTRkOThlKDB4NDhiKV0oKSYmXzB4ZWNiODA4W18weDE0ZDk4ZSgweDRiYSldW18weDE0ZDk4ZSgweGYwKV0oXzB4NWU4NGNkW18weDE0ZDk4ZSgweDQ2MildKCkpKTt9KTt9KTt9WydfdGVzdHNSZW1vdmVkJ10oXzB4NDRkMDkyKXtjb25zdCBfMHg0N2I3MjA9XzB4ZTQ4ZWRlO19bXzB4NDdiNzIwKDB4M2U2KV0oXzB4NDRkMDkyLF8weDM1NWJmZj0+e2NvbnN0IF8weDNmYWM4Mz1fMHg0N2I3MjAsXzB4MjZhZTg4PV8weDM1NWJmZltfMHgzZmFjODMoMHg0NjIpXSgpLF8weDQ1MWJhZD0hIXRoaXNbXzB4M2ZhYzgzKDB4NDFlKV1bXzB4MjZhZTg4XTtkZWxldGUgdGhpc1tfMHgzZmFjODMoMHg2NGYpXVtfMHgyNmFlODhdLGRlbGV0ZSB0aGlzWydfZmFpbGluZ1Rlc3RzJ11bXzB4MjZhZTg4XTtjb25zdCBfMHg0NTg1MjU9XzB4MzU1YmZmW18weDNmYWM4MygweDExYSldKCk7dGhpc1snX3Rlc3RDb3VudGVycyddW18weDNmYWM4MygweDcxMyldLS0sXzB4NDU4NTI1PT09XzB4M2ZhYzgzKDB4NjcxKSYmdGhpc1tfMHgzZmFjODMoMHg3MmEpXVtfMHgzZmFjODMoMHg2MWIpXS0tLF8weDQ1ODUyNT09PV8weDNmYWM4MygweDI2MSkmJnRoaXNbXzB4M2ZhYzgzKDB4NzJhKV1bXzB4M2ZhYzgzKDB4MzgxKV0tLSxfMHgzNTViZmZbXzB4M2ZhYzgzKDB4NjJjKV0oKSYmdGhpc1tfMHgzZmFjODMoMHg3MmEpXVtfMHgzZmFjODMoMHg0YTApXS0tLHRoaXNbXzB4M2ZhYzgzKDB4N2EwKV09XzB4NDUxYmFkfHx0aGlzW18weDNmYWM4MygweDdhMCldO30pO31bXzB4ZTQ4ZWRlKDB4MmFmKV0oXzB4MzRmODExKXtjb25zdCBfMHgzM2JhZTk9XzB4ZTQ4ZWRlLF8weDRiMDcyZT1fMHgzNGY4MTFbXzB4MzNiYWU5KDB4NDYyKV0oKSxfMHg3YzRkMGE9dGhpc1tfMHgzM2JhZTkoMHg2NGYpXVtfMHg0YjA3MmVdO2lmKF8weDdjNGQwYSl7Y29uc3QgXzB4NjdmMDYyPV8weDdjNGQwYVsnc3RhdHVzJ10oKTt0aGlzW18weDMzYmFlOSgweDcyYSldWyd0b3RhbFRlc3RzTnVtYmVyJ10tLSxfMHg2N2YwNjI9PT0ndG9kbycmJnRoaXNbXzB4MzNiYWU5KDB4NzJhKV1bXzB4MzNiYWU5KDB4NjFiKV0tLSxfMHg2N2YwNjI9PT1fMHgzM2JhZTkoMHgyNjEpJiZ0aGlzW18weDMzYmFlOSgweDcyYSldW18weDMzYmFlOSgweDM4MSldLS0sXzB4N2M0ZDBhW18weDMzYmFlOSgweDYyYyldKCkmJnRoaXNbXzB4MzNiYWU5KDB4NzJhKV1bXzB4MzNiYWU5KDB4NGEwKV0tLTt9dGhpc1snX3Rlc3RzJ11bXzB4NGIwNzJlXT1fMHgzNGY4MTEsZGVsZXRlIHRoaXNbXzB4MzNiYWU5KDB4NDFlKV1bXzB4NGIwNzJlXSxfMHgzNGY4MTFbXzB4MzNiYWU5KDB4NjJjKV0oKSYmKHRoaXNbXzB4MzNiYWU5KDB4NDFlKV1bXzB4NGIwNzJlXT1fMHgzNGY4MTEpO2NvbnN0IF8weDRjODY5ZT1fMHgzNGY4MTFbXzB4MzNiYWU5KDB4MTFhKV0oKTt0aGlzW18weDMzYmFlOSgweDcyYSldWyd0b3RhbFRlc3RzTnVtYmVyJ10rKyxfMHg0Yzg2OWU9PT1fMHgzM2JhZTkoMHg2NzEpJiZ0aGlzWydfdGVzdENvdW50ZXJzJ11bXzB4MzNiYWU5KDB4NjFiKV0rKyxfMHg0Yzg2OWU9PT1fMHgzM2JhZTkoMHgyNjEpJiZ0aGlzW18weDMzYmFlOSgweDcyYSldW18weDMzYmFlOSgweDM4MSldKyssXzB4MzRmODExW18weDMzYmFlOSgweDYyYyldKCkmJnRoaXNbXzB4MzNiYWU5KDB4NzJhKV1bXzB4MzNiYWU5KDB4NGEwKV0rKyx0aGlzW18weDMzYmFlOSgweDdhMCldPSFfMHg3YzRkMGF8fF8weDdjNGQwYSYmXzB4N2M0ZDBhW18weDMzYmFlOSgweDYyYyldKCl8fF8weDM0ZjgxMVtfMHgzM2JhZTkoMHg2MmMpXSgpfHx0aGlzW18weDMzYmFlOSgweDdhMCldO31bJ19maWxlc0J5SWQnXSgpe2NvbnN0IF8weDFmMzQzMT1fMHhlNDhlZGU7cmV0dXJuIHRoaXNbXzB4MWYzNDMxKDB4NzMyKV07fVsnYWdncmVnYXRlRmlsZUNvdmVyYWdlJ10oXzB4MWQwYTBiKXtjb25zdCBfMHgxYjI4MmE9XzB4ZTQ4ZWRlO3JldHVybiB0aGlzW18weDFiMjgyYSgweDUwZildKF8weDFkMGEwYik7fVtfMHhlNDhlZGUoMHgyZTQpXSgpe3RoaXNbJ191cGRhdGVUb3RhbENvdmVyYWdlJ10oKTt9WydjYWxjdWxhdGVUb3RhbENvdmVyYWdlJ10oXzB4MTI1MWJlKXtjb25zdCBfMHg1NGFiODg9XzB4ZTQ4ZWRlO2xldCBfMHgxNjRkZWI9TWF0aFtfMHg1NGFiODgoMHg1Y2YpXSgweDI3MTAqXzB4MTI1MWJlL3RoaXNbXzB4NTRhYjg4KDB4NzYzKV0pLzB4NjR8fDB4MDtyZXR1cm4gXzB4MTY0ZGViPV8weDE2NGRlYjwweDA/MHgwOl8weDE2NGRlYixfMHgxNjRkZWI9XzB4MTY0ZGViPjB4NjQ/MHg2NDpfMHgxNjRkZWIseyd2YWx1ZSc6XzB4MTY0ZGViLCdsb3cnOl8weDE2NGRlYjx0aGlzWydsb3dDb3ZlcmFnZVRocmVzaG9sZCddKCl9O31bJ191cGRhdGVBZmZlY3RlZEZpbGVzJ10oXzB4NDM4YjA3LF8weDQyZDk5YixfMHgyMTkwZDQsXzB4MmRhY2ZkLF8weDJlN2I4ZCl7Y29uc3QgXzB4NGY2NDBmPV8weGU0OGVkZTtsZXQgXzB4NDAxM2VlPXRoaXMsXzB4NWIyZjM5PU9iamVjdFtfMHg0ZjY0MGYoMHg0NDgpXShudWxsKSxfMHg0MTc0MWE9ITB4MSxfMHg1ZDk1Nzk9ITB4MTtjb25zdCBfMHg1Y2E0OTg9dGhpc1tfMHg0ZjY0MGYoMHgyZGQpXSgpO19bXzB4NGY2NDBmKDB4M2U2KV0oXzB4NDM4YjA3LF8weDJlMGYxYT0+e2NvbnN0IF8weDU1YjljYj1fMHg0ZjY0MGYsXzB4NGM1MDAyPV8weDQwMTNlZVsnX2FnZ3JlZ2F0ZUZpbGVDb3ZlcmFnZSddKF8weDJlMGYxYSk7aWYoXzB4NDE3NDFhPV8weDRjNTAwMnx8XzB4NDE3NDFhLF8weDJlMGYxYVsndXBkYXRlJ10oXzB4NDAxM2VlW18weDU1YjljYigweDI2OCldWydhY3RpdmUnXSkpe3RoaXNbJ19wcm9qZWN0J11bJ3J1bk9uU2F2ZSddJiZ0aGlzW18weDU1YjljYigweDRiYSldW18weDU1YjljYigweDVmYSldKCk/XzB4NWIyZjM5W18weDJlMGYxYVtfMHg1NWI5Y2IoMHg0OGYpXSgpXT17J2xpbmVzJzpbXSwnYWxsTGluZXMnOiEweDAsJ2xhc3RSdW4nOl8weDJlMGYxYVtfMHg1NWI5Y2IoMHg1YjEpXShfMHg0MDEzZWVbXzB4NTViOWNiKDB4MjY4KV1bXzB4NTViOWNiKDB4MTk5KV0pfTpfMHg1YjJmMzlbXzB4MmUwZjFhW18weDU1YjljYigweDQ4ZildKCldPV8weDJlMGYxYVtfMHg1NWI5Y2IoMHg1YjEpXShfMHg0MDEzZWVbXzB4NTViOWNiKDB4MjY4KV1bXzB4NTViOWNiKDB4MTk5KV0pO2NvbnN0IF8weDM5YzI1Zj1fMHg1YjJmMzlbXzB4MmUwZjFhW18weDU1YjljYigweDQ4ZildKCldO3RoaXNbXzB4NTViOWNiKDB4MTI0KV0mJl8weDM5YzI1ZiYmKF8weDM5YzI1ZltfMHg1NWI5Y2IoMHg3NTEpXT10aGlzW18weDU1YjljYigweDEyNCldW18weDJlMGYxYVtfMHg1NWI5Y2IoMHg0NjIpXSgpXSk7fWlmKF8weDIxOTBkNCl7Y29uc3QgXzB4NWFkMGIyPV8weDJlMGYxYVsna2V5J10oKSxfMHgxYWYxMjc9XzB4MjE5MGQ0W18weDVhZDBiMl07XzB4MWFmMTI3P3RoaXNbXzB4NTViOWNiKDB4Mzg1KV1bXzB4NWFkMGIyXT1fMHgxYWYxMjc6ZGVsZXRlIHRoaXNbJ19maWxlc1dpdGhNZXNzYWdlcyddW18weDVhZDBiMl07fV8weDRjNTAwMiYmXzB4NWNhNDk4W18weDJlMGYxYVtfMHg1NWI5Y2IoMHg0NjIpXSgpXSYmKF8weDVkOTU3OT0hMHgwKTt9KSwhdGhpc1sncGF1c2VkJ10oKSYmIXRoaXNbXzB4NGY2NDBmKDB4NWEyKV0oKSYmKF8weDJkYWNmZD90aGlzW18weDRmNjQwZigweDQzZildKHsndXBkYXRlZERvY3VtZW50cyc6XzB4NWIyZjM5fSwhMHgxLCEweDEsITB4MSwhMHgxKTpfW18weDRmNjQwZigweDk3KV0oXzB4NWIyZjM5KXx8dGhpc1tfMHg0ZjY0MGYoMHg1ZWQpXShfMHg0ZjY0MGYoMHgzMGIpLHsnZG9jdW1lbnRzJzpfMHg1YjJmMzl9KSk7Y29uc3QgXzB4NTNiYjExPXRoaXNbXzB4NGY2NDBmKDB4N2EwKV18fHRoaXNbXzB4NGY2NDBmKDB4MzRmKV0hPT10aGlzW18weDRmNjQwZigweDcyYSldWydza2lwcGVkVGVzdHNOdW1iZXInXXx8dGhpc1tfMHg0ZjY0MGYoMHg0MDApXSE9PXRoaXNbXzB4NGY2NDBmKDB4NzJhKV1bXzB4NGY2NDBmKDB4NjFiKV07XzB4NTNiYjExJiYoZGVsZXRlIHRoaXNbXzB4NGY2NDBmKDB4N2EwKV0sdGhpc1tfMHg0ZjY0MGYoMHgzNGYpXT10aGlzW18weDRmNjQwZigweDcyYSldWydza2lwcGVkVGVzdHNOdW1iZXInXSx0aGlzW18weDRmNjQwZigweDQwMCldPXRoaXNbXzB4NGY2NDBmKDB4NzJhKV1bXzB4NGY2NDBmKDB4NjFiKV0pLF8weDQxNzQxYSYmdGhpc1tfMHg0ZjY0MGYoMHg2NDIpXSgpLCF0aGlzW18weDRmNjQwZigweDJmMyldKCkmJiF0aGlzW18weDRmNjQwZigweDVhMildKCkmJnRoaXNbXzB4NGY2NDBmKDB4NWVkKV0oJ3N0YXRzTWF5YmVDaGFuZ2VkJyx7J3Rlc3RSZXN1bHRzQ2hhbmdlZCc6XzB4NTNiYjExfHxfMHgyZGFjZmR8fF8weDJlN2I4ZCwndGltZSc6XzB4NDJkOTlifSkscHJvY2Vzc1snZW52J11bXzB4NGY2NDBmKDB4MjJiKV18fCF0aGlzWydwYXVzZWQnXSgpJiYhdGhpc1tfMHg0ZjY0MGYoMHg1YTIpXSgpJiYoXzB4MmRhY2ZkP3RoaXNbXzB4NGY2NDBmKDB4NDNmKV0oITB4MSwhMHgwLCEweDAsITB4MSwhMHgwKToodGhpc1tfMHg0ZjY0MGYoMHg1ZmIpXSgpLHRoaXNbXzB4NGY2NDBmKDB4NjE5KV0oKSksKF8weDVkOTU3OXx8XzB4MmU3YjhkKSYmdGhpc1tfMHg0ZjY0MGYoMHgzODApXSh0aGlzWydfYWN0aXZlVGVzdEZpbGUnXSxfMHg1Y2E0OTgpKTt9W18weGU0OGVkZSgweDVmYildKHtmaWxlSWQ6XzB4ZTBkOWJjLHJlc2V0Ol8weDNlZWM4Mn09e30pe2NvbnN0IF8weDRkNjA0Yz1fMHhlNDhlZGU7aWYodGhpc1tfMHg0ZDYwNGMoMHg1YTIpXSgpfHx0aGlzW18weDRkNjA0YygweDJmMyldKCkpcmV0dXJuO2NvbnN0IF8weDJkM2FiZT10aGlzW18weDRkNjA0YygweDcyNSldW18weDRkNjA0YygweDc4ZildW18weDRkNjA0YygweDE5OSldLF8weDI2YjMxZT10aGlzW18weDRkNjA0YygweDcyNSldW18weDRkNjA0YygweDFkNildW18weDRkNjA0YygweDE5OSldLF8weDRmZjY5Nz10aGlzWydmaWx0ZXInXVtfMHg0ZDYwNGMoMHg1ZmYpXVtfMHg0ZDYwNGMoMHgxOTkpXTtsZXQgXzB4MTlhMjYxPXt9O19bXzB4NGQ2MDRjKDB4M2U2KV0oXzB4ZTBkOWJjP3tbXzB4ZTBkOWJjXTp0aGlzWydfZmlsZXNXaXRoTWVzc2FnZXMnXVtfMHhlMGQ5YmNdfHx7J21lc3NhZ2VzJzpbXX19OnRoaXNbXzB4NGQ2MDRjKDB4Mzg1KV0sKF8weDQyNmJmMyxfMHgyOGEyMTEpPT57Y29uc3QgXzB4ZTJlZjlmPV8weDRkNjA0YyxfMHg1OGMzZWY9ISFfMHg0MjZiZjNbJ21lc3NhZ2VzJ11bXzB4ZTJlZjlmKDB4MjZhKV0oXzB4M2JjMWI4PT4oKF8weDNiYzFiOFtfMHhlMmVmOWYoMHgxZWQpXSgpfHx7fSlbXzB4ZTJlZjlmKDB4NDUxKV18fHt9KVtfMHhlMmVmOWYoMHg3MTUpXSk7KF8weDNlZWM4Mnx8XzB4NThjM2VmKSYmIXRoaXNbJ19maWxlc1dpdGhMb2FkYWJsZU1lc3NhZ2VzJ11bXzB4MjhhMjExXSYmKHRoaXNbXzB4ZTJlZjlmKDB4MTdmKV1bXzB4MjhhMjExXT17fSk7Y29uc3QgXzB4NWRjZmRkPXRoaXNbXzB4ZTJlZjlmKDB4MTdmKV1bXzB4MjhhMjExXSxfMHgxOGNkMGM9XzB4ZTExYTQ5PT57Y29uc3QgXzB4NWQ1YjA5PV8weGUyZWY5ZixfMHgzOWMzNjg9XzB4ZTExYTQ5W18weDVkNWIwOSgweDFlZCldKCk7cmV0dXJuIV8weDM5YzM2OHx8IV8weDM5YzM2OFsnZGF0YSddfHxfMHgyZDNhYmUmJl8weDM5YzM2OFtfMHg1ZDViMDkoMHg3MWYpXSYmdGhpc1snZmlsdGVyJ11bXzB4NWQ1YjA5KDB4NzhmKV1bXzB4NWQ1YjA5KDB4NzM3KV0oXzB4MjhhMjExLF8weDM5YzM2OFtfMHg1ZDViMDkoMHg3MWYpXSl8fF8weDRmZjY5NyYmIXRoaXNbXzB4NWQ1YjA5KDB4NzI1KV1bXzB4NWQ1YjA5KDB4NWZmKV1bXzB4NWQ1YjA5KDB4MzdmKV0oXzB4ZTExYTQ5W18weDVkNWIwOSgweDNjZSldKCkpPyEweDE6XzB4MjZiMzFlP18weDM5YzM2OFtfMHg1ZDViMDkoMHg3MTApXT09PXRoaXNbXzB4NWQ1YjA5KDB4MjY4KV1bJ2RlYnVnZ2VyJ11bJ3RzJ118fF8weDM5YzM2OFsndHJhY2VJZCddPT09JyonJiZfMHgzOWMzNjhbXzB4NWQ1YjA5KDB4NTQzKV09PT10aGlzWydmaWx0ZXInXVtfMHg1ZDViMDkoMHgxZDYpXVsnY3VycmVudEZyYW1lJ106IV8weDM5YzM2OFtfMHg1ZDViMDkoMHg3MTApXXx8XzB4MzljMzY4W18weDVkNWIwOSgweDcxMCldPT09JyonO307XzB4MTlhMjYxW18weDI4YTIxMV09eydtZXNzYWdlcyc6XzB4NWRjZmRkP3RoaXNbXzB4ZTJlZjlmKDB4M2EzKV0oXzB4NDI2YmYzW18weGUyZWY5ZigweDY4MildLCEweDAsXzB4MThjZDBjKTpbXSwnbmFtZSc6XzB4NDI2YmYzW18weGUyZWY5ZigweDFiYyldfTt9KSwoX1snaXNFbXB0eSddKF8weDE5YTI2MSl8fF8weGUwZDliYyYmIV8weDE5YTI2MVtfMHhlMGQ5YmNdWyduYW1lJ10pJiYoXzB4MTlhMjYxPXZvaWQgMHgwKSx0aGlzW18weDRkNjA0YygweDVlZCldKF8weDRkNjA0YygweDEyMikseydmaWxlcyc6XzB4MTlhMjYxLCdyZXNldCc6XzB4M2VlYzgyLCdzcGVjaWZpY0ZpbGUnOl8weGUwZDliY30pO31bXzB4ZTQ4ZWRlKDB4NjE5KV0oKXtjb25zdCBfMHgyNGU1MzE9XzB4ZTQ4ZWRlO2lmKCh0aGlzWydfY2xpZW50J109PT1fMHgyNGU1MzEoMHg2OGIpfHx0aGlzW18weDI0ZTUzMSgweDNiOSldPT09XzB4MjRlNTMxKDB4ZDcpKSYmIXByb2Nlc3NbJ2VudiddWydxdW9ra2EnXSl7aWYodGhpc1sncmVzdW1pbmcnXSgpfHx0aGlzWydwYXVzZWQnXSgpKXJldHVybjtsZXQgXzB4Mzg3N2IwPVtdLF8weDFiNDc0ND0hMHgxLF8weGI5NTRkMD0hMHgwO2NvbnN0IF8weDM2NWNjYj10aGlzWydfaW5zcGVjdG9yJ11bXzB4MjRlNTMxKDB4YzQpXTtsZXQgXzB4MjA2NGIwPV8weDM2NWNjYltfMHgyNGU1MzEoMHgzNDgpXT09PSdhbGwnO2lmKF8weDIwNjRiMD10aGlzWyd0cmFjZUJlaW5nTmF2aWdhdGVkJ10oKT9fMHgzNjVjY2JbJ2F1dG9JbnNwZWN0Rm9yRGVidWdnZXInXT09PSdpbmhlcml0Jz9fMHgyMDY0YjA6XzB4MzY1Y2NiW18weDI0ZTUzMSgweDEzZSldPT09XzB4MjRlNTMxKDB4MWRkKTpfMHgyMDY0YjAsdGhpc1tfMHgyNGU1MzEoMHgzMWQpXVsnaW5zcGVjdGlvbnMnXVtfMHgyNGU1MzEoMHgxOTUpXT4weDApe2NvbnN0IF8weDEzMDBkYj10aGlzWydmaWx0ZXInXVtfMHgyNGU1MzEoMHg3OGYpXVtfMHgyNGU1MzEoMHgxOTkpXSxfMHgyNDk3NTg9dGhpc1tfMHgyNGU1MzEoMHg3MjUpXVtfMHgyNGU1MzEoMHgxZDYpXVtfMHgyNGU1MzEoMHgxOTkpXSxfMHgzMTBhMzc9dGhpc1tfMHgyNGU1MzEoMHg3MjUpXVtfMHgyNGU1MzEoMHg1ZmYpXVtfMHgyNGU1MzEoMHgxOTkpXSxfMHhjNDg3YT1uZXcoXzB4Mjk1OGExKCdscnUtY2FjaGUnKSkoeydtYXgnOjB4NGM0YjQwLCdsZW5ndGgnOl8weDM4NjE0NT0+XzB4Mzg2MTQ1W18weDI0ZTUzMSgweDE5NSldfSksXzB4M2FiOTJkPShfMHg5ZTY3M2MsXzB4NDMyY2Y0KT0+e2NvbnN0IF8weDJiYmUxMT1fMHgyNGU1MzE7bGV0IF8weDI4NjkzZD1fMHhjNDg3YVtfMHgyYmJlMTEoMHgzZWMpXShfMHg5ZTY3M2MpO18weDI4NjkzZD09PXZvaWQgMHgwJiYoXzB4Mjg2OTNkPV8weDI1MDFiMFtfMHgyYmJlMTEoMHg3NmEpXShfMHgyNTAxYjBbXzB4MmJiZTExKDB4MzM2KV0odGhpc1tfMHgyYmJlMTEoMHg0YmEpXVtfMHgyYmJlMTEoMHgxY2IpXShfMHg5ZTY3M2MpfHwnJykpLF8weGM0ODdhWydzZXQnXShfMHg5ZTY3M2MsXzB4Mjg2OTNkKSk7Y29uc3QgXzB4NGE5YjczPV8weDI4NjkzZFtfMHg0MzJjZjQtMHgyXSxfMHg1NWE5YWI9XzB4Mjg2OTNkW18weDQzMmNmNC0weDFdLF8weDU1YWRlOD1fMHgyODY5M2RbXzB4NDMyY2Y0XTtpZighXzB4NTVhOWFiKXJldHVybjtsZXQgXzB4MjM3NmVmPV8weDQzMmNmNDtfMHg1NWFkZTghPT12b2lkIDB4MCYmKF8weDIzNzZlZj1fMHg0MzJjZjQrMHgxKTtjb25zdCBfMHg0NTRiOTI9W107cmV0dXJuIF8weDRhOWI3MyE9bnVsbCYmXzB4NGE5YjczW18weDJiYmUxMSgweDQ4YSldKC9eICokLyk9PT1udWxsJiZfMHg0NTRiOTJbXzB4MmJiZTExKDB4NDJkKV0oeydudW1iZXInOl8weDQzMmNmNC0weDEsJ2NvbnRlbnQnOl8weDRhOWI3MywnY292ZXJlZFJhbmdlcyc6W119KSxfMHg0NTRiOTJbXzB4MmJiZTExKDB4NDJkKV0oeydudW1iZXInOl8weDQzMmNmNCwnY29udGVudCc6XzB4NTVhOWFifSksXzB4NTVhZGU4IT1udWxsJiZfMHg1NWFkZThbXzB4MmJiZTExKDB4NDhhKV0oL14gKiQvKT09PW51bGwmJl8weDQ1NGI5MltfMHgyYmJlMTEoMHg0MmQpXSh7J251bWJlcic6XzB4NDMyY2Y0KzB4MSwnY29udGVudCc6XzB4NTVhZGU4LCdjb3ZlcmVkUmFuZ2VzJzpbXX0pLHsnbWF4TGluZU51bWJlcic6XzB4MjM3NmVmLCdsaW5lcyc6XzB4NDU0YjkyfTt9LF8weDJiMDEyZj17fTtmb3IoY29uc3QgXzB4M2MxNjNlIG9mIHRoaXNbXzB4MjRlNTMxKDB4MzFkKV1bXzB4MjRlNTMxKDB4NjBkKV0pe2NvbnN0IF8weDVkOWJlMz17fSxfMHgxOGNlMGY9bmV3IFNldChfMHgzYzE2M2VbXzB4MjRlNTMxKDB4NzA4KV0oKVsnZmlsdGVyJ10oXzB4NTdiYTE0PT5fMHg1N2JhMTRbXzB4MjRlNTMxKDB4MzQ5KV1bXzB4MjRlNTMxKDB4MThhKV0pWydtYXAnXShfMHgxMjE2MzY9Pl8weDEyMTYzNltfMHgyNGU1MzEoMHg2OTkpXSkpLF8weDNhNTFjND1fMHgzYzE2M2VbXzB4MjRlNTMxKDB4NjdmKV0oKTtmb3IoY29uc3QgXzB4YWY1M2Y3IGluIF8weDNhNTFjNCl7Y29uc3QgXzB4NWZiOTVhPV8weDNhNTFjNFtfMHhhZjUzZjddO2lmKF8weDVmYjk1YVtfMHgyNGU1MzEoMHgzMmIpXSgpJiZfMHgxOGNlMGZbJ2hhcyddKF8weDVmYjk1YVtfMHgyNGU1MzEoMHg2MzApXSgpKSl7bGV0IF8weDI4YzI0Zj1bXTtfMHg1ZDliZTNbXzB4NWZiOTVhW18weDI0ZTUzMSgweDYzMCldKCldP18weDI4YzI0Zj1fMHg1ZDliZTNbXzB4NWZiOTVhWydzdGFydExpbmUnXSgpXTpfMHg1ZDliZTNbXzB4NWZiOTVhW18weDI0ZTUzMSgweDYzMCldKCldPV8weDI4YzI0Zjtjb25zdCBfMHgxMTAyYjE9XzB4NWZiOTVhW18weDI0ZTUzMSgweDYwZildKCl8fFtdLF8weDRhNjc3Nj0oXzB4NWZiOTVhWydjb25zb2xlTG9nJ10oKXx8W10pW18weDI0ZTUzMSgweDcyNSldKF8weDFhNTllMD0+IV8weDFhNTllMFtfMHgyNGU1MzEoMHg0ZWYpXSk7aWYoXzB4MTEwMmIxW18weDI0ZTUzMSgweDE5NSldfHxfMHg0YTY3NzZbJ2xlbmd0aCddKXtjb25zdCBfMHgyZDc3MWE9bmV3IE1hcCgpLF8weDE4ZmNjMT1uZXcgTWFwKCk7Zm9yKGNvbnN0IF8weDM5Zjg0ZSBvZiBfMHg1ZmI5NWFbXzB4MjRlNTMxKDB4MmFjKV0oKSl7XzB4MmQ3NzFhW18weDI0ZTUzMSgweDI5YyldKF8weDM5Zjg0ZVtfMHgyNGU1MzEoMHg0NjIpXSgpLF8weDM5Zjg0ZSk7Y29uc3QgXzB4MWY4NzY2PV8weDM5Zjg0ZVtfMHgyNGU1MzEoMHg2MGYpXSgpO2lmKF8weDFmODc2Nil7Zm9yKGNvbnN0IF8weDM5MzA2ZSBvZiBfMHgxZjg3NjYpXzB4MThmY2MxW18weDI0ZTUzMSgweDI5YyldKF8weDM5MzA2ZSxfMHgzOWY4NGUpO319Y29uc3QgXzB4MWRjOTU3PXsnZXJyb3JzJzpbXSwnbG9ncyc6W119O2Zvcihjb25zdCBfMHgzZTZjZGQgb2YgXzB4MTEwMmIxKXtjb25zdCBfMHgzMjMwZGI9XzB4MThmY2MxW18weDI0ZTUzMSgweDNlYyldKF8weDNlNmNkZCksXzB4NjYzZDA0PXsnaW5hY3RpdmUnOl8weDMyMzBkYiYmXzB4MzEwYTM3PyF0aGlzW18weDI0ZTUzMSgweDcyNSldWyd0ZXN0J11bXzB4MjRlNTMxKDB4MzdmKV0oXzB4MzIzMGRiW18weDI0ZTUzMSgweDQ2MildKCkpOiEweDEsJ21lc3NhZ2UnOl8weDNlNmNkZFtfMHgyNGU1MzEoMHhhYildKCksJ2Zvcm1hdHRlZE1lc3NhZ2UnOl8weDNlNmNkZFsnZm9ybWF0dGVkTWVzc2FnZSddKCksJ3Rlc3QnOl8weDMyMzBkYj97J2ZpbGUnOl8weDMyMzBkYltfMHgyNGU1MzEoMHg2MzYpXSgpLCdsb2MnOnRoaXNbJ19yYW5nZVRvTG9jJ10oXzB4MzIzMGRiWydzdGFydFJhbmdlJ10oKSksJ3BhdGgnOl8weDMyMzBkYltfMHgyNGU1MzEoMHg0OTQpXSgpfTp2b2lkIDB4MCwnYWN0dWFsJzpfMHgzZTZjZGRbXzB4MjRlNTMxKDB4NTYwKV0oKSwnZXhwZWN0ZWQnOl8weDNlNmNkZFtfMHgyNGU1MzEoMHg2ZmEpXSgpLCdzbmFwc2hvdCc6XzB4M2U2Y2RkW18weDI0ZTUzMSgweDQ2OCldKCksJ3N0YWNrJzpfMHgzZTZjZGRbJ3N0YWNrJ10oKVsnbWFwJ10oXzB4M2RmMzE3PT4oeydmaWxlJzpfMHgzZGYzMTdbXzB4MjRlNTMxKDB4NjM2KV0oKSwnbG9jJzp0aGlzW18weDI0ZTUzMSgweDcwMCldKF8weDNkZjMxN1tfMHgyNGU1MzEoMHg3M2IpXSgpKXx8XzB4M2RmMzE3W18weDI0ZTUzMSgweDJhNCldKCksJ2NvbnRleHQnOl8weDNkZjMxN1tfMHgyNGU1MzEoMHg0ZDgpXSgpLCdjb2RlJzpfMHgzYWI5MmQoXzB4M2RmMzE3W18weDI0ZTUzMSgweDYzNildKCksXzB4M2RmMzE3W18weDI0ZTUzMSgweDJhNCldKCkpfSkpfTtfMHgxZGM5NTdbXzB4MjRlNTMxKDB4NjBmKV1bJ3B1c2gnXShfMHg2NjNkMDQpO31mb3IoY29uc3QgXzB4NDUzMzgyIG9mIF8weDRhNjc3Nil7Y29uc3QgXzB4NDFjYzc3PV8weDQ1MzM4MltfMHgyNGU1MzEoMHgzY2UpXT9fMHgyZDc3MWFbXzB4MjRlNTMxKDB4M2VjKV0oXzB4NDUzMzgyW18weDI0ZTUzMSgweDNjZSldKTp2b2lkIDB4MDtsZXQgXzB4M2MxMGQ1PSEweDE7aWYoXzB4NDFjYzc3KXtpZihfMHgxMzAwZGImJl8weDQ1MzM4MltfMHgyNGU1MzEoMHg3MWYpXSYmdGhpc1snZmlsdGVyJ11bJ3N1cHByZXNzaW9uJ11bJ3N1cHByZXNzZXMnXShfMHgzYzE2M2VbXzB4MjRlNTMxKDB4NDYyKV0oKSxfMHg0NTMzODJbXzB4MjRlNTMxKDB4NzFmKV0pKWNvbnRpbnVlO18weDMxMGEzNyYmIXRoaXNbXzB4MjRlNTMxKDB4NzI1KV1bXzB4MjRlNTMxKDB4NWZmKV1bXzB4MjRlNTMxKDB4MzdmKV0oXzB4NDFjYzc3W18weDI0ZTUzMSgweDQ2MildKCkpJiYoXzB4M2MxMGQ1PSEweDApO31fMHgyNDk3NTgmJl8weDQ1MzM4MltfMHgyNGU1MzEoMHg3MTApXSYmXzB4NDUzMzgyWyd0cmFjZUlkJ10hPT10aGlzW18weDI0ZTUzMSgweDI2OCldW18weDI0ZTUzMSgweDFkNildWyd0cyddJiYhKF8weDQ1MzM4MltfMHgyNGU1MzEoMHg3MTApXT09PScqJyYmXzB4NDUzMzgyW18weDI0ZTUzMSgweDU0MyldPT09dGhpc1tfMHgyNGU1MzEoMHgyNjgpXVsnZGVidWdnZXInXVtfMHgyNGU1MzEoMHgzYzMpXSkmJihfMHgzYzEwZDU9ITB4MCk7Y29uc3QgXzB4NDk1Mjg3PXsnaW5hY3RpdmUnOl8weDNjMTBkNSwnbWVzc2FnZSc6XzB4NDUzMzgyW18weDI0ZTUzMSgweGFiKV0sJ2Zvcm1hdCc6XzB4NDUzMzgyW18weDI0ZTUzMSgweDE2MildLCd0ZXN0JzpfMHg0MWNjNzc/eydmaWxlJzpfMHg0MWNjNzdbJ2ZpbGVQYXRoJ10oKSwnbG9jJzp0aGlzWydfcmFuZ2VUb0xvYyddKF8weDQxY2M3N1tfMHgyNGU1MzEoMHg2ZDkpXSgpKSwncGF0aCc6XzB4NDFjYzc3W18weDI0ZTUzMSgweDQ5NCldKCl9OnZvaWQgMHgwLCdzdGFjayc6W3snZmlsZSc6XzB4M2MxNjNlW18weDI0ZTUzMSgweDQ4ZildKCksJ2xvYyc6dGhpc1tfMHgyNGU1MzEoMHg3MDApXShfMHg1ZmI5NWEpLCdjb2RlJzpfMHgzYWI5MmQoXzB4M2MxNjNlWydwYXRoJ10oKSxfMHg1ZmI5NWFbXzB4MjRlNTMxKDB4NjMwKV0oKSl9XX07XzB4MWRjOTU3Wydsb2dzJ11bXzB4MjRlNTMxKDB4NDJkKV0oXzB4NDk1Mjg3KTt9KF8weDFkYzk1N1snZXJyb3JzJ11bXzB4MjRlNTMxKDB4MTk1KV18fF8weDFkYzk1N1tfMHgyNGU1MzEoMHgzZDcpXVsnbGVuZ3RoJ10pJiZfMHgyOGMyNGZbXzB4MjRlNTMxKDB4NDJkKV0oXzB4MWRjOTU3KTt9fX1fMHgyYjAxMmZbXzB4M2MxNjNlW18weDI0ZTUzMSgweDQ2MildKCldPV8weDVkOWJlMzt9Y29uc3QgXzB4NDVlZTM5PVtdO2xldCBfMHg0ZmQzMDM7Zm9yKGNvbnN0IF8weGM2ZTA4OSBvZiB0aGlzWydfaW5zcGVjdG9yJ11bXzB4MjRlNTMxKDB4MTc2KV1bXzB4MjRlNTMxKDB4NTE0KV0oKVsncmV2ZXJzZSddKCkpe2NvbnN0IF8weDI2ZTUyYT1fMHgyYjAxMmZbXzB4YzZlMDg5WydmaWxlJ11bXzB4MjRlNTMxKDB4NDYyKV0oKV07aWYoXzB4MjZlNTJhKXtjb25zdCBfMHgzOWQwYzI9XzB4YzZlMDg5W18weDI0ZTUzMSgweDFiYyldW18weDI0ZTUzMSgweDcwOCldKClbJ2ZpbmQnXShfMHg0ZTE5MTg9Pl8weDRlMTkxOFtfMHgyNGU1MzEoMHgzNDkpXVsnaW5zcGVjdGlvbiddJiZfMHg0ZTE5MThbXzB4MjRlNTMxKDB4MzQ5KV1bXzB4MjRlNTMxKDB4MThhKV1bJ2lkJ109PT1fMHhjNmUwODlbJ2lkJ10pO2lmKF8weDM5ZDBjMil7Y29uc3QgXzB4ODA4NTU4PV8weDI2ZTUyYVtfMHgzOWQwYzJbXzB4MjRlNTMxKDB4Njk5KV1dO2xldCBfMHhhOTI1YjE9W10sXzB4NGQ5YjY3PVtdO2lmKF8weDgwODU1OCYmXzB4ODA4NTU4W18weDI0ZTUzMSgweDE5NSldKXtjb25zdCBfMHg0NDM3NGU9KF8weGE4NDExOCxfMHg1Yjc5YzgpPT5fMHg1Yjc5YzhbXzB4MjRlNTMxKDB4MWE3KV0oKF8weDEzZDMwYSxfMHg1NmFlMDUpPT5fMHgxM2QzMGFbXzB4MjRlNTMxKDB4NDQ5KV0oXzB4YTg0MTE4KF8weDU2YWUwNSkpLFtdKTtfMHhhOTI1YjE9XzB4NDQzNzRlKF8weDUwNjVjZj0+XzB4NTA2NWNmW18weDI0ZTUzMSgweDYwZildLF8weDgwODU1OCksXzB4NGQ5YjY3PV8weDQ0Mzc0ZShfMHgxMGQ1MTk9Pl8weDEwZDUxOVtfMHgyNGU1MzEoMHgzZDcpXSxfMHg4MDg1NTgpO2xldCBfMHgyNzg0ZWQ7aWYoXzB4YzZlMDg5W18weDI0ZTUzMSgweDM3OSldfHxfMHg0ZDliNjdbXzB4MjRlNTMxKDB4MTk1KV0mJl8weDRkOWI2N1tfMHgyNGU1MzEoMHg3NWMpXShfMHgzMGViNWE9Pl8weDMwZWI1YVtfMHgyNGU1MzEoMHhhYildW18weDI0ZTUzMSgweDE5NSldKVtfMHgyNGU1MzEoMHgxYTcpXSgoXzB4NWU4ZGNmLF8weDMzMTNhYik9Pl8weDVlOGRjZitfMHgzMzEzYWIpPDB4ODAmJiFfMHhhOTI1YjFbXzB4MjRlNTMxKDB4MTk1KV0mJiFfMHgyMDY0YjAmJihfMHgyNzg0ZWQ9eydpbnNwZWN0aW9uJzpfMHhjNmUwODksJ2xpbmUnOl8weDM5ZDBjMltfMHgyNGU1MzEoMHg2OTkpXX0pLF8weGE5MjViMT1fMHhhOTI1YjFbXzB4MjRlNTMxKDB4NzI1KV0oXzB4MjgyYjZhPT4hXzB4MjgyYjZhW18weDI0ZTUzMSgweDE2NildKSxfMHg0ZDliNjc9XzB4NGQ5YjY3WydmaWx0ZXInXShfMHgzMmFmM2E9PiFfMHgzMmFmM2FbXzB4MjRlNTMxKDB4MTY2KV0pLF8weGE5MjViMVtfMHgyNGU1MzEoMHgxOTUpXXx8XzB4NGQ5YjY3W18weDI0ZTUzMSgweDE5NSldKXtsZXQgXzB4M2EwYTU5PSEweDE7XzB4YzZlMDg5W18weDI0ZTUzMSgweDM3OSldfHwoXzB4M2EwYTU5PSEweDAsXzB4YzZlMDg5W18weDI0ZTUzMSgweDM3OSldPSEweDApLF8weDM4NzdiMFtfMHgyNGU1MzEoMHg0MmQpXSh7J2lkJzpfMHhjNmUwODlbJ2lkJ10sJ2Vycm9ycyc6XzB4YTkyNWIxLCdsb2dzJzpfMHg0ZDliNjcsJ29idHJ1c2l2ZSc6XzB4M2EwYTU5LCdzaG9ydCc6XzB4Mjc4NGVkfSk7fWVsc2UgXzB4Yjk1NGQwPSEweDE7fWVsc2UgXzB4Yjk1NGQwPSEweDE7XzB4NGZkMzAzIT09bnVsbCYmKF8weDRmZDMwMz09PXZvaWQgMHgwP18weGM2ZTA4OVtfMHgyNGU1MzEoMHg0NTQpXSE9PV8weDI0ZTUzMSgweDQ4NSk/XzB4NGZkMzAzPW51bGw6IV8weGE5MjViMVtfMHgyNGU1MzEoMHgxOTUpXSYmIV8weDRkOWI2N1tfMHgyNGU1MzEoMHgxOTUpXT9fMHg0ZmQzMDM9XzB4YzZlMDg5Ol8weDRmZDMwMz1udWxsOl8weDRmZDMwMz1udWxsKTt9ZWxzZSBfMHg0NWVlMzlbJ3B1c2gnXSh7J2luc3BlY3Rpb24nOl8weGM2ZTA4OX0pO31lbHNlIF8weDQ1ZWUzOVsncHVzaCddKHsnaW5zcGVjdGlvbic6XzB4YzZlMDg5fSk7fWlmKF8weDRmZDMwMyYmIU9iamVjdFsna2V5cyddKHRoaXNbXzB4MjRlNTMxKDB4MjcxKV0oKSlbJ2xlbmd0aCddJiYhdGhpc1tfMHgyNGU1MzEoMHgxZDQpXSgpJiYoXzB4NDVlZTM5W18weDI0ZTUzMSgweDQyZCldKHsnaW5zcGVjdGlvbic6XzB4NGZkMzAzfSksXzB4Yjk1NGQwPSEweDApLF8weDM4NzdiMFsnbGVuZ3RoJ10mJiFfMHgzODc3YjBbXzB4MjRlNTMxKDB4NzdlKV0oXzB4MzVhNjE4PT4hXzB4MzVhNjE4W18weDI0ZTUzMSgweDYzOSldKSl7Zm9yKGNvbnN0IF8weDIwMmZiNCBvZiBfMHgzODc3YjApXzB4NDVlZTM5W18weDI0ZTUzMSgweDQyZCldKF8weDIwMmZiNFtfMHgyNGU1MzEoMHg2MzkpXSk7XzB4Mzg3N2IwPVtdO31fMHgxYjQ3NDQ9XzB4Mzg3N2IwW18weDI0ZTUzMSgweDE5NSldPT09MHgwPyEweDE6XzB4Mzg3N2IwW18weDI0ZTUzMSgweDc1YyldKF8weDQyNjVkMz0+XzB4NDI2NWQzW18weDI0ZTUzMSgweDZhNildKVsncmVkdWNlJ10oKF8weDNiZTNhMixfMHhlNTE0M2IpPT5fMHgzYmUzYTJ8fF8weGU1MTQzYiksXzB4Mzg3N2IwPV8weDM4NzdiMFtfMHgyNGU1MzEoMHg3NWMpXShfMHgzNzNmMjQ9Pih7J2lkJzpfMHgzNzNmMjRbJ2lkJ10sJ2Vycm9ycyc6XzB4MzczZjI0WydlcnJvcnMnXSwnbG9ncyc6XzB4MzczZjI0W18weDI0ZTUzMSgweDNkNyldfSkpO2Zvcihjb25zdCBfMHg4NWJmYWUgb2YgXzB4NDVlZTM5KXtjb25zdCBfMHgzMTI4OTY9XzB4ODViZmFlW18weDI0ZTUzMSgweDE4YSldW18weDI0ZTUzMSgweDFiYyldO18weDg1YmZhZVtfMHgyNGU1MzEoMHgyYTQpXSE9PXZvaWQgMHgwJiZfMHgzMTI4OTZbJ3VudHJhY2tMaW5lJ10oXzB4ODY4ZjM5PT4oZGVsZXRlIF8weDg2OGYzOVtfMHgyNGU1MzEoMHgxOGEpXSxPYmplY3RbXzB4MjRlNTMxKDB4MjQzKV0oXzB4ODY4ZjM5KVtfMHgyNGU1MzEoMHgxOTUpXT09PTB4MCksXzB4ODViZmFlW18weDI0ZTUzMSgweDJhNCldKTtjb25zdCBfMHgzY2Q0ODA9dGhpc1tfMHgyNGU1MzEoMHgzMWQpXVtfMHgyNGU1MzEoMHgxNzYpXVtfMHgyNGU1MzEoMHg3YTcpXShfMHg4NWJmYWVbXzB4MjRlNTMxKDB4MThhKV0pO18weDNjZDQ4MD4tMHgxJiZ0aGlzW18weDI0ZTUzMSgweDMxZCldW18weDI0ZTUzMSgweDE3NildW18weDI0ZTUzMSgweDZkMCldKF8weDNjZDQ4MCwweDEpLF8weDMxMjg5NltfMHgyNGU1MzEoMHg3MDgpXSgpWydzb21lJ10oXzB4MWE2ZGMyPT5fMHgxYTZkYzJbJ3RyYWl0cyddW18weDI0ZTUzMSgweDE4YSldKXx8dGhpc1tfMHgyNGU1MzEoMHgzMWQpXVtfMHgyNGU1MzEoMHg2MGQpXVsnZGVsZXRlJ10oXzB4MzEyODk2KTt9fXRoaXNbXzB4MjRlNTMxKDB4NWVkKV0oJ2luc3BlY3Rpb25zJyx7J2luc3BlY3Rpb25zJzpfMHgzODc3YjAsJ29idHJ1c2l2ZSc6XzB4MWI0NzQ0LCdlbXB0eSc6XzB4Mzg3N2IwW18weDI0ZTUzMSgweDE5NSldPyEweDE6XzB4Yjk1NGQwfSk7fX1bXzB4ZTQ4ZWRlKDB4NTBmKV0oXzB4MWFhMmY1LF8weGI3Y2UwOCl7Y29uc3QgXzB4ZTk2OTQwPV8weGU0OGVkZSxfMHg0NDUxNjQ9dGhpcztpZihfMHgxYWEyZjVbXzB4ZTk2OTQwKDB4NWFmKV0oKSl7Y29uc3QgXzB4NDZlYzJjPV8weGI3Y2UwOD8weDA6XzB4MWFhMmY1W18weGU5Njk0MCgweDY1OCldKCksXzB4NTU5MThjPV8weGI3Y2UwOD8weDA6XzB4MWFhMmY1W18weGU5Njk0MCgweDc5MildKCk7bGV0IF8weDRjNjE5ZD0weDAsXzB4MWQyY2MxPTB4MDtpZihfMHgxYWEyZjVbXzB4ZTk2OTQwKDB4NTI5KV0/KF8weDRjNjE5ZD1fMHg0NmVjMmMtXzB4MWFhMmY1WydfdmFsdWVzSW5jbHVkZWRJbkNvdmVyYWdlQWdncmVnYXRlJ11bXzB4ZTk2OTQwKDB4NjU4KV0sXzB4MWQyY2MxPV8weDU1OTE4Yy1fMHgxYWEyZjVbJ192YWx1ZXNJbmNsdWRlZEluQ292ZXJhZ2VBZ2dyZWdhdGUnXVsnbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJ10pOihfMHg0YzYxOWQ9XzB4NDZlYzJjLF8weDFkMmNjMT1fMHg1NTkxOGMpLF8weDFhYTJmNVtfMHhlOTY5NDAoMHg1MjkpXT17J251bWJlck9mQWxsUmFuZ2VzJzpfMHg0NmVjMmMsJ251bWJlck9mQ292ZXJlZFJhbmdlcyc6XzB4NTU5MThjfSxfMHg0NDUxNjRbJ19udW1iZXJPZkFsbFJhbmdlcyddKz1fMHg0YzYxOWQsXzB4NDQ1MTY0W18weGU5Njk0MCgweDQ0NyldKz1fMHgxZDJjYzEsXzB4NGM2MTlkIT09MHgwfHxfMHgxZDJjYzEhPT0weDApcmV0dXJuITB4MDt9fVtfMHhlNDhlZGUoMHg2NDIpXSgpe2NvbnN0IF8weDFlNTE2ZD1fMHhlNDhlZGU7dGhpc1tfMHgxZTUxNmQoMHg2YTApXT10aGlzW18weDFlNTE2ZCgweDRkMildKHRoaXNbJ19udW1iZXJPZkNvdmVyZWRSYW5nZXMnXSk7fVtfMHhlNDhlZGUoMHgzOTQpXShfMHgyZWU4YWYsXzB4NDgwMzFlKXtjb25zdCBfMHg0NDMwNDk9XzB4ZTQ4ZWRlO2xldCBfMHgzYjZiYTA9W10sXzB4MWEzNjA1PV8weDJlZThhZltfMHg0NDMwNDkoMHgxYmMpXSxfMHgxM2FjMDE9XzB4MmVlOGFmW18weDQ0MzA0OSgweDNiNCldO19bXzB4NDQzMDQ5KDB4M2U2KV0oXzB4MTNhYzAxW18weDQ0MzA0OSgweDY3ZildLF8weDUwY2E2Zj0+e2NvbnN0IF8weDU3OWU2YT1fMHg0NDMwNDk7bGV0IF8weDVhMDQwMj1uZXcgXzB4NWU0MjkxKF8weDUwY2E2Zik7XzB4NWEwNDAyWydpbml0J10oXzB4MWEzNjA1LF8weDQ4MDMxZSksXzB4NWEwNDAyWydzZXRDb25zb2xlTG9nJ10oXzB4MWEzNjA1W18weDU3OWU2YSgweDMxNCldKF8weDVhMDQwMiksdGhpc1tfMHg1NzllNmEoMHgyNjgpXVtfMHg1NzllNmEoMHgxZDYpXVsndHMnXSksXzB4M2I2YmEwW18weDU3OWU2YSgweDQyZCldKF8weDVhMDQwMik7fSksXzB4MWEzNjA1W18weDQ0MzA0OSgweDYyNildKF8weDNiNmJhMCxfMHgxM2FjMDFbJ2NoYW5nZWQnXSxfMHgyZWU4YWZbJ2NvdmVyYWdlJ11bJ3NpbmdsZVRlc3RDaGFuZ2VkJ10pLF8weDFhMzYwNVtfMHg0NDMwNDkoMHgxZWUpXSgpLF8weDJlZThhZltfMHg0NDMwNDkoMHgzYjQpXVtfMHg0NDMwNDkoMHgzYzIpXSYmXzB4MWEzNjA1W18weDQ0MzA0OSgweDc2MSldKCk7fVtfMHhlNDhlZGUoMHhiZildKF8weDI5OTExYSl7Y29uc3QgXzB4NWU1NDY5PV8weGU0OGVkZTtsZXQgXzB4NGFjYWE3PXRoaXM7Y29uc3QgXzB4YmFjMGU4PXRoaXNbXzB4NWU1NDY5KDB4MjY4KV1bJ3Rlc3QnXSxfMHg1ZDM3MDU9dGhpc1snX2ZpbHRlciddW18weDVlNTQ2OSgweDc4ZildLF8weDFhNTlhZD10aGlzWydfZmlsdGVyJ11bXzB4NWU1NDY5KDB4MWQ2KV0sXzB4MzhlMWU4PV8weGJhYzBlOFtfMHg1ZTU0NjkoMHgxOTkpXSxfMHg1ODBlMmE9XzB4NWQzNzA1W18weDVlNTQ2OSgweDE5OSldLF8weDM3NTVmOT1fMHgxYTU5YWRbJ2FjdGl2ZSddO3JldHVybiBfKF8weDI5OTExYSlbXzB4NWU1NDY5KDB4NzI1KV0oXzB4NTI3MjllPT4hKF8weDM4ZTFlOCYmIV8weGJhYzBlOFtfMHg1ZTU0NjkoMHgzN2YpXShfMHg1MjcyOWVbJ2tleSddKCkpKSlbXzB4NWU1NDY5KDB4NzVjKV0oXzB4M2JkZGM5PT57Y29uc3QgXzB4NWJjZmUzPV8weDVlNTQ2OTtsZXQgXzB4NGZhNDRlPV8weDNiZGRjOVsnY29uc29sZU1lc3NhZ2VzJ10oKTtyZXR1cm4gXzB4NGZhNDRlJiYoXzB4NGZhNDRlPV8weDRmYTQ0ZVsnZmlsdGVyJ10oXzB4NDc0ZDZlPT5fMHg1ODBlMmEmJl8weDQ3NGQ2ZVtfMHg1YmNmZTMoMHg3MWYpXSgpJiYhXzB4NDc0ZDZlW18weDViY2ZlMygweDRmNildKCkmJl8weDVkMzcwNVtfMHg1YmNmZTMoMHg3MzcpXShfMHg0NzRkNmVbXzB4NWJjZmUzKDB4NWNkKV0oKSxfMHg0NzRkNmVbXzB4NWJjZmUzKDB4NzFmKV0oKSk/ITB4MTpfMHgzNzU1Zjk/XzB4NDc0ZDZlW18weDViY2ZlMygweDcxMCldKCk9PT1fMHgxYTU5YWRbJ3RzJ118fF8weDQ3NGQ2ZVtfMHg1YmNmZTMoMHg3MTApXSgpPT09JyonJiZfMHg0NzRkNmVbXzB4NWJjZmUzKDB4NTQzKV0oKT09PXRoaXNbXzB4NWJjZmUzKDB4NzI1KV1bXzB4NWJjZmUzKDB4MWQ2KV1bXzB4NWJjZmUzKDB4M2MzKV06IV8weDQ3NGQ2ZVtfMHg1YmNmZTMoMHg3MTApXSgpfHxfMHg0NzRkNmVbXzB4NWJjZmUzKDB4NzEwKV0oKT09PScqJykpLHsnZmFpbGluZyc6XzB4M2JkZGM5W18weDViY2ZlMygweDYyYyldKCksJ2xvYyc6XzB4NGFjYWE3WydfcmFuZ2VUb0xvYyddKF8weDNiZGRjOVsnc3RhcnRSYW5nZSddKCkpLCdkZWNsYXJhdGlvbkxvYyc6KF8weDNiZGRjOVtfMHg1YmNmZTMoMHg0YjMpXSgpfHwweDEpKyc6JysoXzB4M2JkZGM5W18weDViY2ZlMygweDYxNildKCl8fDB4MCksJ2ZpbGUnOl8weDNiZGRjOVsnZmlsZVBhdGgnXSgpLCd0aW1lJzpfMHgzYmRkYzlbXzB4NWJjZmUzKDB4NGVhKV0oKSwnZXJyb3JzJzpfMHg0YWNhYTdbXzB4NWJjZmUzKDB4MzkxKV0oXzB4M2JkZGM5W18weDViY2ZlMygweDYwZildKCkpLCdwYXRoJzpfMHgzYmRkYzlbXzB4NWJjZmUzKDB4NDk0KV0oKSwnbWVzc2FnZXMnOl8weDRhY2FhN1snX21hcE1lc3NhZ2VzJ10oXzB4NGZhNDRlKX07fSk7fVtfMHhlNDhlZGUoMHgzYTMpXShfMHgyYmMwZWYsXzB4MjU5OTk1LF8weDE3MTk4Myl7Y29uc3QgXzB4MTVkNDQ0PV8weGU0OGVkZTtsZXQgXzB4NDM4N2EzPXRoaXM7Y29uc3QgXzB4MzViNDY5PV9bXzB4MTVkNDQ0KDB4NzQyKV0oXzB4MmJjMGVmKVtfMHgxNWQ0NDQoMHg3MjUpXShfMHgxNzE5ODN8fCgoKT0+ITB4MCkpW18weDE1ZDQ0NCgweDc1YyldKF8weDEzNDA3MT0+XzB4NDM4N2EzWydfbWFwTWVzc2FnZSddKF8weDEzNDA3MSxfMHgyNTk5OTUpKVtfMHgxNWQ0NDQoMHgzYzYpXSgpO3JldHVybiBwcm9jZXNzWydlbnYnXVtfMHgxNWQ0NDQoMHgyMmIpXSYmdGhpc1tfMHgxNWQ0NDQoMHg0YmEpXVsnX29yaWdpbmFsUXVva2thRmlsZU5hbWUnXSYmXzB4MzViNDY5W18weDE1ZDQ0NCgweDNlNCldKF8weDNlMGNhZj0+e2NvbnN0IF8weDE0ZjI5Yj1fMHgxNWQ0NDQ7XzB4M2UwY2FmWydmaWxlJ109PT10aGlzW18weDE0ZjI5YigweDRiYSldW18weDE0ZjI5YigweGVmKV0mJihfMHgzZTBjYWZbXzB4MTRmMjliKDB4MWJjKV09dGhpc1tfMHgxNGYyOWIoMHg0YmEpXVtfMHgxNGYyOWIoMHgyYTUpXSk7fSksXzB4MzViNDY5O31bXzB4ZTQ4ZWRlKDB4MjNjKV0oXzB4MThjYmRhLF8weDFkNjM0YSl7Y29uc3QgXzB4M2UxYTVlPV8weGU0OGVkZTtyZXR1cm57J3R5cGUnOl8weDE4Y2JkYVsndHlwZSddKCksJ3RleHQnOl8weDFkNjM0YT92b2lkIDB4MDpfMHgxOGNiZGFbXzB4M2UxYTVlKDB4NjA0KV0oKSwnZmlsZSc6XzB4MThjYmRhW18weDNlMWE1ZSgweDFiYyldKCkmJl8weDE4Y2JkYVtfMHgzZTFhNWUoMHgxYmMpXSgpWydwYXRoJ10oKSwnbG9jJzp0aGlzWydfcmFuZ2VUb0xvYyddKF8weDE4Y2JkYVsncmFuZ2UnXSgpKXx8XzB4MThjYmRhW18weDNlMWE1ZSgweDJhNCldKCksJ2NvbnRleHQnOl8weDE4Y2JkYVtfMHgzZTFhNWUoMHg0ZDgpXSgpLCd2YWx1ZUJhZyc6XzB4MWQ2MzRhP18weDE4Y2JkYVtfMHgzZTFhNWUoMHgyNzYpXSgpOl8weDE4Y2JkYVtfMHgzZTFhNWUoMHgxZWQpXSgpLCdleHBlY3RlZCc6XzB4MThjYmRhW18weDNlMWE1ZSgweDZmYSldKCksJ2FjdHVhbCc6XzB4MThjYmRhW18weDNlMWE1ZSgweDU2MCldKCksJ2Zvcm1hdCc6XzB4MThjYmRhW18weDNlMWE1ZSgweDE2MildKCl9O31bXzB4ZTQ4ZWRlKDB4MzkxKV0oXzB4NTdlZmI0LF8weDM3ODI4NT17fSl7Y29uc3QgXzB4NDZiNGU5PV8weGU0OGVkZSxfMHg1Y2U0MWI9X1snbWFwJ10oXzB4NTdlZmI0LF8weDNjMzMxNz0+dGhpc1tfMHg0NmI0ZTkoMHg2YzEpXShfMHgzYzMzMTcsXzB4Mzc4Mjg1KSk7cmV0dXJuIHByb2Nlc3NbJ2VudiddWydxdW9ra2EnXSYmdGhpc1tfMHg0NmI0ZTkoMHg0YmEpXVtfMHg0NmI0ZTkoMHgyYTUpXSYmXzB4NWNlNDFiWydmb3JFYWNoJ10oXzB4MjA5N2UwPT57Y29uc3QgXzB4MmZjOWMzPV8weDQ2YjRlOTtfMHgyMDk3ZTBbJ3N0YWNrJ11bXzB4MmZjOWMzKDB4M2U0KV0oXzB4MTk1OWJjPT57Y29uc3QgXzB4MzMzNGIyPV8weDJmYzljMztfMHgxOTU5YmNbJ2ZpbGUnXT09PXRoaXNbXzB4MzMzNGIyKDB4NGJhKV1bJ19xdW9ra2FGaWxlTmFtZSddJiYoXzB4MTk1OWJjW18weDMzMzRiMigweDFiYyldPXRoaXNbJ19wcm9qZWN0J11bXzB4MzMzNGIyKDB4MmE1KV0pO30pO30pLF8weDVjZTQxYjt9W18weGU0OGVkZSgweDZjMSldKF8weDdiYWRkOSxfMHgxMjFlNjkpe2NvbnN0IF8weDNhODE5OD1fMHhlNDhlZGU7bGV0IF8weDU5Zjg1ZTtjb25zdCBfMHgyZTU5NDM9X1tfMHgzYTgxOTgoMHg3NWMpXShfMHg3YmFkZDlbXzB4M2E4MTk4KDB4NDM3KV0oKSxfMHgxNmFhYzY9PihfMHg1OWY4NWV8fChfMHg1OWY4NWU9XzB4MTZhYWM2KSx0aGlzW18weDNhODE5OCgweDUwZCldKF8weDE2YWFjNixfMHgxMjFlNjkpKSk7bGV0IF8weDllMzJlO2lmKF8weDU5Zjg1ZSl7Y29uc3QgXzB4M2FiZGJlPXRoaXNbJ2ZpbGVCeVBhdGgnXShfMHg1OWY4NWVbXzB4M2E4MTk4KDB4NjM2KV0oKSk7aWYoXzB4M2FiZGJlKXtjb25zdCBfMHhjMWM2OD1fMHg1OWY4NWVbJ3JhbmdlJ10oKSxfMHgxNTIxMmM9XzB4M2FiZGJlW18weDNhODE5OCgweDRkMSldKF8weGMxYzY4JiZfMHhjMWM2OFtfMHgzYTgxOTgoMHg2MzApXSYmXzB4YzFjNjhbXzB4M2E4MTk4KDB4NjMwKV0oKXx8XzB4NTlmODVlW18weDNhODE5OCgweDJhNCldKCkpO18weDE1MjEyYyYmXzB4MTUyMTJjW18weDNhODE5OCgweDM0OSldW18weDNhODHigIs5OCgweDQ4NSldJiYoXzB4OWUzMmU9XzB4MTUyMTJjW18weDNhODE5OCgweDM0OSldW18weDNhODE5OCgweDQ4NSldWydpZCddKTt9fXJldHVybnsnaWQnOl8weDllMzJlLCdtZXNzYWdlJzpfMHg3YmFkZDlbXzB4M2E4MTk4KDB4YWIpXSgpLCdmb3JtYXR0ZWRNZXNzYWdlJzpfMHg3YmFkZDlbXzB4M2E4MTk4KDB4MjMxKV0oKSwnc3RhY2snOl8weDJlNTk0MywnZXhwZWN0ZWQnOl8weDdiYWRkOVtfMHgzYTgxOTgoMHg2ZmEpXSgpLCdhY3R1YWwnOl8weDdiYWRkOVtfMHgzYTgxOTgoMHg1NjApXSgpLCdzbmFwc2hvdCc6XzB4N2JhZGQ5W18weDNhODE5OCgweDQ2OCldKCl9O31bXzB4ZTQ4ZWRlKDB4NTBkKV0oXzB4MjI5NTllLF8weDUxYjM3NSl7Y29uc3QgXzB4NDMyNmExPV8weGU0OGVkZTtyZXR1cm57J2ZpbGUnOl8weDIyOTU5ZVsnZmlsZVBhdGgnXSgpLCdsb2MnOnRoaXNbXzB4NDMyNmExKDB4NzAwKV0oXzB4MjI5NTllW18weDQzMjZhMSgweDczYildKCkpfHxfMHgyMjk1OWVbJ2xpbmUnXSgpLCdjb250ZXh0JzpfMHgyMjk1OWVbXzB4NDMyNmExKDB4NGQ4KV0oKSwnY29udGV4dENvZGVMaW5lJzpfMHg1MWIzNzVbJ2luY2x1ZGVTdGFja0NvbnRleHRDb2RlJ10mJl8weDI1MDFiMFtfMHg0MzI2YTEoMHg3NmEpXShfMHgyNTAxYjBbXzB4NDMyNmExKDB4MzM2KV0odGhpc1tfMHg0MzI2YTEoMHg0YmEpXVtfMHg0MzI2YTEoMHgxY2IpXShfMHgyMjk1OWVbJ2ZpbGVQYXRoJ10oKSl8fCcnKSlbXzB4MjI5NTllW18weDQzMjZhMSgweDJhNCldKCktMHgxXX07fVtfMHhlNDhlZGUoMHg3MDApXShfMHg1Y2Y4OTgpe2NvbnN0IF8weDQ2YzU0NT1fMHhlNDhlZGU7cmV0dXJuIF8weDVjZjg5OCYmXzB4NWNmODk4WydzdGFydExpbmUnXSYmXzB4NWNmODk4W18weDQ2YzU0NSgweDYzMCldKCkrJzonK18weDVjZjg5OFtfMHg0NmM1NDUoMHg1NjUpXSgpfHx2b2lkIDB4MDt9W18weGU0OGVkZSgweDVlZCldKF8weDM5MmFmMyxfMHg1OGM2ODIpe2NvbnN0IF8weDU4NmRjMz1fMHhlNDhlZGU7dGhpc1snZW1pdCddKF8weDU4NmRjMygweGFiKSxfW18weDU4NmRjMygweDY2MCldKHsndHlwZSc6XzB4MzkyYWYzfSxfMHg1OGM2ODIpKTt9fV8weDJlYjBlY1tfMHhlNDhlZGUoMHgzNjYpXT1fMHgxMDliNDE7fSx7Jy4uLy4uL3V0aWxzJzoweDIxLCcuLi9zaGFyZWQvdXRpbHMnOjB4MWEsJy4vYnJvd3Nlckdsb2JhbHMnOjB4NiwnLi9jb25zb2xlTWVzc2FnZSc6MHg3LCcuL2NvdmVyYWJsZVJhbmdlJzoweDgsJy4vZGVidWdnZXJGaWx0ZXInOjB4OSwnLi9kb2N1bWVudExpbmUnOjB4YiwnLi9lcnJvckVudHJ5JzoweGMsJy4vZXhlY3V0ZWRUZXN0JzoweGQsJy4vZmlsdGVyJzoweGYsJy4vc3VwcHJlc3Npb25GaWx0ZXInOjB4MTUsJy4vdGVzdEZpbHRlcic6MHgxNiwnLi90cmFja2VkU291cmNlRmlsZSc6MHgxNywnaHR0cHMnOnZvaWQgMHgwLCdscnUtY2FjaGUnOnZvaWQgMHgwLCdvcGVuJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDB9XSwweDEzOltmdW5jdGlvbihfMHg0ZDc1YzIsXzB4Mjg3ZmM0LF8weDkzNTQ2NCl7J3VzZSBzdHJpY3QnO2NvbnN0IF8weDNlMThiZj1fMHhhZTI2O3ZhciBfMHgxNTc5NjY9XzB4NGQ3NWMyKCdkZ3JhbScpLF8weDJjNTk4Yz1fMHg0ZDc1YzIoJ29zJyksXzB4MjI3NmI3PV8weDRkNzVjMihfMHgzZTE4YmYoMHg2NzMpKSxfMHgyYWFlMjQ9XzB4MjI3NmI3WydyYW5kb21JZCddKCksXzB4OWJmZDE5PV8weDkzNTQ2NFtfMHgzZTE4YmYoMHgzMTcpXT17J3R0bCc6MHg4MCwnYWRkcmVzcyc6XzB4M2UxOGJmKDB4NGFlKSwncG9ydCc6MHhkYzRlfTtjbGFzcyBfMHg3M2FkYTN7Y29uc3RydWN0b3IoKXtjb25zdCBfMHgzZTNmODI9XzB4M2UxOGJmO3RyeXt2YXIgXzB4MzVjM2EzPXRoaXM7dGhpc1snX25ldHdvcmtBZGRyZXNzJ109MHgwLHRoaXNbJ19saXN0ZW5lcnMnXT17fSx0aGlzWydfc2VuZGVyJ109XzB4MTU3OTY2W18weDNlM2Y4MigweDVlOSldKF8weDNlM2Y4MigweGFmKSksdGhpc1snX3NlbmRlciddWydiaW5kJ10oZnVuY3Rpb24oKXtjb25zdCBfMHgzNWNmZTQ9XzB4M2UzZjgyO18weDM1YzNhM1snX3NlbmRlciddWydzZXRCcm9hZGNhc3QnXSghMHgwKSxfMHgzNWMzYTNbXzB4MzVjZmU0KDB4NDMxKV1bJ3NldE11bHRpY2FzdFRUTCddKF8weDliZmQxOVtfMHgzNWNmZTQoMHgyM2QpXSk7fSksdGhpc1tfMHgzZTNmODIoMHg0MzEpXVsnb24nXShfMHgzZTNmODIoMHg0ODUpLGZ1bmN0aW9uKCl7Y29uc3QgXzB4ZjMwNzA0PV8weDNlM2Y4Mjt0cnl7XzB4MzVjM2EzW18weGYzMDcwNCgweDQzMSldW18weGYzMDcwNCgweDZiNSldKCk7fWNhdGNoKF8weDQ1MmQ0Mil7fX0pLHRoaXNbXzB4M2UzZjgyKDB4NTRmKV09XzB4MTU3OTY2W18weDNlM2Y4MigweDVlOSldKCd1ZHA0JyksdGhpc1tfMHgzZTNmODIoMHg1NGYpXVsnb24nXShfMHgzZTNmODIoMHg1MjApLGZ1bmN0aW9uKCl7Y29uc3QgXzB4MzRhZjIyPV8weDNlM2Y4Mjt0cnl7XzB4MzVjM2EzW18weDM0YWYyMigweDU0ZildW18weDM0YWYyMigweDc3NSldKCEweDApLF8weDM1YzNhM1tfMHgzNGFmMjIoMHg1NGYpXVtfMHgzNGFmMjIoMHg1N2YpXShfMHg5YmZkMTlbXzB4MzRhZjIyKDB4MjNk4oCLKV0pLF8weDM1YzNhM1tfMHgzNGFmMjIoMHg1NGYpXVtfMHgzNGFmMjIoMHgzOGQpXShfMHg5YmZkMTlbXzB4MzRhZjIyKDB4N2E0KV0pO31jYXRjaChfMHgzNzU4MmQpe319KSx0aGlzW18weDNlM2Y4MigweDU0ZildWydvbiddKCdtZXNzYWdlJyxmdW5jdGlvbihfMHg0Y2Y2NDYpe2NvbnN0IF8weDNiNGI0ZD1fMHgzZTNmODI7dHJ5e18weDRjZjY0Nj1KU09OWydwYXJzZSddKF8weDRjZjY0NltfMHgzYjRiNGQoMHgzZDYpXShfMHgzYjRiNGQoMHgxZGEpKSksXzB4NGNmNjQ2W18weDNiNGI0ZCgweGM3KV0mJl8weDRjZjY0NltfMHgzYjRiNGQoMHgxM2IpXSYmXzB4NGNmNjQ2Wydzb3VyY2VJZCddJiYhXzB4MzVjM2EzW18weDNiNGI0ZCgweDFjMSldKClbJ2ZpbmQnXShfMHgxOGY2NDc9Pl8weDE4ZjY0Nz09PV8weDRjZjY0Nlsnc291cmNlJ10pJiZfMHg0Y2Y2NDZbXzB4M2I0YjRkKDB4NjQxKV0hPT1fMHgyYWFlMjQmJl9bXzB4M2I0YjRkKDB4M2U2KV0oXzB4MzVjM2EzW18weDNiNGI0ZCgweDQ0MCldW18weDRjZjY0NltfMHgzYjRiNGQoMHhjNyldXSxfMHg0M2FkNGM9Pntjb25zdCBfMHg1NWI3NDM9XzB4M2I0YjRkO18weDQzYWQ0Y1tfMHg1NWI3NDMoMHg3YTYpXShudWxsLFtfMHg0Y2Y2NDZbXzB4NTViNzQzKDB4NDUxKV0sXzB4NGNmNjQ2W18weDU1Yjc0MygweDEzYildXSk7fSk7fWNhdGNoKF8weDFiMjJjMil7fX0pLHRoaXNbXzB4M2UzZjgyKDB4NTRmKV1bJ29uJ10oXzB4M2UzZjgyKDB4NDg1KSxmdW5jdGlvbigpe3RyeXtfMHgzNWMzYTNbJ19yZWNlaXZlciddWydjbG9zZSddKCk7fWNhdGNoKF8weDIwMjM2NCl7fX0pLHRoaXNbXzB4M2UzZjgyKDB4NTRmKV1bJ2JpbmQnXShfMHg5YmZkMTlbXzB4M2UzZjgyKDB4MTZmKV0pO31jYXRjaChfMHg3MDZjNzUpe319WydvbiddKF8weDVjYTJkMixfMHgyMTYyMjApe2NvbnN0IF8weDM1OTEwYj1fMHgzZTE4YmY7dGhpc1snX2xpc3RlbmVycyddJiYodGhpc1snX2xpc3RlbmVycyddW18weDVjYTJkMl18fCh0aGlzW18weDM1OTEwYigweDQ0MCldW18weDVjYTJkMl09W10pLHRoaXNbXzB4MzU5MTBiKDB4NDQwKV1bXzB4NWNhMmQyXVtfMHgzNTkxMGIoMHg0MmQpXShfMHgyMTYyMjApKTt9W18weDNlMThiZigweGMzKV0oXzB4MTU5NDIxLF8weDI2YjQzYSl7Y29uc3QgXzB4MTBiOWM2PV8weDNlMThiZjt0cnl7dmFyIF8weGUwNWE2Nj1CdWZmZXJbXzB4MTBiOWM2KDB4NzAxKV0oSlNPTltfMHgxMGI5YzYoMHg2NGUpXSh7J2V2ZW50JzpfMHgxNTk0MjEsJ2RhdGEnOl8weDI2YjQzYSwnc291cmNlJzp0aGlzW18weDEwYjljNigweDUxYyldKCksJ3NvdXJjZUlkJzpfMHgyYWFlMjR9KSk7dGhpc1snX3NlbmRlciddW18weDEwYjljNigweDVhMCldKF8weGUwNWE2NiwweDAsXzB4ZTA1YTY2W18weDEwYjljNigweDE5NSldLF8weDliZmQxOVsncG9ydCddLF8weDliZmQxOVsnYWRkcmVzcyddKTt9Y2F0Y2goXzB4MjgwM2E5KXt9fVtfMHgzZTE4YmYoMHg1MWMpXSgpe2NvbnN0IF8weDM3ZWViMz1fMHgzZTE4YmYsXzB4MzhlZWY1PXRoaXNbXzB4MzdlZWIzKDB4MWMxKV0oKTtyZXR1cm4gdGhpc1snX25ldHdvcmtBZGRyZXNzJ109PT1fMHgzOGVlZjVbXzB4MzdlZWIzKDB4MTk1KV0mJih0aGlzWydfbmV0d29ya0FkZHJlc3MnXT0weDApLF8weDM4ZWVmNVt0aGlzW18weDM3ZWViMygweDc1NyldKytdO31bXzB4M2UxOGJmKDB4MWMxKV0oKXtjb25zdCBfMHgxMzdiM2Q9XzB4M2UxOGJmO3JldHVybiBfMHg3M2FkYTNbJ19nZXROZXR3b3JrQWRkcmVzc2VzJ10oKVtfMHgxMzdiM2QoMHg3NWMpXShfMHgyNDVkZmM9Pl8weDJjNTk4Y1tfMHgxMzdiM2QoMHg1ZTYpXSgpKydceDIwKCcrXzB4MjQ1ZGZjKycpJyk7fVtfMHgzZTE4YmYoMHg0ZDYpXSgpe2NvbnN0IF8weDFhZGE4NT1fMHgzZTE4YmY7dHJ5e3RoaXNbXzB4MWFkYTg1KDB4NDMxKV1bXzB4MWFkYTg1KDB4NmI1KV0oKTt9Y2F0Y2goXzB4MWI2YmNiKXt9dHJ5e3RoaXNbXzB4MWFkYTg1KDB4NTRmKV1bJ2Nsb3NlJ10oKTt9Y2F0Y2goXzB4NDRjZWNkKXt9fXN0YXRpY1tfMHgzZTE4YmYoMHgzMzQpXSgpe2NvbnN0IF8weDJhZmU4YT1fMHgzZTE4YmYsXzB4OGY4OThkPV8weDJjNTk4Y1tfMHgyYWZlOGEoMHgyZjgpXSgpLF8weDIwNzA4YT1PYmplY3RbXzB4MmFmZThhKDB4MjQzKV0oXzB4OGY4OThkKVtfMHgyYWZlOGEoMHgxYTcpXSgoXzB4MTdjOTc5LF8weDVhMzdmZik9PlsuLi5fMHgxN2M5NzksLi4uXzB4OGY4OThkW18weDVhMzdmZl1bXzB4MmFmZThhKDB4NzVjKV0oXzB4MTg5NzJlPT4oeydhZGRyZXNzJzpfMHgxODk3MmVbJ2FkZHJlc3MnXSwnaW50ZXJuYWwnOl8weDE4OTcyZVtfMHgyYWZlOGEoMHg3YTgpXX0pKV0sW10pWydmaWx0ZXInXShfMHg2NDdhNGM9Pl8weDY0N2E0Y1snYWRkcmVzcyddIT09XzB4MmFmZThhKDB4NDUyKSYmXzB4NjQ3YTRjW18weDJhZmU4YSgweDdhNCldIT09Jzo6MScmJiFfMHg2NDdhNGNbXzB4MmFmZThhKDB4N2E4KV0pWydtYXAnXShfMHg0NjcyMTQ9Pl8weDQ2NzIxNFtfMHgyYWZlOGEoMHg3YTQpXSk7cmV0dXJuIF8weDIwNzA4YVtfMHgyYWZlOGEoMHgxOTUpXT09PTB4MCYmXzB4MjA3MDhhW18weDJhZmU4YSgweDQyZCldKCcwLjAuMC4wJyksXzB4MjA3MDhhO319XzB4Mjg3ZmM0WydleHBvcnRzJ109bmV3IF8weDczYWRhMygpO30seycuLy4uLy4uL3V0aWxzJzoweDIxLCdkZ3JhbSc6dm9pZCAweDAsJ29zJzp2b2lkIDB4MH1dLDB4MTQ6W2Z1bmN0aW9uKF8weDRmNDNmOSxfMHg0ZThkOTQsXzB4MjlmZjk3KXsndXNlIHN0cmljdCc7Y29uc3QgXzB4ZmJhYTRlPV8weGFlMjY7Y2xhc3MgXzB4OGIwNDZle2NvbnN0cnVjdG9yKCl7Y29uc3QgXzB4MTdkOWZkPV8weGFlMjY7aWYoYXJndW1lbnRzW18weDE3ZDlmZCgweDE5NSldPjB4MSl0aGlzW18weDE3ZDlmZCgweDQ4NildPWFyZ3VtZW50c1sweDBdLHRoaXNbXzB4MTdkOWZkKDB4NGRlKV09YXJndW1lbnRzWzB4MV0sdGhpc1tfMHgxN2Q5ZmQoMHhiMildPWFyZ3VtZW50c1sweDJdO2Vsc2V7aWYoYXJndW1lbnRzWydsZW5ndGgnXSl7bGV0IF8weDE3MGYzYT1hcmd1bWVudHNbMHgwXVsnc3BsaXQnXSgnXycpO3RoaXNbXzB4MTdkOWZkKDB4NDg2KV09cGFyc2VJbnQoXzB4MTcwZjNhWzB4MF0sMHhhKSx0aGlzW18weDE3ZDlmZCgweDRkZSldPXBhcnNlSW50KF8weDE3MGYzYVsweDFdLDB4YSk7fX19W18weGZiYWE0ZSgweDQ2MildKCl7Y29uc3QgXzB4NmFkNjhjPV8weGZiYWE0ZTtyZXR1cm4gdGhpc1tfMHg2YWQ2OGMoMHg0ODYpXSsnXycrdGhpc1tfMHg2YWQ2OGMoMHg0ZGUpXTt9WydmaWxlSWQnXSgpe2NvbnN0IF8weDQ5OTg0OT1fMHhmYmFhNGU7cmV0dXJuIHRoaXNbXzB4NDk5ODQ5KDB4NDg2KV07fVtfMHhmYmFhNGUoMHgyYTQpXSgpe2NvbnN0IF8weDViM2E4Mz1fMHhmYmFhNGU7cmV0dXJuIHRoaXNbXzB4NWIzYTgzKDB4NGRlKV07fVtfMHhmYmFhNGUoMHg2ZTQpXSgpe2NvbnN0IF8weDU4ZWIzND1fMHhmYmFhNGU7cmV0dXJuIHRoaXNbXzB4NThlYjM0KDB4MjY2KV0/dGhpc1tfMHg1OGViMzQoMHgyNjYpXVsnc3RhcnRDb2x1bW4nXSgpOnZvaWQgMHgwO31bXzB4ZmJhYTRlKDB4NGQ4KV0oKXtyZXR1cm4gdGhpc1snX2NvbnRleHQnXTt9WydzZXRGaWxlJ10oXzB4Nzc2NGY3KXtjb25zdCBfMHg0MmQ3MDc9XzB4ZmJhYTRlO3RoaXNbXzB4NDJkNzA3KDB4MzkyKV09XzB4Nzc2NGY3O31bXzB4ZmJhYTRlKDB4NjM2KV0oKXtjb25zdCBfMHgxNzNlNzc9XzB4ZmJhYTRlO3JldHVybiB0aGlzW18weDE3M2U3NygweDM5MildJiZ0aGlzWydfZmlsZSddW18weDE3M2U3NygweDQ4ZildKCl8fHRoaXNbXzB4MTczZTc3KDB4NDg2KV0mJn50aGlzW18weDE3M2U3NygweDQ4NildW18weDE3M2U3NygweDdhNyldKCcuJykmJnRoaXNbJ19maWxlSWQnXTt9W18weGZiYWE0ZSgweDNkYSldKF8weDE1MmJhMSl7dGhpc1snX3JhbmdlJ109XzB4MTUyYmExO31bXzB4ZmJhYTRlKDB4NzNiKV0oKXtjb25zdCBfMHhhMjU0YzY9XzB4ZmJhYTRlO3JldHVybiB0aGlzW18weGEyNTRjNigweDI2NildO31bJ3NoaWZ0TGluZSddKF8weDM2YzE4Yil7Y29uc3QgXzB4M2YxNGY2PV8weGZiYWE0ZTt0aGlzW18weDNmMTRmNigweDRkZSldKz1fMHgzNmMxOGIsZGVsZXRlIHRoaXNbXzB4M2YxNGY2KDB4MjY2KV07fX1fMHg0ZThkOTRbXzB4ZmJhYTRlKDB4MzY2KV09XzB4OGIwNDZlO30se31dLDB4MTU6W2Z1bmN0aW9uKF8weDE3MTI0NSxfMHgzZjYyOGIsXzB4NDlkMThjKXsndXNlIHN0cmljdCc7Y29uc3QgXzB4NDNmY2U2PV8weGFlMjY7T2JqZWN0W18weDQzZmNlNigweDQxZCldKF8weDQ5ZDE4YyxfMHg0M2ZjZTYoMHg2MmIpLHsndmFsdWUnOiEweDB9KSxfMHg0OWQxOGNbXzB4NDNmY2U2KDB4NWZkKV09dm9pZCAweDA7Y2xhc3MgXzB4MzI3NDc3e2NvbnN0cnVjdG9yKCl7Y29uc3QgXzB4YWU4Y2FiPV8weDQzZmNlNjt0aGlzW18weGFlOGNhYigweDMyZCldPTB4MCx0aGlzW18weGFlOGNhYigweDczMildPU9iamVjdFtfMHhhZThjYWIoMHg0NDgpXShudWxsKTt9Z2V0Wyd0cyddKCl7Y29uc3QgXzB4NTcxNzMxPV8weDQzZmNlNjtyZXR1cm4gdGhpc1tfMHg1NzE3MzEoMHgzMmQpXTt9W18weDQzZmNlNigweDM3ZildKF8weDE0MGU4MCxfMHg4YjkwMjgpe2NvbnN0IF8weDUzNjljZT1fMHg0M2ZjZTYsXzB4MTlmMWUxPXRoaXNbJ19maWxlcyddW18weDE0MGU4MF07cmV0dXJuIF8weDhiOTAyOD9fMHgxOWYxZTE/XzB4MTlmMWUxW18weDUzNjljZSgweDYxZSldWydoYXMnXShfMHg4YjkwMjgpOiEweDE6ISFfMHgxOWYxZTE7fVtfMHg0M2ZjZTYoMHg3MzcpXShfMHgzNTkyOGEsXzB4NTM4YzNkKXtjb25zdCBfMHgzZWE5OTE9XzB4NDNmY2U2LF8weDIwMzE1Mj10aGlzW18weDNlYTk5MSgweDczMildW18weDM1OTI4YV07cmV0dXJuIV8weDIwMzE1Mnx8IV8weDUzOGMzZD8hMHgxOihfMHgyMDMxNTJbXzB4M2VhOTkxKDB4NmMwKV18fF8weDIwMzE1Mlsnc3VwcHJlc3Npb25zJ11bJ2hhcyddKF8weDUzOGMzZCkpJiYhXzB4MjAzMTUyW18weDNlYTk5MSgweDZlOCldW18weDNlYTk5MSgweDM3ZildKF8weDUzOGMzZCk7fVtfMHg0M2ZjZTYoMHg0NDUpXShfMHgyZTBiNjQsXzB4NDA3NzMwKXtjb25zdCBfMHgyMTIxZTk9XzB4NDNmY2U2O2lmKCFfMHgyZTBiNjQpcmV0dXJuO2NvbnN0IF8weGUxMDhhNz10aGlzW18weDIxMjFlOSgweDJkMCldKF8weDJlMGI2NCk7aWYoIV8weDQwNzczMClfMHhlMTA4YTdbXzB4MjEyMWU5KDB4NmMwKV09ITB4MDtlbHNle2lmKF8weGUxMDhhN1snd2hvbGUnXSlyZXR1cm47XzB4ZTEwOGE3WydzdXBwcmVzc2lvbnMnXVtfMHgyMTIxZTkoMHgyOWMpXShfMHg0MDc3MzAsdm9pZCAweDApO310aGlzW18weDIxMjFlOSgweDMyZCldKys7fVtfMHg0M2ZjZTYoMHg3MTgpXShfMHhjYTExZmEsXzB4NWIyZmFiKXtjb25zdCBfMHg0OGY1YWU9XzB4NDNmY2U2O2lmKCFfMHhjYTExZmEpdGhpc1snX2ZpbGVzJ109T2JqZWN0W18weDQ4ZjVhZSgweDQ0OCldKG51bGwpO2Vsc2V7aWYoIV8weDViMmZhYilkZWxldGUgdGhpc1tfMHg0OGY1YWUoMHg3MzIpXVtfMHhjYTExZmFdO2Vsc2V7Y29uc3QgXzB4NTRkMzZmPXRoaXNbJ19maWxlcyddW18weGNhMTFmYV07aWYoIV8weDU0ZDM2ZilyZXR1cm47XzB4NTRkMzZmWydzdXBwcmVzc2lvbnMnXVtfMHg0OGY1YWUoMHgxNDcpXShfMHg1YjJmYWIpO319dGhpc1tfMHg0OGY1YWUoMHgzMmQpXSsrO31bXzB4NDNmY2U2KDB4NzA5KV0oXzB4NDdlZjI3KXtjb25zdCBfMHg1Y2I3ODk9XzB4NDNmY2U2LF8weDE1ZTUyZD10aGlzWydfZmlsZXMnXVtfMHg0N2VmMjddO18weDE1ZTUyZCYmKF8weDE1ZTUyZFtfMHg1Y2I3ODkoMHg2MWUpXVsnY2xlYXInXSgpLF8weDE1ZTUyZFtfMHg1Y2I3ODkoMHg2YzApXT0hMHgxLHRoaXNbXzB4NWNiNzg5KDB4MzJkKV0rKyk7fVtfMHg0M2ZjZTYoMHg1NTIpXSgpe2NvbnN0IF8weDJhZjY2Mz1fMHg0M2ZjZTY7dGhpc1tfMHgyYWY2NjMoMHgzMmQpXSsrO31nZXRbXzB4NDNmY2U2KDB4MTk5KV0oKXtjb25zdCBfMHg0YTg3NzE9XzB4NDNmY2U2O3JldHVybiEhT2JqZWN0W18weDRhODc3MSgweDI0MyldKHRoaXNbJ19maWxlcyddKVsnbGVuZ3RoJ107fVsnc2V0TG9ncG9pbnRzJ10oXzB4ZDQzMGZjLF8weDM4M2Y1YSl7Y29uc3QgXzB4NDIwN2EwPV8weDQzZmNlNixfMHhiNDMwMmQ9dGhpc1tfMHg0MjA3YTAoMHgyZDApXShfMHhkNDMwZmMpO18weGI0MzAyZFtfMHg0MjA3YTAoMHg2ZTgpXVtfMHg0MjA3YTAoMHg3MDkpXSgpO2Zvcihjb25zdCBfMHg0MDNiNDYgb2YgXzB4MzgzZjVhKV8weGI0MzAyZFtfMHg0MjA3YTAoMHg2ZTgpXVtfMHg0MjA3YTAoMHgyOWMpXShfMHg0MDNiNDYsdm9pZCAweDApO3RoaXNbXzB4NDIwN2EwKDB4MzJkKV0rKzt9W18weDQzZmNlNigweDJmZSldKF8weDQ4YzBlMSxfMHg0YTVkNWUpe2NvbnN0IF8weDNkZWFmZT1fMHg0M2ZjZTYsXzB4NDg5MTdjPXRoaXNbXzB4M2RlYWZlKDB4NzMyKV1bXzB4NDhjMGUxXTtpZihfMHg0ODkxN2Mpe2Zvcihjb25zdCBfMHg1MmQ1MjQgb2YgXzB4NGE1ZDVlKV8weDQ4OTE3Y1snYWN0aXZlTG9ncG9pbnRzJ11bXzB4M2RlYWZlKDB4MTQ3KV0oXzB4NTJkNTI0KTt0aGlzW18weDNkZWFmZSgweDMyZCldKys7fX1bXzB4NDNmY2U2KDB4MmQwKV0oXzB4MWUwNjE2KXtjb25zdCBfMHg0MzZmZmM9XzB4NDNmY2U2LF8weDIyMmZjYz10aGlzW18weDQzNmZmYygweDczMildW18weDFlMDYxNl07aWYoXzB4MjIyZmNjKXJldHVybiBfMHgyMjJmY2M7Y29uc3QgXzB4M2JlNTBkPW5ldyBfMHgxMzFmMTYoKTtyZXR1cm4gdGhpc1tfMHg0MzZmZmMoMHg3MzIpXVtfMHgxZTA2MTZdPV8weDNiZTUwZCxfMHgzYmU1MGQ7fX1fMHg0OWQxOGNbXzB4NDNmY2U2KDB4NWZkKV09XzB4MzI3NDc3O2NsYXNzIF8weDEzMWYxNntjb25zdHJ1Y3Rvcigpe2NvbnN0IF8weDU5NGVhOD1fMHg0M2ZjZTY7dGhpc1tfMHg1OTRlYTgoMHg2YzApXT0hMHgxLHRoaXNbXzB4NTk0ZWE4KDB4NjFlKV09bmV3IE1hcCgpLHRoaXNbJ2FjdGl2ZUxvZ3BvaW50cyddPW5ldyBNYXAoKTt9fX0se31dLDB4MTY6W2Z1bmN0aW9uKF8weDQwODBmZCxfMHgyMjE1MTUsXzB4ZjZjZmI4KXsndXNlIHN0cmljdCc7Y29uc3QgXzB4Y2Y5NDc2PV8weGFlMjY7Y29uc3QgXzB4NDllZTExPV8weDQwODBmZChfMHhjZjk0NzYoMHg2ODcpKTtjbGFzcyBfMHgyNzljOTh7Y29uc3RydWN0b3IoXzB4MWMwMzUxKXtjb25zdCBfMHgyYjQ3OGM9XzB4Y2Y5NDc2O3RoaXNbXzB4MmI0NzhjKDB4NWVkKV09XzB4MWMwMzUxLHRoaXNbXzB4MmI0NzhjKDB4MzJkKV09MHgwO31zdGF0aWMgZ2V0W18weGNmOTQ3NigweDRiOSldKCl7Y29uc3QgXzB4MzA3NWJjPV8weGNmOTQ3NjtyZXR1cm4gXzB4NDllZTExW18weDMwNzViYygweDRiOSldO31nZXRbJ3RzJ10oKXtjb25zdCBfMHg0ZmNiOGQ9XzB4Y2Y5NDc2O3JldHVybiB0aGlzW18weDRmY2I4ZCgweDMyZCldO31nZXRbXzB4Y2Y5NDc2KDB4MTk5KV0oKXtyZXR1cm4gdGhpc1snX2tleSddIT1udWxsfHx0aGlzWydfa2V5cyddIT1udWxsO31nZXRbJ3NpemUnXSgpe2NvbnN0IF8weDFlNzMyMz1fMHhjZjk0NzY7cmV0dXJuIHRoaXNbJ19rZXknXT8weDE6dGhpc1tfMHgxZTczMjMoMHhlNildP3RoaXNbJ19rZXlzJ11bJ3NpemUnXToweDA7fWdldFtfMHhjZjk0NzYoMHgyZjkpXSgpe2NvbnN0IF8weDE5MTE4Nj1fMHhjZjk0NzY7cmV0dXJuIHRoaXNbXzB4MTkxMTg2KDB4NmM0KV0/W3RoaXNbXzB4MTkxMTg2KDB4NmM0KV1dOnRoaXNbXzB4MTkxMTg2KDB4ZTYpXT90aGlzW18weDE5MTE4NigweGU2KV06W107fVtfMHhjZjk0NzYoMHgzN2YpXShfMHgxZjE3NTApe2NvbnN0IF8weDE5YWYxZD1fMHhjZjk0NzY7cmV0dXJuIHRoaXNbJ19rZXknXT90aGlzWydfa2V5J109PT1fMHgxZjE3NTA6dGhpc1tfMHgxOWFmMWQoMHhlNildP3RoaXNbXzB4MTlhZjFkKDB4ZTYpXVtfMHgxOWFmMWQoMHgzN2YpXShfMHgxZjE3NTApOiEweDE7fVtfMHhjZjk0NzYoMHgyMDcpXShfMHg0ODc4NTcpe2NvbnN0IF8weDUxY2NmMT1fMHhjZjk0NzY7aWYoIV8weDQ4Nzg1NylyZXR1cm4hMHgxO2lmKHRoaXNbXzB4NTFjY2YxKDB4NmM0KV0pcmV0dXJuIF8weDQ4Nzg1N1t0aGlzW18weDUxY2NmMSgweDZjNCldXSE9bnVsbDtpZih0aGlzW18weDUxY2NmMSgweGU2KV0pe2Zvcihjb25zdCBfMHg1YjA4ZTggb2YgdGhpc1snX2tleXMnXSlpZihfMHg0ODc4NTdbXzB4NWIwOGU4XSlyZXR1cm4hMHgwO31yZXR1cm4hMHgxO31bJ2ZpbHRlciddKF8weDQxYzc5Zil7Y29uc3QgXzB4NDk2ZThiPV8weGNmOTQ3NjtpZighXzB4NDFjNzlmKXJldHVybltdO2lmKHRoaXNbXzB4NDk2ZThiKDB4NmM0KV0pe2NvbnN0IF8weDQ1MjU5Yj1fMHg0MWM3OWZbdGhpc1tfMHg0OTZlOGIoMHg2YzQpXV07cmV0dXJuIF8weDQ1MjU5Yj9bXzB4NDUyNTliXTpbXTt9aWYodGhpc1snX2tleXMnXSl7Y29uc3QgXzB4MzAzYWM3PVtdO2Zvcihjb25zdCBfMHg1MzY3NzIgb2YgdGhpc1tfMHg0OTZlOGIoMHhlNildKXtjb25zdCBfMHgzYmE1YWU9XzB4NDFjNzlmW18weDUzNjc3Ml07XzB4M2JhNWFlJiZfMHgzMDNhYzdbXzB4NDk2ZThiKDB4NDJkKV0oXzB4M2JhNWFlKTt9cmV0dXJuIF8weDMwM2FjNzt9cmV0dXJuW107fVtfMHhjZjk0NzYoMHg2MDApXShfMHg0ZjA3N2Mpe2NvbnN0IF8weDFiZGJhOT1fMHhjZjk0NzYsXzB4M2MxYjk1PV8weDRmMDc3YyBpbnN0YW5jZW9mIF8weDQ5ZWUxMT9fMHg0ZjA3N2NbXzB4MWJkYmE5KDB4NDYyKV0oKTpfMHg0OWVlMTFbXzB4MWJkYmE5KDB4MTRiKV0oXzB4NGYwNzdjKTshdGhpc1snX2tleSddJiYhdGhpc1snX2tleXMnXT8odGhpc1snX2tleSddPV8weDNjMWI5NSx0aGlzW18weDFiZGJhOSgweDMyZCldKyssdGhpc1tfMHgxYmRiYTkoMHg1ZWQpXSghMHgwKSk6dGhpc1snX2tleSddP3RoaXNbXzB4MWJkYmE5KDB4NmM0KV09PT1fMHgzYzFiOTU/dGhpc1tfMHgxYmRiYTkoMHg3MDkpXSgpOih0aGlzWydfa2V5cyddPW5ldyBTZXQoKSx0aGlzW18weDFiZGJhOSgweGU2KV1bXzB4MWJkYmE5KDB4NDQ1KV0odGhpc1tfMHgxYmRiYTkoMHg2YzQpXSksZGVsZXRlIHRoaXNbXzB4MWJkYmE5KDB4NmM0KV0sdGhpc1tfMHgxYmRiYTkoMHhlNildW18weDFiZGJhOSgweDQ0NSldKF8weDNjMWI5NSksdGhpc1tfMHgxYmRiYTkoMHgzMmQpXSsrKTp0aGlzW18weDFiZGJhOSgweGU2KV0mJih0aGlzW18weDFiZGJhOSgweGU2KV1bXzB4MWJkYmE5KDB4MzdmKV0oXzB4M2MxYjk1KT8odGhpc1tfMHgxYmRiYTkoMHhlNildW18weDFiZGJhOSgweDE0NyldKF8weDNjMWI5NSksdGhpc1tfMHgxYmRiYTkoMHgzMmQpXSsrLHRoaXNbXzB4MWJkYmE5KDB4ZTYpXVtfMHgxYmRiYTkoMHgxZTYpXT09PTB4MSYmKHRoaXNbJ19rZXknXT10aGlzW18weDFiZGJhOSgweGU2KV1bXzB4MWJkYmE5KDB4MzNiKV0oKVtfMHgxYmRiYTkoMHg1ZTApXSgpW18weDFiZGJhOSgweDNjNildLGRlbGV0ZSB0aGlzW18weDFiZGJhOSgweGU2KV0pKToodGhpc1tfMHgxYmRiYTkoMHhlNildW18weDFiZGJhOSgweDQ0NSldKF8weDNjMWI5NSksdGhpc1snX3RzJ10rKykpO31bXzB4Y2Y5NDc2KDB4NzE4KV0oXzB4M2U4MGM5KXtjb25zdCBfMHg1ZjBlMmY9XzB4Y2Y5NDc2LF8weDFhZjYxMT1fMHgzZTgwYzkgaW5zdGFuY2VvZiBfMHg0OWVlMTE/XzB4M2U4MGM5WydrZXknXSgpOl8weDQ5ZWUxMVtfMHg1ZjBlMmYoMHgxNGIpXShfMHgzZTgwYzkpO3RoaXNbXzB4NWYwZTJmKDB4NmM0KV0/dGhpc1snX2tleSddPT09XzB4MWFmNjExJiZ0aGlzW18weDVmMGUyZigweDcwOSldKCk6dGhpc1tfMHg1ZjBlMmYoMHhlNildJiZ0aGlzWydfa2V5cyddW18weDVmMGUyZigweDM3ZildKF8weDFhZjYxMSkmJih0aGlzW18weDVmMGUyZigweGU2KV1bXzB4NWYwZTJmKDB4MTQ3KV0oXzB4MWFmNjExKSx0aGlzW18weDVmMGUyZigweDMyZCldKyssdGhpc1tfMHg1ZjBlMmYoMHhlNildW18weDVmMGUyZigweDFlNildPT09MHgxJiYodGhpc1tfMHg1ZjBlMmYoMHg2YzQpXT10aGlzW18weDVmMGUyZigweGU2KV1bJ3ZhbHVlcyddKClbXzB4NWYwZTJmKDB4NWUwKV0oKVtfMHg1ZjBlMmYoMHgzYzYpXSxkZWxldGUgdGhpc1tfMHg1ZjBlMmYoMHhlNildKSk7fVtfMHhjZjk0NzYoMHg1NjgpXShfMHg3ODNhZGMpe2NvbnN0IF8weDNjMzIzND1fMHhjZjk0NzY7aWYoXzB4NzgzYWRjfHx0aGlzWydjbGVhciddKCEweDApLHRoaXNbXzB4M2MzMjM0KDB4NmM0KV0mJihfMHg3ODNhZGNbdGhpc1snX2tleSddXXx8dGhpc1tfMHgzYzMyMzQoMHg3MDkpXSghMHgwKSksdGhpc1tfMHgzYzMyMzQoMHhlNildKXtjb25zdCBfMHgxY2IyNDM9W107Zm9yKGNvbnN0IF8weDNlOTE1MyBvZiB0aGlzWydfa2V5cyddKV8weDc4M2FkY1tfMHgzZTkxNTNdfHxfMHgxY2IyNDNbXzB4M2MzMjM0KDB4NDJkKV0oXzB4M2U5MTUzKTtpZihfMHgxY2IyNDNbJ2xlbmd0aCddKXtmb3IoY29uc3QgXzB4MjM0Y2U1IG9mIF8weDFjYjI0Myl0aGlzW18weDNjMzIzNCgweGU2KV1bXzB4M2MzMjM0KDB4MTQ3KV0oXzB4MjM0Y2U1KSx0aGlzW18weDNjMzIzNCgweDMyZCldKys7dGhpc1tfMHgzYzMyMzQoMHhlNildW18weDNjMzIzNCgweDFlNildPyh0aGlzW18weDNjMzIzNCgweGU2KV1bXzB4M2MzMjM0KDB4MWU2KV09PT0weDEmJih0aGlzW18weDNjMzIzNCgweDZjNCldPXRoaXNbJ19rZXlzJ11bJ3ZhbHVlcyddKClbJ25leHQnXSgpW18weDNjMzIzNCgweDNjNildLGRlbGV0ZSB0aGlzW18weDNjMzIzNCgweGU2KV0pLHRoaXNbXzB4M2MzMjM0KDB4NWVkKV0oITB4MCwhMHgwKSk6dGhpc1tfMHgzYzMyMzQoMHg3MDkpXSghMHgwKTt9fX1bXzB4Y2Y5NDc2KDB4NzA5KV0oXzB4NWE1MWViKXtjb25zdCBfMHgxNzI5OTk9XzB4Y2Y5NDc2Oyh0aGlzW18weDE3Mjk5OSgweDZjNCldfHx0aGlzW18weDE3Mjk5OSgweGU2KV0pJiYodGhpc1tfMHgxNzI5OTkoMHgzMmQpXSsrLGRlbGV0ZSB0aGlzW18weDE3Mjk5OSgweDZjNCldLGRlbGV0ZSB0aGlzWydfa2V5cyddLHRoaXNbJ19lbWl0J10oITB4MSxfMHg1YTUxZWIpKTt9fV8weDIyMTUxNVtfMHhjZjk0NzYoMHgzNjYpXT1fMHgyNzljOTg7fSx7Jy4vZXhlY3V0ZWRUZXN0JzoweGR9XSwweDE3OltmdW5jdGlvbihfMHgxZmQ2OGQsXzB4NDE5YzMyLF8weGIxMzFkNyl7J3VzZSBzdHJpY3QnO2NvbnN0IF8weDRiYzcyND1fMHhhZTI2O2xldCBfMHgxNjMxY2Y9XzB4MWZkNjhkKF8weDRiYzcyNCgweGQ4KSksXzB4MTUzZDU3PV8weDFmZDY4ZCgnLi9kb2N1bWVudEluRWRpdG9yJyk7Y29uc3QgXzB4MmE0MWJkPV8weDFmZDY4ZChfMHg0YmM3MjQoMHg3NDQpKSxfMHgyZmRmNDQ9XzB4MWZkNjhkKF8weDRiYzcyNCgweDZjZCkpO2NsYXNzIF8weDIzNzM0NXtjb25zdHJ1Y3RvcihfMHgzNDBkMWMsXzB4MTE1ZWNkLF8weDkwZGI3YixfMHg0ZGUwODksXzB4MWQ2MDI0KXtjb25zdCBfMHg0MWU4NTE9XzB4NGJjNzI0O3RoaXNbXzB4NDFlODUxKDB4NzY5KV09XzB4MzQwZDFjLHRoaXNbXzB4NDFlODUxKDB4NGI3KV09XzB4MTE1ZWNkLHRoaXNbXzB4NDFlODUxKDB4MzlmKV09XzB4OTBkYjdiLHRoaXNbXzB4NDFlODUxKDB4MjY4KV09XzB4NGRlMDg5LHRoaXNbJ19yYW5nZUNvbnNvbGVMb2cnXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLHRoaXNbXzB4NDFlODUxKDB4NDZmKV09T2JqZWN0W18weDQxZTg1MSgweDQ0OCldKG51bGwpLHRoaXNbXzB4NDFlODUxKDB4NzJlKV09T2JqZWN0W18weDQxZTg1MSgweDQ0OCldKG51bGwpLHRoaXNbJ19hZmZlY3RlZFJhbmdlcyddPU9iamVjdFtfMHg0MWU4NTEoMHg0NDgpXShudWxsKSx0aGlzW18weDQxZTg1MSgweDIyNyldPU9iamVjdFtfMHg0MWU4NTEoMHg0NDgpXShudWxsKSx0aGlzWydfbGluZVRvUmFuZ2VNYXAnXT1PYmplY3RbXzB4NDFlODUxKDB4NDQ4KV0obnVsbCksdGhpc1tfMHg0MWU4NTEoMHg0YTYpXT1PYmplY3RbXzB4NDFlODUxKDB4NDQ4KV0obnVsbCksdGhpc1tfMHg0MWU4NTEoMHg3NDYpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLHRoaXNbXzB4NDFlODUxKDB4MmIyKV09T2JqZWN0WydjcmVhdGUnXShudWxsKSx0aGlzWydfdHJhY2tlZExpbmVNYXAnXT1PYmplY3RbXzB4NDFlODUxKDB4NDQ4KV0obnVsbCksdGhpc1snX251bWJlck9mQ292ZXJlZFJhbmdlcyddPTB4MCx0aGlzW18weDQxZTg1MSgweDQxNyldPU9iamVjdFsnY3JlYXRlJ10obnVsbCksdGhpc1tfMHg0MWU4NTEoMHgyNWUpXT17J2dldFRlc3REZWNsYXJhdGlvbkJ5TGluZU51bWJlcic6XzB4MzdkOTFhPT50aGlzW18weDQxZTg1MSgweDc0NildW18weDM3ZDkxYV0sJ2dldFRlc3RNYXRjaFNuYXBzaG90Q2FsbEJ5TGluZU51bWJlcic6XzB4MmFjYjY3PT50aGlzW18weDQxZTg1MSgweDJiMildW18weDJhY2I2N10sJ2dldFRyYWNrZWRMaW5lQnlMaW5lTnVtYmVyJzpfMHg0ZDNiOWI9PnRoaXNbXzB4NDFlODUxKDB4MTBkKV1bXzB4NGQzYjliXSwnZ2V0RGVidWdnZWRUZXN0JzpfMHgxZDYwMjR9O31bXzB4NGJjNzI0KDB4ZmUpXShfMHgzYmM4MjIsXzB4MjIwYWYyLF8weDVkNjJlMixfMHgzMzU5MmIsXzB4MWMyNGExLF8weGFhNGE4ZSxfMHgxMGNkYzMsXzB4MzJlZTBkLF8weDJhMGM1ZSl7Y29uc3QgXzB4YjEzOTAwPV8weDRiYzcyNDtsZXQgXzB4MjNiMzdhPV8weDE2MzFjZltfMHhiMTM5MDAoMHhkZSldKF8weDVkNjJlMiksXzB4MmI5NDU5PXRoaXNbJ19yYW5nZUNvbnNvbGVMb2cnXVtfMHgyM2IzN2FdO18weDJiOTQ1OXx8KF8weDJiOTQ1OT10aGlzW18weGIxMzkwMCgweDUwNyldW18weDIzYjM3YV09W10pLF8weDJiOTQ1OVsncHVzaCddKHsnbWVzc2FnZSc6XzB4M2JjODIyLCd0ZXN0S2V5JzpfMHgzMzU5MmI/XzB4MzM1OTJiW18weGIxMzkwMCgweDQ2MildKCk6bnVsbCwndHJhY2VJZCc6XzB4MWMyNGExLCd0cmFjZVN0ZXAnOl8weGFhNGE4ZSwnY2hhbmdlSWQnOl8weDEwY2RjMywncGVybWFuZW50JzpfMHgzMmVlMGQsJ3N5c3RlbSc6XzB4MjIwYWYyPT09XzB4YjEzOTAwKDB4NGVmKXx8XzB4MjIwYWYyPT09XzB4YjEzOTAwKDB4NTBiKSwnZm9ybWF0JzpfMHgyYTBjNWV9KTt9W18weDRiYzcyNCgweDU2ZildKF8weDEwYjFhMCl7Y29uc3QgXzB4M2RlNGVkPV8weDRiYzcyNDt0aGlzW18weDNkZTRlZCgweDJiMildPV8weDEwYjFhMHx8e307fVsnYWRkVGVzdE1hdGNoU25hcHNob3RDYWxscyddKF8weDUwYTI0NCl7Y29uc3QgXzB4M2EyYzkzPV8weDRiYzcyNDt0aGlzW18weDNhMmM5MygweDJiMildPV9bJ2V4dGVuZCddKHRoaXNbXzB4M2EyYzkzKDB4MmIyKV18fHt9LF8weDUwYTI0NHx8e30pO31bXzB4NGJjNzI0KDB4NDE1KV0oXzB4NDM2OTdiKXtjb25zdCBfMHg0YTFhYzk9XzB4NGJjNzI0LF8weGFkMGRkZD10aGlzWydfdGVzdE1hdGNoU25hcHNob3RDYWxsTGluZU1hcCddW18weDQzNjk3Yl07aWYoIV8weGFkMGRkZClyZXR1cm47Y29uc3QgXzB4ZGFhNDdlPXRoaXNbXzB4NGExYWM5KDB4NGI3KV0oXzB4YWQwZGRkW18weDRhMWFjOSgweDFmOSldKTtpZighXzB4ZGFhNDdlKXJldHVybjtjb25zdCBfMHgzMjIyMGQ9XzB4ZGFhNDdlW18weDRhMWFjOSgweDdhNyldKF8weGFkMGRkZFtfMHg0YTFhYzkoMHgzYTYpXSk7aWYoXzB4MzIyMjBkPDB4MClyZXR1cm47Y29uc3QgXzB4M2ViZTYwPV8weDJmZGY0NFtfMHg0YTFhYzkoMHgxOTApXShfMHhkYWE0N2UsXzB4MzIyMjBkKTtpZihfMHgzZWJlNjApcmV0dXJueydsb2MnOl8weDNlYmU2MFtfMHg0YTFhYzkoMHgyYTQpXSwnZmlsZSc6XzB4YWQwZGRkW18weDRhMWFjOSgweDFmOSldLCduYW1lJzpfMHhhZDBkZGRbJ3NuYXBzaG90S2V5J119O31bXzB4NGJjNzI0KDB4NWQ1KV0oXzB4MjY4OWY1KXtjb25zdCBfMHgyNWEzODk9XzB4NGJjNzI0LF8weDI4MjE3Mj10aGlzW18weDI1YTM4OSgweDJiMildW18weDI2ODlmNV07aWYoIV8weDI4MjE3MilyZXR1cm47Y29uc3QgXzB4MzJmMjZjPXRoaXNbXzB4MjVhMzg5KDB4NGI3KV0oXzB4MjgyMTcyW18weDI1YTM4OSgweDFmOSldKTtpZighXzB4MzJmMjZjKXJldHVybjtjb25zdCBfMHg1YmE5MzI9e307dHJ5e18weDFmZDY4ZCgndm0nKVtfMHgyNWEzODkoMHg0ZDkpXShfMHgyNWEzODkoMHg3YWYpW18weDI1YTM4OSgweDQ0OSldKF8weDMyZjI2YywnXHgyMH0pJykpKF8weDViYTkzMik7fWNhdGNoKF8weDNmZTVkZil7XzB4NWJhOTMyW18weDI4MjE3MltfMHgyNWEzODkoMHgzYTYpXV09XzB4MjVhMzg5KDB4MTlmKVtfMHgyNWEzODkoMHg0NDkpXShfMHgzZmU1ZGZbJ21lc3NhZ2UnXSk7fXJldHVybnsnY29udGVudCc6XzB4NWJhOTMyW18weDI4MjE3MltfMHgyNWEzODkoMHgzYTYpXV0sJ25hbWUnOl8weDI4MjE3MltfMHgyNWEzODkoMHgzYTYpXX07fVtfMHg0YmM3MjQoMHg2N2YpXSgpe2NvbnN0IF8weDNkYzVmYj1fMHg0YmM3MjQ7cmV0dXJuIHRoaXNbXzB4M2RjNWZiKDB4NDZmKV07fVtfMHg0YmM3MjQoMHg3NzIpXSgpe2NvbnN0IF8weDMzNWZlNT1fMHg0YmM3MjQ7cmV0dXJuIHRoaXNbXzB4MzM1ZmU1KDB4NzY5KV1bXzB4MzM1ZmU1KDB4NzdhKV07fVtfMHg0YmM3MjQoMHg3NjEpXSgpe2NvbnN0IF8weDUwMGQ4Mj1fMHg0YmM3MjQ7dGhpc1tfMHg1MDBkODIoMHgyY2QpXT0hMHgwO31bXzB4NGJjNzI0KDB4NjY5KV0oKXtjb25zdCBfMHgxZThhZDI9XzB4NGJjNzI0O3JldHVybiB0aGlzW18weDFlOGFkMigweDc2OSldWydzbWFydE1vZGVTdGFydCddPT09XzB4MWU4YWQyKDB4MmEzKTt9WydzbWFydE1vZGVTdGFydFRlc3RPbkVkaXQnXSgpe2NvbnN0IF8weDUzMTQ0Yj1fMHg0YmM3MjQ7cmV0dXJuIHRoaXNbJ19kYXRhJ11bXzB4NTMxNDRiKDB4NzJiKV09PT1fMHg1MzE0NGIoMHg0NTkpfHx0aGlzWydfZGF0YSddW18weDUzMTQ0YigweDcyYildPT09XzB4NTMxNDRiKDB4MmEzKTt9Wyd1cGRhdGUnXShfMHgxMjNiY2Mpe2NvbnN0IF8weDM4OGNiYj1fMHg0YmM3MjQ7bGV0IF8weDI0NzhmND1fWydleHRlbmQnXSh7fSx0aGlzW18weDM4OGNiYigweDcyZSldLHRoaXNbXzB4Mzg4Y2JiKDB4MzZiKV0sdGhpc1snX291dGRhdGVkUmFuZ2VzJ10pLF8weDFhNWZiMT10aGlzWydfYWxsUmFuZ2VzUmVjZWl2ZWQnXSxfMHgzMWMxMTI9dGhpc1snX2RvY3VtZW50SW5FZGl0b3InXSYmdGhpc1tfMHgzODhjYmIoMHgxMTcpXTtyZXR1cm4gZGVsZXRlIHRoaXNbXzB4Mzg4Y2JiKDB4NDkyKV0sZGVsZXRlIHRoaXNbJ19pbnZhbGlkYXRlZCddLF9bXzB4Mzg4Y2JiKDB4M2U2KV0odGhpc1tfMHgzODhjYmIoMHgyMjcpXSxfMHg1ZTlmYWY9Pl8weDVlOWZhZltfMHgzODhjYmIoMHgyNGYpXSgpKSx0aGlzW18weDM4OGNiYigweDcyZSldPU9iamVjdFsnY3JlYXRlJ10obnVsbCksdGhpc1tfMHgzODhjYmIoMHgzNmIpXT1PYmplY3RbXzB4Mzg4Y2JiKDB4NDQ4KV0obnVsbCksdGhpc1tfMHgzODhjYmIoMHgyMjcpXT1PYmplY3RbXzB4Mzg4Y2JiKDB4NDQ4KV0obnVsbCksdGhpc1tfMHgzODhjYmIoMHg2YTUpXT8oXzB4MzFjMTEyP3RoaXNbJ19kb2N1bWVudEluRWRpdG9yJ11bXzB4Mzg4Y2JiKDB4NTUyKV0oX1tfMHgzODhjYmIoMHgzM2IpXSh0aGlzW18weDM4OGNiYigweDQ2ZildKSwhMHgwLCEweDAsXzB4MTIzYmNjKTp0aGlzW18weDM4OGNiYigweDZhNSldW18weDM4OGNiYigweDU1MildKF8weDI0NzhmNCxfMHgxYTVmYjEsITB4MSxfMHgxMjNiY2MpLCEweDApOiEweDE7fVtfMHg0YmM3MjQoMHg1YjEpXShfMHg0ZGM0MmQpe2NvbnN0IF8weGIxOWIwNj1fMHg0YmM3MjQ7aWYodGhpc1tfMHhiMTliMDYoMHg2YTUpXSl7Y29uc3QgXzB4MzVmZTBjPXRoaXNbXzB4YjE5YjA2KDB4NmE1KV1bXzB4YjE5YjA2KDB4NWIxKV0oXzB4NGRjNDJkKTtyZXR1cm4gXzB4MzVmZTBjJiYoXzB4MzVmZTBjWydjb3ZlcmFnZSddPXsndmFsdWUnOnRoaXNbXzB4YjE5YjA2KDB4M2I0KV0oKX0pLF8weDM1ZmUwYzt9fVsnb3BlbmVkSW5FZGl0b3InXSgpe2NvbnN0IF8weDVmMGJkYj1fMHg0YmM3MjQ7dGhpc1snX2RvY3VtZW50SW5FZGl0b3InXXx8KHRoaXNbXzB4NWYwYmRiKDB4NmE1KV09bmV3IF8weDE1M2Q1Nyh0aGlzWydrZXknXSgpLHRoaXNbXzB4NWYwYmRiKDB4MzlmKV0sdGhpc1snX2ZpbHRlciddLHRoaXNbXzB4NWYwYmRiKDB4MjVlKV0pLHRoaXNbXzB4NWYwYmRiKDB4NmE1KV1bXzB4NWYwYmRiKDB4NTUyKV0oX1tfMHg1ZjBiZGIoMHgzM2IpXSh0aGlzW18weDVmMGJkYigweDQ2ZildKSwhMHgxLCEweDAsITB4MSkpO31bXzB4NGJjNzI0KDB4NjUyKV0oKXtkZWxldGUgdGhpc1snX2RvY3VtZW50SW5FZGl0b3InXTt9W18weDRiYzcyNCgweDE4NCldKCl7Y29uc3QgXzB4NWI5ZTRmPV8weDRiYzcyNDtyZXR1cm4gdGhpc1tfMHg1YjllNGYoMHg2YTUpXTt9W18weDRiYzcyNCgweGUyKV0oXzB4MTQxOWY4LF8weDFiZjgwOCxfMHg1M2FmZWMpe2NvbnN0IF8weDQxZmRkYz1fMHg0YmM3MjQ7aWYodGhpc1snX3NoaWZ0VHJhY2tlZExpbmVzJ10oXzB4MTQxOWY4LF8weDFiZjgwOCxfMHg1M2FmZWMpLHRoaXNbXzB4NDFmZGRjKDB4NmE1KV0pe2NvbnN0IF8weGQ4MjcyNj10aGlzWydfc2hpZnRUZXN0RGVjbGFyYXRpb25BbmRFcnJvckxpbmVzJ10oXzB4MTQxOWY4LF8weDFiZjgwOCk7cmV0dXJuIHRoaXNbJ19zaGlmdFRlc3RNYXRjaFNuYXBzaG90Q2FsbExpbmVzJ10oXzB4MTQxOWY4LF8weDFiZjgwOCksdGhpc1snX2RvY3VtZW50SW5FZGl0b3InXVsnc2hpZnRMaW5lcyddKF8weDE0MTlmOCxfMHgxYmY4MDgsXzB4NTNhZmVjKSxfMHhkODI3MjY7fX1bXzB4NGJjNzI0KDB4M2VmKV0oXzB4NDY5ZjMyKXtjb25zdCBfMHgxOGMyYzM9XzB4NGJjNzI0O3RoaXNbXzB4MThjMmMzKDB4NmE1KV0mJnRoaXNbXzB4MThjMmMzKDB4NmE1KV1bXzB4MThjMmMzKDB4M2VmKV0oXzB4NDY5ZjMyKTt9W18weDRiYzcyNCgweGJlKV0oKXtjb25zdCBfMHgzNWQ5MWU9XzB4NGJjNzI0O3RoaXNbXzB4MzVkOTFlKDB4MTE3KV09ITB4MCx0aGlzWydfdHJhY2tlZExpbmVNYXAnXT1PYmplY3RbXzB4MzVkOTFlKDB4NDQ4KV0obnVsbCk7fVsndXBkYXRlZCddKCl7Y29uc3QgXzB4OWJiOTI2PV8weDRiYzcyNDtyZXR1cm4hdGhpc1tfMHg5YmI5MjYoMHgxMTcpXTt9W18weDRiYzcyNCgweDRkMSldKF8weDM1MGI3Nil7cmV0dXJuIHRoaXNbJ190cmFja2VkTGluZU1hcCddW18weDM1MGI3Nl07fVtfMHg0YmM3MjQoMHg3MDgpXSgpe2NvbnN0IF8weDNkOTdmZD1fMHg0YmM3MjQ7cmV0dXJuIE9iamVjdFtfMHgzZDk3ZmQoMHgzM2IpXSh0aGlzWydfdHJhY2tlZExpbmVNYXAnXSk7fVtfMHg0YmM3MjQoMHgyZDIpXShfMHgyY2E0NzUsXzB4NTNlNjBhKXtjb25zdCBfMHgxY2RmNDc9XzB4NGJjNzI0O2xldCBfMHgyM2JlZDE9dGhpc1tfMHgxY2RmNDcoMHgxMGQpXVtfMHgyY2E0NzVdO18weDIzYmVkMT9fMHgyM2JlZDFbXzB4MWNkZjQ3KDB4Njk5KV09XzB4MmNhNDc1Ol8weDIzYmVkMT17J251bWJlcic6XzB4MmNhNDc1LCd0cmFpdHMnOnt9fSxfMHg1M2U2MGEoXzB4MjNiZWQxWyd0cmFpdHMnXSksdGhpc1tfMHgxY2RmNDcoMHgxMGQpXVtfMHgyY2E0NzVdPV8weDIzYmVkMTt9W18weDRiYzcyNCgweDJiZildKF8weDJkYTZkYSl7Y29uc3QgXzB4MzAzMWRiPV8weDRiYzcyNDtpZihfMHgyZGE2ZGE9PT12b2lkIDB4MCl0aGlzW18weDMwMzFkYigweDEwZCldPU9iamVjdFsnY3JlYXRlJ10obnVsbCk7ZWxzZXtmb3IoY29uc3QgXzB4MzYwNmI2IG9mIF8weDJkYTZkYSlkZWxldGUgdGhpc1tfMHgzMDMxZGIoMHgxMGQpXVtfMHgzNjA2YjZdO319W18weDRiYzcyNCgweDM1NyldKF8weDVmNTllNixfMHgzOWI0ZjEpe2NvbnN0IF8weGNjZjk1MT1fMHg0YmM3MjQsXzB4MmI1ZmYzPVtdO2lmKF8weDM5YjRmMSE9PXZvaWQgMHgwKXtjb25zdCBfMHhjNDViOTE9dGhpc1snX3RyYWNrZWRMaW5lTWFwJ11bXzB4MzliNGYxXTtfMHhjNDViOTEmJl8weDVmNTllNihfMHhjNDViOTFbXzB4Y2NmOTUxKDB4MzQ5KV0sXzB4MzliNGYxKSYmXzB4MmI1ZmYzW18weGNjZjk1MSgweDQyZCldKF8weDM5YjRmMSk7fWVsc2UgZm9yKGNvbnN0IF8weDU4NWE3NCBpbiB0aGlzW18weGNjZjk1MSgweDEwZCldKXtjb25zdCBfMHg1MTI2ZTk9dGhpc1tfMHhjY2Y5NTEoMHgxMGQpXVtfMHg1ODVhNzRdO18weDVmNTllNihfMHg1MTI2ZTlbXzB4Y2NmOTUxKDB4MzQ5KV0sXzB4NTg1YTc0KSYmXzB4MmI1ZmYzW18weGNjZjk1MSgweDQyZCldKF8weDU4NWE3NCk7fXRoaXNbJ3VudHJhY2tMaW5lcyddKF8weDJiNWZmMyk7fVtfMHg0YmM3MjQoMHg1YTQpXSgpe2NvbnN0IF8weDdiNjY1NT1fMHg0YmM3MjQ7cmV0dXJuIE9iamVjdFsna2V5cyddKHRoaXNbXzB4N2I2NjU1KDB4MTBkKV0pWydsZW5ndGgnXT4weDA7fVsnbGluZVRlc3RzJ10oXzB4NGUyMjY2KXtjb25zdCBfMHgyMzYxNjQ9XzB4NGJjNzI0O2xldCBfMHhjODE3ODY9dGhpc1tfMHgyMzYxNjQoMHg3YmEpXShfMHg0ZTIyNjYpO3JldHVybiBfWydpc0VtcHR5J10oXzB4YzgxNzg2KSYmKF8weGM4MTc4Nj10aGlzW18weDIzNjE2NCgweDYxMildKHRoaXNbXzB4MjM2MTY0KDB4MjdkKV0oXzB4NGUyMjY2KSkpLF8weGM4MTc4Njt9WydsaW5lRXJyb3JzJ10oXzB4MTRhYmI4KXtjb25zdCBfMHhhMDMzY2M9XzB4NGJjNzI0LF8weDE5MDIwND10aGlzW18weGEwMzNjYygweDI2OCldJiZ0aGlzW18weGEwMzNjYygweDI2OCldW18weGEwMzNjYygweDVmZildJiZ0aGlzW18weGEwMzNjYygweDI2OCldW18weGEwMzNjYygweDVmZildW18weGEwMzNjYygweDE5OSldP3RoaXNbJ19maWx0ZXInXVtfMHhhMDMzY2MoMHg1ZmYpXTp2b2lkIDB4MDtyZXR1cm4gQXJyYXlbXzB4YTAzM2NjKDB4NzAxKV0oX1tfMHhhMDMzY2MoMHgxYTcpXSh0aGlzW18weGEwMzNjYygweDI3ZCldKF8weDE0YWJiOCksKF8weDI4NDJlMyxfMHgxYzI3M2UpPT4oXzB4MWMyNzNlW18weGEwMzNjYygweDYwZildKF8weDE5MDIwNClbXzB4YTAzM2NjKDB4M2U0KV0oXzB4NTZhYzM5PT5fMHgyODQyZTNbXzB4YTAzM2NjKDB4NDQ1KV0oXzB4NTZhYzM5KSksXzB4Mjg0MmUzKSxuZXcgU2V0KCkpKTt9W18weDRiYzcyNCgweDQ0NildKF8weDM1NmE4OSl7Y29uc3QgXzB4NWNhYmRiPV8weDRiYzcyNDtpZighdGhpc1tfMHg1Y2FiZGIoMHg2YTUpXSlyZXR1cm47bGV0IF8weGQ5Mjc4Yj10aGlzWydfZG9jdW1lbnRJbkVkaXRvciddWydsaW5lJ10oXzB4MzU2YTg5KTtpZihfMHhkOTI3OGIpcmV0dXJuIF8weGQ5Mjc4YlsncmFuZ2VzJ10oKTt9WydsaW5lUmFuZ2VzJ10oXzB4NTMzMWQ1KXtjb25zdCBfMHgzNTAxOGE9XzB4NGJjNzI0O2xldCBfMHg0MDFkMzU9dGhpc1tfMHgzNTAxOGEoMHgxYjkpXVtfMHg1MzMxZDVdO2lmKCFfMHg0MDFkMzUmJnRoaXNbXzB4MzUwMThhKDB4MzlmKV1bXzB4MzUwMThhKDB4NmQyKV0pe2Zvcig7XzB4NTMzMWQ1PjB4MCYmIV8weDQwMWQzNTspXzB4NTMzMWQ1LS0sXzB4NDAxZDM1PXRoaXNbXzB4MzUwMThhKDB4MWI5KV1bXzB4NTMzMWQ1XTt9aWYoXzB4NDAxZDM1KXJldHVybiBfMHg0MDFkMzVbJ3N0YXJ0aW5nT25UaGVMaW5lJ107fVtfMHg0YmM3MjQoMHgzYWYpXSgpe2NvbnN0IF8weDI2MTdiNj1fMHg0YmM3MjQ7aWYoIXRoaXNbXzB4MjYxN2I2KDB4NDRmKV0pcmV0dXJuO2RlbGV0ZSB0aGlzWydfbmVlZFRvUmVidWlsZERpc3BsYXlhYmxlUmFuZ2VzJ107Y29uc3QgXzB4NGI2NWQ5PV8weDJhNDFiZCh0aGlzW18weDI2MTdiNigweDQ4ZildKCksdGhpc1tfMHgyNjE3YjYoMHg0YjcpXSh0aGlzWydwYXRoJ10oKSkpO18weDRiNjVkOSYmKHRoaXNbXzB4MjYxN2I2KDB4NWYxKV09XzB4NGI2NWQ5W18weDI2MTdiNigweDE5NSldLHRoaXNbXzB4MjYxN2I2KDB4MjdlKV09e30sXzB4NGI2NWQ5W18weDI2MTdiNigweDNlNCldKF8weDMwMWJmZT0+e2NvbnN0IF8weDE0YTFiMD1fMHgyNjE3YjY7KHRoaXNbXzB4MTRhMWIwKDB4MjdlKV1bXzB4MzAxYmZlW18weDE0YTFiMCgweDU3OCldW18weDE0YTFiMCgweDJhNCldXT10aGlzW18weDE0YTFiMCgweDI3ZSldW18weDMwMWJmZVtfMHgxNGExYjAoMHg1NzgpXVtfMHgxNGExYjAoMHgyYTQpXV18fFtdKVtfMHgxNGExYjAoMHg0MmQpXShfMHgzMDFiZmUpO30pKTt9WydkaXNwbGF5UmFuZ2UnXShfMHg1Yjc2Njcpe2NvbnN0IF8weGVlZDYyOT1fMHg0YmM3MjQsXzB4NzkyMTk0PXRoaXNbJ19kaXNwbGF5UmFuZ2VzTGluZU1hcCddJiZ0aGlzWydfZGlzcGxheVJhbmdlc0xpbmVNYXAnXVtfMHg1Yjc2NjdbXzB4ZWVkNjI5KDB4NjMwKV0oKV07aWYoIV8weDc5MjE5NClyZXR1cm5bXzB4NWI3NjY3WydzdGFydExpbmUnXSgpLF8weDViNzY2N1tfMHhlZWQ2MjkoMHg1NjUpXSgpLF8weDViNzY2N1snZW5kTGluZSddKCksXzB4NWI3NjY3W18weGVlZDYyOSgweDExZildKCldO2NvbnN0IF8weDI2ZDU4ZD10aGlzWydfbWFwUmFuZ2VUb0Rpc3BsYXlSYW5nZSddKF8weDViNzY2NyxfMHg3OTIxOTQpO3JldHVybiBfMHgyNmQ1OGQ/W18weDI2ZDU4ZFtfMHhlZWQ2MjkoMHg1NzgpXVtfMHhlZWQ2MjkoMHgyYTQpXSxfMHgyNmQ1OGRbXzB4ZWVkNjI5KDB4NTc4KV1bXzB4ZWVkNjI5KDB4NmU0KV0sXzB4MjZkNThkW18weGVlZDYyOSgweDFmNSldW18weGVlZDYyOSgweDJhNCldLF8weDI2ZDU4ZFtfMHhlZWQ2MjkoMHgxZjUpXVtfMHhlZWQ2MjkoMHg2ZTQpXV06W18weDViNzY2N1tfMHhlZWQ2MjkoMHg2MzApXSgpLF8weDViNzY2N1tfMHhlZWQ2MjkoMHg1NjUpXSgpLF8weDViNzY2N1tfMHhlZWQ2MjkoMHg2ZjEpXSgpLF8weDViNzY2N1tfMHhlZWQ2MjkoMHgxMWYpXSgpXTt9W18weDRiYzcyNCgweDc4NildKF8weDNkMDllOSxfMHgyOWVmZDApe2NvbnN0IF8weDU5NDYyZT1fMHg0YmM3MjQ7aWYoXzB4MjllZmQwW18weDU5NDYyZSgweDE5NSldPT09MHgxKXJldHVybiBfMHgyOWVmZDBbMHgwXTtsZXQgXzB4NGVjMWMzPV8weDI5ZWZkMFtfMHg1OTQ2MmUoMHg3MjUpXShfMHgxNzNkZmQ9Pl8weDE3M2RmZFtfMHg1OTQ2MmUoMHg1NzgpXVtfMHg1OTQ2MmUoMHg2ZTQpXT09PV8weDNkMDllOVsnc3RhcnRDb2x1bW4nXSgpKTtpZighXzB4NGVjMWMzW18weDU5NDYyZSgweDE5NSldKXJldHVybjtjb25zdCBfMHg2YTJmMWI9XzB4NGVjMWMzWzB4MF07aWYoXzB4NGVjMWMzWydsZW5ndGgnXT09PTB4MXx8XzB4M2QwOWU5W18weDU5NDYyZSgweDYzMCldKCkhPT1fMHgzZDA5ZTlbJ2VuZExpbmUnXSgpKXJldHVybiBfMHg2YTJmMWI7Y29uc3QgXzB4MWNmYTAxPShfW18weDU5NDYyZSgweDMzYildKHRoaXNbJ29wZW5lZERvY3VtZW50TGluZVJhbmdlcyddKF8weDNkMDllOVtfMHg1OTQ2MmUoMHg2MzApXSgpKSl8fFtdKVsnZmlsdGVyJ10oXzB4MzM1MjkzPT5fMHgzMzUyOTNbJ2VuZExpbmUnXSgpPT09XzB4M2QwOWU5W18weDU5NDYyZSgweDZmMSldKCkmJl8weDMzNTI5M1tfMHg1OTQ2MmUoMHg1NjUpXSgpPT09XzB4M2QwOWU5W18weDU5NDYyZSgweDU2NSldKCkpO2lmKF8weDRlYzFjMz1fMHg0ZWMxYzNbXzB4NTk0NjJlKDB4NzI1KV0oXzB4M2VmZGY2PT5fMHgzZWZkZjZbXzB4NTk0NjJlKDB4MWY1KV1bJ2xpbmUnXT09PV8weDNkMDllOVtfMHg1OTQ2MmUoMHg2ZjEpXSgpKSxfMHgxY2ZhMDFbJ2xlbmd0aCddIT09XzB4NGVjMWMzWydsZW5ndGgnXSlyZXR1cm4gXzB4NmEyZjFiO18weDFjZmEwMVtfMHg1OTQ2MmUoMHg1NTMpXSgoXzB4MWVlZTRjLF8weDhiYzg4MCk9Pl8weDFlZWU0Y1tfMHg1OTQ2MmUoMHgxMWYpXSgpLV8weDhiYzg4MFsnZW5kQ29sdW1uJ10oKSksXzB4NGVjMWMzW18weDU5NDYyZSgweDU1MyldKChfMHg0ZTgwYWYsXzB4MWExMTZiKT0+XzB4NGU4MGFmW18weDU5NDYyZSgweDFmNSldW18weDU5NDYyZSgweDZlNCldLV8weDFhMTE2YltfMHg1OTQ2MmUoMHgxZjUpXVtfMHg1OTQ2MmUoMHg2ZTQpXSk7Y29uc3QgXzB4NDM0MGVmPV8weDFjZmEwMVsnaW5kZXhPZiddKF8weDNkMDllOSk7cmV0dXJufl8weDQzNDBlZj9fMHg0ZWMxYzNbXzB4NDM0MGVmXTpfMHg2YTJmMWI7fVtfMHg0YmM3MjQoMHgyYWMpXSgpe2NvbnN0IF8weDRmZGZmYT1fMHg0YmM3MjQ7cmV0dXJuIHRoaXNbXzB4NGZkZmZhKDB4N2JhKV0oKTt9W18weDRiYzcyNCgweDY4NCldKF8weDEwZTM4YixfMHgxMGM4ZjQpe2NvbnN0IF8weDQxM2E1OT1fMHg0YmM3MjQ7cmV0dXJuIF9bXzB4NDEzYTU5KDB4NzQyKV0odGhpc1tfMHg0MTNhNTkoMHg3YmEpXShfMHgxMGUzOGIsXzB4MTBjOGY0KSlbXzB4NDEzYTU5KDB4Mzg2KV0oXzB4OTI5NWE9PiFfMHg5Mjk1YVtfMHg0MTNhNTkoMHg2MmMpXSgpKVtfMHg0MTNhNTkoMHgzODYpXShfMHg0NmNkMDQ9Pi1fMHg0NmNkMDRbJ3RzJ10oKSlbXzB4NDEzYTU5KDB4M2M2KV0oKTt9WydfY292ZXJpbmdUZXN0cyddKF8weDVlYzkyMyxfMHgxODU4NWEpe2NvbnN0IF8weDQyOGM1Nj1fMHg0YmM3MjQ7bGV0IF8weDM1OWY0ZTtpZihfMHg1ZWM5MjMpe2lmKHRoaXNbJ19kb2N1bWVudEluRWRpdG9yJ10pXzB4MzU5ZjRlPXRoaXNbXzB4NDI4YzU2KDB4NmE1KV1bJ2xpbmUnXShfMHg1ZWM5MjMpO2Vsc2V7Y29uc3QgXzB4NTJhYWJlPW5ldyBfMHgxNTNkNTcodGhpc1tfMHg0MjhjNTYoMHg0NjIpXSgpLHRoaXNbJ19jYXBhYmlsaXRpZXMnXSx0aGlzWydfZmlsdGVyJ10sdGhpc1snX2dldHRlciddKTtfMHg1MmFhYmVbJ3VwZGF0ZSddKF9bJ3ZhbHVlcyddKHRoaXNbJ19yYW5nZXMnXSksITB4MSwhMHgwLCEweDEpLF8weDM1OWY0ZT1fMHg1MmFhYmVbXzB4NDI4YzU2KDB4MmE0KV0oXzB4NWVjOTIzKTt9aWYoIV8weDM1OWY0ZSlyZXR1cm5bXTt9bGV0IF8weDE4YzkwYj1fMHgzNTlmNGU/XzB4MzU5ZjRlWydyYW5nZXMnXSgpOnRoaXNbXzB4NDI4YzU2KDB4NDZmKV07cmV0dXJuIF8weDE4NTg1YSYmKF8weDE4YzkwYj1fW18weDQyOGM1NigweDcyNSldKF8weDE4YzkwYixfMHgxODU4NWEpKSx0aGlzW18weDQyOGM1NigweDYxMildKF8weDE4YzkwYik7fVsnX3Rlc3RzQ292ZXJpbmdSYW5nZXMnXShfMHgzOGVkMjgpe2NvbnN0IF8weDQ1ZGIyMz1fMHg0YmM3MjQ7cmV0dXJuIF9bXzB4NDVkYjIzKDB4MWE3KV0oXzB4MzhlZDI4LChfMHg2MmUzYTcsXzB4MzRkYjg2KT0+KF9bXzB4NDVkYjIzKDB4M2U2KV0oXzB4MzRkYjg2W18weDQ1ZGIyMygweDJhYyldKCksXzB4NjQ4MmFlPT57XzB4NjJlM2E3W18weDY0ODJhZVsna2V5J10oKV09XzB4NjQ4MmFlO30pLF8weDYyZTNhNykse30pO31bXzB4NGJjNzI0KDB4MjRmKV0oKXtjb25zdCBfMHgyNmIzMWY9XzB4NGJjNzI0O2RlbGV0ZSB0aGlzWydfZG9jdW1lbnRJbkVkaXRvciddLF9bXzB4MjZiMzFmKDB4M2U2KV0odGhpc1tfMHgyNmIzMWYoMHg0NmYpXSxfMHgzZmU2M2Q9Pl8weDNmZTYzZFtfMHgyNmIzMWYoMHgyNGYpXSgpKSxkZWxldGUgdGhpc1tfMHgyNmIzMWYoMHg0NmYpXSxkZWxldGUgdGhpc1tfMHgyNmIzMWYoMHg0YTYpXSxkZWxldGUgdGhpc1snX3Rlc3REZWNsYXJhdGlvbkxpbmVNYXAnXSxkZWxldGUgdGhpc1snX3Rlc3RNYXRjaFNuYXBzaG90Q2FsbExpbmVNYXAnXSxkZWxldGUgdGhpc1tfMHgyNmIzMWYoMHgxMGQpXSxkZWxldGUgdGhpc1tfMHgyNmIzMWYoMHg0MTcpXSxkZWxldGUgdGhpc1tfMHgyNmIzMWYoMHgyM2IpXTt9WydyYW5nZUNvbnNvbGVMb2cnXShfMHgxM2ZkZTIpe2NvbnN0IF8weDEyNWZiZj1fMHg0YmM3MjQ7cmV0dXJuIHRoaXNbXzB4MTI1ZmJmKDB4NTA3KV1bXzB4MTNmZGUyWydrZXknXSgpXTt9W18weDRiYzcyNCgweDFlZSldKCl7dGhpc1snX3JhbmdlQ29uc29sZUxvZyddPU9iamVjdFsnY3JlYXRlJ10obnVsbCk7fVtfMHg0YmM3MjQoMHg0NjIpXSgpe2NvbnN0IF8weGMwMGY0MD1fMHg0YmM3MjQ7cmV0dXJuIHRoaXNbXzB4YzAwZjQwKDB4NzY5KV1bJ2lkJ107fVsncGF0aCddKCl7Y29uc3QgXzB4M2JjZGUxPV8weDRiYzcyNDtyZXR1cm4gdGhpc1tfMHgzYmNkZTEoMHg3NjkpXVtfMHgzYmNkZTEoMHg0OGYpXTt9W18weDRiYzcyNCgweDM4NyldKF8weDU1MTBmNSl7Y29uc3QgXzB4YmVhZDIzPV8weDRiYzcyNDtsZXQgXzB4MzIwM2UzPU9iamVjdFsnY3JlYXRlJ10obnVsbCksXzB4NGU0ZjQ0PXRoaXNbXzB4YmVhZDIzKDB4NGE2KV1bXzB4NTUxMGY1W18weGJlYWQyMygweDQ2MildKCldO2lmKF8weDRlNGY0NCl7aWYodGhpc1snaXNUZXN0RmlsZSddKCkmJl8weDRlNGY0NFtfMHhiZWFkMjMoMHg0YjMpXSgpKXtjb25zdCBfMHg1NWYxZWM9dGhpc1tfMHhiZWFkMjMoMHg3NDYpXVtfMHg0ZTRmNDRbXzB4YmVhZDIzKDB4NGIzKV0oKV07aWYoXzB4NTVmMWVjKXtpZihfMHg1NWYxZWNbJ2VudHJpZXMnXSl7aWYoXzB4NTVmMWVjW18weGJlYWQyMygweDE0NyldKF8weDRlNGY0NFsna2V5J10oKSksXzB4NTVmMWVjW18weGJlYWQyMygweDFlNildPT09MHgwJiZkZWxldGUgdGhpc1tfMHhiZWFkMjMoMHg3NDYpXVtfMHg0ZTRmNDRbXzB4YmVhZDIzKDB4NGIzKV0oKV0sXzB4NTVmMWVjW18weGJlYWQyMygweDFlNildPT09MHgxKXtjb25zdCBbLF8weGViMTAwMl09XzB4NTVmMWVjWydlbnRyaWVzJ10oKVsnbmV4dCddKClbXzB4YmVhZDIzKDB4M2M2KV07dGhpc1tfMHhiZWFkMjMoMHg3NDYpXVtfMHg0ZTRmNDRbXzB4YmVhZDIzKDB4NGIzKV0oKV09XzB4ZWIxMDAyO319ZWxzZSBkZWxldGUgdGhpc1tfMHhiZWFkMjMoMHg3NDYpXVtfMHg0ZTRmNDRbXzB4YmVhZDIzKDB4NGIzKV0oKV07fX1fWydlYWNoJ10oXzB4NGU0ZjQ0W18weGJlYWQyMygweDE1MCldKCksXzB4Njc5NTY5PT57Y29uc3QgXzB4MjU2NzNlPV8weGJlYWQyMztfMHgzMjAzZTNbXzB4Njc5NTY5W18weDI1NjczZSgweDQ2MildKCldPV8weDY3OTU2OTt9KTt9aWYodGhpc1tfMHhiZWFkMjMoMHg0YTYpXVtfMHg1NTEwZjVbXzB4YmVhZDIzKDB4NDYyKV0oKV09XzB4NTUxMGY1LF8weDU1MTBmNVtfMHhiZWFkMjMoMHhhMildKHRoaXMpLHRoaXNbXzB4YmVhZDIzKDB4NDhiKV0oKSYmXzB4NTUxMGY1W18weGJlYWQyMygweDRiMyldKCkpe2NvbnN0IF8weDMxZGExOD10aGlzWydfdGVzdERlY2xhcmF0aW9uTGluZU1hcCddW18weDU1MTBmNVsnZGVjbGFyYXRpb25MaW5lJ10oKV07aWYoXzB4MzFkYTE4KXtpZihfMHgzMWRhMThbXzB4YmVhZDIzKDB4NzJmKV0pXzB4MzFkYTE4W18weGJlYWQyMygweDI5YyldKF8weDU1MTBmNVtfMHhiZWFkMjMoMHg0NjIpXSgpLF8weDU1MTBmNSk7ZWxzZXtjb25zdCBfMHgzMGNhNDQ9bmV3IE1hcCgpO18weDMwY2E0NFsnc2V0J10oXzB4NTUxMGY1W18weGJlYWQyMygweDQ2MildKCksXzB4NTUxMGY1KSxfMHgzMGNhNDRbXzB4YmVhZDIzKDB4MjljKV0oXzB4MzFkYTE4W18weGJlYWQyMygweDQ2MildKCksXzB4MzFkYTE4KSx0aGlzW18weGJlYWQyMygweDc0NildW18weDU1MTBmNVtfMHhiZWFkMjMoMHg0YjMpXSgpXT1fMHgzMGNhNDQ7fX1lbHNlIHRoaXNbJ190ZXN0RGVjbGFyYXRpb25MaW5lTWFwJ11bXzB4NTUxMGY1W18weGJlYWQyMygweDRiMyldKCldPV8weDU1MTBmNTt9cmV0dXJuIF8weDMyMDNlMzt9WydyYW5nZUNvdmVyYWdlQ2hhbmdlZCddKF8weDFkZmU2NixfMHgyMzYzY2Ipe2NvbnN0IF8weDIwZGEyZD1fMHg0YmM3MjQ7dGhpc1tfMHgyMGRhMmQoMHgzNmIpXVtfMHgxZGZlNjZbJ2tleSddKCldPV8weDFkZmU2NjtsZXQgXzB4MTI3NTg5PV8weDFkZmU2NlsnaXNDb3ZlcmVkJ10oKTtfMHgyMzYzY2IhPT1fMHgxMjc1ODkmJih0aGlzWydfbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJ10rPV8weDEyNzU4OT8weDE6LTB4MSk7fVtfMHg0YmM3MjQoMHg0OGIpXSgpe2NvbnN0IF8weDFmNDE3NT1fMHg0YmM3MjQ7cmV0dXJuIHRoaXNbXzB4MWY0MTc1KDB4NzY5KV1bXzB4MWY0MTc1KDB4NWZmKV07fVsnY292ZXJhZ2UnXShfMHgyMThkZjcpe2NvbnN0IF8weDQyYWRkMT1fMHg0YmM3MjQ7aWYoIXRoaXNbXzB4NDJhZGQxKDB4NWFmKV0oKSlyZXR1cm47Y29uc3QgXzB4NDMxYzc3PXRoaXNbJ251bWJlck9mQWxsUmFuZ2VzJ10oITB4MCk7cmV0dXJuIE1hdGhbXzB4NDJhZGQxKDB4NWNmKV0oMHgyNzEwKihfMHgyMThkZjc9PW51bGw/dGhpc1tfMHg0MmFkZDEoMHg0NDcpXTpfMHgyMThkZjcpL18weDQzMWM3NykvMHg2NDt9WydoYXNSZXBvcnRhYmxlQ292ZXJhZ2UnXSgpe2NvbnN0IF8weGY0YTUwOT1fMHg0YmM3MjQ7cmV0dXJuIXRoaXNbJ2lzVGVzdEZpbGUnXSgpJiZ0aGlzWydpbnN0cnVtZW50ZWQnXSgpJiYhdGhpc1tfMHhmNGE1MDkoMHg3NTIpXTt9W18weDRiYzcyNCgweDM5YSldKCl7Y29uc3QgXzB4MTNkZGYyPV8weDRiYzcyNDtyZXR1cm4gdGhpc1tfMHgxM2RkZjIoMHg0OGIpXSgpfHx0aGlzW18weDEzZGRmMigweDVhZildKCk7fVtfMHg0YmM3MjQoMHg3OTIpXShfMHgxNzE2NmMpe2NvbnN0IF8weDExN2Y4Mz1fMHg0YmM3MjQ7cmV0dXJuIF8weDE3MTY2Yz09bnVsbD90aGlzW18weDExN2Y4MygweDQ0NyldOl8weDE3MTY2Yzt9W18weDRiYzcyNCgweDY1OCldKF8weDI3ODdhYSl7Y29uc3QgXzB4NWVkNWQxPV8weDRiYzcyNCxfMHgyMWJjYWI9X1snc2l6ZSddKHRoaXNbXzB4NWVkNWQxKDB4NDZmKV0pO3JldHVybiBfMHgyMWJjYWI9PT0weDAmJnRoaXNbJ19jb3ZlcmFnZUNhbGN1bGF0aW9uRXhwZWN0ZWQnXSYmIXRoaXNbJ19pbnN0cnVtZW50ZWRCeVRlc3RpbmdGcmFtZXdvcmsnXT8oIV8weDI3ODdhYSYmdGhpc1tfMHg1ZWQ1ZDEoMHgzYWYpXSgpLF9bXzB4NWVkNWQxKDB4M2NiKV0odGhpc1tfMHg1ZWQ1ZDEoMHg1ZjEpXSk/dGhpc1tfMHg1ZWQ1ZDEoMHg1ZjEpXToweDEpOl8weDIxYmNhYjt9WyduZWVkVG9SZWJ1aWxkRGlzcGxheWFibGVSYW5nZXMnXSgpe3RoaXNbJ19uZWVkVG9SZWJ1aWxkRGlzcGxheWFibGVSYW5nZXMnXT0hMHgwO31bXzB4NGJjNzI0KDB4NjI2KV0oXzB4NTJiNDBmLF8weDMwYTM4MixfMHg0ZjQ1YzApe2NvbnN0IF8weDQxNzM4MD1fMHg0YmM3MjQ7bGV0IF8weDNiYzI0NT10aGlzO3RoaXNbXzB4NDE3MzgwKDB4NDkyKV09XzB4MzBhMzgyLF8weDMwYTM4MiYmKHRoaXNbXzB4NDE3MzgwKDB4NDRmKV09ITB4MCx0aGlzW18weDQxNzM4MCgweDM0MildKCkpO2xldCBfMHgxNzc3NDI9T2JqZWN0W18weDQxNzM4MCgweDQ0OCldKG51bGwpO19bXzB4NDE3MzgwKDB4M2U2KV0oXzB4NTJiNDBmLF8weDQ4YzYwNz0+e2NvbnN0IF8weDY2NTAyNT1fMHg0MTczODA7bGV0IF8weDE2OTc0NT1fMHg0OGM2MDdbXzB4NjY1MDI1KDB4NDYyKV0oKSxfMHg2YTIwZGQ9XzB4M2JjMjQ1W18weDY2NTAyNSgweDQ2ZildW18weDE2OTc0NV07aWYoIV8weDZhMjBkZClfMHgzYmMyNDVbJ19yYW5nZXMnXVtfMHgxNjk3NDVdPV8weDQ4YzYwNyxfMHgzYmMyNDVbXzB4NjY1MDI1KDB4NzJlKV1bXzB4MTY5NzQ1XT1fMHg0OGM2MDcsXzB4NDhjNjA3W18weDY2NTAyNSgweDc0OCldKCksXzB4NDhjNjA3W18weDY2NTAyNSgweDMyYildKCkmJiFfMHgzMGEzODImJl8weDNiYzI0NVsnX251bWJlck9mQ292ZXJlZFJhbmdlcyddKys7ZWxzZXt2YXIgXzB4NmI0Mzk9XzB4NmEyMGRkW18weDY2NTAyNSgweDMyYildKCksXzB4N2RlNjgyPV8weDQ4YzYwN1snaXNDb3ZlcmVkJ10oKTshXzB4MzBhMzgyJiZfMHg2YjQzOSE9PV8weDdkZTY4MiYmKF8weDNiYzI0NVtfMHg2NjUwMjUoMHg0NDcpXSs9XzB4N2RlNjgyPzB4MTotMHgxKSxfMHg2YTIwZGRbXzB4NjY1MDI1KDB4NWMzKV0oXzB4NDhjNjA3LF8weDMwYTM4MixfMHg0ZjQ1YzApLF8weDE3Nzc0MltfMHgxNjk3NDVdPV8weDZhMjBkZCxfMHgzYmMyNDVbXzB4NjY1MDI1KDB4MzZiKV1bXzB4MTY5NzQ1XT1fMHg2YTIwZGQ7fX0pLF8weDMwYTM4MiYmKF8weDNiYzI0NVtfMHg0MTczODAoMHg0NDcpXT0weDAsdGhpc1snX2xpbmVUb1JhbmdlTWFwJ109T2JqZWN0WydjcmVhdGUnXShudWxsKSxfW18weDQxNzM4MCgweDNlNildKF9bXzB4NDE3MzgwKDB4MzNiKV0odGhpc1tfMHg0MTczODAoMHg0NmYpXSksXzB4MmU1YTQ2PT57Y29uc3QgXzB4NDIzYjNhPV8weDQxNzM4MDtsZXQgXzB4MzdlNTc3PV8weDJlNWE0NltfMHg0MjNiM2EoMHg0NjIpXSgpO2lmKCEoXzB4M2JjMjQ1W18weDQyM2IzYSgweDcyZSldW18weDM3ZTU3N118fF8weDE3Nzc0MltfMHgzN2U1NzddKSlfMHgzYmMyNDVbXzB4NDIzYjNhKDB4MjI3KV1bXzB4MzdlNTc3XT1fMHgyZTVhNDYsZGVsZXRlIF8weDNiYzI0NVtfMHg0MjNiM2EoMHg0NmYpXVtfMHgzN2U1NzddO2Vsc2V7XzB4MmU1YTQ2W18weDQyM2IzYSgweDMyYildKCkmJl8weDNiYzI0NVtfMHg0MjNiM2EoMHg0NDcpXSsrO2ZvcihsZXQgXzB4NWUxYjg5PV8weDJlNWE0Nlsnc3RhcnRMaW5lJ10oKTtfMHg1ZTFiODk8PV8weDJlNWE0NltfMHg0MjNiM2EoMHg2ZjEpXSgpO18weDVlMWI4OSsrKXtsZXQgXzB4YTE1ZjQ4PV8weDNiYzI0NVtfMHg0MjNiM2EoMHgxYjkpXVtfMHg1ZTFiODldO18weGExNWY0OHx8KF8weGExNWY0OD1fMHgzYmMyNDVbJ19saW5lVG9SYW5nZU1hcCddW18weDVlMWI4OV09eydjbG9zZXN0Jzp2b2lkIDB4MCwnc3RhcnRpbmdPblRoZUxpbmUnOltdfSksKCFfMHhhMTVmNDhbXzB4NDIzYjNhKDB4MmEwKV18fF8weDJlNWE0NltfMHg0MjNiM2EoMHgyOWIpXShfMHg1ZTFiODksXzB4YTE1ZjQ4W18weDQyM2IzYSgweDJhMCldKSkmJihfMHhhMTVmNDhbXzB4NDIzYjNhKDB4MmEwKV09XzB4MmU1YTQ2KSxfMHg1ZTFiODk9PT1fMHgyZTVhNDZbJ3N0YXJ0TGluZSddKCkmJl8weGExNWY0OFsnc3RhcnRpbmdPblRoZUxpbmUnXVtfMHg0MjNiM2EoMHg0MmQpXShfMHgyZTVhNDYpO319fSkpO31bJ293blRlc3RzJ10oKXtjb25zdCBfMHg0MDUzYzE9XzB4NGJjNzI0O3JldHVybiBfWyd2YWx1ZXMnXSh0aGlzW18weDQwNTNjMSgweDRhNildKTt9W18weDRiYzcyNCgweDU2YSldKCl7Y29uc3QgXzB4NDYwMmQ0PV8weDRiYzcyNDtsZXQgXzB4M2UxZGZjPU9iamVjdFsnY3JlYXRlJ10obnVsbCk7cmV0dXJuIF9bXzB4NDYwMmQ0KDB4M2U2KV0odGhpc1snb3duVGVzdHMnXSgpLF8weDFmYTYwOT0+e2NvbnN0IF8weDIwOGJlYT1fMHg0NjAyZDQ7X1tfMHgyMDhiZWEoMHgzZTYpXShfMHgxZmE2MDlbXzB4MjA4YmVhKDB4MTUwKV0oKSxfMHgyNTM0M2Q9PntfMHgzZTFkZmNbXzB4MjUzNDNkWydrZXknXSgpXT1fMHgyNTM0M2Q7fSk7fSksdGhpc1tfMHg0NjAyZDQoMHg0YTYpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLHRoaXNbJ190ZXN0RGVjbGFyYXRpb25MaW5lTWFwJ109T2JqZWN0W18weDQ2MDJkNCgweDQ0OCldKG51bGwpLF8weDNlMWRmYzt9W18weDRiYzcyNCgweDcxOSldKF8weDZlNGExMil7Y29uc3QgXzB4NTEwN2YwPV8weDRiYzcyNDtpZighX1tfMHg1MTA3ZjAoMHg3MTcpXShfMHg2ZTRhMTIpKXJldHVybjtjb25zdCBfMHg1YmEyMTQ9XzB4MTYzMWNmWydyYW5nZUtleSddKF8weDZlNGExMik7cmV0dXJuIHRoaXNbJ19yYW5nZXMnXVtfMHg1YmEyMTRdO31bXzB4NGJjNzI0KDB4NWYyKV0oXzB4NGJkYzdkKXtjb25zdCBfMHgxZmRmYmU9XzB4NGJjNzI0O2xldCBfMHgyOWFhNTE9dGhpc1snX2xpbmVUb1JhbmdlTWFwJ11bXzB4NGJkYzdkXTtpZighXzB4MjlhYTUxJiZ0aGlzW18weDFmZGZiZSgweDM5ZildW18weDFmZGZiZSgweDZkMildKXtmb3IoO18weDRiZGM3ZD4weDAmJiFfMHgyOWFhNTE7KV8weDRiZGM3ZC0tLF8weDI5YWE1MT10aGlzWydfbGluZVRvUmFuZ2VNYXAnXVtfMHg0YmRjN2RdO31pZihfMHgyOWFhNTEpcmV0dXJuIF8weDI5YWE1MVtfMHgxZmRmYmUoMHgyYTApXTt9W18weDRiYzcyNCgweDM0MildKCl7Y29uc3QgXzB4MTA0MzUzPV8weDRiYzcyNDtsZXQgXzB4MWNlYzMyPXRoaXMsXzB4NGIxYjA3PXRoaXNbXzB4MTA0MzUzKDB4NDZmKV07dGhpc1tfMHgxMDQzNTMoMHg0NmYpXT1PYmplY3RbXzB4MTA0MzUzKDB4NDQ4KV0obnVsbCksX1snZWFjaCddKF8weDRiMWIwNyxfMHgzNjdjODY9Pntjb25zdCBfMHgxY2UzODA9XzB4MTA0MzUzO2xldCBfMHg1NjdhOTM9XzB4MzY3Yzg2WydrZXknXSgpLF8weDRjNmUxMD1fMHgxY2VjMzJbJ19yYW5nZXMnXVtfMHg1NjdhOTNdO18weDFjZWMzMltfMHgxY2UzODAoMHg0NmYpXVtfMHg1NjdhOTNdPV8weDM2N2M4NixfMHg0YzZlMTAmJl8weDRjNmUxMFtfMHgxY2UzODAoMHgyNGYpXSgpO30pO31bJ19zaGlmdFRyYWNrZWRMaW5lcyddKF8weDNlYmUwZixfMHgyZTQyM2YsXzB4MThkMTkxKXtjb25zdCBfMHg0YWQ5YjU9XzB4NGJjNzI0LF8weDEwYmM0MD1bXTtmb3IobGV0IF8weDMwZTM3MiBpbiB0aGlzW18weDRhZDliNSgweDEwZCldKWlmKF8weDJlNDIzZjwweDAmJl8weDMwZTM3Mj49XzB4MThkMTkxW18weDRhZDliNSgweDU3OCldJiZfMHgzMGUzNzI8XzB4MThkMTkxWydlbmQnXSlkZWxldGUgdGhpc1tfMHg0YWQ5YjUoMHgxMGQpXVtfMHgzMGUzNzJdO2Vsc2V7aWYoXzB4MzBlMzcyPj1fMHgzZWJlMGYpe2NvbnN0IF8weDVlMjAyND10aGlzWydfdHJhY2tlZExpbmVNYXAnXVtfMHgzMGUzNzJdO2RlbGV0ZSB0aGlzWydfdHJhY2tlZExpbmVNYXAnXVtfMHgzMGUzNzJdLF8weDMwZTM3Mj1wYXJzZUludChfMHgzMGUzNzIpLF8weDMwZTM3Mis9XzB4MmU0MjNmLF8weDMwZTM3Mj4weDAmJl8weDEwYmM0MFtfMHg0YWQ5YjUoMHg0MmQpXSh7J251bWJlcic6XzB4MzBlMzcyLCdkYXRhJzpfMHg1ZTIwMjR9KTt9fWZvcihjb25zdCBfMHgxNmJkY2Ugb2YgXzB4MTBiYzQwKXtfMHgxNmJkY2VbXzB4NGFkOWI1KDB4NDUxKV1bXzB4NGFkOWI1KDB4Njk5KV09XzB4MTZiZGNlW18weDRhZDliNSgweDY5OSldO2NvbnN0IF8weDFiOGU1MD1fMHgxNmJkY2VbXzB4NGFkOWI1KDB4NDUxKV1bXzB4NGFkOWI1KDB4MzQ5KV07XzB4MWI4ZTUwW18weDRhZDliNSgweDVhMSldJiZfMHgxYjhlNTBbXzB4NGFkOWI1KDB4NWExKV1bXzB4NGFkOWI1KDB4NzNiKV0mJihfMHgxYjhlNTBbXzB4NGFkOWI1KDB4NWExKV1bJ3JhbmdlJ11bMHgwXSs9XzB4MmU0MjNmLF8weDFiOGU1MFtfMHg0YWQ5YjUoMHg1YTEpXVtfMHg0YWQ5YjUoMHg3M2IpXVsweDJdKz1fMHgyZTQyM2YpLHRoaXNbXzB4NGFkOWI1KDB4MTBkKV1bXzB4MTZiZGNlWydudW1iZXInXV09XzB4MTZiZGNlW18weDRhZDliNSgweDQ1MSldO319W18weDRiYzcyNCgweGI3KV0oXzB4MmQ4OGM2LF8weDU5NjZhZCl7Y29uc3QgXzB4MTk3NTk4PV8weDRiYzcyNDtsZXQgXzB4NDMyZTljPSEweDE7aWYodGhpc1tfMHgxOTc1OTgoMHg0OGIpXSgpKXtjb25zdCBfMHgzM2Q1ODY9W107Zm9yKGxldCBfMHg1N2Y1YzMgaW4gdGhpc1tfMHgxOTc1OTgoMHg3NDYpXSlpZihfMHg1N2Y1YzM+PV8weDJkODhjNil7Y29uc3QgXzB4MWU5MTJkPXRoaXNbXzB4MTk3NTk4KDB4NzQ2KV1bXzB4NTdmNWMzXTtkZWxldGUgdGhpc1tfMHgxOTc1OTgoMHg3NDYpXVtfMHg1N2Y1YzNdLF8weDU3ZjVjMz1wYXJzZUludChfMHg1N2Y1YzMpLF8weDU3ZjVjMys9XzB4NTk2NmFkLF8weDMzZDU4NltfMHgxOTc1OTgoMHg0MmQpXSh7J2xpbmVOdW1iZXInOl8weDU3ZjVjMywndGVzdCc6XzB4MWU5MTJkfSk7fWZvcihjb25zdCBfMHgxYzhiMmEgb2YgXzB4MzNkNTg2KXtjb25zdCBfMHg0MWZiOGI9XzB4MWM4YjJhW18weDE5NzU5OCgweDVmZildO2lmKF8weDQxZmI4YltfMHgxOTc1OTgoMHg3MmYpXSl7Zm9yKGNvbnN0IFssXzB4M2I3NGQ3XW9mIF8weDQxZmI4YilfMHgzYjc0ZDdbXzB4MTk3NTk4KDB4NGIzKV0oXzB4MWM4YjJhW18weDE5NzU5OCgweDEwOCldKSxfMHg0MzJlOWM9XzB4M2I3NGQ3W18weDE5NzU5OCgweDc5OCldKF8weDJkODhjNixfMHg1OTY2YWQpfHxfMHg0MzJlOWM7fWVsc2UgXzB4NDFmYjhiW18weDE5NzU5OCgweDRiMyldKF8weDFjOGIyYVtfMHgxOTc1OTgoMHgxMDgpXSksXzB4NDMyZTljPV8weDQxZmI4Ylsnc2hpZnRFcnJvcnMnXShfMHgyZDg4YzYsXzB4NTk2NmFkKXx8XzB4NDMyZTljO3RoaXNbXzB4MTk3NTk4KDB4NzQ2KV1bXzB4MWM4YjJhW18weDE5NzU5OCgweDEwOCldXT1fMHg0MWZiOGI7fX1yZXR1cm4gXzB4NDMyZTljO31bJ19zaGlmdFRlc3RNYXRjaFNuYXBzaG90Q2FsbExpbmVzJ10oXzB4NDU1ODA4LF8weDU0ZmU1NCl7Y29uc3QgXzB4MjA1NTA1PV8weDRiYzcyNCxfMHg1MWZmOWM9W107Zm9yKGxldCBfMHg0NzU3NTIgaW4gdGhpc1tfMHgyMDU1MDUoMHgyYjIpXSlpZihfMHg0NzU3NTI+PV8weDQ1NTgwOCl7Y29uc3QgXzB4NGNmOGZkPXRoaXNbXzB4MjA1NTA1KDB4MmIyKV1bXzB4NDc1NzUyXTtkZWxldGUgdGhpc1tfMHgyMDU1MDUoMHgyYjIpXVtfMHg0NzU3NTJdLF8weDQ3NTc1Mj1wYXJzZUludChfMHg0NzU3NTIpLF8weDQ3NTc1Mis9XzB4NTRmZTU0LF8weDUxZmY5Y1tfMHgyMDU1MDUoMHg0MmQpXSh7J2xpbmVOdW1iZXInOl8weDQ3NTc1MiwnZGF0YSc6XzB4NGNmOGZkfSk7fWZvcihjb25zdCBfMHgyMDY3YjQgb2YgXzB4NTFmZjljKXRoaXNbXzB4MjA1NTA1KDB4MmIyKV1bXzB4MjA2N2I0WydsaW5lTnVtYmVyJ11dPV8weDIwNjdiNFtfMHgyMDU1MDUoMHg0NTEpXTt9fV8weDQxOWMzMltfMHg0YmM3MjQoMHgzNjYpXT1fMHgyMzczNDU7fSx7Jy4uLy4uLy4uL2xpYi9iYWJlbFJhbmdlQ2FsY3VsYXRvcic6MHgxLCcuLi8uLi8uLi9saWIvdXRpbHMnOjB4MjEsJy4vY292ZXJhYmxlUmFuZ2UnOjB4OCwnLi9kb2N1bWVudEluRWRpdG9yJzoweGEsJ3ZtJzp2b2lkIDB4MH1dLDB4MTg6W2Z1bmN0aW9uKF8weDJhMGY0ZSxfMHgxNGNiMjcsXzB4MmFiODE1KXsndXNlIHN0cmljdCc7Y29uc3QgXzB4MzFmYTBlPV8weGFlMjY7Y29uc3QgXzB4NTA3ZmJlPV8weDMxZmEwZSgweDE3YSksXzB4NTQ0OGVlPV8weDMxZmEwZSgweDQyNSk7Y2xhc3MgXzB4MmZmZjIze2NvbnN0cnVjdG9yKCl7Y29uc3QgXzB4OTE1NjgwPV8weDMxZmEwZTt0aGlzWydfc3RvcHBlZCddPSEweDEsdGhpc1tfMHg5MTU2ODAoMHg1ZTIpXSgpO31hc3luY1snX2NoZWNrVXJsJ10oXzB4MzY2NWU1KXtjb25zdCBfMHgzNjA4YjI9XzB4MzFmYTBlLF8weDQ0ZGM3Mj1hd2FpdCgoYXN5bmMoKT0+e2xldCBfMHgyMzk5MGM9ITB4MSxfMHgyZjY2NzA7cmV0dXJuIG5ldyBQcm9taXNlKF8weDUzMmJkZj0+e2NvbnN0IF8weDM1ZDdmMT1fMHhhZTI2LF8weDQzNjI0Yz1fMHgxMTg5ZmI9PntfMHgyMzk5MGN8fChfMHgyMzk5MGM9ITB4MCxfMHg1MzJiZGYoXzB4MTE4OWZiKSxfMHgyZjY2NzAmJmNsZWFyVGltZW91dChfMHgyZjY2NzApKTt9O3RyeXtjb25zdCBfMHgyZTE0NzU9XzB4MmEwZjRlKF8weDM1ZDdmMSgweDczYykpLF8weDRiYTlhYj1uZXcgXzB4MmUxNDc1WyhfMHgzNWQ3ZjEoMHgzMzEpKV0oKTtfMHg0YmE5YWJbXzB4MzVkN2YxKDB4NjY3KV0oMHhjODJkLF8weDM1ZDdmMSgweDI5NSksKCk9Pntjb25zdCBfMHgzM2M5OWI9XzB4MzVkN2YxO18weDRiYTlhYltfMHgzM2M5OWIoMHgxNzMpXShfMHgzM2M5OWIoMHg3NzcpKTt9KSxfMHg0YmE5YWJbJ29uJ10oXzB4MzVkN2YxKDB4NDg1KSwoKT0+e18weDQzNjI0YyhfMHg1MDdmYmUpO30pLF8weDRiYTlhYlsnb24nXShfMHgzNWQ3ZjEoMHg0NTEpLF8weDE3YzIxYz0+e2NvbnN0IF8weDE5MmViZD1fMHgzNWQ3ZjE7XzB4NDM2MjRjKH5fMHgxN2MyMWNbJ3RvU3RyaW5nJ10oKVsnaW5kZXhPZiddKF8weDE5MmViZCgweGVlKSk/XzB4NTQ0OGVlOl8weDUwN2ZiZSksXzB4NGJhOWFiW18weDE5MmViZCgweDNmNyldKCk7fSksXzB4NGJhOWFiWydvbiddKF8weDM1ZDdmMSgweDZiNSksKCk9PntfMHg0MzYyNGMoXzB4NTA3ZmJlKTt9KSxfMHgyZjY2NzA9c2V0VGltZW91dCgoKT0+e18weDQzNjI0YyhfMHg1MDdmYmUpO30sMHgxMzg4KTt9Y2F0Y2goXzB4MzJiYTg2KXtfMHg0MzYyNGMoXzB4NTA3ZmJlKTt9fSk7fSkoKSk7XzB4NDRkYzcyIT09XzB4MzY2NWU1JiZ0aGlzWydfb25VcGRhdGUnXSYmdGhpc1tfMHgzNjA4YjIoMHg2MmEpXShfMHg0NGRjNzIpLHRoaXNbXzB4MzYwOGIyKDB4NGEzKV18fCh0aGlzWydfdGltZW91dCddPXNldFRpbWVvdXQoKCk9PnRoaXNbJ19jaGVja1VybCddKF8weDQ0ZGM3MiksMHgzZTgqMHgzYyoweDIpKTt9W18weDMxZmEwZSgweDRkNildKCl7Y29uc3QgXzB4MmNlOTkyPV8weDMxZmEwZTt0aGlzWydfc3RvcHBlZCddPSEweDAsdGhpc1snX3RpbWVvdXQnXSYmY2xlYXJUaW1lb3V0KHRoaXNbXzB4MmNlOTkyKDB4MWI1KV0pO31bJ29uVXBkYXRlJ10oXzB4MWFlYjQzKXtjb25zdCBfMHg1NGEyYmE9XzB4MzFmYTBlO3RoaXNbXzB4NTRhMmJhKDB4NjJhKV09XzB4MWFlYjQzO319XzB4MTRjYjI3W18weDMxZmEwZSgweDM2NildPW5ldyBfMHgyZmZmMjMoKTt9LHsnbmV0Jzp2b2lkIDB4MH1dLDB4MTk6W2Z1bmN0aW9uKF8weDNlN2QyNSxfMHgzZGNlYzIsXzB4MzAxMWYyKXtjb25zdCBfMHgxYTExNDY9XzB4YWUyNjtfMHgzZGNlYzJbXzB4MWExMTQ2KDB4MzY2KV09eydsaW5lU3RhdGUnOnsnbm90Q292ZXJlZCc6MHgxLCdmdWxseUNvdmVyZWQnOjB4MiwncGFydGlhbGx5Q292ZXJlZCc6MHgzLCdlcnJvclNvdXJjZSc6MHg0LCdlcnJvclBhdGgnOjB4NX19O30se31dLDB4MWE6W2Z1bmN0aW9uKF8weDQwZDQ3YixfMHg0OGI3ODMsXzB4NWUwYWQ3KXtjb25zdCBfMHgxZGVjZTU9XzB4YWUyNjt2YXIgXzB4MjIxODcxPWZ1bmN0aW9uKF8weDI3OTZlZil7Y29uc3QgXzB4M2ZmNDRmPV8weGFlMjY7cmV0dXJuIF8weDI3OTZlZiYmXzB4Mjc5NmVmW18weDNmZjQ0ZigweDVjNCldKC9eXHMrfFxzKyQvZ20sJycpO30sXzB4MjZhOTRlPVtfMHgxZGVjZTUoMHg0N2QpLF8weDFkZWNlNSgweDZkMyksJ01hcmNoJyxfMHgxZGVjZTUoMHg2NjIpLF8weDFkZWNlNSgweDY1NyksXzB4MWRlY2U1KDB4Mjg1KSwnSnVseScsXzB4MWRlY2U1KDB4OTApLF8weDFkZWNlNSgweDQ1MCksJ09jdG9iZXInLF8weDFkZWNlNSgweDI1ZCksXzB4MWRlY2U1KDB4Y2QpXTtjb25zdCBfMHg1YzBjMTA9XzB4MWRlY2U1KDB4MTA3KTtfMHg0OGI3ODNbJ2V4cG9ydHMnXT17J3dhbGxhYnlFbWFpbCc6ZnVuY3Rpb24oKXtyZXR1cm4gXzB4NWMwYzEwO30sJ25vcm1hbGl6ZVBhdGgnOmZ1bmN0aW9uKF8weDQ5ZTViNCl7Y29uc3QgXzB4YTIyMDBhPV8weDFkZWNlNTtyZXR1cm4gcHJvY2Vzc1sncGxhdGZvcm0nXT09PV8weGEyMjAwYSgweDYxZikmJl8weDQ5ZTViND9fMHg0OWU1YjRbXzB4YTIyMDBhKDB4NWM0KV0oL1xcL2csJy8nKTpfMHg0OWU1YjQ7fSwncGFyc2VLZXknOmZ1bmN0aW9uKF8weDU0YjdhOSl7Y29uc3QgXzB4MTMzZjkwPV8weDFkZWNlNTt2YXIgXzB4NTFlZGY4PXt9O2lmKF8weDU0YjdhOSl7dmFyIF8weDNhN2Y1YT1fMHg1NGI3YTlbXzB4MTMzZjkwKDB4YTkpXSgnOicpO18weDNhN2Y1YVtfMHgxMzNmOTAoMHgxOTUpXT09PTB4MiYmKF8weDU0YjdhOT1fMHgyMjE4NzEoXzB4M2E3ZjVhWzB4MV0pKTt9dmFyIF8weDVjODIzNT1CdWZmZXJbXzB4MTMzZjkwKDB4NzAxKV0oXzB4NTRiN2E5LF8weDEzM2Y5MCgweGE1KSlbXzB4MTMzZjkwKDB4M2Q2KV0oKVsnc3BsaXQnXSgnXHgwYScpO18weDUxZWRmOFtfMHgxMzNmOTAoMHgyMWQpXT1fMHg1YzgyMzVbMHgwXSxfMHg1MWVkZjhbXzB4MTMzZjkwKDB4MmNmKV09XzB4NWM4MjM1WzB4MV07dmFyIF8weDJkMTFlZD1fMHg1MWVkZjhbJ2xpY2Vuc2VUYWdzJ11bXzB4MTMzZjkwKDB4YTkpXSgnLCcpfHxbXTtfMHg1MWVkZjhbXzB4MTMzZjkwKDB4NjViKV09XzB4MmQxMWVkWzB4MF0sXzB4NTFlZGY4W18weDEzM2Y5MCgweDI5MCldPV8weDJkMTFlZFsweDFdLF8weDUxZWRmOFtfMHgxMzNmOTAoMHg3NzApXT1fMHgyZDExZWRbMHgyXSxfMHg1MWVkZjhbJ3NvdXJjZSddPV8weDJkMTFlZFsweDNdLF8weDUxZWRmOFsndHJpYWwnXT1fMHgyZDExZWRbMHg1XT09PScxJyxfMHg1MWVkZjhbXzB4MTMzZjkwKDB4NGY5KV09XzB4NWM4MjM1WzB4Ml0sXzB4NTFlZGY4W18weDEzM2Y5MCgweDJlMyldPV8weDVjODIzNVsweDNdLF8weDUxZWRmOFsnZnJlZUxpY2Vuc2UnXT1fMHg1MWVkZjhbJ2xpY2Vuc2VlRW1haWwnXT09PV8weDVjMGMxMDt0cnl7dmFyIF8weDRkNzI3Mj1fMHg1MWVkZjhbXzB4MTMzZjkwKDB4NGY5KV1bXzB4MTMzZjkwKDB4YTkpXSgnLycpO18weDUxZWRmOFsnZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQnXT1fMHg0ZDcyNzJbMHgwXSsnXHgyMCcrXzB4MjZhOTRlW3BhcnNlSW50KF8weDRkNzI3MlsweDFdLDB4YSktMHgxXSsnXHgyMCcrXzB4NGQ3MjcyWzB4Ml07fWNhdGNoKF8weDQ1N2VlMSl7XzB4NTFlZGY4W18weDEzM2Y5MCgweDE1NyldPV8weDUxZWRmOFtfMHgxMzNmOTAoMHg0ZjkpXTt9cmV0dXJuIF8weDUxZWRmOFtfMHgxMzNmOTAoMHg0MzIpXT1fMHgyZDExZWRbMHg3XSYmcGFyc2VJbnQoXzB4MmQxMWVkWzB4N10sMHhhKXx8bmV3IERhdGUoXzB4NTFlZGY4W18weDEzM2Y5MCgweDRmOSldK18weDEzM2Y5MCgweDc1MykpW18weDEzM2Y5MCgweDI5ZCldKCksXzB4NTFlZGY4O30sJ2Zvcm1hdCc6ZnVuY3Rpb24oXzB4MjIwOTcxLF8weDUyZTRhNil7Y29uc3QgXzB4M2Q0MDM1PV8weDFkZWNlNTtyZXR1cm4gXzB4MjIwOTcxW18weDNkNDAzNSgweDVjNCldKC9ceyhbMC05YS16QS1aX10rKVx9L2csZnVuY3Rpb24oXzB4ZmMyODc4LF8weDQzMWQ2OCxfMHgzODRiMDApe2NvbnN0IF8weDVjYTk1MT1fMHgzZDQwMzU7dmFyIF8weDNiYzEwNztyZXR1cm4gXzB4MjIwOTcxW18weDM4NGIwMC0weDFdPT09J3snJiZfMHgyMjA5NzFbXzB4Mzg0YjAwK18weGZjMjg3OFtfMHg1Y2E5NTEoMHgxOTUpXV09PT0nfSc/XzB4NDMxZDY4OihfMHgzYmMxMDc9XzB4NTJlNGE2W18weDVjYTk1MSgweDVmNSldKF8weDQzMWQ2OCk/XzB4NTJlNGE2W18weDQzMWQ2OF06bnVsbCxfMHgzYmMxMDc9PW51bGw/Jyc6XzB4M2JjMTA3KTt9KTt9LCd2YWxpZFBhY2thZ2VOYW1lJzpmdW5jdGlvbihfMHg0Zjg5ZmMpe2NvbnN0IF8weDU4ZDY2ND1fMHgxZGVjZTU7aWYoXzB4NGY4OWZjJiYhXzB4NGY4OWZjWydtYXRjaCddKC9eXC4vKSYmIV8weDRmODlmY1tfMHg1OGQ2NjQoMHg0OGEpXSgvXl8vKSYmIShfMHg0Zjg5ZmNbXzB4NThkNjY0KDB4MTk1KV0+MHhkNikmJl8weDRmODlmY1tfMHg1OGQ2NjQoMHgxNGMpXSgpPT09XzB4NGY4OWZjJiYhL1t+JyEoKSpdL1tfMHg1OGQ2NjQoMHg1ZmYpXShfMHg0Zjg5ZmNbXzB4NThkNjY0KDB4YTkpXSgnLycpW18weDU4ZDY2NCgweDUxNCldKC0weDEpWzB4MF0pKXtpZihlbmNvZGVVUklDb21wb25lbnQoXzB4NGY4OWZjKSE9PV8weDRmODlmYyl7Y29uc3QgXzB4NDIxNTAwPV8weDRmODlmY1snbWF0Y2gnXSgvXig/OkAoW14vXSs/KVsvXSk/KFteL10rPykkLyk7aWYoXzB4NDIxNTAwKXtjb25zdCBfMHgzYTc5Y2I9XzB4NDIxNTAwWzB4MV0sXzB4M2ZkZjcxPV8weDQyMTUwMFsweDJdO2lmKGVuY29kZVVSSUNvbXBvbmVudChfMHgzYTc5Y2IpPT09XzB4M2E3OWNiJiZlbmNvZGVVUklDb21wb25lbnQoXzB4M2ZkZjcxKT09PV8weDNmZGY3MSlyZXR1cm4gXzB4NGY4OWZjO319ZWxzZSByZXR1cm4gXzB4NGY4OWZjO319LCd3aXRoRnJlZVBvcnQnOmZ1bmN0aW9uKF8weGJjZmE3Nyl7Y29uc3QgXzB4MTk1NmI1PV8weDFkZWNlNTt2YXIgXzB4MjA0ZjYwPV8weDQwZDQ3YihfMHgxOTU2YjUoMHg1MTApKSxfMHgxZWNlYjY9XzB4MjA0ZjYwW18weDE5NTZiNSgweGY5KV0oKTtfMHgxZWNlYjZbXzB4MTk1NmI1KDB4NmNmKV0oMHgwKSxfMHgxZWNlYjZbJ29uJ10oXzB4MTk1NmI1KDB4NTIwKSxmdW5jdGlvbigpe2NvbnN0IF8weDU0NzY1OD1fMHgxOTU2YjU7dmFyIF8weDQwYTQwYj1fMHgxZWNlYjZbXzB4NTQ3NjU4KDB4N2E0KV0oKVsncG9ydCddO18weDFlY2ViNltfMHg1NDc2NTgoMHgyYmMpXSgnY2xvc2UnLGZ1bmN0aW9uKCl7XzB4YmNmYTc3KF8weDQwYTQwYik7fSksXzB4MWVjZWI2W18weDU0NzY1OCgweDZiNSldKCk7fSkscHJvY2Vzc1tfMHgxOTU2YjUoMHhmNSldKGZ1bmN0aW9uKCl7fSk7fSwnY2hlY2tQb3J0JzpmdW5jdGlvbihfMHg1YzI5NzIpe2NvbnN0IF8weDU5NmZjYz1fMHgxZGVjZTUsXzB4MWRjYmNmPV8weDQwZDQ3YihfMHg1OTZmY2MoMHg3M2MpKSxfMHg0ZTQ2Njg9XzB4NDc4NzZmPT5fMHhmNDE2NGQ9Pntjb25zdCBfMHg0MDRhMWY9XzB4NTk2ZmNjLF8weDc3ZGVkZj1fMHgxZGNiY2ZbXzB4NDA0YTFmKDB4ZjkpXSgpW18weDQwNGExZigweDJiYyldKF8weDQwNGExZigweDQ4NSksXzB4MjYyYjk1PT5fMHgyNjJiOTUmJl8weDI2MmI5NVtfMHg0MDRhMWYoMHgzMWMpXT09PV8weDQwNGExZigweDNlYSk/XzB4ZjQxNjRkKF8weDVjMjk3Mik6XzB4ZjQxNjRkKDB4MCkpW18weDQwNGExZigweDJiYyldKF8weDQwNGExZigweDUyMCksKCk9Pl8weDc3ZGVkZlsnb25jZSddKCdjbG9zZScsKCk9Pl8weGY0MTY0ZChfMHg1YzI5NzIpKVtfMHg0MDRhMWYoMHg2YjUpXSgpKVtfMHg0MDRhMWYoMHg2Y2YpXShfMHg1YzI5NzIsXzB4NDc4NzZmKTt9LF8weDRmMmJmNj1fMHhiNGE3Zjk9Pm5ldyBQcm9taXNlKF8weDRlNDY2OChfMHhiNGE3ZjkpKTtyZXR1cm4gXzB4NGYyYmY2KF8weDU5NmZjYygweDc2MikpW18weDU5NmZjYygweDRlNyldKF8weDI5OGI2Yz0+XzB4Mjk4YjZjP18weDRmMmJmNihfMHg1OTZmY2MoMHg0NTIpKToweDApWyd0aGVuJ10oXzB4MTlkNjEyPT5fMHgxOWQ2MTI/XzB4NGYyYmY2KF8weDU5NmZjYygweDE0ZCkpOjB4MCk7fX07fSx7J2h0dHAnOnZvaWQgMHgwLCduZXQnOnZvaWQgMHgwfV0sMHgxYjpbZnVuY3Rpb24oXzB4MTU3OTQzLF8weDE1NjNmOSxfMHgzYzkzZGYpeyd1c2Ugc3RyaWN0Jztjb25zdCBfMHg0MmY5ZWU9XzB4YWUyNjtjb25zdCBfMHgxYzg2OGI9XzB4MTU3OTQzKF8weDQyZjllZSgweDczYykpLF8weDJhNjkxZT1fMHgxNTc5NDMoXzB4NDJmOWVlKDB4NTEwKSksXzB4NDVhZGQwPV8weDE1Nzk0MygnZnMnKSxfMHgyOTE0MDU9XzB4MTU3OTQzKF8weDQyZjllZSgweDQ4ZikpLF8weDgzMTJlZj1fMHgxNTc5NDMoXzB4NDJmOWVlKDB4MmRiKSksXzB4MmQ2OGFiPV8weDE1Nzk0Mygnd3MnKSxfMHg0NTRlMzE9XzB4MTU3OTQzKCd3cycpWydTZXJ2ZXInXSxfMHgzZWY2NDM9XzB4MTU3OTQzKCcuL3Rlc3RGaWx0ZXJIaWVyYXJjaHknKSxfMHgzY2ZlMzc9XzB4MTU3OTQzKCcuLi9zZXJ2ZXIvZG9jdW1lbnRJbkVkaXRvcicpLF8weDUyNTQxYj1fMHgxNTc5NDMoJy4uL3NlcnZlci90ZXN0RmlsdGVyJyksXzB4MTBhNDRmPV8weDE1Nzk0MyhfMHg0MmY5ZWUoMHg0YWYpKSxfMHgyNDY5ODQ9XzB4MTU3OTQzKF8weDQyZjllZSgweDI0NykpLHtkZWJ1ZzpfMHg2Y2QwOGQsdHJhY2U6XzB4NWUyMWQxfT1sb2dnZXJbXzB4NDJmOWVlKDB4NDQ4KV0oJ3VpU2VydmljZScpLF8weDVjMjY3Nz1bMHhjODIzLDB4YzgyNCwweGM4MjUsMHhjODI2LDB4YzgyNywweGM4MjgsMHhjODI5LDB4YzgyYSwweGM4MmIsMHhjODJjLDB4Y2UwNiwweGNlMDcsMHhjZTA4LDB4Y2UwOSwweGNlMGEsMHhjZTBiLDB4Y2UwYywweGNlMGQsMHhjZTBlLDB4Y2UwZiwweGQxNGEsMHhkMTRiLDB4ZDE0YywweGQxNGQsMHhkMTRlLDB4ZDE0ZiwweGQxNTAsMHhkMTUxLDB4ZDE1MiwweGQxNTNdLF8weDRmNGJhMj0weGM4MmQsXzB4MmQxMjRiPV8weDQyZjllZSgweDYxOCk7Y2xhc3MgXzB4NTQ1NTExIGV4dGVuZHMgRXZlbnRFbWl0dGVye2NvbnN0cnVjdG9yKF8weDQ4ZTYxMCl7Y29uc3QgXzB4MjA2Nzc2PV8weDQyZjllZTtzdXBlcigpO2NvbnN0IF8weGRiMjNiOT10aGlzO3RoaXNbXzB4MjA2Nzc2KDB4MTJmKV0oKVtfMHgyMDY3NzYoMHg0ZTcpXShfMHgzNjNjMDk9PihfMHhkYjIzYjlbXzB4MjA2Nzc2KDB4MTZmKV09XzB4MzYzYzA5LF8weGRiMjNiOVtfMHgyMDY3NzYoMHg2OWEpXShfMHgzNjNjMDksXzB4NDhlNjEwKSkpW18weDIwNjc3NigweDZiYSldKF8weDQ4M2E4ZT0+Y29uc29sZVtfMHgyMDY3NzYoMHg0ODUpXShfMHgyMDY3NzYoMHg1MmYpKyhfMHg0ODNhOGUmJl8weDQ4M2E4ZVtfMHgyMDY3NzYoMHhhYildKSkpLF8weGRiMjNiOVtfMHgyMDY3NzYoMHg2YTQpXT1fMHg0OGU2MTAsXzB4ZGIyM2I5W18weDIwNjc3NigweDVjOCldPVtdLF8weGRiMjNiOVtfMHgyMDY3NzYoMHgzMTgpXT17fSxfMHhkYjIzYjlbXzB4MjA2Nzc2KDB4M2MwKV09e307fVtfMHg0MmY5ZWUoMHg3MjMpXShfMHg0NzU5M2EsXzB4NWYyMGMyKXtjb25zdCBfMHhiMTdjMzM9XzB4NDJmOWVlLF8weDNkM2MzMz10aGlzW18weGIxN2MzMygweDZhNCldWydhbGxGaWxlcyddKCksXzB4NDUwNWQzPXRoaXNbJ19tb2RlbCddW18weGIxN2MzMygweDIzMCldKCk7dGhpc1snX3Rlc3RGaWx0ZXJTdGF0ZSddfHwodGhpc1snX3Rlc3RGaWx0ZXJTdGF0ZSddPXsnZmlsZXMnOk9iamVjdFtfMHhiMTdjMzMoMHg0NDgpXShudWxsKSwnbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJzoweDAsJ2hpZXJhcmNoeSc6bmV3IF8weDNlZjY0MygpfSx0aGlzW18weGIxN2MzMygweDZhNCldW18weGIxN2MzMygweDcyNSldW18weGIxN2MzMygweDVmZildW18weGIxN2MzMygweDE5OSldJiZ0aGlzW18weGIxN2MzMygweDRjZildKF8weDNkM2MzMyxfMHg0NjQxYTc9PnRoaXNbXzB4YjE3YzMzKDB4NmE0KV1bXzB4YjE3YzMzKDB4NjliKV0oXzB4NDY0MWE3WydpZCddKSkpLHRoaXNbXzB4YjE3YzMzKDB4NmE0KV1bXzB4YjE3YzMzKDB4NzI1KV1bXzB4YjE3YzMzKDB4NWZmKV1bXzB4YjE3YzMzKDB4MTk5KV0mJihfMHg0NTA1ZDNbXzB4YjE3YzMzKDB4M2I0KV09dGhpc1tfMHhiMTdjMzMoMHhjMCldKCkpLHRoaXNbXzB4YjE3YzMzKDB4MWZkKV0oX1tfMHhiMTdjMzMoMHg2NjApXSh7J3R5cGUnOl8weGIxN2MzMygweDZlNSl9LF8weDQ1MDVkMyksXzB4NWYyMGMyKSxfW18weGIxN2MzMygweDk3KV0oXzB4M2QzYzMzKXx8dGhpc1tfMHhiMTdjMzMoMHg2NjQpXShfMHgzZDNjMzMsXzB4NWYyMGMyKSx0aGlzW18weGIxN2MzMygweDIwMSldW18weGIxN2MzMygweDc5YildW18weGIxN2MzMygweDRkYildJiZ0aGlzW18weGIxN2MzMygweDZhNCldWydmaWx0ZXInXVtfMHhiMTdjMzMoMHg1ZmYpXVtfMHhiMTdjMzMoMHgxOTkpXSYmdGhpc1snX3VwZGF0ZUhpZXJhcmNoeVRlc3RzJ10oKSx0aGlzW18weGIxN2MzMygweDIwMSldW18weGIxN2MzMygweDc5YildW18weGIxN2MzMygweDRkYildfHx0aGlzW18weGIxN2MzMygweDFmZCldKHsndHlwZSc6J3VpOnRlc3RGaWx0ZXJDaGFuZ2VkJywnZmlsZXMnOnRoaXNbXzB4YjE3YzMzKDB4MjAxKV1bJ2hpZXJhcmNoeSddWydzdGF0ZSddfSk7fVtfMHg0MmY5ZWUoMHhlMSldKF8weGUwZWU1NCl7Y29uc3QgXzB4M2E5Y2U1PV8weDQyZjllZTtpZihfMHhlMGVlNTRbXzB4M2E5Y2U1KDB4NWZmKV0pe2NvbnN0IF8weDRlYjFlNz10aGlzW18weDNhOWNlNSgweDZhNCldW18weDNhOWNlNSgweDQ2MSldKHsndHlwZSc6J3VuZXhlY3V0ZWRUZXN0JywnZmlsZSc6XzB4ZTBlZTU0W18weDNhOWNlNSgweDQ4ZildLCd0ZXN0JzpfMHhlMGVlNTRbXzB4M2E5Y2U1KDB4NWZmKV19KTtfMHhlMGVlNTQ9eydwYXRoJzpfMHhlMGVlNTRbJ3BhdGgnXSwnbGluZSc6XzB4NGViMWU3W18weDNhOWNlNSgweDYzYyldWzB4MF0sJ2NvbHVtbic6XzB4NGViMWU3Wydsb2MnXVsweDFdfTt9ZWxzZSBfMHhlMGVlNTRbXzB4M2E5Y2U1KDB4MmE0KV09cGFyc2VJbnQoXzB4ZTBlZTU0W18weDNhOWNlNSgweDJhNCldLDB4YSksXzB4ZTBlZTU0W18weDNhOWNlNSgweDZlNCldPXBhcnNlSW50KF8weGUwZWU1NFsnY29sdW1uJ10sMHhhKSxfW18weDNhOWNlNSgweGViKV0oXzB4ZTBlZTU0WydsaW5lJ10pJiYoXzB4ZTBlZTU0WydsaW5lJ109MHgxKSxfW18weDNhOWNlNSgweGViKV0oXzB4ZTBlZTU0Wydjb2x1bW4nXSkmJmRlbGV0ZSBfMHhlMGVlNTRbXzB4M2E5Y2U1KDB4NmU0KV07dGhpc1tfMHgzYTljZTUoMHhjMyldKF8weDNhOWNlNSgweGFiKSxfW18weDNhOWNlNSgweDY2MCldKF8weGUwZWU1NCx7J3R5cGUnOiduYXZpZ2F0aW9uUmVxdWVzdGVkJ30pKTt9Wyd1aTpydW5UZXN0cyddKF8weDI0M2QwMCl7Y29uc3QgXzB4MTQzN2UyPV8weDQyZjllZTt0aGlzW18weDE0MzdlMigweDZhNCldW18weDE0MzdlMigweDRiYSldWydydW5UZXN0cyddKHsndGVzdHMnOl8weDI0M2QwMFsndGVzdHMnXSwndXBkYXRlU25hcHNob3RzJzohIV8weDI0M2QwMFtfMHgxNDM3ZTIoMHgzNTQpXX0pO31bXzB4NDJmOWVlKDB4NjM3KV0oXzB4MTkxZDFmKXtjb25zdCBfMHgyODcwZDI9XzB4NDJmOWVlO3RoaXNbXzB4Mjg3MGQyKDB4MzE4KV1bXzB4MTkxZDFmW18weDI4NzBkMigweDQ4ZildXT90aGlzW18weDI4NzBkMigweDMxOCldW18weDE5MWQxZltfMHgyODcwZDIoMHg0OGYpXV0rKzp0aGlzWydfb3BlbmVkRmlsZXMnXVtfMHgxOTFkMWZbXzB4Mjg3MGQyKDB4NDhmKV1dPTB4MTt9W18weDQyZjllZSgweGEzKV0oXzB4M2FiMWVmKXtjb25zdCBfMHg1NzIzODc9XzB4NDJmOWVlO3RoaXNbXzB4NTcyMzg3KDB4MzE4KV1bXzB4M2FiMWVmW18weDU3MjM4NygweDQ4ZildXSYmdGhpc1tfMHg1NzIzODcoMHgzMTgpXVtfMHgzYWIxZWZbJ3BhdGgnXV0tLTt9W18weDQyZjllZSgweDY4YyldKF8weDRlYTAyYyxfMHgyYzAzNGEpe2NvbnN0IF8weDFmMjhkZj1fMHg0MmY5ZWUsXzB4M2Q3ZWRmPXRoaXMsXzB4NTQzN2UxPV8weDEwYTQ0ZltfMHgxZjI4ZGYoMHgzMzYpXSh0aGlzW18weDFmMjhkZigweDZhNCldW18weDFmMjhkZigweDY4OSldKF8weDRlYTAyY1sncGF0aCddKSk7aWYodHlwZW9mIF8weDU0MzdlMSE9J3N0cmluZycpcmV0dXJuO2NvbnN0IF8weDVmMTFkOT1fMHgzZDdlZGZbXzB4MWYyOGRmKDB4NmE0KV1bJ2ZpbGVCeVBhdGgnXShfMHg0ZWEwMmNbXzB4MWYyOGRmKDB4NDhmKV0pLF8weDRjZmQ5Nz17J2dldFRlc3REZWNsYXJhdGlvbkJ5TGluZU51bWJlcic6KCk9Pnt9LCdnZXRUZXN0TWF0Y2hTbmFwc2hvdENhbGxCeUxpbmVOdW1iZXInOigpPT57fSwnZ2V0VHJhY2tlZExpbmVCeUxpbmVOdW1iZXInOigpPT57fSwnZ2V0RGVidWdnZWRUZXN0JzooKT0+e319LF8weDMzZDg4Yz1uZXcgXzB4M2NmZTM3KHZvaWQgMHgwLHZvaWQgMHgwLHRoaXNbXzB4MWYyOGRmKDB4NmE0KV1bJ2ZpbHRlciddLF8weDRjZmQ5Nyk7bGV0IF8weDI4YjIwZCxfMHgxODNkZGY9W10sXzB4NWJkMjNiPVtdO18weDVmMTFkOSYmXzB4NWYxMWQ5W18weDFmMjhkZigweDc3MildKCkmJihfMHgzM2Q4OGNbJ3VwZGF0ZSddKF9bXzB4MWYyOGRmKDB4MzNiKV0oXzB4NWYxMWQ5W18weDFmMjhkZigweDY3ZildKCkpLCEweDEsITB4MCksXzB4NWJkMjNiPV8weDMzZDg4Y1tfMHgxZjI4ZGYoMHg1YjEpXSh0aGlzW18weDFmMjhkZigweDZhNCldW18weDFmMjhkZigweDcyNSldW18weDFmMjhkZigweDVmZildW18weDFmMjhkZigweDE5OSldKVtfMHgxZjI4ZGYoMHg2ZDgpXXx8W10sXzB4MTgzZGRmPV8weDNkN2VkZltfMHgxZjI4ZGYoMHg2YTQpXVtfMHgxZjI4ZGYoMHgzZGQpXSh7J2ZpbGUnOl8weDRlYTAyY1tfMHgxZjI4ZGYoMHg0OGYpXX0pfHxbXSxfMHgyOGIyMGQ9XzB4M2Q3ZWRmW18weDFmMjhkZigweDQ3ZildKF8weDVmMTFkOSkpO2xldCBfMHhhMmVlZTc7XzB4NGVhMDJjWyd0ZXN0J10mJihfMHhhMmVlZTc9dGhpc1tfMHgxZjI4ZGYoMHg2YTQpXVsnbG9jYXRpb25CeVJlcXVlc3QnXSh7J3R5cGUnOl8weDFmMjhkZigweDQ4OCksJ2ZpbGUnOl8weDRlYTAyY1tfMHgxZjI4ZGYoMHg0OGYpXSwndGVzdCc6XzB4NGVhMDJjW18weDFmMjhkZigweDVmZildfSlbJ2xvYyddWzB4MF0pLF8weDNkN2VkZlsnX3NlbmQnXSh7J3R5cGUnOid1aTpjb2RlJywnY29ycmVsYXRpb25JZCc6XzB4NGVhMDJjW18weDFmMjhkZigweDc2NSldLCdjb2RlJzpfMHg1NDM3ZTFbJ3RvU3RyaW5nJ10oKSwnbGluZXMnOl8weDViZDIzYiwndW5jb3ZlcmVkUmVnaW9ucyc6XzB4MTgzZGRmLCdjb3ZlcmFnZSc6XzB4MjhiMjBkLCdsaW5lJzpfMHhhMmVlZTd9LF8weDJjMDM0YSk7fVtfMHg0MmY5ZWUoMHg1ZGYpXShfMHg0NzNmZmQsXzB4MjEyN2U4KXtjb25zdCBfMHhlYzI2YTU9XzB4NDJmOWVlO18weDIxMjdlOFtfMHhlYzI2YTUoMHg1ZWMpXT0hMHgwLHRoaXNbXzB4ZWMyNmE1KDB4MWZlKV0odm9pZCAweDAsXzB4MjEyN2U4KTt9W18weDQyZjllZSgweDcwMildKF8weDU2ODQ4ZSxfMHgxZmQwNDUpe2NvbnN0IF8weDJhODU4Nz1fMHg0MmY5ZWU7XzB4MWZkMDQ1W18weDJhODU4NygweDVlYyldPSEweDE7fVtfMHg0MmY5ZWUoMHgxMzYpXShfMHg1ZDE3NzksXzB4NWRkMmIyKXtjb25zdCBfMHgxMTUwZTI9XzB4NDJmOWVlLF8weDViODVlNj1bXSxfMHhiYjdjMGM9XzB4ZTdhMjcyPT57Y29uc3QgXzB4MTAyMDIyPV8weGFlMjY7aWYoXzB4ZTdhMjcyW18weDEwMjAyMigweDcxMSldPW51bGwsXzB4ZTdhMjcyWydvbmVycm9yJ109bnVsbCxfMHhlN2EyNzJbJ29ubWVzc2FnZSddPW51bGwsXzB4ZTdhMjcyW18weDEwMjAyMigweGU3KV0hPT1fMHgyZDY4YWJbJ0NMT1NJTkcnXXx8XzB4ZTdhMjcyW18weDEwMjAyMigweGU3KV0hPT1fMHgyZDY4YWJbJ0NMT1NFRCddKXRyeXtfMHhlN2EyNzJbJ2Nsb3NlJ10oKTt9Y2F0Y2goXzB4NTkyYjY5KXtfMHg1ZTIxZDEoJ0Vycm9yXHgyMGNsb3NpbmdceDIwcnVubmluZ1Byb2plY3RzUmVxdWVzdGVkXHgyMHNvY2tldCcsXzB4NTkyYjY5KTt9fTtQcm9taXNlW18weDExNTBlMigweDFkZCldKF8weDVjMjY3N1snbWFwJ10oXzB4MzgwNmFmPT5uZXcgUHJvbWlzZShfMHgyNjYyNDc9Pntjb25zdCBfMHg0MDY0MTk9XzB4MTE1MGUyLF8weDFiNmI0OT1fMHg0MDY0MTkoMHg2YWYpWydjb25jYXQnXShfMHg1ZDE3NzlbXzB4NDA2NDE5KDB4NmVjKV0sJzonKVtfMHg0MDY0MTkoMHg0NDkpXShfMHgzODA2YWYpLF8weDU1ZTE2OT1uZXcgXzB4MmQ2OGFiKF8weDFiNmI0OSx7J29yaWdpbic6J2h0dHA6Ly93YWxsYWJ5anMuY29tJ30pLF8weGQwOTJhNz1zZXRUaW1lb3V0KCgpPT57Y2xlYXJUaW1lb3V0KF8weGQwOTJhNyksXzB4YmI3YzBjKF8weDU1ZTE2OSksXzB4MjY2MjQ3KCk7fSwweDc1MzApO18weDU1ZTE2OVsnb25vcGVuJ109KCk9Pntjb25zdCBfMHg1YjAyYmY9XzB4NDA2NDE5O18weDU1ZTE2OVtfMHg1YjAyYmYoMHgxNTYpXT1fMHgxZTc4NmU9Pntjb25zdCBfMHhhZWIxNTc9XzB4NWIwMmJmO3RyeXtjb25zdCBfMHg0ZDlhNDM9SlNPTltfMHhhZWIxNTcoMHg0OTcpXShfMHgxZTc4NmVbXzB4YWViMTU3KDB4NDUxKV0pO18weDRkOWE0M1tfMHhhZWIxNTcoMHg0NTQpXSYmXzB4NGQ5YTQzW18weGFlYjE1NygweDQ1NCldPT09XzB4YWViMTU3KDB4MTU1KSYmXzB4NGQ5YTQzW18weGFlYjE1NygweDdhZCldIT1udWxsP18weDViODVlNltfMHhhZWIxNTcoMHg0MmQpXSh7J25hbWUnOl8weDRkOWE0M1tfMHhhZWIxNTcoMHg3YWQpXVtfMHhhZWIxNTcoMHgzNjMpXSwncGF0aCc6XzB4NGQ5YTQzW18weGFlYjE1NygweDdhZCldW18weGFlYjE1NygweDQ4ZildLCdwb3J0JzpfMHgzODA2YWZ9KTpfMHg1ZTIxZDEoJ0Vycm9yXHgyMHBhcnNpbmdceDIwcnVubmluZ1Byb2plY3RzUmVxdWVzdGVkXHgyMG1lc3NhZ2UnKTt9Y2F0Y2goXzB4Mjc0YTE3KXtfMHg1ZTIxZDEoXzB4YWViMTU3KDB4NmFkKSxfMHgyNzRhMTcpO31jbGVhclRpbWVvdXQoXzB4ZDA5MmE3KSxfMHhiYjdjMGMoXzB4NTVlMTY5KSxfMHgyNjYyNDcoKTt9O30sXzB4NTVlMTY5W18weDQwNjQxOSgweDY4OCldPV8weDFlYzczYT0+e2NvbnN0IF8weDNmNDc1ND1fMHg0MDY0MTk7XzB4NWUyMWQxKF8weDNmNDc1NCgweDEwZSksXzB4MWVjNzNhKSxjbGVhclRpbWVvdXQoXzB4ZDA5MmE3KSxfMHhiYjdjMGMoXzB4NTVlMTY5KSxfMHgyNjYyNDcoKTt9O30pKSlbJ3RoZW4nXSgoKT0+e2NvbnN0IF8weDVlY2ZmNj1fMHgxMTUwZTI7dGhpc1snX3NlbmQnXSh7J3R5cGUnOl8weDVlY2ZmNigweDYwYSksJ3Byb2plY3RzJzpfMHg1Yjg1ZTZ9LF8weDVkZDJiMik7fSk7fVtfMHg0MmY5ZWUoMHg0NWIpXShfMHgxMjY0ODIsXzB4MzU1OGVmKXtjb25zdCBfMHhiYWE0OTk9XzB4NDJmOWVlLF8weDJiODQ3OD10aGlzW18weGJhYTQ5OSgweDZhNCldW18weGJhYTQ5OSgweDcyNSldW18weGJhYTQ5OSgweDVmZildLF8weDQxY2U0Zj1fMHgyYjg0NzhbJ3RzJ10sXzB4MWExNzFlPV8weDEyNjQ4MltfMHhiYWE0OTkoMHgyZjkpXTtpZihfMHgxYTE3MWUmJl8weDFhMTcxZVtfMHhiYWE0OTkoMHgxOTUpXSl7Zm9yKGNvbnN0IF8weDM3NjExMSBvZiBfMHgxYTE3MWUpe2NvbnN0IF8weDRmMTdhOD10aGlzW18weGJhYTQ5OSgweDZhNCldW18weGJhYTQ5OSgweDMxYildKF8weDM3NjExMVsweDBdKTtpZighXzB4NGYxN2E4fHwhXzB4NGYxN2E4Wydpc1Rlc3RGaWxlJ10oKSljb250aW51ZTtjb25zdCBfMHgzNzIxYTE9XzB4NGYxN2E4Wydvd25UZXN0cyddKCk7aWYoXzB4Mzc2MTExW18weGJhYTQ5OSgweDE5NSldPT09MHgxKXtjb25zdCBfMHgxYTNlZGQ9dGhpc1tfMHhiYWE0OTkoMHgyMDEpXVtfMHhiYWE0OTkoMHg3OWIpXVtfMHhiYWE0OTkoMHg2M2IpXShfMHg0ZjE3YThbXzB4YmFhNDk5KDB4NDhmKV0oKSk7Zm9yKGNvbnN0IF8weDNjYWJjOSBvZiBfMHgzNzIxYTEpXzB4MmI4NDc4W18weGJhYTQ5OSgweDcxOCldKF8weDNjYWJjOSksXzB4MWEzZWRkfHxfMHgyYjg0NzhbXzB4YmFhNDk5KDB4NjAwKV0oXzB4M2NhYmM5KTtfMHgxYTNlZGQ/ZGVsZXRlIHRoaXNbJ190ZXN0RmlsdGVyU3RhdGUnXVsnaGllcmFyY2h5J11bXzB4YmFhNDk5KDB4NzI5KV0oXzB4NGYxN2E4WydwYXRoJ10oKSk6dGhpc1tfMHhiYWE0OTkoMHgyMDEpXVsnaGllcmFyY2h5J11bJ2FkZEZpbGUnXShfMHg0ZjE3YThbXzB4YmFhNDk5KDB4NDhmKV0oKSxfMHgzNzIxYTEpO31lbHNle2NvbnN0IF8weDE1MWNmOT1fMHgzNzYxMTFbXzB4YmFhNDk5KDB4NTE0KV0oMHgxKSxfMHg0ZmVkMDI9JydbJ2NvbmNhdCddKF8weDRmMTdhOFsna2V5J10oKSwnXycpW18weGJhYTQ5OSgweDQ0OSldKF8weDE1MWNmOVtfMHhiYWE0OTkoMHg0MmUpXShfMHg1MjU0MWJbJ3NlcGFyYXRvciddKSksXzB4MTU4MDZiPV8weDM3MjFhMVsnZmluZCddKF8weDNmNmY3NT0+XzB4M2Y2Zjc1W18weGJhYTQ5OSgweDQ2MildKCk9PT1fMHg0ZmVkMDIpO2lmKF8weDE1ODA2YilfMHgyYjg0NzhbJ3RvZ2dsZSddKF8weDE1ODA2YiksXzB4MmI4NDc4W18weGJhYTQ5OSgweDM3ZildKF8weDRmZWQwMik/dGhpc1tfMHhiYWE0OTkoMHgyMDEpXVtfMHhiYWE0OTkoMHg3OWIpXVtfMHhiYWE0OTkoMHgzODcpXShfMHgxNTgwNmIpOnRoaXNbJ190ZXN0RmlsdGVyU3RhdGUnXVtfMHhiYWE0OTkoMHg3OWIpXVsncmVtb3ZlVGVzdCddKF8weDE1ODA2Yik7ZWxzZXtjb25zdCBfMHgxYmY2ZmU9dGhpc1snX3Rlc3RGaWx0ZXJTdGF0ZSddW18weGJhYTQ5OSgweDc5YildW18weGJhYTQ5OSgweDMzOCldKF8weDRmMTdhOFsncGF0aCddKCksXzB4MTUxY2Y5KTtmb3IoY29uc3QgXzB4NWUxNDEyIG9mIF8weDM3MjFhMSlfMHg1ZTE0MTJbXzB4YmFhNDk5KDB4NDYyKV0oKVsnc3RhcnRzV2l0aCddKF8weDRmZWQwMikmJihfMHgyYjg0NzhbXzB4YmFhNDk5KDB4NzE4KV0oXzB4NWUxNDEyKSxfMHgxYmY2ZmV8fF8weDJiODQ3OFtfMHhiYWE0OTkoMHg2MDApXShfMHg1ZTE0MTIpKTtfMHgxYmY2ZmU/ZGVsZXRlIHRoaXNbXzB4YmFhNDk5KDB4MjAxKV1bXzB4YmFhNDk5KDB4NzliKV1bXzB4YmFhNDk5KDB4NWU1KV0oXzB4NGYxN2E4WydwYXRoJ10oKSxfMHgxNTFjZjkpOnRoaXNbXzB4YmFhNDk5KDB4MjAxKV1bXzB4YmFhNDk5KDB4NzliKV1bXzB4YmFhNDk5KDB4MTUyKV0oXzB4NGYxN2E4WydwYXRoJ10oKSxfMHgxNTFjZjksXzB4MzcyMWExKTt9fX1fMHgyYjg0NzhbJ3RzJ10hPT1fMHg0MWNlNGYmJnRoaXNbJ19tb2RlbCddWydlbWl0Tm9Db2RlQ2hhbmdlRXZlbnRzJ10oITB4MCwhMHgwLHsnbG9jYWwnOiEweDB9LCEweDApO319Wyd1aTpyZXNldFRlc3RGaWx0ZXInXShfMHgxNWRlMWUsXzB4NTJhYjAzKXtjb25zdCBfMHg0NzAwYjg9XzB4NDJmOWVlO3RoaXNbJ190ZXN0RmlsdGVyU3RhdGUnXVsnaGllcmFyY2h5J11bJ2NsZWFyJ10oKSx0aGlzW18weDQ3MDBiOCgweDZhNCldWyd0b2dnbGVUZXN0RmlsdGVyJ10oKTt9W18weDQyZjllZSgweDM1YildKCl7Y29uc3QgXzB4NTQ1ZDVhPV8weDQyZjllZTt0aGlzW18weDU0NWQ1YSgweDFmZCldKHsndHlwZSc6J3VpOmJ1c3knfSk7fVtfMHg0MmY5ZWUoMHg0ZTYpXShfMHhlZDU0NmQpe2NvbnN0IF8weDQ4ZDg1Mz1fMHg0MmY5ZWUsXzB4NDg0MzQ1PXRoaXNbXzB4NDhkODUzKDB4NmE0KV1bJ3N1bW1hcnknXSgpO3RoaXNbXzB4NDhkODUzKDB4NmE0KV1bXzB4NDhkODUzKDB4NzI1KV1bXzB4NDhkODUzKDB4NWZmKV1bXzB4NDhkODUzKDB4MTk5KV0mJihfMHg0ODQzNDVbXzB4NDhkODUzKDB4M2I0KV09dGhpc1tfMHg0OGQ4NTMoMHhjMCldKCkpLHRoaXNbXzB4NDhkODUzKDB4MWZkKV0oX1snZXh0ZW5kJ10oeyd0eXBlJzondWk6c3VtbWFyeScsJ2Vycm9yJzpfMHhlZDU0NmRbXzB4NDhkODUzKDB4YWIpXXx8Jyd9LF8weDQ4NDM0NSkpO31bXzB4NDJmOWVlKDB4MmNiKV0oXzB4NWI3OWFjKXtjb25zdCBfMHg0MDZhNmE9XzB4NDJmOWVlO2lmKCFfMHg1Yjc5YWNbJ3Rlc3RFcnJvclJlcG9ydGVkJ10pe2NvbnN0IF8weDM3YmFhOT17fTtfWydlYWNoJ10odGhpc1tfMHg0MDZhNmEoMHgzYzApXSxfMHg0Y2ZjOWQ9Pntjb25zdCBfMHgyMGQyODQ9XzB4NDA2YTZhLF8weDNiZTAyMj10aGlzW18weDIwZDI4NCgweDZhNCldW18weDIwZDI4NCgweDY5YildKF8weDRjZmM5ZFsnaWQnXSk7aWYoIV8weDNiZTAyMnx8IV8weDNiZTAyMlsnaGFzUmVwb3J0YWJsZUNvdmVyYWdlT3JUZXN0RmlsZSddKCkpcmV0dXJuO18weDNiZTAyMiYmXzB4M2JlMDIyW18weDIwZDI4NCgweDJiZSldKCksdGhpc1tfMHgyMGQyODQoMHg2YTQpXVtfMHgyMGQyODQoMHg2NTApXShfMHgzYmUwMjIpO2NvbnN0IF8weDQxNTUwOT10aGlzW18weDIwZDI4NCgweDQ3ZildKF8weDNiZTAyMik7XzB4NDE1NTA5JiZfMHg0MTU1MDlbXzB4MjBkMjg0KDB4MWI2KV0mJihkZWxldGUgXzB4NDE1NTA5W18weDIwZDI4NCgweDFiNildLF8weDM3YmFhOVtfMHgzYmUwMjJbXzB4MjBkMjg0KDB4NDYyKV0oKV09XzB4NDE1NTA5KTt9KTtsZXQgXzB4MzMyODNjPXRoaXNbJ19tb2RlbCddW18weDQwNmE2YSgweDIzMCldKCk7X1tfMHg0MDZhNmEoMHg5NyldKF8weDM3YmFhOSl8fCh0aGlzW18weDQwNmE2YSgweDZhNCldW18weDQwNmE2YSgweDJlNCldKCksdGhpc1tfMHg0MDZhNmEoMHgxZmQpXSh7J3R5cGUnOid1aTpjb3ZlcmFnZUNoYW5nZWQnLCdjaGFuZ2VzJzpfMHgzN2JhYTl9KSksdGhpc1tfMHg0MDZhNmEoMHg2YTQpXVtfMHg0MDZhNmEoMHg3MjUpXVtfMHg0MDZhNmEoMHg1ZmYpXVsnYWN0aXZlJ10/XzB4MzMyODNjW18weDQwNmE2YSgweDNiNCldPXRoaXNbXzB4NDA2YTZhKDB4YzApXSgpOl8weDMzMjgzYz10aGlzWydfbW9kZWwnXVtfMHg0MDZhNmEoMHgyMzApXSgpLHRoaXNbJ19zZW5kJ10oX1tfMHg0MDZhNmEoMHg2NjApXSh7J3R5cGUnOid1aTpzdW1tYXJ5J30sXzB4MzMyODNjKSk7fXRoaXNbXzB4NDA2YTZhKDB4M2MwKV09e307fVtfMHg0MmY5ZWUoMHgxMGEpXShfMHhjYTA3NGYpe2NvbnN0IF8weDVlYzk3ND1fMHg0MmY5ZWUsXzB4MmMwOGQ0PXRoaXM7X1snZWFjaCddKHRoaXNbXzB4NWVjOTc0KDB4NWM4KV0sXzB4NGNhNDRmPT57Y29uc3QgXzB4ODBjZjc2PV8weDVlYzk3NDtfMHg0Y2E0NGZbJ19hbGxvd2VkVG9TZW5kVGVzdFJlc3VsdHMnXSYmXzB4MmMwOGQ0Wydfc2VuZCddKHsndHlwZSc6J3VpOnRlc3RzOnNvbWVSZXN1bHRzVXBkYXRlZCcsJ2ZpbGVzJzpbeydwYXRoJzpfMHhjYTA3NGZbXzB4ODBjZjc2KDB4MWJjKV1bJ3BhdGgnXSwnYWN0aW9uJzpfMHg4MGNmNzYoMHgxMjcpfV19LF8weDRjYTQ0Zik7fSk7fVtfMHg0MmY5ZWUoMHg0NmEpXShfMHgyNjIyYzUpe2NvbnN0IF8weDI2YzJhMj1fMHg0MmY5ZWU7dGhpc1tfMHgyNmMyYTIoMHg2MGMpXShfMHgyNjIyYzVbXzB4MjZjMmEyKDB4MWJjKV1bXzB4MjZjMmEyKDB4NDhmKV0pJiYodGhpc1snX2ZpbGVzQ2hhbmdlZE9yQWRkZWRQcmlvclRvQ29tcGxldGVkT3JSZXF1ZXVlZFRlc3RSdW4nXVtfMHgyNjIyYzVbXzB4MjZjMmEyKDB4MWJjKV1bJ2lkJ11dPV8weDI2MjJjNVtfMHgyNmMyYTIoMHgxYmMpXSx0aGlzW18weDI2YzJhMigweDFmZCldKHsndHlwZSc6XzB4MjZjMmEyKDB4MWNlKSwnZmlsZXMnOlt7J2FjdGlvbic6J2FkZGVkJywncGF0aCc6XzB4MjYyMmM1W18weDI2YzJhMigweDFiYyldW18weDI2YzJhMigweDQ4ZildLCdpZCc6XzB4MjYyMmM1W18weDI2YzJhMigweDFiYyldWydpZCddLCd0ZXN0JzpfMHgyNjIyYzVbXzB4MjZjMmEyKDB4MWJjKV1bXzB4MjZjMmEyKDB4NWZmKV18fHZvaWQgMHgwfV19KSk7fVtfMHg0MmY5ZWUoMHg1ZDMpXShfMHg0ZDE5YzApe2NvbnN0IF8weDU5NjIzNz1fMHg0MmY5ZWU7dGhpc1tfMHg1OTYyMzcoMHg2MGMpXShfMHg0ZDE5YzBbXzB4NTk2MjM3KDB4MWJjKV1bXzB4NTk2MjM3KDB4NDhmKV0pJiYodGhpc1snX2ZpbGVzQ2hhbmdlZE9yQWRkZWRQcmlvclRvQ29tcGxldGVkT3JSZXF1ZXVlZFRlc3RSdW4nXVtfMHg0ZDE5YzBbXzB4NTk2MjM3KDB4MWJjKV1bJ2lkJ11dPV8weDRkMTljMFtfMHg1OTYyMzcoMHgxYmMpXSx0aGlzW18weDU5NjIzNygweDFmZCldKHsndHlwZSc6J3VpOmZpbGVzJywnZmlsZXMnOlt7J2FjdGlvbic6XzB4NTk2MjM3KDB4Mjc0KSwncGF0aCc6XzB4NGQxOWMwWydmaWxlJ11bXzB4NTk2MjM3KDB4NDhmKV0sJ2lkJzpfMHg0ZDE5YzBbXzB4NTk2MjM3KDB4MWJjKV1bJ2lkJ119XX0pKTt9W18weDQyZjllZSgweDQ3YyldKF8weGZhMzg5KXtjb25zdCBfMHgxODM4ZTY9XzB4NDJmOWVlO2lmKHRoaXNbXzB4MTgzOGU2KDB4NmE0KV1bXzB4MTgzOGU2KDB4NzI1KV1bXzB4MTgzOGU2KDB4NWZmKV1bXzB4MTgzOGU2KDB4MTk5KV0pe2NvbnN0IF8weDRjMTNjYz1fMHhmYTM4OVsnZmlsZSddWydpZCddLF8weDhhMDAxND10aGlzWydfdGVzdEZpbHRlclN0YXRlJ11bXzB4MTgzOGU2KDB4NjBkKV1bXzB4NGMxM2NjXTtfMHg4YTAwMTQmJih0aGlzW18weDE4MzhlNigweDIwMSldWydudW1iZXJPZkNvdmVyZWRSYW5nZXMnXS09XzB4OGEwMDE0KSxkZWxldGUgdGhpc1tfMHgxODM4ZTYoMHgyMDEpXVtfMHgxODM4ZTYoMHg2MGQpXVtfMHg0YzEzY2NdLHRoaXNbXzB4MTgzOGU2KDB4NGNmKV0oXzB4ZmEzODlbJ2FsbEFmZmVjdGVkRmlsZXMnXSxfMHg0NjNkMTI9Pl8weDQ2M2QxMik7fXRoaXNbXzB4MTgzOGU2KDB4MWZkKV0oeyd0eXBlJzpfMHgxODM4ZTYoMHgxY2UpLCdmaWxlcyc6W3snYWN0aW9uJzpfMHgxODM4ZTYoMHgxMjcpLCdwYXRoJzpfMHhmYTM4OVtfMHgxODM4ZTYoMHgxYmMpXVtfMHgxODM4ZTYoMHg0OGYpXSwnaWQnOl8weGZhMzg5WydmaWxlJ11bJ2lkJ119XX0pLF9bXzB4MTgzOGU2KDB4OTcpXShfMHhmYTM4OVsnYWxsQWZmZWN0ZWRGaWxlcyddKXx8dGhpc1tfMHgxODM4ZTYoMHg1NmMpXShfMHhmYTM4OVtfMHgxODM4ZTYoMHgyY2MpXSxfMHgyMjllNWU9Pl8weDIyOWU1ZSk7fVtfMHg0MmY5ZWUoMHg3NTkpXShfMHgzNjcwYTgpe2NvbnN0IF8weDRhYmExYj1fMHg0MmY5ZWU7dGhpc1tfMHg0YWJhMWIoMHgzYzApXT17fTtjb25zdCBfMHhiOWRhOGU9dGhpc1tfMHg0YWJhMWIoMHg2YTQpXVsnc3VtbWFyeSddKCk7dGhpc1snX21vZGVsJ11bXzB4NGFiYTFiKDB4NzI1KV1bXzB4NGFiYTFiKDB4NWZmKV1bXzB4NGFiYTFiKDB4MTk5KV0mJih0aGlzW18weDRhYmExYigweDRjZildKF8weDM2NzBhOFtfMHg0YWJhMWIoMHgyY2MpXSxfMHgzYTg3ODA9Pl8weDNhODc4MCksXzB4YjlkYThlW18weDRhYmExYigweDNiNCldPXRoaXNbXzB4NGFiYTFiKDB4YzApXSgpKSx0aGlzW18weDRhYmExYigweDFmZCldKF9bJ2V4dGVuZCddKHsndHlwZSc6J3VpOnN1bW1hcnknfSxfMHhiOWRhOGUpKTtjb25zdCBfMHgzYjE1OTA9dGhpcztfW18weDRhYmExYigweDNlNildKHRoaXNbXzB4NGFiYTFiKDB4NWM4KV0sXzB4MzlhNWU2PT57Y29uc3QgXzB4NWJlY2QzPV8weDRhYmExYjtfMHgzOWE1ZTZbXzB4NWJlY2QzKDB4NWVjKV0mJl8weDNiMTU5MFtfMHg1YmVjZDMoMHgxZmUpXShfMHgzNjcwYTgsXzB4MzlhNWU2KTt9KSxfW18weDRhYmExYigweDk3KV0oXzB4MzY3MGE4W18weDRhYmExYigweDJjYyldKXx8dGhpc1tfMHg0YWJhMWIoMHg1NmMpXShfMHgzNjcwYThbXzB4NGFiYTFiKDB4MmNjKV0sXzB4NWJiN2VkPT5fMHg1YmI3ZWQpO31bXzB4NDJmOWVlKDB4NjRjKV0oKXtjb25zdCBfMHgxM2E3ZjI9XzB4NDJmOWVlO3RoaXNbXzB4MTNhN2YyKDB4MWZkKV0oeyd0eXBlJzpfMHgxM2E3ZjIoMHg1OTkpfSk7fVtfMHg0MmY5ZWUoMHgxZDgpXShfMHg0NDQzNTkpe2NvbnN0IF8weDI2NTdiMD1fMHg0MmY5ZWU7dGhpc1snX2hhbmRsZVRlc3RGaWx0ZXJDaGFuZ2UnXShfMHg0NDQzNTlbXzB4MjY1N2IwKDB4MjhkKV0pO31bXzB4NDJmOWVlKDB4NWQwKV0oXzB4NTNiNmY0KXtjb25zdCBfMHgyNTcyODI9XzB4NDJmOWVlO3RoaXNbXzB4MjU3MjgyKDB4ZDQpXShfMHg1M2I2ZjRbJ2xvY2FsJ10pO31bXzB4NDJmOWVlKDB4NjNlKV0oXzB4NGQ3MzNmKXtjb25zdCBfMHgzYmU5ODQ9XzB4NDJmOWVlLF8weDNjMDA3YT10aGlzO19bXzB4M2JlOTg0KDB4M2U2KV0odGhpc1tfMHgzYmU5ODQoMHg1YzgpXSxfMHgxZTQ2MzA9Pntjb25zdCBfMHg0MWVjMDA9XzB4M2JlOTg0O18weDFlNDYzMFtfMHg0MWVjMDAoMHg1ZWMpXSYmXzB4M2MwMDdhWydfc2VuZCddKHsndHlwZSc6J3VpOnRlc3RzOnNvbWVSZXN1bHRzVXBkYXRlZCcsJ2ZpbGVzJzpfMHgzYzAwN2FbJ19jcmVhdGVUZXN0UmVzdWx0cyddKF8weDRkNzMzZlsnYWZmZWN0ZWRGaWxlcyddLHZvaWQgMHgwLF8weDQxZWMwMCgweDFmYykpfSxfMHgxZTQ2MzApO30pLHRoaXNbXzB4M2JlOTg0KDB4NTZjKV0oXzB4NGQ3MzNmW18weDNiZTk4NCgweDY2ZSldLF8weDRmNjkyZj0+XzB4NGY2OTJmKTt9W18weDQyZjllZSgweGQ0KV0oXzB4NGIzYjFmKXtjb25zdCBfMHgxNDg1Yzc9XzB4NDJmOWVlLF8weDFjMDc2YT10aGlzW18weDE0ODVjNygweDZhNCldWydmaWx0ZXInXVsndGVzdCddLF8weDQ5OGJkOT10aGlzW18weDE0ODVjNygweDZhNCldWydhbGxGaWxlcyddKCksXzB4NTc1ZmU4PXRoaXNbJ19tb2RlbCddWydzdW1tYXJ5J10oKTtfMHgxYzA3NmFbXzB4MTQ4NWM3KDB4MTk5KV0/KHRoaXNbXzB4MTQ4NWM3KDB4NGNmKV0oXzB4NDk4YmQ5LF8weDU5MmQ4ZT0+dGhpc1tfMHgxNDg1YzcoMHg2YTQpXVtfMHgxNDg1YzcoMHg2OWIpXShfMHg1OTJkOGVbJ2lkJ10pKSxfMHg1NzVmZThbJ2NvdmVyYWdlJ109dGhpc1snX2NyZWF0ZVRlc3RGaWx0ZXJUb3RhbENvdmVyYWdlJ10oKSk6dGhpc1tfMHgxNDg1YzcoMHgyMDEpXT17J2ZpbGVzJzpPYmplY3RbXzB4MTQ4NWM3KDB4NDQ4KV0obnVsbCksJ251bWJlck9mQ292ZXJlZFJhbmdlcyc6MHgwLCdoaWVyYXJjaHknOnRoaXNbXzB4MTQ4NWM3KOKAizB4MjAxKV1bXzB4MTQ4NWM3KDB4NzliKV19LHRoaXNbXzB4MTQ4NWM3KDB4MWZkKV0oX1snZXh0ZW5kJ10oeyd0eXBlJzpfMHgxNDg1YzcoMHg2ZTUpfSxfMHg1NzVmZTgpKSxfMHg0YjNiMWZ8fHRoaXNbXzB4MTQ4NWM3KDB4MmNhKV0oKSx0aGlzW18weDE0ODVjNygweDFmZCldKHsndHlwZSc6XzB4MTQ4NWM3KDB4NDMwKSwnZmlsZXMnOnRoaXNbJ190ZXN0RmlsdGVyU3RhdGUnXVtfMHgxNDg1YzcoMHg3OWIpXVtfMHgxNDg1YzcoMHg1NzEpXSwnZm9yY2VUZXN0U2VsZWN0aW9uJzohXzB4NGIzYjFmJiZfMHgxYzA3NmFbXzB4MTQ4NWM3KDB4MTk5KV0mJl8weDFjMDc2YVtfMHgxNDg1YzcoMHgxZTYpXT09PTB4MXx8dm9pZCAweDB9KSx0aGlzW18weDE0ODVjNygweDU2YyldKF8weDQ5OGJkOSxfMHg0OWZmYzk9PnRoaXNbXzB4MTQ4NWM3KDB4NmE0KV1bJ2ZpbGVCeUlkJ10oXzB4NDlmZmM5WydpZCddKSk7fVsnX2FjY3VtdWxhdGVUZXN0RmlsdGVyU3RhdGVGb3JGaWxlcyddKF8weDEyNmY3ZSxfMHgyOTU5YmYpe2NvbnN0IF8weDEwY2FhZj1fMHg0MmY5ZWU7aWYoX1tfMHgxMGNhYWYoMHg3MTcpXShfMHgxMjZmN2UpKXtmb3IobGV0IF8weDJlZjg3ZiBvZiBfMHgxMjZmN2UpXzB4MmVmODdmPV8weDI5NTliZihfMHgyZWY4N2YpLF8weDJlZjg3ZiYmdGhpc1tfMHgxMGNhYWYoMHgyMGUpXShfMHgyZWY4N2YpO31lbHNle2ZvcihsZXQgXzB4NDRiNzI2IGluIF8weDEyNmY3ZSlfMHg0NGI3MjY9XzB4Mjk1OWJmKF8weDEyNmY3ZVtfMHg0NGI3MjZdKSxfMHg0NGI3MjYmJnRoaXNbXzB4MTBjYWFmKDB4MjBlKV0oXzB4NDRiNzI2KTt9fVtfMHg0MmY5ZWUoMHgyMGUpXShfMHg1YmM1ZDIpe2NvbnN0IF8weDJjMWJjZj1fMHg0MmY5ZWUsXzB4MTliNmI1PV8weDViYzVkMltfMHgyYzFiY2YoMHg0NjIpXSgpO2lmKF8weDViYzVkMltfMHgyYzFiY2YoMHg1YWYpXSgpKXtsZXQgXzB4ZmFjYmRkPTB4MDtjb25zdCBfMHgxN2JhZjU9XzB4NWJjNWQyW18weDJjMWJjZigweDY3ZildKCk7Zm9yKGNvbnN0IF8weDJmOGVjOCBpbiBfMHgxN2JhZjUpXzB4MTdiYWY1W18weDJmOGVjOF1bXzB4MmMxYmNmKDB4MzJiKV0odGhpc1tfMHgyYzFiY2YoMHg2YTQpXVsnZmlsdGVyJ11bXzB4MmMxYmNmKDB4NWZmKV0pJiZfMHhmYWNiZGQrKztjb25zdCBfMHg0YjdlZTE9dGhpc1snX3Rlc3RGaWx0ZXJTdGF0ZSddW18weDJjMWJjZigweDYwZCldW18weDE5YjZiNV07XzB4NGI3ZWUxPyh0aGlzW18weDJjMWJjZigweDIwMSldW18weDJjMWJjZigweDYwZCldW18weDE5YjZiNV09XzB4ZmFjYmRkLF8weDRiN2VlMSE9PV8weGZhY2JkZCYmKHRoaXNbXzB4MmMxYmNmKDB4MjAxKV1bJ251bWJlck9mQ292ZXJlZFJhbmdlcyddLT1fMHg0YjdlZTEsdGhpc1tfMHgyYzFiY2YoMHgyMDEpXVsnbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJ10rPV8weGZhY2JkZCkpOih0aGlzW18weDJjMWJjZigweDIwMSldW18weDJjMWJjZigweDYwZCldW18weDE5YjZiNV09XzB4ZmFjYmRkLHRoaXNbXzB4MmMxYmNmKDB4MjAxKV1bXzB4MmMxYmNmKDB4NzkyKV0rPV8weGZhY2JkZCk7fWVsc2V7Y29uc3QgXzB4NGIwYWFhPXRoaXNbJ190ZXN0RmlsdGVyU3RhdGUnXVtfMHgyYzFiY2YoMHg2MGQpXVtfMHgxOWI2YjVdO18weDRiMGFhYSYmKHRoaXNbXzB4MmMxYmNmKDB4MjAxKV1bXzB4MmMxYmNmKDB4NzkyKV0tPV8weDRiMGFhYSksZGVsZXRlIHRoaXNbJ190ZXN0RmlsdGVyU3RhdGUnXVtfMHgyYzFiY2YoMHg2MGQpXVtfMHgxOWI2YjVdO319W18weDQyZjllZSgweGMwKV0oKXtjb25zdCBfMHg1ZjBmMTM9XzB4NDJmOWVlO3JldHVybiB0aGlzW18weDVmMGYxMygweDZhNCldW18weDVmMGYxMygweDRkMildKHRoaXNbJ190ZXN0RmlsdGVyU3RhdGUnXVtfMHg1ZjBmMTMoMHg3OTIpXSk7fVtfMHg0MmY5ZWUoMHgyY2EpXSgpe2NvbnN0IF8weDJkN2UxMz1fMHg0MmY5ZWUsXzB4MjNhMzI1PVtdO2Zvcihjb25zdCBfMHgyOWUyZTcgb2YgdGhpc1tfMHgyZDdlMTMoMHg2YTQpXVtfMHgyZDdlMTMoMHg3MjUpXVtfMHgyZDdlMTMoMHg1ZmYpXVtfMHgyZDdlMTMoMHgyZjkpXSl7Y29uc3QgXzB4NGY1YTAzPXRoaXNbXzB4MmQ3ZTEzKDB4NmE0KV1bJ3Rlc3RCeUtleSddKF8weDI5ZTJlNyk7XzB4NGY1YTAzJiZfMHgyM2EzMjVbJ3B1c2gnXShfMHg0ZjVhMDMpO310aGlzW18weDJkN2UxMygweDIwMSldW18weDJkN2UxMygweDc5YildWyd1cGRhdGVUZXN0cyddKF8weDIzYTMyNSk7fVtfMHg0MmY5ZWUoMHg2MGMpXShfMHgyYjVjNDcpe2NvbnN0IF8weDFlNGIzYT1fMHg0MmY5ZWUsXzB4MWJjMGNkPXRoaXNbXzB4MWU0YjNhKDB4NmE0KV1bXzB4MWU0YjNhKDB4MzFiKV0oXzB4MmI1YzQ3KTtpZihfMHgxYmMwY2QpcmV0dXJuIF8weDFiYzBjZFtfMHgxZTRiM2EoMHgzOWEpXSgpO31bXzB4NDJmOWVlKDB4NDdmKV0oXzB4MjE0MGY0KXtjb25zdCBfMHgyOTFlZmQ9XzB4NDJmOWVlO2lmKCFfMHgyMTQwZjQpcmV0dXJuO2xldCBfMHgxOTJmYmUsXzB4NTg5ZWQ1O3RoaXNbXzB4MjkxZWZkKDB4NmE0KV1bXzB4MjkxZWZkKDB4NzI1KV1bXzB4MjkxZWZkKDB4NWZmKV1bXzB4MjkxZWZkKDB4MTk5KV0mJihfMHg1ODllZDU9dGhpc1tfMHgyOTFlZmQoMHgyMDEpXVsnZmlsZXMnXVtfMHgyMTQwZjRbXzB4MjkxZWZkKDB4NDYyKV0oKV0pO2NvbnN0IF8weDEzOTFiMz1fMHgyMTQwZjRbXzB4MjkxZWZkKDB4M2I0KV0oXzB4NTg5ZWQ1KTtpZihfMHgxMzkxYjM+PTB4MHx8XzB4MjE0MGY0W18weDI5MWVmZCgweDVkZCldPj0weDApe2NvbnN0IF8weDI3MWU0YT1fMHgyMTQwZjRbXzB4MjkxZWZkKDB4NjU4KV0oKTtfMHgxOTJmYmU9eyd2YWx1ZSc6XzB4MTM5MWIzLCdsb3cnOl8weDEzOTFiMzx0aGlzW18weDI5MWVmZCgweDZhNCldWydsb3dDb3ZlcmFnZVRocmVzaG9sZCddKCksJ3Jhbmdlcyc6eydjb3ZlcmVkJzpfMHgyMTQwZjRbJ251bWJlck9mQ292ZXJlZFJhbmdlcyddKF8weDU4OWVkNSksJ2FsbCc6XzB4MjcxZTRhfSwndmFsdWVDaGFuZ2VkJzpfMHgyMTQwZjRbJ19sYXRlc3RSZXBvcnRlZENvdmVyYWdlVmFsdWUnXSE9PV8weDEzOTFiM3x8XzB4MjE0MGY0W18weDI5MWVmZCgweDc3MyldIT09XzB4MjcxZTRhfHx2b2lkIDB4MH0sXzB4MTM5MWIzPj0weDB8fChfMHgxOTJmYmVbXzB4MjkxZWZkKDB4NjRhKV09ITB4MCksXzB4MjE0MGY0W18weDI5MWVmZCgweDVkZCldPV8weDEzOTFiMyxfMHgyMTQwZjRbJ19sYXRlc3ROdW1iZXJPZkFsbFJhbmdlcyddPV8weDI3MWU0YTt9cmV0dXJuIF8weDE5MmZiZTt9W18weDQyZjllZSgweDY2NCldKF8weDVhNWFkMyxfMHgyNmZiZjYpe2NvbnN0IF8weDI5OTAzZT1fMHg0MmY5ZWUsXzB4MzZjNDkwPXRoaXM7XzB4MjZmYmY2W18weDI5OTAzZSgweDIzMildPSEweDEsdGhpc1tfMHgyOTkwM2UoMHgxZmQpXSh7J3R5cGUnOl8weDI5OTAzZSgweDFjZSksJ2ZpbGVzJzpfMHg1YTVhZDNbJ21hcCddKF8weDJiOTkyYz0+e2NvbnN0IF8weDExMzJlYj1fMHgyOTkwM2U7bGV0IF8weDJiNDA3NT1fMHgzNmM0OTBbXzB4MTEzMmViKDB4NmE0KV1bXzB4MTEzMmViKDB4NjliKV0oXzB4MmI5OTJjWydpZCddKTtpZihfMHgyYjQwNzVbXzB4MTEzMmViKDB4MzlhKV0oKSlyZXR1cm57J2FjdGlvbic6XzB4MTEzMmViKDB4MjUzKSwncGF0aCc6XzB4MmI5OTJjWydwYXRoJ10sJ2lkJzpfMHgyYjk5MmNbJ2lkJ10sJ3Rlc3QnOl8weDJiNDA3NSYmXzB4MmI0MDc1W18weDExMzJlYigweDQ4YildKCl8fHZvaWQgMHgwLCdjb3ZlcmFnZSc6XzB4MzZjNDkwW18weDExMzJlYigweDQ3ZildKF8weDJiNDA3NSl9O30pWydmaWx0ZXInXShfMHg0ZGQzMjE9Pl8weDRkZDMyMSl9LF8weDI2ZmJmNik7fVtfMHg0MmY5ZWUoMHg1NmMpXShfMHg0MzExZjUsXzB4MzlhYTljKXtjb25zdCBfMHg1N2UwMjk9XzB4NDJmOWVlLF8weDMyNWY4MT1bXSxfMHgyMTM3M2M9X1tfMHg1N2UwMjkoMHgxYTcpXShfMHg0MzExZjUsKF8weDY1ZTdhMyxfMHgzMzFmNTMpPT57Y29uc3QgXzB4M2U4NjY3PV8weDU3ZTAyOeKAiztpZihfMHgzMzFmNTM9XzB4MzlhYTljKF8weDMzMWY1MyksXzB4MzMxZjUzKXtjb25zdCBfMHg0YWIzMTA9dGhpc1snX3JlcG9ydEZpbGVDb3ZlcmFnZSddKF8weDMzMWY1Myk7XzB4NGFiMzEwJiZfMHg0YWIzMTBbXzB4M2U4NjY3KDB4MWI2KV0mJihkZWxldGUgXzB4NGFiMzEwWyd2YWx1ZUNoYW5nZWQnXSxfMHg2NWU3YTNbXzB4MzMxZjUzW18weDNlODY2NygweDQ2MildKCldPV8weDRhYjMxMCksdGhpc1tfMHgzZTg2NjcoMHgzMTgpXVtfMHgzMzFmNTNbXzB4M2U4NjY3KDB4NDhmKV0oKV0mJnRoaXNbJ19pc0ZpbGVXaXRoQ292ZXJhZ2VPclRlc3QnXShfMHgzMzFmNTNbXzB4M2U4NjY3KDB4NDhmKV0oKSkmJl8weDMyNWY4MVtfMHgzZTg2NjcoMHg0MmQpXSh7J2FjdGlvbic6XzB4M2U4NjY3KDB4MWYwKSwncGF0aCc6XzB4MzMxZjUzW18weDNlODY2NygweDQ4ZildKCksJ2lkJzpfMHgzMzFmNTNbXzB4M2U4NjY3KDB4NDYyKV0oKSwndGVzdCc6XzB4MzMxZjUzWydpc1Rlc3RGaWxlJ10oKXx8dm9pZCAweDB9KTt9cmV0dXJuIF8weDY1ZTdhMzt9LHt9KTtfWydpc0VtcHR5J10oXzB4MjEzNzNjKXx8dGhpc1tfMHg1N2UwMjkoMHgxZmQpXSh7J3R5cGUnOl8weDU3ZTAyOSgweDYxYSksJ2NoYW5nZXMnOl8weDIxMzczY30pLF9bXzB4NTdlMDI5KDB4OTcpXShfMHgzMjVmODEpfHx0aGlzW18weDU3ZTAyOSgweDFmZCldKHsndHlwZSc6J3VpOmZpbGVzJywnZmlsZXMnOl8weDMyNWY4MX0pO31bXzB4NDJmOWVlKDB4MWZlKV0oXzB4NWFkNDUxLF8weDI4ZmRkOSl7Y29uc3QgXzB4MmFhNWVkPV8weDQyZjllZTtsZXQgXzB4M2E5NmRjLF8weDJjMWVhMSxfMHg0ZWRmYWUsXzB4MzE4NGFmPV8weDJhYTVlZCgweDI2OSk7XzB4NWFkNDUxPyhfMHg1YWQ0NTFbXzB4MmFhNWVkKDB4NTNhKV0mJihfMHgzMTg0YWY9XzB4MmFhNWVkKDB4NDcwKSksXzB4M2E5NmRjPV8weDVhZDQ1MVsnY2hhbmdlZCddLF8weDJjMWVhMT1fMHg1YWQ0NTFbXzB4MmFhNWVkKDB4MWZjKV0sXzB4NGVkZmFlPV8weDVhZDQ1MVsnZmlyc3RGYWlsaW5nT3JTaW5nbGVFeGVjdXRlZFRlc3QnXSk6KF8weDMxODRhZj0nYWxsUmVzdWx0c1VwZGF0ZWQnLF8weDNhOTZkYz10aGlzW18weDJhYTVlZCgweDZhNCldW18weDJhYTVlZCgweDM2MSldKCkpLHRoaXNbXzB4MmFhNWVkKDB4MWZkKV0oeyd0eXBlJzondWk6dGVzdHM6JytfMHgzMTg0YWYsJ2ZpbGVzJzp0aGlzW18weDJhYTVlZCgweGExKV0oXzB4M2E5NmRjLF8weDRlZGZhZSxfMHgyYWE1ZWQoMHgyNzQpKVtfMHgyYWE1ZWQoMHg0NDkpXSh0aGlzW18weDJhYTVlZCgweGExKV0oXzB4MmMxZWExLF8weDRlZGZhZSxfMHgyYWE1ZWQoMHgxZmMpKSl9LF8weDI4ZmRkOSk7fVtfMHg0MmY5ZWUoMHhhMSldKF8weDE4OTVjZCxfMHgzY2E2YjQsXzB4MWEwOTczKXtjb25zdCBfMHgyMjBlNmE9XzB4NDJmOWVlLF8weDQxNmFlMz10aGlzLF8weDMxZTg1Nj1fMHg0MTZhZTNbXzB4MjIwZTZhKDB4NmE0KV1bXzB4MjIwZTZhKDB4NzI1KV1bXzB4MjIwZTZhKDB4NzhmKV0sXzB4MjYwYzY3PV8weDMxZTg1NltfMHgyMjBlNmEoMHgxOTkpXSxfMHgzN2E5ZTg9X1tfMHgyMjBlNmEoMHgxYTcpXShfMHg0MTZhZTNbXzB4MjIwZTbigIthKDB4NmE0KV1bJ2dsb2JhbEVycm9ycyddKCksKF8weDU4N2ZiNixfMHhjZGMxZmMpPT57Y29uc3QgXzB4M2EzNjM2PV8weDIyMGU2YTtsZXQgXzB4MWQxMzZjO3JldHVybiBfW18weDNhMzYzNigweDNlNildKF8weGNkYzFmY1tfMHgzYTM2MzYoMHg0MzcpXSgpLF8weDUxNThiNj0+e2NvbnN0IF8weDE0MTk1Nz1fMHgzYTM2MzYsXzB4NGU3YzE1PV8weDUxNThiNltfMHgxNDE5NTcoMHg1Y2QpXSgpO2lmKF8weDRlN2MxNSl7Y29uc3QgXzB4NTgyNDgyPV8weDQxNmFlM1tfMHgxNDE5NTcoMHg2YTQpXVtfMHgxNDE5NTcoMHg2OWIpXShfMHg0ZTdjMTUpO2lmKF8weDU4MjQ4MltfMHgxNDE5NTcoMHg0OGIpXSgpKXJldHVybiBfMHgxZDEzNmM9XzB4NTgyNDgyLCEweDE7fX0pLF8weDFkMTM2YyYmKF8weDU4N2ZiNltfMHgxZDEzNmNbXzB4M2EzNjM2KDB4NDYyKV0oKV09XzB4NTg3ZmI2W18weDFkMTM2Y1sna2V5J10oKV18fFtdKVtfMHgzYTM2MzYoMHg0MmQpXSh7J21lc3NhZ2UnOl8weGNkYzFmY1snbWVzc2FnZSddKCksJ3N0YWNrJzpfW18weDNhMzYzNigweDc0MildKF8weGNkYzFmY1snc3RhY2snXSgpKVtfMHgzYTM2MzYoMHg3NWMpXShfMHg1ZTQ1ZmI9Pl8weDQxNmFlM1tfMHgzYTM2MzYoMHg1MjYpXShfMHg1ZTQ1ZmIsXzB4NWU0NWZiW18weDNhMzYzNigweDYzNildKCkpKVtfMHgzYTM2MzYoMHg3MjUpXShfMHgyNDBlMWE9Pl8weDI0MGUxYSlbXzB4M2EzNjM2KDB4M2M2KV0oKSwnc25hcHNob3QnOl8weGNkYzFmY1tfMHgzYTM2MzYoMHg0NjgpXSgpfSksXzB4NTg3ZmI2O30se30pfHx7fSxfMHgzZGI3Yzk9dGhpc1tfMHgyMjBlNmEoMHg2YTQpXVsnZmlsdGVyJ11bJ3Rlc3QnXSxfMHgzYmJiNzA9XzB4M2RiN2M5W18weDIyMGU2YSgweDE5OSldJiZfMHgzZGI3YzlbXzB4MjIwZTZhKDB4MWU2KV09PT0weDE7cmV0dXJuIF9bJ21hcCddKF8weDE4OTVjZCxfMHgzYmQxNDE9Pntjb25zdCBfMHgyODcyZTc9XzB4MjIwZTZhO2xldCBfMHgyM2RmZmM9e307cmV0dXJuIF9bXzB4Mjg3MmU3KDB4M2U2KV0oXzB4M2JkMTQxW18weDI4NzJlNygweDMzZildKCksXzB4MWIwZjQyPT57Y29uc3QgXzB4OTVkNDBkPV8weDI4NzJlNztsZXQgXzB4M2QwMmVmPV8weDFiMGY0MltfMHg5NWQ0MGQoMHg0OGYpXSgpLF8weDQ4NjFlZT0nOicrX1tfMHg5NWQ0MGQoMHg1NDYpXShfMHgzZDAyZWYpLF8weDJiMjQ2ND1fMHgyM2RmZmM7XzB4M2QwMmVmW18weDk1ZDQwZCgweDE5NSldPjB4MSYmX1snZWFjaCddKF9bXzB4OTVkNDBkKDB4NDk1KV0oXzB4M2QwMmVmLF8weDNkMDJlZltfMHg5NWQ0MGQoMHgxOTUpXS0weDEpLF8weDUxNzc2Mj0+e18weDUxNzc2Mj0nOicrXzB4NTE3NzYyO2xldCBfMHgxMzVhODM9XzB4MmIyNDY0W18weDUxNzc2Ml07XzB4MTM1YTgzfHwoXzB4MTM1YTgzPXt9LF8weDJiMjQ2NFtfMHg1MTc3NjJdPV8weDEzNWE4MyksXzB4MmIyNDY0PV8weDEzNWE4Mzt9KTtsZXQgXzB4NGE2ZmM5PV9bXzB4OTVkNDBkKDB4NzQyKV0oXzB4MWIwZjQyWydjb3ZlcmVkRmlsZXMnXSgpKVtfMHg5NWQ0MGQoMHg3MjUpXShfMHgxN2I0ZDc9Pl8weDE3YjRkN1snaGFzUmVwb3J0YWJsZUNvdmVyYWdlT3JUZXN0RmlsZSddKCkpWydtYXAnXShfMHg1MjE5NjU9Pl8weDUyMTk2NVsna2V5J10oKSlbJ3ZhbHVlJ10oKTtfW18weDk1ZDQwZCgweDk3KV0oXzB4NGE2ZmM5KSYmKF8weDRhNmZjOT12b2lkIDB4MCksXzB4MmIyNDY0W18weDQ4NjFlZV09eydpc1Rlc3QnOiEweDAsJ2ZpcnN0RmFpbGluZ09yU2luZ2xlRXhlY3V0ZWQnOiFfMHgzYmJiNzAmJl8weDFiMGY0Mj09PV8weDNjYTZiNHx8dm9pZCAweDAsJ3NlbGVjdGVkJzpfMHgzYmJiNzAmJl8weDNkYjdjOVsnaGFzJ10oXzB4MWIwZjQyWydrZXknXSgpKXx8dm9pZCAweDAsJ25hbWUnOl8weDQ4NjFlZVtfMHg5NWQ0MGQoMHg1MTEpXSgweDEpLCd0aW1lJzpfMHgxYjBmNDJbXzB4OTVkNDBkKDB4NGVhKV0oKSwnc2xvdyc6XzB4MWIwZjQyWydzbG93J10oKSwnbGluZSc6XzB4MWIwZjQyW18weDk1ZDQwZCgweDZkOSldKCk/XzB4MWIwZjQyW18weDk1ZDQwZCgweDZkOSldKClbXzB4OTVkNDBkKDB4NjMwKV0oKToweDEsJ3N0YXR1cyc6XzB4MWIwZjQyW18weDk1ZDQwZCgweDExYSldKCksJ2xvZ3MnOl8oXzB4MWIwZjQyW18weDk1ZDQwZCgweDM3MCldKCkpW18weDk1ZDQwZCgweDcyNSldKF8weDRlODNjNj0+XzB4MjYwYzY3JiZfMHg0ZTgzYzZbXzB4OTVkNDBkKDB4NzFmKV0oKT8hXzB4MzFlODU2WydzdXBwcmVzc2VzJ10oXzB4M2JkMTQxWydrZXknXSgpLF8weDRlODNjNltfMHg5NWQ0MGQoMHg3MWYpXSgpKTohMHgwKVtfMHg5NWQ0MGQoMHg3NWMpXShfMHgzMDFjZWI9Pntjb25zdCBfMHhkYTUzYj1fMHg5NWQ0MGQ7bGV0IF8weDEyYzYzNj17J21lc3NhZ2UnOl8weDMwMWNlYltfMHhkYTUzYigweDYwNCldKCl9O3JldHVybiBfMHgzMDFjZWJbJ2ZpbGUnXSgpJiZfMHgzMDFjZWJbJ2ZpbGUnXSgpW18weGRhNTNiKDB4MzlhKV0oKSYmKF8weDEyYzYzNltfMHhkYTUzYigweDFlOSldPV8weDQxNmFlM1tfMHhkYTUzYigweDUyNildKF8weDMwMWNlYixfMHgzMDFjZWJbXzB4ZGE1M2IoMHgxYmMpXSgpW18weGRhNTNiKDB4NDhmKV0oKSkpLF8weDEyYzYzNjt9KSwnZXJyb3JzJzpfW18weDk1ZDQwZCgweDc1YyldKF8weDFiMGY0MltfMHg5NWQ0MGQoMHg2MGYpXSgpLF8weDJmODQzND0+KHsnbWVzc2FnZSc6XzB4MmY4NDM0WydtZXNzYWdlJ10oKSwnc3RhY2snOl9bXzB4OTVkNDBkKDB4NzQyKV0oXzB4MmY4NDM0W18weDk1ZDQwZCgweDQzNyldKCkpW18weDk1ZDQwZCgweDc1YyldKF8weDUxZDc3MT0+XzB4NDE2YWUzW18weDk1ZDQwZCgweDUyNildKF8weDUxZDc3MSxfMHg1MWQ3NzFbXzB4OTVkNDBkKDB4NjM2KV0oKSkpW18weDk1ZDQwZCgweDcyNSldKF8weDVkZmM0Mz0+XzB4NWRmYzQzKVtfMHg5NWQ0MGQoMHgzYzYpXSgpLCdhY3R1YWwnOl8weDJmODQzNFtfMHg5NWQ0MGQoMHg1NjApXSgpLCdleHBlY3RlZCc6XzB4MmY4NDM0W18weDk1ZDQwZCgweDZmYSldKCksJ3NuYXBzaG90JzpfMHgyZjg0MzRbXzB4OTVkNDBkKDB4NDY4KV0oKX0pKSwnY292ZXJlZEZpbGVzJzpfMHg0YTZmYzl9O30pLHsncGF0aCc6XzB4M2JkMTQxW18weDI4NzJlNygweDQ4ZildKCksJ2FjdGlvbic6XzB4MWEwOTczLCd0ZXN0cyc6XzB4NDE2YWUzW18weDI4NzJlNygweDI2MildKF8weDIzZGZmYyksJ2Vycm9ycyc6XzB4MzdhOWU4W18weDNiZDE0MVtfMHgyODcyZTcoMHg0NjIpXSgpXX07fSk7fVtfMHg0MmY5ZWUoMHg1MjYpXShfMHg0ZWNhNTgsXzB4MTUzZjg3KXtjb25zdCBfMHgyYzYyNGY9XzB4NDJmOWVlO2lmKCF0aGlzWydfaXNGaWxlV2l0aENvdmVyYWdlT3JUZXN0J10oXzB4MTUzZjg3KSlyZXR1cm47bGV0IF8weDI2ZDYxYT17J3BhdGgnOl8weDE1M2Y4N307cmV0dXJuIF8weDRlY2E1OFtfMHgyYzYyNGYoMHg3M2IpXSgpPyhfMHgyNmQ24oCLMWFbJ2xpbmUnXT1fMHg0ZWNhNThbXzB4MmM2MjRmKDB4NzNiKV0oKVtfMHgyYzYyNGYoMHg2MzApXSgpLF8weDI2ZDYxYVtfMHgyYzYyNGYoMHg2ZTQpXT1fMHg0ZWNhNThbJ3JhbmdlJ10oKVtfMHgyYzYyNGYoMHg1NjUpXSgpKTpfMHg0ZWNhNThbXzB4MmM2MjRmKDB4MmE0KV0oKSYmKF8weDI2ZDYxYVtfMHgyYzYyNGYoMHgyYTQpXT1fMHg0ZWNhNThbXzB4MmM2MjRmKDB4MmE0KV0oKSksXzB4MjZkNjFhWydjb250ZXh0J109XzB4NGVjYTU4W18weDJjNjI0ZigweDRkOCldKCksXzB4MjZkNjFhO31bXzB4NDJmOWVlKDB4MjYyKV0oXzB4MTA4ZTMyKXtjb25zdCBfMHgzNjljMzA9dGhpcztyZXR1cm4gX1snbWFwJ10oXzB4MTA4ZTMyLChfMHgxNDQxNTcsXzB4MWQyNzI1KT0+e2NvbnN0IF8weGQzNTM4Mz1fMHhhZTI2O2lmKF8weDE0NDE1N1tfMHhkMzUzODMoMHg1OGMpXT09PSEweDApcmV0dXJuIGRlbGV0ZSBfMHgxNDQxNTdbXzB4ZDM1MzgzKDB4NThjKV0sXzB4MTQ0MTU3O2NvbnN0IF8weDRlNWY0YT1fMHgxZDI3MjVbXzB4ZDM1MzgzKDB4NTExKV0oMHgxKTtyZXR1cm57J25hbWUnOl8weDEwYTQ0ZltfMHhkMzUzODMoMHg0NjMpXShfMHg0ZTVmNGEpLCdpbnRlcm5hbE5hbWUnOl8weDRlNWY0YSwndGVzdHMnOl8weDM2OWMzMFtfMHhkMzUzODMoMHgyNjIpXShfMHgxNDQxNTcpfTt9KTt9W18weDQyZjllZSgweDY5YSldKF8weDRjMzdkMCxfMHgxN2UzMjgpe2NvbnN0IF8weDRjYzliNz1fMHg0MmY5ZWUsXzB4NTM1YjJiPXRoaXMsXzB4NGVlMGY5PV8weDM1YmZlMD0+cHJvY2Vzc1tfMHg0Y2M5YjcoMHhmNSldKCgpPT57Y29uc3QgXzB4MTlkN2ZlPV8weDRjYzliNzt0cnl7Y29uc3QgXzB4YzE1NDY5PV8weDUzNWIyYltfMHgxOWQ3ZmUoMHgyZTEpK18weDM1YmZlMFtfMHgxOWQ3ZmUoMHg0NTQpXV07XzB4YzE1NDY5JiZfMHhjMTU0NjlbXzB4MTlkN2ZlKDB4MmM4KV0oXzB4NTM1YjJiLF8weDM1YmZlMCk7fWNhdGNoKF8weDNiNWY2Mil7bGV0IF8weDMxOTI3Nj0ndW5rbm93bic7XzB4MzViZmUwJiYoXzB4MzE5Mjc2PV8weDM1YmZlMFsndHlwZSddKSxjb25zb2xlWydlcnJvciddKF8weDE5ZDdmZSgweDM2MilbJ2NvbmNhdCddKF8weDMxOTI3NixfMHgxOWQ3ZmUoMHg0NGIpKVtfMHgxOWQ3ZmUoMHg0NDkpXShfMHgzYjVmNjJbXzB4MTlkN2ZlKDB4YWIpXSkpO319KSxfMHgyOTU3YTI9KCk9Pntjb25zdCBfMHgzOGFlMzA9XzB4NGNjOWI3O18weDUzNWIyYltfMHgzOGFlMzAoMHg0NGEpXT1uZXcgXzB4NDU0ZTMxKHsncG9ydCc6XzB4NGMzN2QwLCd2ZXJpZnlDbGllbnQnOl8weDNlNTQxYT0+e2NvbnN0IF8weDIzNTk3MD1fMHgzOGFlMzA7bGV0IF8weDNhZWZlYj0hMHgxO3RyeXtjb25zdCBfMHg0NjViNzI9XzB4ODMxMmVmW18weDIzNTk3MCgweDQ5NyldKF8weDNlNTQxYVtfMHgyMzU5NzAoMHgyYmIpXSlbXzB4MjM1OTcwKDB4NWU2KV07XzB4M2FlZmViPV8weDQ2NWI3Mj09PV8weDIzNTk3MCgweGVlKXx8XzB4NDY1YjcyPT09XzB4MjM1OTcwKDB4Mjk1KXx8XzB4NDY1YjcyPT09XzB4MjM1OTcwKDB4NzYyKXx8XzB4NDY1YjcyPT09JzEyNy4wLjAuMSd8fF8weDQ2NWI3Mj09PV8weDIzNTk3MCgweDE0ZCk7fWNhdGNoKF8weDU2ZmU3NSl7fXJldHVybiBfMHgzYWVmZWI7fX0pLF8weDUzNWIyYlsnX3dzcyddWydvbiddKCdjb25uZWN0aW9uJyxmdW5jdGlvbihfMHg1MGZiYjgpe2NvbnN0IF8weDg1ZTUzPV8weDM4YWUzMDtfMHg2Y2QwOGQoXzB4ODVlNTMoMHgzYzUpKSxfMHg1MzViMmJbXzB4ODVlNTMoMHg2YTQpXT1fMHgxN2UzMjgsXzB4NTBmYmI4W18weDg1ZTUzKDB4NWVjKV09ITB4MSxfMHg1MGZiYjhbXzB4ODVlNTMoMHgyMzIpXT0hMHgwLF8weDUzNWIyYlsnX21vZGVsJ11bJ19wcm9qZWN0J10mJl8weDUzNWIyYltfMHg4NWU1MygweDZhNCldWydfcHJvamVjdCddW18weDg1ZTUzKDB4MzRkKV1bXzB4ODVlNTMoMHgzMzIpXShfMHg4NWU1MygweDU3NykpLCFfMHg1MzViMmJbXzB4ODVlNTMoMHg1YzgpXVsnbGVuZ3RoJ10mJl8weDUzNWIyYltfMHg4NWU1MygweDZhNCldWydvbiddKF8weDg1ZTUzKDB4YWIpLF8weDRlZTBmOSksXzB4NTM1YjJiW18weDg1ZTUzKDB4NWM4KV1bXzB4ODVlNTMoMHg0MmQpXShfMHg1MGZiYjgpLF8weDUwZmJiOFsnb24nXSgnbWVzc2FnZScsXzB4MjcwZjExPT57Y29uc3QgXzB4NWUwMjFmPV8weDg1ZTUzO2xldCBfMHgxOTc0YTA7dHJ5e18weDE5NzRhMD1KU09OWydwYXJzZSddKF8weDI3MGYxMSk7fWNhdGNoKF8weDg0YTRkMil7Y29uc29sZVtfMHg1ZTAyMWYoMHg0ODUpXShfMHg1ZTAyMWYoMHgxYTMpK18weDI3MGYxMSsnLFx4MjAnKyhfMHg4NGE0ZDImJl8weDg0YTRkMltfMHg1ZTAyMWYoMHhhYildKSk7cmV0dXJuO31fMHg2Y2QwOGQoJ0luY29taW5nXHgyMG1lc3NhZ2VceDIwJXMnLF8weDE5NzRhMFtfMHg1ZTAyMWYoMHg0NTQpXSk7Y29uc3QgXzB4MzQzOTljPV8weDUzNWIyYltfMHgxOTc0YTBbXzB4NWUwMjFmKDB4NDU0KV1dO18weDM0Mzk5YyYmXzB4MzQzOTljW18weDVlMDIxZigweDJjOCldKF8weDUzNWIyYixfMHgxOTc0YTAsXzB4NTBmYmI4KTt9KSxfMHg1MGZiYjhbJ29uJ10oXzB4ODVlNTMoMHg2YjUpLCgpPT57Y29uc3QgXzB4MzdkMmZiPV8weDg1ZTUzO18weDZjZDA4ZCgnVUlceDIwY2xpZW50XHgyMGRpc2Nvbm5lY3RlZCcpLF8weDUzNWIyYltfMHgzN2QyZmIoMHg1YzgpXT1fMHg1MzViMmJbXzB4MzdkMmZiKDB4NWM4KV1bXzB4MzdkMmZiKDB4NzI1KV0oXzB4MzhlYjM4PT5fMHgzOGViMzghPV8weDUwZmJiOCksIV8weDUzNWIyYltfMHgzN2QyZmIoMHg1YzgpXVtfMHgzN2QyZmIoMHgxOTUpXSYmXzB4NTM1YjJiW18weDM3ZDJmYigweDZhNCldW18weDM3ZDJmYigweDM5OSldKF8weDM3ZDJmYigweGFiKSxfMHg0ZWUwZjkpO30pLF8weDUzNWIyYltfMHg4NWU1MygweDZhNCldWydwYXVzZWQnXSgpfHxfMHg1MzViMmJbXzB4ODVlNTMoMHgxZmQpXSh7J3R5cGUnOid1aTpoYW5kc2hha2UnLCdwcm9qZWN0Jzp7J25hbWUnOl8weDUzNWIyYltfMHg4NWU1MygweDZhNCldW18weDg1ZTUzKDB4NzFkKV0oKSwncGF0aCc6XzB4NTM1YjJiW18weDg1ZTUzKDB4NmE0KV1bJ2NvbmZpZ0ZpbGVQYXRoJ10oKSwnY29uZmlnJzpfMHg1MzViMmJbXzB4ODVlNTMoMHg2YTQpXVtfMHg4NWU1MygweDM3MildKCl9LCd2ZXJzaW9uJzpfMHg1MzViMmJbJ19tb2RlbCddW18weDg1ZTUzKDB4MWU0KV0oKX0sXzB4NTBmYmI4KTt9KSxfMHg2Y2QwOGQoXzB4MzhhZTMwKDB4NzUwKSxfMHg0YzM3ZDApO307XzB4MjQ2OTg0W18weDRjYzliNygweDFkMCldKF8weDRmNGJhMilbJ3RoZW4nXShfMHgzZWRjMzI9Pntjb25zdCBfMHg0NzEzMzU9XzB4NGNjOWI3O2lmKF8weDNlZGMzMil0cnl7Y29uc3QgXzB4MTA4ZWU5PV8weDE1Nzk0MygnZXhwcmVzcycpLF8weDUyMjdiMT1fMHgxMDhlZTkoKTtsZXQgXzB4MjE2YzBkO3RyeXtfMHgyMTZjMGQ9XzB4MjkxNDA1W18weDQ3MTMzNSgweDI4MCldKF8weDI5MTQwNVtfMHg0NzEzMzUoMHg0MmUpXShfMHgyOTE0MDVbJ2Rpcm5hbWUnXShwcm9jZXNzWydtYWluTW9kdWxlJ11bXzB4NDcxMzM1KDB4OTIpXSksJy4uJyxfMHg0NzEzMzUoMHgxNzEpKSksKCFfMHg0NWFkZDBbXzB4NDcxMzM1KDB4MzdiKV0oXzB4MjE2YzBkKXx8IV8weDQ1YWRkMFsnZXhpc3RzU3luYyddKF8weDI5MTQwNVtfMHg0NzEzMzUoMHg0MmUpXShfMHgyMTZjMGQsXzB4NDcxMzM1KDB4ZDkpKSkpJiYoXzB4MjE2YzBkPXZvaWQgMHgwKTt9Y2F0Y2goXzB4NWUxZjVlKXtfMHgyMTZjMGQ9dm9pZCAweDA7fV8weDIxNmMwZD9fMHg1MjI3YjFbXzB4NDcxMzM1KDB4NGYwKV0oXzB4MTA4ZWU5W18weDQ3MTMzNSgweDczNSldKF8weDIxNmMwZCkpOl8weDUyMjdiMVtfMHg0NzEzMzUoMHgzZWMpXSgnLycsKF8weDNlMzZlMyxfMHhhZGMzZDApPT5fMHhhZGMzZDBbXzB4NDcxMzM1KDB4NWEwKV0oXzB4MmQxMjRiKSksXzB4NTM1YjJiW18weDQ3MTMzNSgweDdiOCldPV8weDJhNjkxZVtfMHg0NzEzMzUoMHhmOSldKF8weDUyMjdiMSlbJ29uJ10oXzB4NDcxMzM1KDB4NDg1KSwoKT0+XzB4Mjk1N2EyKCkpW18weDQ3MTMzNSgweDJiYyldKF8weDQ3MTMzNSgweDUyMCksKCk9Pl8weDI5NTdhMigpKVtfMHg0NzEzMzUoMHg2Y2YpXShfMHgzZWRjMzIpO31jYXRjaChfMHhkNzdiOTcpe18weDI5NTdhMigpO31lbHNlIF8weDI5NTdhMigpO30pO31bXzB4NDJmOWVlKDB4MWZkKV0oXzB4MmRkYWI3LF8weDNhMjJlMCl7Y29uc3QgXzB4M2M1MzE2PV8weDQyZjllZTtfMHgzYTIyZTAmJihfMHgyZGRhYjdbXzB4M2M1MzE2KDB4NDU0KV09PT1fMHgzYzUzMTYoMHgzODgpPyhfMHgzYTIyZTBbXzB4M2M1MzE2KDB4MTZkKV09MHgwLF8weDJkZGFiN1tfMHgzYzUzMTYoMHg1ZWYpXT1fMHgzYTIyZTBbXzB4M2M1MzE2KDB4MTZkKV0rKyk6XzB4MmRkYWI3W18weDNjNTMxNigweDQ1NCldPT09J3VpOnRlc3RzOnNvbWVSZXN1bHRzVXBkYXRlZCcmJihfMHgyZGRhYjdbXzB4M2M1MzE2KDB4NWVmKV09XzB4M2EyMmUwW18weDNjNTMxNigweDE2ZCldKyspKSxfMHg2Y2QwOGQoXzB4M2M1MzE2KDB4NDA3KSxfMHgyZGRhYjdbJ3R5cGUnXSk7Y29uc3QgXzB4MmI4ZTRiPUpTT05bXzB4M2M1MzE2KDB4NjRlKV0oXzB4MmRkYWI3KTtfMHgzYTIyZTA/XzB4M2EyMmUwW18weDNjNTMxNigweDVhMCldKF8weDJiOGU0Yik6X1tfMHgzYzUzMTYoMHgzZTYpXSh0aGlzW18weDNjNTMxNigweDVjOCldLF8weDJmNDdmOT0+XzB4MmY0N2Y5W18weDNjNTMxNigweDVhMCldKF8weDJiOGU0YikpO31bXzB4NDJmOWVlKDB4MTJmKV0oKXtjb25zdCBfMHg0MGI1N2Q9XzB4NDJmOWVlO3JldHVybiBRW18weDQwYjU3ZCgweDFkZCldKF9bXzB4NDBiNTdkKDB4NzVjKV0oXzB4NWMyNjc3LF8weDU0ZDIwND0+XzB4MjQ2OTg0WydjaGVja1BvcnQnXShfMHg1NGQyMDQpKSlbXzB4NDBiNTdkKDB4NGU3KV0oXzB4N2Y5ZDdjPT5fW18weDQwYjU3ZCgweDI2YSldKF8weDdmOWQ3YyxfMHg0ZjlkZWU9PiEhXzB4NGY5ZGVlKSlbXzB4NDBiNTdkKDB4NGU3KV0oXzB4NDFjYTk1PT57Y29uc3QgXzB4MjNhOTdhPV8weDQwYjU3ZDtpZihfMHg0MWNhOTUpcmV0dXJuIF8weDQxY2E5NTt7Y29uc3QgXzB4NWU1ZWIyPVFbJ2RlZmVyJ10oKTtyZXR1cm4gXzB4MjQ2OTg0W18weDIzYTk3YSgweDI5NyldKF8weDVlNWViMltfMHgyM2E5N2EoMHgyODApXSksXzB4NWU1ZWIyW18weDIzYTk3YSgweDUzMCldO319KTt9W18weDQyZjllZSgweDRkNildKCl7Y29uc3QgXzB4MmRlYjg1PV8weDQyZjllZSxfMHgyMWM2YmI9dGhpcztfMHgyMWM2YmJbXzB4MmRlYjg1KDB4NDRhKV0mJl8weDIxYzZiYlsnX3dzcyddW18weDJkZWI4NSgweDZiNSldKCksXzB4MjFjNmJiWydfaHR0cFNlcnZlciddJiZfMHgyMWM2YmJbXzB4MmRlYjg1KDB4N2I4KV1bJ2Nsb3NlJ10oKTt9fV8weDE1NjNmOVtfMHg0MmY5ZWUoMHgzNjYpXT1fMHg1NDU1MTE7fSx7Jy4uLy4uL3V0aWxzJzoweDIxLCcuLi9zZXJ2ZXIvZG9jdW1lbnRJbkVkaXRvcic6MHhhLCcuLi9zZXJ2ZXIvdGVzdEZpbHRlcic6MHgxNiwnLi4vc2hhcmVkL3V0aWxzJzoweDFhLCcuL3Rlc3RGaWx0ZXJIaWVyYXJjaHknOjB4MWMsJ2V4cHJlc3MnOnZvaWQgMHgwLCdmcyc6dm9pZCAweDAsJ2h0dHAnOnZvaWQgMHgwLCduZXQnOnZvaWQgMHgwLCdwYXRoJzp2b2lkIDB4MCwndXJsJzp2b2lkIDB4MCwnd3MnOnZvaWQgMHgwfV0sMHgxYzpbZnVuY3Rpb24oXzB4MTc4ODMxLF8weDE5ZGYwNSxfMHg1NjUyYWYpeyd1c2Ugc3RyaWN0Jztjb25zdCBfMHhhNDQzZmQ9XzB4YWUyNjtjb25zdCBfMHg1YWQ1MWI9XzB4MTc4ODMxKF8weGE0NDNmZCgweDNlMykpO2NsYXNzIF8weDM1YTIxN3tjb25zdHJ1Y3Rvcigpe3RoaXNbJ19zdGF0ZSddPXt9LHRoaXNbJ19mcmVzaCddPSEweDA7fWdldFsnc3RhdGUnXSgpe2NvbnN0IF8weDJiZGU0Mj1fMHhhNDQzZmQ7cmV0dXJuIHRoaXNbXzB4MmJkZTQyKDB4NTcwKV07fWdldFsnZnJlc2gnXSgpe2NvbnN0IF8weGViZDNhMj1fMHhhNDQzZmQ7cmV0dXJuIHRoaXNbXzB4ZWJkM2EyKDB4NWNhKV07fVtfMHhhNDQzZmQoMHgzNjcpXShfMHg1Y2QzMzMsXzB4YWJkY2JjKXtjb25zdCBfMHgxODBhZWY9XzB4YTQ0M2ZkO3RoaXNbXzB4MTgwYWVmKDB4NWNhKV09ITB4MTtjb25zdCBfMHgzOGIyZmQ9eyfigItmaWx0ZXJlZCc6ITB4MCwndGVzdHMnOnt9fTtmb3IoY29uc3QgXzB4M2QwMTk2IG9mIF8weGFiZGNiYylpZihfMHgzZDAxOTZbXzB4MTgwYWVmKDB4NjM2KV0oKT09PV8weDVjZDMzMyl7Y29uc3QgXzB4MzIwYzg4PV8weDNkMDE5NltfMHgxODBhZWYoMHg0OGYpXSgpO2xldCBfMHg0YTE4MDk9XzB4MzhiMmZkO2Zvcihjb25zdCBfMHg0OGMzNjAgb2YgXzB4MzIwYzg4KXtjb25zdCBfMHgzNGFmNTE9XzB4NGExODA5Wyd0ZXN0cyddW18weDQ4YzM2MF18fHsnZmlsdGVyZWQnOiEweDAsJ3Rlc3RzJzp7fX07XzB4MzRhZjUxW18weDE4MGFlZigweDYyMyldPSEweDAsXzB4NGExODA5Wyd0ZXN0cyddW18weDQ4YzM2MF09XzB4MzRhZjUxLF8weDRhMTgwOT1fMHgzNGFmNTE7fV8weDRhMTgwOVsnbGVhZiddPSEweDA7fXRoaXNbXzB4MTgwYWVmKDB4NTcwKV1bXzB4NWNkMzMzXT1fMHgzOGIyZmQ7fVtfMHhhNDQzZmQoMHg3MjkpXShfMHgxM2Y5MjUpe2NvbnN0IF8weDI2MzY4ND1fMHhhNDQzZmQ7dGhpc1snX2ZyZXNoJ109ITB4MSxkZWxldGUgdGhpc1tfMHgyNjM2ODQoMHg1NzApXVtfMHgxM2Y5MjVdO31bJ2hhc0ZpbGUnXShfMHg1ODRkNDUpe2NvbnN0IF8weDM2MjQ2ZD1fMHhhNDQzZmQsXzB4NDgxMmQyPXRoaXNbXzB4MzYyNDZkKDB4NTcwKV1bXzB4NTg0ZDQ1XTtyZXR1cm4gXzB4NDgxMmQyJiZfMHg0ODEyZDJbXzB4MzYyNDZkKDB4NjIzKV07fVtfMHhhNDQzZmQoMHgxNTIpXShfMHhmMWNmY2EsXzB4NDY1M2E4LF8weDEzOTFkZSl7Y29uc3QgXzB4NGE1NjU1PV8weGE0NDNmZDt0aGlzW18weDRhNTY1NSgweDVjYSldPSEweDE7Y29uc3QgXzB4NTg5YWU4PV8weDQ2NTNhOFtfMHg0YTU2NTUoMHg0MmUpXShfMHg1YWQ1MWJbXzB4NGE1NjU1KDB4NGI5KV0pLF8weDU2ZWQ0Nz10aGlzW18weDRhNTY1NSgweDU3MCldW18weGYxY2ZjYV18fHsnZmlsdGVyZWQnOiEweDEsJ3Rlc3RzJzp7fX07dGhpc1snX3N0YXRlJ11bXzB4ZjFjZmNhXT1fMHg1NmVkNDc7e2xldCBfMHgzZDhmZjc9XzB4NTZlZDQ3O2Zvcihjb25zdCBfMHgyMzMyZjQgb2YgXzB4NDY1M2E4KXtjb25zdCBfMHhjYmI4NmE9XzB4M2Q4ZmY3W18weDRhNTY1NSgweDJmOSldW18weDIzMzJmNF18fHsnZmlsdGVyZWQnOiEweDEsJ3Rlc3RzJzp7fX07XzB4M2Q4ZmY3Wyd0ZXN0cyddW18weDIzMzJmNF09XzB4Y2JiODZhLF8weDNkOGZmNz1fMHhjYmI4NmE7fV8weDNkOGZmN1tfMHg0YTU2NTUoMHg2MjMpXT0hMHgwO31mb3IoY29uc3QgXzB4YWViZjM1IG9mIF8weDEzOTFkZSlpZihfMHhhZWJmMzVbXzB4NGE1NjU1KDB4NjM2KV0oKT09PV8weGYxY2ZjYSYmXzB4YWViZjM1W18weDRhNTY1NSgweDQ4ZildKClbXzB4NGE1NjU1KDB4NDJlKV0oXzB4NWFkNTFiWydzZXBhcmF0b3InXSlbXzB4NGE1NjU1KDB4ZGIpXShfMHg1ODlhZTgpKXtjb25zdCBfMHgyZTAxYjQ9XzB4YWViZjM1W18weDRhNTY1NSgweDQ4ZildKCk7bGV0IF8weDU3NGVlYj1fMHg1NmVkNDcsXzB4NWUwYjhiPScnO2Zvcihjb25zdCBfMHgzZjdlZjAgb2YgXzB4MmUwMWI0KXtjb25zdCBfMHgyZjA0NmI9XzB4NTc0ZWViW18weDRhNTY1NSgweDJmOSldW18weDNmN2VmMF18fHsnZmlsdGVyZWQnOiEweDEsJ3Rlc3RzJzp7fX07XzB4NWUwYjhiKz0nJ1tfMHg0YTU2NTUoMHg0NDkpXShfMHgzZjdlZjApWydjb25jYXQnXShfMHg1YWQ1MWJbXzB4NGE1NjU1KDB4NGI5KV0pLF8weDJmMDQ2YltfMHg0YTU2NTUoMHg2MjMpXT1fMHgyZjA0NmJbXzB4NGE1NjU1KDB4NjIzKV0/XzB4MmYwNDZiW18weDRhNTY1NSgweDYyMyldOl8weDVlMGI4YltfMHg0YTU2NTUoMHhkYildKF8weDU4OWFlOCksXzB4NTc0ZWViW18weDRhNTY1NSgweDJmOSldW18weDNmN2VmMF09XzB4MmYwNDZiLF8weDU3NGVlYj1fMHgyZjA0NmI7fV8weDU3NGVlYltfMHg0YTU2NTUoMHgxYWEpXT0hMHgwO319W18weGE0NDNmZCgweDVlNSldKF8weDZkOTYwNCxfMHgxZDg3NTQpe2NvbnN0IF8weDI1Y2NkYT1fMHhhNDQzZmQ7dGhpc1tfMHgyNWNjZGEoMHg1Y2EpXT0hMHgxLHRoaXNbJ19yZW1vdmVDYXRlZ29yeU9yVGVzdCddKF8weDZkOTYwNCxfMHgxZDg3NTQpO31bXzB4YTQ0M2ZkKDB4MzM4KV0oXzB4NTM3MTUyLF8weDI3OTZhMCl7Y29uc3QgXzB4NDExMzQ2PV8weGE0NDNmZCxfMHgxNDUwY2Y9dGhpc1tfMHg0MTEzNDYoMHg1NzApXVtfMHg1MzcxNTJdO2lmKCFfMHgxNDUwY2YpcmV0dXJuITB4MTtsZXQgXzB4NGM2NmVhPV8weDE0NTBjZjtmb3IoY29uc3QgXzB4ODg0ZTBlIG9mIF8weDI3OTZhMClfMHg0YzY2ZWE9XzB4NGM2NmVhW18weDQxMTM0NigweDJmOSldW18weDg4NGUwZV07cmV0dXJuIF8weDRjNjZlYSE9bnVsbCYmXzB4NGM2NmVhWydmaWx0ZXJlZCddJiYhXzB4NGM2NmVhW18weDQxMTM0NigweDFhYSldO31bXzB4YTQ0M2ZkKDB4Mzg3KV0oXzB4NDNjZmJjKXtjb25zdCBfMHg0MDQzYzA9XzB4YTQ0M2ZkO3RoaXNbJ19mcmVzaCddPSEweDE7Y29uc3QgXzB4N2I1Yzk5PXRoaXNbJ19zdGF0ZSddW18weDQzY2ZiY1tfMHg0MDQzYzAoMHg2MzYpXSgpXXx8eydmaWx0ZXJlZCc6ITB4MSwndGVzdHMnOnt9fTt0aGlzW18weDQwNDNjMCgweDU3MCldW18weDQzY2ZiY1tfMHg0MDQzYzAoMHg2MzYpXSgpXT1fMHg3YjVjOTk7Y29uc3QgXzB4Y2ZhNzI4PV8weDQzY2ZiY1tfMHg0MDQzYzAoMHg0OGYpXSgpO2xldCBfMHgxYzkyYmU9XzB4N2I1Yzk5O2Zvcihjb25zdCBfMHg1YzMwNDQgb2YgXzB4Y2ZhNzI4KXtjb25zdCBfMHgxMDY5ZjA9XzB4MWM5MmJlW18weDQwNDNjMCgweDJmOSldW18weDVjMzA0NF18fHsnZmlsdGVyZWQnOiEweDEsJ3Rlc3RzJzp7fX07XzB4MWM5MmJlW18weDQwNDNjMCgweDJmOSldW18weDVjMzA0NF09XzB4MTA2OWYwLF8weDFjOTJiZT1fMHgxMDY5ZjA7fV8weDFjOTJiZVtfMHg0MDQzYzAoMHg2MjMpXT0hMHgwLF8weDFjOTJiZVtfMHg0MDQzYzAoMHgxYWEpXT0hMHgwO31bXzB4YTQ0M2ZkKDB4MjRjKV0oXzB4ODZlM2Q0KXtjb25zdCBfMHg0YjQxNGM9XzB4YTQ0M2ZkO3RoaXNbJ19mcmVzaCddPSEweDEsdGhpc1tfMHg0YjQxNGMoMHg1NDQpXShfMHg4NmUzZDRbXzB4NGI0MTRjKDB4NjM2KV0oKSxfMHg4NmUzZDRbXzB4NGI0MTRjKDB4NDhmKV0oKSk7fVtfMHhhNDQzZmQoMHgxNzgpXShfMHgyNzc5ZGUpe2NvbnN0IF8weGQ0MTE4ND1fMHhhNDQzZmQ7dGhpc1tfMHhkNDExODQoMHg1Y2EpXT0hMHgxO2NvbnN0IF8weDM1NjQ4OD1fMHg0ZTE2MmI9Pntjb25zdCBfMHg1NDc3YzU9XzB4ZDQxMTg0O2Zvcihjb25zdCBfMHgzMTg3NWUgaW4gXzB4NGUxNjJiW18weDU0NzdjNSgweDJmOSldKWlmKF8weDRlMTYyYltfMHg1NDc3YzUoMHgyZjkpXVsnaGFzT3duUHJvcGVydHknXShfMHgzMTg3NWUpKXtjb25zdCBfMHgyNmIzZGE9XzB4NGUxNjJiW18weDU0NzdjNSgweDJmOSldW18weDMxODc1ZV07XzB4MjZiM2RhW18weDU0NzdjNSgweDFhYSldP2RlbGV0ZSBfMHg0ZTE2MmJbXzB4NTQ3N2M1KDB4MmY5KV1bXzB4MzE4NzVlXTpfMHgzNTY0ODgoXzB4MjZiM2RhKTt9fTtmb3IoY29uc3QgXzB4YThiY2U3IGluIHRoaXNbXzB4ZDQxMTg0KDB4NTcwKV0pdGhpc1tfMHhkNDExODQoMHg1NzApXVsnaGFzT3duUHJvcGVydHknXShfMHhhOGJjZTcpJiZfMHgzNTY0ODgodGhpc1snX3N0YXRlJ11bXzB4YThiY2U3XSk7Zm9yKGNvbnN0IF8weDJkOGJiOSBvZiBfMHgyNzc5ZGUpdGhpc1tfMHhkNDExODQoMHgzODcpXShfMHgyZDhiYjkpO31bXzB4YTQ0M2ZkKDB4NzA5KV0oKXtjb25zdCBfMHg0YThlMmE9XzB4YTQ0M2ZkO3RoaXNbJ19zdGF0ZSddPXt9LHRoaXNbXzB4NGE4ZTJhKDB4NWNhKV09ITB4MDt9WydfcmVtb3ZlQ2F0ZWdvcnlPclRlc3QnXShfMHg2MDJiOCxfMHgzMWExNWMpe2NvbnN0IF8weDViYmVlZj1fMHhhNDQzZmQsXzB4MjQwMTkyPXRoaXNbXzB4NWJiZWVmKDB4NTcwKV1bXzB4NjAyYjhdO2lmKF8weDI0MDE5Mil7aWYoXzB4MzFhMTVjWydsZW5ndGgnXT09PTB4MSlkZWxldGUgXzB4MjQwMTkyW18weDViYmVlZigweDJmOSldW18weDMxYTE1Y1sweDBdXTtlbHNle2xldCBfMHgzMmY0YWY9XzB4MjQwMTkyO2Zvcihjb25zdCBfMHg5YThkMWUgb2YgXzB4MzFhMTVjW18weDViYmVlZigweDUxNCldKDB4MCxfMHgzMWExNWNbXzB4NWJiZWVmKDB4MTk1KV0tMHgxKSl7aWYoIV8weDMyZjRhZilicmVhaztfMHgzMmY0YWY9XzB4MzJmNGFmWyd0ZXN0cyddW18weDlhOGQxZV07fV8weDMyZjRhZiYmZGVsZXRlIF8weDMyZjRhZltfMHg1YmJlZWYoMHgyZjkpXVtfMHgzMWExNWNbXzB4MzFhMTVjW18weDViYmVlZigweDE5NSldLTB4MV1dO319fX1fMHgxOWRmMDVbXzB4YTQ0M2ZkKDB4MzY2KV09XzB4MzVhMjE3O30seycuLi9zZXJ2ZXIvdGVzdEZpbHRlcic6MHgxNn1dLDB4MWQ6W2Z1bmN0aW9uKF8weDRlYjVkNyxfMHg3Yzk5ZjksXzB4NDcxNDM1KXtjb25zdCBfMHgyM2EyNzg9XzB4YWUyNixfMHg0MGFlZjc9XzB4NGViNWQ3KCdvcycpLF8weDMzNmM1Mz1fMHg0ZWI1ZDcoXzB4MjNhMjc4KDB4NDhmKSksXzB4NDM3ZjljPV8weDRlYjVkNygndXJsJyksXzB4NWVlNTA3PV8weDRlYjVkNygnd3MnKVtfMHgyM2EyNzgoMHgyYzcpXSxfMHg0YjMyODc9XzB4NGViNWQ3KF8weDIzYTI3OCgweDI0NykpLF8weDQxYTA3PV8weDRlYjVkNyhfMHgyM2EyNzgoMHg0YWYpKSxfMHg0ZDNlNzU9eydtb2R1bGVzJzp7J2Fib3V0Jzp7J2ZvbGRlcic6XzB4MjNhMjc4KDB4NzFjKSwnbmFtZSc6XzB4MjNhMjc4KDB4NDczKX0sJ2ludHJvJzp7J2ZvbGRlcic6XzB4MjNhMjc4KDB4MjY3KSwnbmFtZSc6XzB4MjNhMjc4KDB4MTEwKSwnc3RhcnRGaWxlJzpfMHgyM2EyNzgoMHg1OTIpfSwnaW5zdGFudCc6eydmb2xkZXInOl8weDIzYTI3OCgweDIxYSksJ25hbWUnOl8weDIzYTI3OCgweDQ4YyksJ3N0YXJ0RmlsZSc6J2EudGVzdC5qcyd9LCdpbmxpbmUtY292ZXJhZ2UnOnsnZm9sZGVyJzpfMHgyM2EyNzgoMHg3MDYpLCduYW1lJzpfMHgyM2EyNzgoMHgyNzcpLCdzdGFydEZpbGUnOl8weDIzYTI3OCgweDRjNil9LCdpbmxpbmUtZXJyb3JzJzp7J2ZvbGRlcic6XzB4MjNhMjc4KDB4Nzk2KSwnbmFtZSc6XzB4MjNhMjc4KDB4NWY0KSwnc3RhcnRGaWxlJzpfMHgyM2EyNzgoMHg0YzYpfSwnaW5saW5lLWxvZ3MnOnsnZm9sZGVyJzpfMHgyM2EyNzgoMHgxOGIpLCduYW1lJzpfMHgyM2EyNzgoMHgxNjgpLCdzdGFydEZpbGUnOidjYXIudGVzdC5qcyd9LCdkZWJ1Z2dlcic6eydmb2xkZXInOicwNl9kZWJ1Z2dlcl9hbmRfdGVzdF9zdG9yaWVzJywnbmFtZSc6XzB4MjNhMjc4KDB4MjJlKSwnc3RhcnRGaWxlJzpfMHgyM2EyNzgoMHg1MGEpfSwnZm9jdXMnOnsnZm9sZGVyJzonMDBfZm9jdXMnLCduYW1lJzpfMHgyM2EyNzgoMHg3N2QpfSwnbWlzY2VsbGFuZW91cyc6eydmb2xkZXInOl8weDIzYTI3OCgweDI2NSksJ25hbWUnOl8weDIzYTI3OCgweDI2Yil9LCd0cm91Ymxlc2hvb3RpbmcnOnsnZm9sZGVyJzpfMHgyM2EyNzgoMHgxZGUpLCduYW1lJzpfMHgyM2EyNzgoMHgxMDYpfSwncXVpY2stc3RhcnQnOnsnZm9sZGVyJzpfMHgyM2EyNzgoMHgyZTgpLCduYW1lJzpfMHgyM2EyNzgoMHgxZTUpLCdzdGFydEZpbGUnOl8weDIzYTI3OCgweDRjNil9fX07Y2xhc3MgXzB4MzUxZjNje2NvbnN0cnVjdG9yKF8weDI1Y2M0NixfMHgyYzBlNzEpe2NvbnN0IF8weDU4NTA3Nj1fMHgyM2EyNzg7dHJ5e2NvbnN0IF8weDJkMjU5ZT1fMHgzMzZjNTNbXzB4NTg1MDc2KDB4NDJlKV0oXzB4MjVjYzQ2W18weDU4NTA3NigweDRiYSldW18weDU4NTA3NigweDVmOSldLCdub2RlX21vZHVsZXMnLF8weDU4NTA3NigweDY0YikpO2lmKF8weDJjMGU3MVtfMHg1ODUwNzYoMHgzY2EpXShfMHgyZDI1OWUpKXtpZih0aGlzW18weDU4NTA3NigweDM4YSldPV8weDMzNmM1M1tfMHg1ODUwNzYoMHg0MmUpXShfMHg0MGFlZjdbXzB4NTg1MDc2KDB4NDJhKV0oKSwnLndhbGxhYnknLF8weDU4NTA3NigweDFjMikpLF8weDJjMGU3MVtfMHg1ODUwNzYoMHgzY2EpXSh0aGlzW18weDU4NTA3NigweDM4YSldKSl0cnl7dGhpc1tfMHg1ODUwNzYoMHg3YjUpXT1KU09OW18weDU4NTA3NigweDQ5NyldKF8weDJjMGU3MVsncmVhZEZpbGVTeW5jJ10odGhpc1snX3R1dG9yaWFsU3RhdGVQYXRoJ10pKTt9Y2F0Y2goXzB4MTlkYTA2KXt9dGhpc1tfMHg1ODUwNzYoMHg3YjUpXT10aGlzW18weDU4NTA3NigweDdiNSldfHx7fSx0aGlzW18weDU4NTA3NigweDI5OCldPSEweDAsdGhpc1snX3BvcnQnXT10aGlzWydfdHV0b3JpYWxTdGF0ZSddW18weDU4NTA3NigweDE2ZildO319Y2F0Y2goXzB4NTk4YzQ2KXt9aWYoIXRoaXNbXzB4NTg1MDc2KDB4Mjk4KV0pcmV0dXJuO3RoaXNbXzB4NTg1MDc2KDB4N2I1KV09dGhpc1tfMHg1ODUwNzYoMHg3YjUpXXx8e30sdGhpc1tfMHg1ODUwNzYoMHg3YjUpXVsnY3VycmVudE1vZHVsZU5hbWUnXT10aGlzWydfdHV0b3JpYWxTdGF0ZSddWydjdXJyZW50TW9kdWxlTmFtZSddfHwnYWJvdXQnLHRoaXNbXzB4NTg1MDc2KDB4NDE0KV0oKXx8ZGVsZXRlIF8weDRkM2U3NVtfMHg1ODUwNzYoMHgxMWQpXVsncXVpY2stc3RhcnQnXSx0aGlzWydfdHV0b3JpYWxTdGF0ZSddWydjb21wbGV0ZWRNb2R1bGVzJ109dGhpc1snX3R1dG9yaWFsU3RhdGUnXVsnY29tcGxldGVkTW9kdWxlcyddfHx7fSx0aGlzW18weDU4NTA3NigweDdiNSldW18weDU4NTA3NigweDU0ZSldPU9iamVjdFsna2V5cyddKF8weDRkM2U3NVtfMHg1ODUwNzYoMHgxMWQpXSlbJ2xlbmd0aCddLHRoaXNbXzB4NTg1MDc2KDB4YjQpXT1fMHgyYzBlNzEsdGhpc1tfMHg1ODUwNzYoMHg1NTcpXT1fMHgyNWNjNDYsdGhpc1snX2Nvbm5lY3Rpb25zJ109W107Y29uc3QgXzB4OWQ3YjM5PXRoaXNbXzB4NTg1MDc2KDB4NDc1KV0sXzB4MTQxN2JlPShfMHgxMTg0NDUsXzB4NGUwNzE2KT0+e2NvbnN0IF8weDQ1NjI0Yj1fMHg1ODUwNzY7aWYodGhpc1tfMHg0NTYyNGIoMHg0YTMpXSlyZXR1cm47Y29uc3QgXzB4MWI5NjUzPV8weDQ1NjI0YigweDI5ZSlbXzB4NDU2MjRiKDB4NDQ5KV0oXzB4MTE4NDQ1KTt0aGlzW18weDQ1NjI0YigweDJiNCldKF8weDExODQ0NSk7Y29uc3QgXzB4MjBlYTExPSgpPT57Y29uc3QgXzB4NWM0NjY5PV8weDQ1NjI0YjtfMHg0ZWI1ZDcoXzB4NWM0NjY5KDB4MmEzKSkoXzB4MWI5NjUzKSx0aGlzW18weDVjNDY2OSgweDU1NyldWydfZW1pdE5vdGlmaWNhdGlvbiddKF8weDVjNDY2OSgweDJkOCksXzB4NWM0NjY5KDB4Njc5KSk7fTtfMHg0ZTA3MTY/dGhpc1tfMHg0NTYyNGIoMHgxZTApXT1zZXRUaW1lb3V0KCgpPT57Y29uc3QgXzB4NDhiYmQ4PV8weDQ1NjI0Yjt0aGlzWydfY29ubmVjdGlvbnMnXVsnbGVuZ3RoJ10/dGhpc1tfMHg0OGJiZDgoMHg1NTcpXVtfMHg0OGJiZDgoMHg2Y2IpXSgnaW5mbycsXzB4NDhiYmQ4KDB4NjgxKSx7J2J1dHRvbic6eydsYWJlbCc6XzB4NDhiYmQ4KDB4NjUxKSwnbGluayc6XzB4MWI5NjUzfX0pOl8weDIwZWExMSgpO30sMHgzZTgpOl8weDIwZWExMSgpLHRoaXNbJ190dXRvcmlhbFN0YXRlJ11bJ3BvcnQnXT1fMHgxMTg0NDUsdGhpc1tfMHg0NTYyNGIoMHg3NGYpXSgpO307aWYoIXRoaXNbJ19pc1F1aWNrU3RhcnQnXSgpKV8weDlkN2IzOT9fMHg0YjMyODdbXzB4NTg1MDc2KDB4MWQwKV0oXzB4OWQ3YjM5KVtfMHg1ODUwNzYoMHg0ZTcpXShfMHg1NWVjMDk9Pntjb25zdCBfMHgxN2Q5MmU9XzB4NTg1MDc2O3RoaXNbXzB4MTdkOTJlKDB4NGEzKV18fChfMHg1NWVjMDk/XzB4MTQxN2JlKF8weDlkN2IzOSwhMHgwKTpfMHg0YjMyODdbXzB4MTdkOTJlKDB4Mjk3KV0oXzB4MzgwY2QzPT57XzB4MTQxN2JlKF8weDM4MGNkMyk7fSkpO30pOl8weDRiMzI4N1tfMHg1ODUwNzYoMHgyOTcpXShfMHg1NWNiMjU9PntfMHgxNDE3YmUoXzB4NTVjYjI1KTt9KTtlbHNle2ZvcihsZXQgXzB4Mjc1Yjc3IG9mIE9iamVjdFtfMHg1ODUwNzYoMHgyNDMpXShfMHg0ZDNlNzVbXzB4NTg1MDc2KDB4MTFkKV0pKXtpZihfMHgyNzViNzc9PT1fMHg1ODUwNzYoMHgyNDUpKWNvbnRpbnVlO2NvbnN0IF8weDFiNzE0MD1fMHg0ZDNlNzVbXzB4NTg1MDc2KDB4MTFkKV1bXzB4Mjc1Yjc3XVtfMHg1ODUwNzYoMHgyNGQpXTtpZihfMHgxYjcxNDApdHJ5e18weDJjMGU3MVtfMHg1ODUwNzYoMHgxNWIpXShfMHgzMzZjNTNbXzB4NTg1MDc2KDB4NDJlKV0odGhpc1tfMHg1ODUwNzYoMHg1NTcpXVsnX3Byb2plY3QnXVsnX2xvY2FsUm9vdCddLF8weDFiNzE0MCkpO31jYXRjaChfMHgxYzE2MzApe319dHJ5e18weDJjMGU3MVtfMHg1ODUwNzYoMHgzNTkpXSh0dXRvcmlhbE1vZHVsZUZpbGUpO31jYXRjaChfMHgzNTE4Nzgpe310aGlzW18weDU4NTA3NigweDU1NyldWydfZW1pdE5vdGlmaWNhdGlvbiddKF8weDU4NTA3NigweDJkOCksJ1dhbGxhYnlceDIwc2FtcGxlXHgyMHByb2plY3RceDIwaXNceDIwc3RhcnRlZC4nKTt9dGhpc1tfMHg1ODUwNzYoMHg1NTcpXVsnX3Byb2plY3QnXVtfMHg1ODUwNzYoMHgzNGQpXVtfMHg1ODUwNzYoMHgzMzIpXShfMHg1ODUwNzYoMHgxMTYpW18weDU4NTA3NigweDQ0OSldKHRoaXNbXzB4NTg1MDc2KDB4N2I1KV1bXzB4NTg1MDc2KDB4MTkyKV0pKTt9WydfaXNRdWlja1N0YXJ0J10oKXtjb25zdCBfMHg0ZWM2NDY9XzB4MjNhMjc4O3JldHVybiB0aGlzW18weDRlYzY0NigweDdiNSldW18weDRlYzY0NigweDE5MildPT09XzB4NGVjNjQ2KDB4MjQ1KTt9Wyd0dXRvcmlhbDpuYXZpZ2F0aW9uUmVxdWVzdGVkJ10oXzB4NmFhZTMzKXtjb25zdCBfMHgzMmU4MWI9XzB4MjNhMjc4LF8weDUxNWY1Mj1fMHg2YWFlMzNbXzB4MzJlODFiKDB4MWMwKV0sXzB4M2IwNmEzPV8weDQxYTA3W18weDMyZTgxYigweDM2NSldKF8weDUxNWY1MilbJ3NwbGl0J10oJzonKSxfMHg0ZTQ4YjU9XzB4M2IwNmEzWzB4MF07bGV0IF8weDdhZDA1MD1wYXJzZUludChfMHgzYjA2YTNbXzB4M2IwNmEzW18weDMyZTgxYigweDE5NSldLTB4MV0sMHhhKTtfMHg3YWQwNTB8fChfMHg3YWQwNTA9MHgwKSxfMHg2YWFlMzNbXzB4MzJlODFiKDB4NjdjKV0mJl8weDZhYWUzM1tfMHgzMmU4MWIoMHg2N2MpXSE9PXRoaXNbXzB4MzJlODFiKDB4N2I1KV1bXzB4MzJlODFiKDB4MTkyKV0/KHRoaXNbXzB4MzJlODFiKDB4N2I1KV1bJ2N1cnJlbnRNb2R1bGVOYW1lJ109XzB4NmFhZTMzW18weDMyZTgxYigweDY3YyldLF8weDZhYWUzM1sncmVzZXRBY3Rpb24nXT0oKT0+e2NvbnN0IF8weDUyZTQyYj1fMHgzMmU4MWI7dGhpc1tfMHg1MmU0MmIoMHg1NTcpXVsnc2V0VGVzdExvY2F0aW9ucyddKHsncGF0aHMnOlt0aGlzW18weDUyZTQyYigweDNiNildKCldfSksdGhpc1tfMHg1MmU0MmIoMHg2MDUpXSgpLHRoaXNbXzB4NTJlNDJiKDB4NTU3KV1bXzB4NTJlNDJiKDB4MzE1KV0oeyd0eXBlJzpfMHg1MmU0MmIoMHg2ZTcpLCdwYXRoJzpfMHg0ZTQ4YjUsJ2xpbmUnOl8weDdhZDA1MH0pO30sdGhpc1sndHV0b3JpYWw6cmVzZXRNb2R1bGUnXShfMHg2YWFlMzMpLHRoaXNbXzB4MzJlODFiKDB4NzRmKV0oKSk6dGhpc1tfMHgzMmU4MWIoMHg1NTcpXVtfMHgzMmU4MWIoMHgzMTUpXSh7J3R5cGUnOl8weDMyZTgxYigweDZlNyksJ3BhdGgnOl8weDRlNDhiNSwnbGluZSc6XzB4N2FkMDUwfSk7fVtfMHgyM2EyNzgoMHg0NzYpXShfMHgxMTQ0ZWQpe2NvbnN0IF8weDI4MDhiOD1fMHgyM2EyNzg7dGhpc1tfMHgyODA4YjgoMHg3YjUpXVtfMHgyODA4YjgoMHhlZCldPXRoaXNbXzB4MjgwOGI4KDB4N2I1KV1bXzB4MjgwOGI4KDB4ZWQpXXx8e30sXzB4MTE0NGVkW18weDI4MDhiOCgweDU1YildPT09bnVsbD9kZWxldGUgdGhpc1tfMHgyODA4YjgoMHg3YjUpXVsnY29tcGxldGVkTW9kdWxlcyddW18weDExNDRlZFtfMHgyODA4YjgoMHg2N2MpXV06dGhpc1snX3R1dG9yaWFsU3RhdGUnXVtfMHgyODA4YjgoMHhlZCldW18weDExNDRlZFtfMHgyODA4YjgoMHg2N2MpXV09XzB4MTE0NGVkW18weDI4MDhiOCgweDU1YildfHwweDAsdGhpc1tfMHgyODA4YjgoMHg3NGYpXSgpLHRoaXNbJ19zZW5kU3RhdGVVcGRhdGUnXSgpO31bXzB4MjNhMjc4KDB4NmVlKV0oXzB4NTg0ZWRkKXtjb25zdCBfMHgzZGViNGU9XzB4MjNhMjc4O3RoaXNbXzB4M2RlYjRlKDB4N2I1KV1bXzB4M2RlYjRlKDB4MTkyKV09XzB4NTg0ZWRkW18weDNkZWI0ZSgweDY3YyldLHRoaXNbXzB4M2RlYjRlKDB4MjEzKV0oKSx0aGlzW18weDNkZWI0ZSgweDM5MyldKCksdGhpc1snX3Jlc2V0TW9kdWxlJ10oXzB4NTg0ZWRkW18weDNkZWI0ZSgweDY3YyldKSYmdGhpc1tfMHgzZGViNGUoMHg2MDUpXSgpLHRoaXNbJ19zYXZlVHV0b3JpYWxTdGF0ZSddKCksdGhpc1tfMHgzZGViNGUoMHg1NTcpXVsnX3Byb2plY3QnXVtfMHgzZGViNGUoMHgzNGQpXVsnZmVhdHVyZVVzZWQnXShfMHgzZGViNGUoMHgyZmMpWydjb25jYXQnXShfMHg1ODRlZGRbXzB4M2RlYjRlKDB4NjdjKV0pKTt9W18weDIzYTI3OCgweDRjMSldKF8weDJlZmVhYil7Y29uc3QgXzB4MjE0MzgwPV8weDIzYTI3ODtfMHgyZWZlYWJbXzB4MjE0MzgwKDB4NjdjKV09PT10aGlzWydfdHV0b3JpYWxTdGF0ZSddW18weDIxNDM4MCgweDE5MildJiYodGhpc1tfMHgyMTQzODAoMHg1NTcpXVtfMHgyMTQzODAoMHg2OTMpXSh7J3BhdGhzJzpbXX0pLHRoaXNbXzB4MjE0MzgwKDB4NTJkKV0oXzB4MmVmZWFiW18weDIxNDM4MCgweDY3YyldKSYmc2V0VGltZW91dCgoKT0+e2NvbnN0IF8weDFlNWNhNj1fMHgyMTQzODA7XzB4MmVmZWFiW18weDFlNWNhNigweDI1NildP18weDJlZmVhYltfMHgxZTVjYTYoMHgyNTYpXSgpOih0aGlzW18weDFlNWNhNigweDIxMyldKCksdGhpc1tfMHgxZTVjYTYoMHg2MDUpXSghMHgwKSk7fSwweGM4KSk7fVsnc3RhcnRNb2R1bGUnXSgpe2NvbnN0IF8weDViYTZmND1fMHgyM2EyNzg7dGhpc1snX2NvcmUnXVtfMHg1YmE2ZjQoMHg2OTMpXSh7J3BhdGhzJzpbdGhpc1tfMHg1YmE2ZjQoMHgzYjYpXSgpXX0pLHRoaXNbXzB4NWJhNmY0KDB4NWM3KV0oKSYmdGhpc1tfMHg1YmE2ZjQoMHg1NTcpXVtfMHg1YmE2ZjQoMHgzMTUpXSh7J3R5cGUnOl8weDViYTZmNCgweDZlNyksJ3BhdGgnOnRoaXNbJ19jdXJyZW50U3RhcnRGaWxlJ10oKSwnbGluZSc6MHgwfSksdGhpc1tfMHg1YmE2ZjQoMHg0MTQpXSgpJiYoZGVsZXRlIHRoaXNbXzB4NWJhNmY0KDB4N2I1KV1bXzB4NWJhNmY0KDB4MTkyKV0sdGhpc1tfMHg1YmE2ZjQoMHg3NGYpXSgpKTt9WydfcmVzZXRNb2R1bGUnXShfMHg1YTJlMzQpe2NvbnN0IF8weDU1ZDMyYz1fMHgyM2EyNzgsXzB4MzIyYmMyPV8weDRkM2U3NVtfMHg1NWQzMmMoMHgxMWQpXVtfMHg1YTJlMzRdO2lmKCFfMHgzMjJiYzIpcmV0dXJuO2NvbnN0IF8weDI5ZmQxMz1fMHgzMzZjNTNbXzB4NTVkMzJjKDB4NDJlKV0odGhpc1tfMHg1NWQzMmMoMHg1NTcpXVtfMHg1NWQzMmMoMHg0YmEpXVsnX2xvY2FsUm9vdCddLCcuLicsXzB4NTVkMzJjKDB4NjdlKSxfMHgzMjJiYzJbJ2ZvbGRlciddKTtyZXR1cm4gdGhpc1tfMHg1NWQzMmMoMHg1NTcpXVtfMHg1NWQzMmMoMHg1ZWTigIspXSh7J3R5cGUnOl8weDU1ZDMyYygweDUxMyl9KSx0aGlzW18weDU1ZDMyYygweGI0KV1bXzB4NTVkMzJjKDB4M2NhKV0oXzB4MjlmZDEzKSYmdGhpc1tfMHg1NWQzMmMoMHhiNCldW18weDU1ZDMyYygweDZiYyldKF8weDI5ZmQxMyxfMHgzMzZjNTNbXzB4NTVkMzJjKDB4NDJlKV0odGhpc1tfMHg1NWQzMmMoMHg1NTcpXVtfMHg1NWQzMmMoMHg0YmEpXVtfMHg1NWQzMmMoMHg1ZjkpXSxfMHgzMjJiYzJbXzB4NTVkMzJjKDB4MjRkKV0pKSwhMHgwO31bJ19ub3RpZnlBYm91dFN0YXJ0ZWRNb2R1bGUnXShfMHgzZmZiMjQpe2NvbnN0IF8weDEzYTM5OT1fMHgyM2EyNzg7dGhpc1tfMHgxM2EzOTkoMHg1NTcpXVsnX2VtaXROb3RpZmljYXRpb24nXShfMHgxM2EzOTkoMHgyZDgpLOKAi18weDEzYTM5OSgweDllKVsnY29uY2F0J10oXzB4NGQzZTc1W18weDEzYTM5OSgweDExZCldW3RoaXNbXzB4MTNhMzk5KDB4N2I1KV1bJ2N1cnJlbnRNb2R1bGVOYW1lJ11dW18weDEzYTM5OSgweDM2MyldLF8weDEzYTM5OSgweDc3YykpW18weDEzYTM5OSgweDQ0OSldKF8weDNmZmIyND8ncmVzdGFydGVkJzonc3RhcnRlZCcsJy4nKSk7fVsnX3NhdmVUdXRvcmlhbFN0YXRlJ10oKXtjb25zdCBfMHgzYWJjMGU9XzB4MjNhMjc4O3RoaXNbJ19hY3RpdmUnXSYmdGhpc1snX2ZzJ11bJ3dyaXRlRmlsZVN5bmMnXSh0aGlzW18weDNhYmMwZSgweDM4YSldLEpTT05bXzB4M2FiYzBlKDB4NjRlKV0odGhpc1tfMHgzYWJjMGUoMHg3YjUpXSkpO31bXzB4MjNhMjc4KDB4MzkzKV0oKXtjb25zdCBfMHgzYmM0NGU9XzB4MjNhMjc4O3RoaXNbJ19zZW5kJ10oeyd0eXBlJzondHV0b3JpYWw6c3RhdGVDaGFuZ2VkJywnc3RhdGUnOk9iamVjdFtfMHgzYmM0NGUoMHg0N2UpXShPYmplY3RbXzB4M2JjNDRlKDB4NDdlKV0oe30sdGhpc1tfMHgzYmM0NGUoMHg3YjUpXSkseydzdHJ1Y3R1cmUnOl8weDRkM2U3NX0pfSk7fVtfMHgyM2EyNzgoMHgyYjQpXShfMHg0ZjBiNDQpe2NvbnN0IF8weDVkYWY2YT1fMHgyM2EyNzgsXzB4MjI1MGMyPXRoaXM7dGhpc1tfMHg1ZGFmNmEoMHg0NGEpXT1uZXcgXzB4NWVlNTA3KHsncG9ydCc6XzB4NGYwYjQ0LCd2ZXJpZnlDbGllbnQnOl8weDRmMTZkMj0+e2NvbnN0IF8weDQ4ZjlhYj1fMHg1ZGFmNmE7bGV0IF8weDViZTJkNz0hMHgxO3RyeXtjb25zdCBfMHgyYzczMTg9XzB4NDM3ZjljW18weDQ4ZjlhYigweDQ5NyldKF8weDRmMTZkMlsnb3JpZ2luJ10pW18weDQ4ZjlhYigweDVlNildO18weDViZTJkNz1fMHgyYzczMTg9PeKAiz1fMHg0OGY5YWIoMHhlZSl8fF8weDJjNzMxOD09PV8weDQ4ZjlhYigweDI5NSl8fF8weDJjNzMxOD09PV8weDQ4ZjlhYigweDc2Mil8fF8weDJjNzMxOD09PV8weDQ4ZjlhYigweDQ1Mil8fF8weDJjNzMxOD09PSc6OjEnO31jYXRjaChfMHg0MjQyOWMpe31yZXR1cm4gXzB4NWJlMmQ3O319KSx0aGlzWydfd3NzJ11bJ29uJ10oXzB4NWRhZjZhKDB4NmVkKSxmdW5jdGlvbihfMHgxMzAzZDMpe2NvbnN0IF8weDQ0ZWQ3Mj1fMHg1ZGFmNmE7XzB4MjI1MGMyWydfY2/igItubmVjdGlvbnMnXVsncHVzaCddKF8weDEzMDNkMyksXzB4MTMwM2QzWydvbiddKF8weDQ0ZWQ3MigweGFiKSxfMHhkNGMzOTk9Pntjb25zdCBfMHgzN2E1MzQ9XzB4NDRlZDcyO2lmKCFfMHgyMjUwYzJbXzB4MzdhNTM0KDB4Mjk4KV0pcmV0dXJuO2xldCBfMHgxODVhN2U7dHJ5e18weDE4NWE3ZT1KU09OW18weDM3YTUzNCgweDQ5NyldKF8weGQ0YzM5OSk7fWNhdGNoKF8weDFkNzJiMil7Y29uc29sZVtfMHgzN2E1MzQoMHg0ODUpXShfMHgzN2E1MzQoMHg3M2YpK18weGQ0YzM5OSsnLFx4MjAnKyhfMHgxZDcyYjImJl8weDFkNzJiMltfMHgzN2E1MzQoMHhhYildKSk7cmV0dXJuO31jb25zdCBfMHgyOTY3Njg9XzB4MjI1MGMyW18weDE4NWE3ZVtfMHgzN2E1MzQoMHg0NTQpXV07XzB4Mjk2NzY4JiZfMHgyOTY3NjhbJ2NhbGwnXShfMHgyMjUwYzIsXzB4MTg1YTdlLF8weDEzMDNkMyk7fSksXzB4MTMwM2QzWydvbiddKF8weDQ0ZWQ3MigweDZiNSksKCk9Pntjb25zdCBfMHg1N2Y4NDQ9XzB4NDRlZDcyO18weDIyNTBjMltfMHg1N2Y4NDQoMHg1YzgpXSYmKF8weDIyNTBjMltfMHg1N2Y4NDQoMHg1YzgpXT1fMHgyMjUwYzJbJ19jb25uZWN0aW9ucyddW18weDU3Zjg0NCgweDcyNSldKF8weDU1Mjg1Mj0+XzB4NTUyODUyIT09XzB4MTMwM2QzKSk7fSksXzB4MjI1MGMyW18weDQ0ZWQ3MigweDFmZCldKHsndHlwZSc6XzB4NDRlZDcyKDB4MTM4KSwnc3RhdGUnOk9iamVjdFtfMHg0NGVkNzIoMHg0N2UpXShPYmplY3RbXzB4NDRlZDcyKDB4NDdlKV0oe30sXzB4MjI1MGMyW18weDQ0ZWQ3MigweDdiNSldKSx7J3N0cnVjdHVyZSc6XzB4NGQzZTc1fSl9LF8weDEzMDNkMyksXzB4MjI1MGMyWydfbm90aWZ5QWJvdXRTdGFydGVkTW9kdWxlJ10oKTt9KTt9W18weDIzYTI3OCgweDFmZCldKF8weDRkZDBhNyxfMHg1MGMwYzQpe2NvbnN0IF8weDQyYTQ3Mz1fMHgyM2EyNzgsXzB4NTdhOTBjPUpTT05bJ3N0cmluZ2lmeSddKF8weDRkZDBhNyk7XzB4NTBjMGM0P18weDUwYzBjNFtfMHg0MmE0NzMoMHg1YTApXShfMHg1N2E5MGMpOl9bJ2VhY2gnXSh0aGlzW18weDQyYTQ3MygweDVjOCldLF8weDQ0ZTVhOT0+XzB4NDRlNWE5W18weDQyYTQ3MygweDVhMCldKF8weDU3YTkwYykpO31bXzB4MjNhMjc4KDB4NDBlKV0oKXtjb25zdCBfMHg0NWRmNTA9XzB4MjNhMjc4O3JldHVybiB0aGlzW18weDQ1ZGY1MCgweDI5OCldO31bXzB4MjNhMjc4KDB4M2I2KV0oKXtjb25zdCBfMHgxYTJkNzM9XzB4MjNhMjc4O3JldHVybiBfMHg0ZDNlNzVbXzB4MWEyZDczKDB4MTFkKV1bdGhpc1snX3R1dG9yaWFsU3RhdGUnXVtfMHgxYTJkNzMoMHgxOTIpXV1bXzB4MWEyZDczKDB4MjRkKV07fVtfMHgyM2EyNzgoMHg1YzcpXSgpe2NvbnN0IF8weGMyOTJhMj1fMHgyM2EyNzgsXzB4MTZhNmVmPXRoaXNbXzB4YzI5MmEyKDB4M2I2KV0oKSxfMHgyMjRmMTE9XzB4NGQzZTc1W18weGMyOTJhMigweDExZCldW3RoaXNbXzB4YzI5MmEyKDB4N2I1KV1bXzB4YzI5MmEyKDB4MTkyKV1dW18weGMyOTJhMigweDU0OCldO2lmKF8weDE2YTZlZiYmXzB4MjI0ZjExKXJldHVybicnW18weGMyOTJhMigweDQ0OSldKF8weDE2YTZlZiwnLycpW18weGMyOTJhMigweDQ0OSldKF8weDIyNGYxMSk7fVtfMHgyM2EyNzgoMHg0ZDYpXSgpe2NvbnN0IF8weGRjMmEwPV8weDIzYTI3ODt0aGlzW18weGRjMmEwKDB4NGEzKV09ITB4MCx0aGlzW18weGRjMmEwKDB4MWUwKV0mJmNsZWFyVGltZW91dCh0aGlzW18weGRjMmEwKDB4MWUwKV0pLHRoaXNbJ193c3MnXSYmdGhpc1tfMHhkYzJhMCgweDQ0YSldW18weGRjMmEwKDB4NmI1KV0oKSxkZWxldGUgdGhpc1tfMHhkYzJhMCgweDVjOCldO319XzB4N2M5OWY5W18weDIzYTI3OCgweDM2NildPV8weDM1MWYzYzt9LHsnLi4vLi4vdXRpbHMnOjB4MjEsJy4uL3NoYXJlZC91dGlscyc6MHgxYSwnb3Blbic6dm9pZCAweDAsJ29zJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDAsJ3VybCc6dm9pZCAweDAsJ3dzJzp2b2lkIDB4MH1dLDB4MWU6W2Z1bmN0aW9uKF8weDU3YTYwNyxfMHgxYjI5OWEsXzB4NDA5NThmKXtjb25zdCBfMHg1N2IwZjA9XzB4YWUyNjtnbG9iYWxbJ18nXT1fMHg1N2E2MDcoXzB4NTdiMGYwKDB4NjcwKSksZ2xvYmFsWydRJ109XzB4NTdhNjA3KCdxJyksZ2xvYmFsW18weDU3YjBmMCgweDUzZildPV8weDU3YTYwNyhfMHg1N2IwZjAoMHg0OTEpKVtfMHg1N2IwZjAoMHg1M2YpXSxRWydsb25nU3RhY2tTdXBwb3J0J109ITB4MSxnbG9iYWxbXzB4NTdiMGYwKDB4NTcyKV18fChnbG9iYWxbXzB4NTdiMGYwKDB4NTcyKV09UVtfMHg1N2IwZjAoMHg1NzIpXSksX1tfMHg1N2IwZjAoMHg2NjApXShfLF8weDU3YTYwNyhfMHg1N2IwZjAoMHgxYzkpKSksX1tfMHg1N2IwZjAoMHgzYTIpXT1fMHg1N2E2MDcoJ3VuZGVyc2NvcmUuc3RyaW5nJyksX1tfMHg1N2IwZjAoMHgzZGYpXShfW18weDU3YjBmMCgweDNhMildW18weDU3YjBmMCgweDM2NildKCkpLGdsb2JhbFsnbG9nZ2VyJ109Z2xvYmFsW18weDU3YjBmMCgweDVhYSldfHxfMHg1N2E2MDcoXzB44oCLNTdiMGYwKDB4NzNlKSksX1snXycrW18weDU3YjBmMCgweDQzNiksXzB4NTdiMGYwKDB4NTQ5KSwnYngnXVtfMHg1N2IwZjAoMHg0MmUpXSgnJyldPVtfMHg1N2IwZjAoMHg0MzYpLF8weDU3YjBmMCgweDU0OSksJ2J4J11bXzB4NTdiMGYwKDB4NDJlKV0oJycpO30seycuL2xvZ2dlcic6MHgyMCwnLi91dGlscyc6MHgyMSwnZXZlbnRzJzp2b2lkIDB4MCwnbG9kYXNoJzp2b2lkIDB4MCwncSc6dm9pZCAweDAsJ3VuZGVyc2NvcmUuc3RyaW5nJzp2b2lkIDB4MH1dLDB4MWY6W2Z1bmN0aW9uKF8weDU0OGZkYSxfMHhiY2MxMDYsXzB4M2MxMTdjKXsndXNlIHN0cmljdCc7Y29uc3QgXzB4MjQwNDRhPV8weGFlMjY7T2JqZWN0W18weDI0MDQ0YSgweDQxZCldKF8weDNjMTE3YyxfMHgyNDA0NGEoMHg2MmIpLHsndmFsdWUnOiEweDB9KSxfMHgzYzExN2NbXzB4MjQwNDRhKDB4MzcxKV09dm9pZCAweDA7Y2xhc3MgXzB4MzljMmJme2NvbnN0cnVjdG9yKF8weDVjMzg3Nyl7Y29uc3QgXzB4NTE0YWU3PV8weDI0MDQ0YTt0aGlzWydfZm4nXT1fMHg1YzM4NzcsdGhpc1tfMHg1MTRhZTcoMHhhYyldPSEweDE7fWdldFtfMHgyNDA0NGEoMHgzYzYpXSgpe2NvbnN0IF8weDE3MTM1ND1fMHgyNDA0NGE7cmV0dXJuIHRoaXNbJ19pc1NldCddfHwodGhpc1tfMHgxNzEzNTQoMHgyMTkpXT10aGlzWydfZm4nXSgpLHRoaXNbXzB4MTcxMzU0KDB4YWMpXT0hMHgwKSx0aGlzWydfdmFsdWUnXTt9fV8weDNjMTE3Y1tfMHgyNDA0NGEoMHgzNzEpXT1fMHgzOWMyYmY7fSx7fV0sMHgyMDpbZnVuY3Rpb24oXzB4MmFmMzlhLF8weDIxMDYyOCxfMHgyN2M1Yzcpe2NvbnN0IF8weDIzZGQzYj1fMHhhZTI2LF8weDIwZmExYz1fMHgyYWYzOWEoXzB4MjNkZDNiKDB4NGQ1KSksXzB4MjA4MmQ2PW5ldyhfMHgyYWYzOWEoXzB4MjNkZDNiKDB4NDQyKSkpKHsnbWF4JzoweDQwMCoweDQwMCoweDUsJ2xlbmd0aCc6XzB4OGQxZGZmPT5fMHg4ZDFkZmZbXzB4MjNkZDNiKDB4MTk1KV19KTtsZXQgXzB4MzhhNjJiPTB4MDtjb25zdCBfMHg4MWM0Mjk9eydhZGQnKF8weDMyMzU5OSl7Y29uc3QgXzB4NTlhNGNiPV8weDIzZGQzYjtfMHgyMDgyZDZbXzB4NTlhNGNiKDB4MjljKV0oXzB4MzhhNjJiKyssXzB4MzIzNTk5KTt9LCd2YWx1ZXMnKCl7Y29uc3QgXzB4MTUxYjBmPV8weDIzZGQzYixfMHgzY2ExODQ9XzB4MjA4MmQ2W18weDE1MWIwZigweDMzYildKCk7cmV0dXJuIF8weDNjYTE4NFtfMHgxNTFiMGYoMHg2MmUpXSgpLF8weDNjYTE4NDt9fTtsZXQgXzB4NjUxOGQ0PXByb2Nlc3NbXzB4MjNkZDNiKDB4NDU4KV1bJ1dBTExBQllfREVCVUdfRU5BQkxFRCddfHwhMHgxLF8weDM3NzYyYT1wcm9jZXNzW18weDIzZGQzYigweDQ1OCldW18weDIzZGQzYigweDUyNyldfHwhMHgxO2NvbnN0IF8weDE2Y2JkMz17fTtfMHgxNmNiZDNbXzB4MjNkZDNiKDB4ZDIpXT1fMHgxN2Y1NzcsXzB4MTZjYmQzW18weDIzZGQzYigweDY3NildPV8weDc1ZTBmMSxfMHgxNmNiZDNbXzB4MjNkZDNiKDB4NTdkKV09T2JqZWN0W18weDIzZGQzYigweDI0MyldKHByb2Nlc3NbXzB4MjNkZDNiKDB4NDU4KV0pWydmaWx0ZXInXShfMHg0MTg2ZjY9Pi9eZGVidWdfL2lbXzB4MjNkZDNiKDB4NWZmKV0oXzB4NDE4NmY2KSlbJ3JlZHVjZSddKChfMHg5MmNjNDQsXzB4NGRmNzI1KT0+e2NvbnN0IF8weDU1NTFkOD1fMHgyM2RkM2IsXzB4MWZkNTJmPV8weDRkZjcyNVtfMHg1NTUxZDgoMHg1ZGIpXSgweDYpW18weDU1NTFkOCgweDE0YyldKClbXzB4NTU1MWQ4KDB4NWM0KV0oL18oW2Etel0pL2csKF8weDFkN2IyZixfMHgxMmJjYmQpPT5fMHgxMmJjYmRbXzB4NTU1MWQ4KDB4NTAzKV0oKSk7bGV0IF8weDk2OGUwOT1wcm9jZXNzWydlbnYnXVtfMHg0ZGY3MjVdO3JldHVybi9eKHllc3xvbnx0cnVlfGVuYWJsZWQpJC9pW18weDU1NTFkOCgweDVmZildKF8weDk2OGUwOSk/XzB4OTY4ZTA5PSEweDA6L14obm98b2ZmfGZhbHNlfGRpc2FibGVkKSQvaVsndGVzdCddKF8weDk2OGUwOSk/XzB4OTY4ZTA5PSEweDE6XzB4OTY4ZTA5PT09XzB4NTU1MWQ4KDB4NmZmKT9fMHg5NjhlMDk9bnVsbDpfMHg5NjhlMDk9TnVtYmVyKF8weDk2OGUwOSksXzB4OTJjYzQ0W18weDFmZDUyZl09XzB4OTY4ZTA5LF8weDkyY2M0NDt9LHsnZGVwdGgnOjB4MTksJ21heEFycmF5TGVuZ3RoJzoweDY0LCdicmVha0xlbmd0aCc6MHhjOH0pO2Z1bmN0aW9uIF8weDc1ZTBmMShfMHgzMjkwZTIpe2NvbnN0IHtuYW1lc3BhY2U6XzB4MzBlZWI1fT10aGlzO18weDMyOTBlMlsweDBdPV8weDI5NTVkYigpK18weDMwZWViNSsnXHgyMCcrXzB4MzI5MGUyWzB4MF07fWZ1bmN0aW9uIF8weDI5NTVkYigpe2NvbnN0IF8weDQ3YzhkZT1fMHgyM2RkM2I7cmV0dXJuIF8weDE2Y2JkM1tfMHg0N2M4ZGUoMHg1N2QpXVsnaGlkZURhdGUnXT8nJzpuZXcgRGF0ZSgpWyd0b0lTT1N0cmluZyddKCkrJ1x4MjAnO31mdW5jdGlvbiBfMHgxN2Y1NzcoXzB4NTNiNDVmKXtjb25zdCBfMHgxY2RmNGQ9XzB4MjNkZDNiO3JldHVybiBwcm9jZXNzW18weDFjZGY0ZCgweDU1ZSldW18weDFjZGY0ZCgweDE3MyldKF8weDUzYjQ1Zik7fWZ1bmN0aW9uIF8weDNkMzI2MChfMHgzNWZhOGQpe2NvbnN0IF8weDFjYTM0Yz1fMHgyM2RkM2I7XzB4NTBkMDhiW18weDFjYTM0YygweDRmZCldPV8weDUwZDA4YixfMHg1MGQwOGJbXzB4MWNhMzRjKDB4NGI1KV09XzB4NTBkMDhiLF8weDUwZDA4YltfMHgxY2EzNGMoMHg0NGQpXT1fMHgyOTVlMDQsXzB4NTBkMDhiW18weDFjYTM0YygweDJhMSldPVtdLE9iamVjdFsna2V5cyddKF8weDM1ZmE4ZClbJ2ZvckVhY2gnXShfMHgyYzRjMmQ9PntfMHg1MGQwOGJbXzB4MmM0YzJkXT1fMHgzNWZhOGRbXzB4MmM0YzJkXTt9KSxfMHg1MGQwOGJbXzB4MWNhMzRjKDB4NTI0KV09e307ZnVuY3Rpb24gXzB4NTBkMDhiKF8weDEwMTg1MyxfMHhhODdjYil7Y29uc3QgXzB4M2UyMWY2PV8weDFjYTM0YztsZXQgXzB4Mzg5MTFjO2Z1bmN0aW9uIF8weDUwODJiMCguLi5fMHgxY2VkMjUpe2NvbnN0IF8weDIwYzkxOD1fMHhhZTI2O2lmKCFfMHg1MDgyYjBbXzB4MjBjOTE4KDB4M2U3KV0pcmV0dXJuO2NvbnN0IF8weDNkZTIzYT1fMHg1MDgyYjAsXzB4M2IxYjEzPU51bWJlcihuZXcgRGF0ZSgpKSxfMHgzM2FmNDk9XzB4M2IxYjEzLShfMHgzODkxMWN8fF8weDNiMWIxMyk7XzB4M2RlMjNhWydkaWZmJ109XzB4MzNhZjQ5LF8weDNkZTIzYVsncHJldiddPV8weDM4OTExYyxfMHgzZGUyM2FbXzB4MjBjOTE4KDB4NmUwKV09XzB4M2IxYjEzLF8weDM4OTExYz1fMHgzYjFiMTMsXzB4MWNlZDI1WzB4MF09XzB4NTBkMDhiW18weDIwYzkxOCgweDQ0ZCldKF8weDFjZWQyNVsweDBdKSx0eXBlb2YgXzB4MWNlZDI1WzB4MF0hPSdzdHJpbmcnJiZfMHgxY2VkMjVbJ3Vuc2hpZnQnXSgnJU8nKTtsZXQgXzB4MTJkMWViPTB4MDtfMHgxY2VkMjVbMHgwXT1fMHgxY2VkMjVbMHgwXVtfMHgyMGM5MTgoMHg1YzQpXSgvJShbYS16QS1aJV0pL2csKF8weDQ1ZGZjYSxfMHgxNTUyYTIpPT57Y29uc3QgXzB4MjFmZmM2PV8weDIwYzkxODtpZihfMHg0NWRmY2E9PT0nJSUnKXJldHVybiBfMHg0NWRmY2E7XzB4MTJkMWViKys7Y29uc3QgXzB4MmY5NDZiPV8weDUwZDA4YltfMHgyMWZmYzYoMHg1MjQpXVtfMHgxNTUyYTJdO2lmKHR5cGVvZiBfMHgyZjk0NmI9PV8weDIxZmZjNigweDcyNykpe2NvbnN0IF8weGJlYmYyOD1fMHgxY2VkMjVbXzB4MTJkMWViXTtfMHg0NWRmY2E9XzB4MmY5NDZiW18weDIxZmZjNigweDJjOCldKF8weDNkZTIzYSxfMHhiZWJmMjgpLF8weDFjZWQyNVtfMHgyMWZmYzYoMHg2ZDApXShfMHgxMmQxZWIsMHgxKSxfMHgxMmQxZWItLTt9cmV0dXJuIF8weDQ1ZGZjYTt9KSxfMHg1MGQwOGJbJ2Zvcm1hdEFyZ3MnXVtfMHgyMGM5MTgoMHgyYzgpXShfMHgzZGUyM2EsXzB4MWNlZDI1KTtjb25zdCBfMHg0OWY5Njk9XzB4MjBmYTFjW18weDIwYzkxOCgweDE2MildKC4uLl8weDFjZWQyNSkrJ1x4MGEnO18weDNkZTIzYVtfMHgyMGM5MTgoMHgzMjApXT8oXzB4ODFjNDI5W18weDIwYzkxOCgweDQ0NSldKF8weDQ5Zjk2OSksXzB4NjUxOGQ0JiZfMHg1MGQwOGJbXzB4MjBjOTE4KDB4ZDIpXVtfMHgyMGM5MTgoMHgyYzgpXShfMHgzZGUyM2EsXzB4NDlmOTY5KSk6XzB4NTBkMDhiW18weDIwYzkxOCgweGQyKV1bXzB4MjBjOTE4KDB4MmM4KV0oXzB4M2RlMjNhLF8weDQ5Zjk2OSk7fXJldHVybiBfMHg1MDgyYjBbXzB4M2UyMWY2KDB4MzIwKV09XzB4YTg3Y2I9PT1fMHgzZTIxZjYoMHg0ZmQpLF8weDUwODJiMFtfMHgzZTIxZjYoMHg1ZmMpXT1fMHhhODdjYj09PSd0cmFjZScsXzB4NTA4MmIwW18weDNlMjFmNigweDUwNildPV8weDEwMTg1MyxfMHg1MDgyYjBbXzB4M2UyMWY2KDB4M2U3KV09XzB4NTA4MmIwWydpc1RyYWNlJ10mJl8weDM3NzYyYXx8XzB4NTA4MmIwW18weDNlMjFmNigweDMyMCldLF8weDUwZDA4YlsnaW5zdGFuY2VzJ11bXzB4M2UyMWY2KDB4NDJkKV0oXzB4NTA4MmIwKSxfMHg1MDgyYjA7fWZ1bmN0aW9uIF8weDI5NWUwNChfMHgyNTczNDMpe2NvbnN0IF8weDQ3NjM4Nz1fMHgxY2EzNGM7cmV0dXJuIF8weDI1NzM0MyBpbnN0YW5jZW9mIEVycm9yP18weDI1NzM0M1tfMHg0NzYzODcoMHg0MzcpXXx8XzB4MjU3MzQzWydtZXNzYWdlJ106XzB4MjU3MzQzO31yZXR1cm4gXzB4NTBkMDhiO31jb25zdCBfMHgyNDc3OWI9XzB4M2QzMjYwKF8weDE2Y2JkMykse2Zvcm1hdHRlcnM6XzB4MjNjY2NmfT1fMHgyNDc3OWI7XzB4MjNjY2NmWydvJ109ZnVuY3Rpb24oXzB4MjYxOTQ0KXtjb25zdCBfMHgzOTk2MWI9XzB4MjNkZDNiO3Jl4oCLdHVybiBfMHgyMGZhMWNbXzB4Mzk5NjFiKDB4MmViKV0oXzB4MjYxOTQ0LF8weDE2Y2JkM1tfMHgzOTk2MWIoMHg1N2QpXSlbJ3JlcGxhY2UnXSgvXHMqXG5ccyovZywnXHgyMCcpO30sXzB4MjNjY2NmWydPJ109ZnVuY3Rpb24oXzB4MjA0ZGJiKXtjb25zdCBfMHgyNGUzZTk9XzB4MjNkZDNiO3JldHVybiBfMHgyMGZhMWNbXzB4MjRlM2U5KDB4MmViKV0oXzB4MjA0ZGJiLF8weDE2Y2JkM1tfMHgyNGUzZTkoMHg1N2QpXSk7fSxfMHgyMTA2MjhbJ2V4cG9ydHMnXT17J2NyZWF0ZScoXzB4NWQxNjE5KXtjb25zdCBfMHgzYzFkNDM9XzB4MjNkZDNiO3JldHVybnsnZGVidWcnOl8weDI0Nzc5YihfMHg1ZDE2MTksXzB4M2MxZDQzKDB4NGZkKSksJ3RyYWNlJzpfMHgyNDc3OWIoXzB4NWQxNjE5LCd0cmFjZScpfTt9LCdlbmFibGVEZWJ1ZycoKXtjb25zdCBfMHg0ODI1ZjU9XzB4MjNkZDNiO18weDY1MThkNHx8KHByb2Nlc3NbXzB4NDgyNWY1KDB4NDU4KV1bXzB4NDgyNWY1KDB4MzM5KV09J3RydWUnLF8weDY1MThkND0hMHgwLF8weDgxYzQyOVtfMHg0ODI1ZjUoMHgzM2IpXSgpW18weDQ4MjVmNSgweDNlNCldKF8weDMyNjMyOT0+e18weDE2Y2JkM1snbG9nJ10oXzB4MzI2MzI5KTt9KSk7fSwnZ2V0RGVidWdMb2cnKCl7Y29uc3QgXzB4YzdhMDkzPV8weDIzZGQzYjtyZXR1cm4gXzB4ODFjNDI5W18weGM3YTA5MygweDMzYildKCk7fSwnZW5hYmxlVHJhY2UnKCl7Y29uc3QgXzB4MjYxZTczPV8weDIzZGQzYjtfMHgzNzc2MmF8fChwcm9jZXNzW18weDI2MWU3MygweDQ1OCldWydXQUxMQUJZX1RSQUNFX0VOQUJMRUQnXT1fMHgyNjFlNzMoMHhkYyksXzB4Mzc3NjJhPSEweDAsXzB4MjQ3NzliW18weDI2MWU3MygweDJhMSldW18weDI2MWU3MygweDNlNCldKF8weDQyZThjMz0+e2NvbnN0IF8weDQzZjFmNz1fMHgyNjFlNzM7XzB4NDJlOGMzWydpc1RyYWNlJ10mJihfMHg0MmU4YzNbXzB4NDNmMWY3KDB4M2U3KV09ITB4MCk7fSkpLHRoaXNbJ2VuYWJsZURlYnVnJ10oKTt9fTt9LHsnbHJ1LWNhY2hlJzp2b2lkIDB4MCwndXRpbCc6dm9pZCAweDB9XSwweDIxOltmdW5jdGlvbihfMHgzZmRlNzIsXzB4MzE1OWEwLF8weDFlNmU3Myl7Y29uc3QgXzB4MmVhMmYxPV8weGFlMjYsXzB4MmU5MzFkPV8weDNmZGU3MigncGF0aCcpLF8weDM0NDk2ZT1fMHgzZmRlNzIoJ2ZzJykse25vcm1hbGl6ZVBhdGg6XzB4NDMzYTdifT1fMHgzZmRlNzIoXzB4MmVhMmYxKDB4MjFjKSkse01vZHVsZTpfMHgxNjRhOGR9PV8weDNmZGU3MihfMHgyZWEyZjEoMHg2N2MpKSxfMHgyOTM5MjA9XzB4M2ZkZTcyKF8weDJlYTJmMSgweDU2NikpW18weDJlYTJmMSgweGE2KV0sXzB4NDNlN2JkPV8weDNmZGU3Mignc291cmNlLW1hcCcpW18weDJlYTJmMSgweDE0OCldLF8weDJhM2M1OD0vXlxzKihcL1wqXCo/KC58XHI/XG4pKj9cKlwvKS8sXzB4MzFjN2E2PS9eXHMqLyxfMHg1YWM2NTM9L1tcdTAwMWJcdTAwOWJdW1soKSM7P10qKD86WzAtOV17MSw0fSg/OjtbMC05XXswLDR9KSopP1swLTlBLVBSWmNmLW5xcnk9PjxdL2csXzB4MmFiNmFmPS9cL1wqW1xzXFNdKj9cKlwvfChbXlxcOl18XilcL1wvLiokL2dtLF8weDI5MzA2OD0vKF5bXHNdKj8oZml0fGZkZXNjcmliZSlbXHNdKj98W14uXHdcc11bXHNdKj8oZml0fGZkZXNjcmliZSlbXHNdKj98KHRlc3R8dGVzdFwuY29uY3VycmVudHxpdHxkZXNjcmliZSlbXHNdKj9cLltcc10qP29ubHlbXHNdKj8pKChcLmVhY2hbXHNdKj8oYFteYF0qP2BbXHNdKj8pKj8pP1woW1xzXSo/W14pXHNdKS9nbSxfMHgxMGUzNjM9L1sjQF0gc291cmNlTWFwcGluZ1VSTD0oW15ccyciXSopLyxfMHhiNmE5ODA9UmVnRXhwKF8weDJlYTJmMSgweDM0NykrXzB4MTBlMzYzW18weDJlYTJmMSgweDEzYildKycpXHg1Y3MqXHg1YyovfC8vKD86JytfMHgxMGUzNjNbXzB4MmVhMmYxKDB4MTNiKV0rXzB4MmVhMmYxKDB4NmRiKSwnZycpLF8weDMzOGMyYj0vZGF0YTphcHBsaWNhdGlvblwvanNvblteLF0rYmFzZTY0LC87bGV0IF8weDQ4NWYzZDtmdW5jdGlvbiBfMHg0MTkzZmUoKXtjb25zdCBfMHg1NWE4ZTM9XzB4MmVhMmYxO2lmKF8weDQ4NWYzZCE9PXZvaWQgMHgwKXJldHVybiBfMHg0ODVmM2Q7bGV0IF8weDIzNjYyYzt0cnl7XzB4MzQ0OTZlW18weDU1YThlMygweDJiNSldKF8weDU1YThlMygweDJmMikpLF8weDIzNjYyYz0hMHgwO31jYXRjaChfMHg1YzQ1Zjkpe18weDIzNjYyYz0hMHgxO31sZXQgXzB4MTQ0MmQ2O3RyeXtfMHgxNDQyZDY9XzB4MzQ0OTZlW18weDU1YThlMygweDMxOSldKF8weDU1YThlMygweDI5NCksXzB4NTVhOGUzKDB4MWRhKSlbXzB4NTVhOGUzKDB4MmFhKV0oXzB4NTVhOGUzKDB4NGRkKSk7fWNhdGNoKF8weDVjYTQxMCl7XzB4MTQ0MmQ2PSEweDE7fXJldHVybiBfMHg0ODVmM2Q9XzB4MjM2NjJjfHxfMHgxNDQyZDYsXzB4NDg1ZjNkO31jb25zdCBfMHg1MjBhYWI9KF8weDVmNTgwYixfMHgzMDlkNmIpPT5fMHg1ZjU4MGI9PT0nanMnfHxfMHg1ZjU4MGI9PT1fMHgyZWEyZjEoMHgxZTcpfHxfMHg1ZjU4MGI9PT1fMHgyZWEyZjEoMHg1ODYpfHxfMHg1ZjU4MGI9PT1fMHgyZWEyZjEoMHg3OWQpfHxfMHg1ZjU4MGI9PT1fMHgyZWEyZjEoMHg1NDApfHxfMHg1ZjU4MGI9PT1fMHgyZWEyZjEoMHg1NDIpfHxfMHgzMDlkNmImJl8weDMwOWQ2YlsnZmluZCddKF8weDNlYTFmZD0+XzB4NWY1ODBiPT09XzB4M2VhMWZkKSxfMHgxYjA2ODM9XzB4NDhmMTYwPT5fMHg0OGYxNjA9PT0ndHMnfHxfMHg0OGYxNjA9PT1fMHgyZWEyZjEoMHhjNil8fF8weDQ4ZjE2MD09PV8weDJlYTJmMSgweDk2KXx8XzB4NDhmMTYwPT09XzB4MmVhMmYxKDB4NjVjKSxfMHgzYzQzYjI9XzB4M2MwYWMzPT5fMHgzYzBhYzM9PT1fMHgyZWEyZjEoMHg2YmIpLF8weDUxN2E3Yj1fMHg1YmEwMmM9Pl8weDViYTAyYz09PV8weDJlYTJmMSgweGE0KSxfMHgxMWI0ZmI9KF8weDI3ZmUyMyxfMHgyZDc4ZWIpPT5fMHgyN2ZlMjM9PT1fMHgyZWEyZjEoMHg2NWQpfHwvXC4obGl0Y29mZmVlfGNvZmZlZVwubWQpJC9bXzB4MmVhMmYxKDB4NWZmKV0oXzB4MmQ3OGVifHwnJyksXzB4NWFiODY2PXt9LF8weDQ4NjRjZT17fTtfMHgyZWEyZjEoMHgyMmYpWydzcGxpdCddKCcnKVtfMHgyZWEyZjEoMHgzZTQpXShmdW5jdGlvbihfMHg0YjkwOGIsXzB4MTUzYmJlKXtfMHg1YWI4NjZbXzB4NGI5MDhiXT1fMHgxNTNiYmUsXzB4NDg2NGNlW18weDE1M2JiZV09XzB4NGI5MDhiO30pO2NvbnN0IF8weDE1ODU3Mz0nXHgwYS8vJyxfMHgzNDFlOWM9XzB4MmVhMmYxKDB4NmJkKSxfMHgxOTIwYmI9MHg1O18weDMx4oCLNTlhMFtfMHgyZWEyZjEoMHgzNjYpXT17J3dhbGxhYnlSYW5kb21JZENvbW1lbnRQcmVmaXgnOl8weDE1ODU3Mywnd2FsbGFieVJhbmRvbUlkQ29tbWVudFBvc3RmaXgnOl8weDM0MWU5YywncmFuZG9tSWRMZW5ndGgnOl8weDE5MjBiYiwnc2VsZWN0ZWRUZXN0UmVnRXhwJzpfMHgyOTMwNjgsJ1NvdXJjZU1hcENvbnN1bWVyJzpfMHgyOTM5MjAsJ3JlcXVpcmVSZXNvbHZlJzpmdW5jdGlvbihfMHg0ZTZlMTUsXzB4Mjc4YjkwKXtyZXR1cm4gXzB4MTY0YThkWydfcmVzb2x2ZUZpbGVuYW1lJ10oXzB4NGU2ZTE1LG51bGwsITB4MSxfMHgyNzhiOTApO30sJ3JhbmRvbUlkJzpmdW5jdGlvbigpe2NvbnN0IF8weGFiNmE1OT1fMHgyZWEyZjE7cmV0dXJuIE1hdGhbXzB4YWI2YTU5KDB4MjA2KV0oKVtfMHhhYjZhNTkoMHgzZDYpXSgweDI0KVtfMHhhYjZhNTkoMHg1MTEpXSgweDIsXzB4MTkyMGJiKTt9LCdhZGRXYWxsYWJ5UmFuZG9tSWRDb21tZW50VG9GaWxlQ29udGVudCc6ZnVuY3Rpb24oXzB4M2RjNDkzLF8weDU3ZWY1NSl7Y29uc3QgXzB4MmU0MzU5PV8weDJlYTJmMTtyZXR1cm4gXzB4M2RjNDkzK18weDE1ODU3MysoXzB4NTdlZjU1fHx0aGlzW18weDJlNDM1OSgweGU5KV0oKSkrXzB4MzQxZTljO30sJ3JlbW92ZVdhbGxhYnlSYW5kb21JZENvbW1lbnRGcm9tRmlsZUNvbnRlbnQnOmZ1bmN0aW9uKF8weDQ5YTE0YSl7Y29uc3QgXzB4MTU2ZGY3PV8weDJlYTJmMTtyZXR1cm4gX1tfMHgxNTZkZjcoMHhmYildKF8weDQ5YTE0YSxfMHgzNDFlOWMpP18weDQ5YTE0YVtfMHgxNTZkZjcoMHg1MTQpXSgweDAsLShfMHgxNTg1NzNbXzB4MTU2ZGY3KDB4MTk1KV0rXzB4MTkyMGJiK18weDM0MWU5Y1tfMHgxNTZkZjcoMHgxOTUpXSkpOl8weDQ5YTE0YTt9LCdhZGRPclJlcGxhY2VXYWxsYWJ5UmFuZG9tSWRDb21tZW50JyhfMHhmYjBhYjEpe2NvbnN0IF8weDI5NWM2Mj1fMHgyZWEyZjE7cmV0dXJuIHRoaXNbXzB4Mjk1YzYyKDB4ZTgpXSh0aGlzW18weDI5NWM2MigweDMzNildKF8weGZiMGFiMSkpO30sJ25vb3BUcnVlJzpmdW5jdGlvbigpe3JldHVybiEweDA7fSwnbm9vcFRydWVQcm9taXNlJzpmdW5jdGlvbigpe2NvbnN0IF8weDE0M2QzZD1fMHgyZWEyZjE7cmV0dXJuIFFbJ2ZjYWxsJ10odGhpc1tfMHgxNDNkM2QoMHg1NzQpXSk7fSwnaXNQYXRjaCc6ZnVuY3Rpb24oXzB4MmIyOGY5KXtjb25zdCBfMHg1OTc1MTM9XzB4MmVhMmYxO3JldHVybiBfMHgyYjI4ZjkmJl8weDJiMjhmOVtfMHg1OTc1MTMoMHgxOTUpXT4weDImJl8weDJiMjhmOVsweDBdPT09J0AnJiZfMHgyYjI4ZjlbMHgxXT09PSdAJzt9LCdpc0xldmVsVXBSZWxhdGl2ZVBhdGgnOmZ1bmN0aW9uKF8weDI2NGFhZil7cmV0dXJuIF8weDI2NGFhZiYmXzB4MjY0YWFmWzB4MF09PT0nLicmJl8weDI2NGFhZlsweDFdPT09Jy4nO30sJ2RvY0Jsb2NrQ29tbWVudCc6ZnVuY3Rpb24oXzB4MzBkZjk3KXtjb25zdCBfMHgzYmNiZWE9XzB4MmVhMmYxLF8weDk4ZGUzYj1fMHgzMGRmOTdbXzB4M2JjYmVhKDB4NDhhKV0oXzB4MmEzYzU4KTtyZXR1cm4gXzB4OThkZTNiJiZfMHg5OGRlM2JbMHgwXVtfMHgzYmNiZWEoMHg1YzQpXShfMHgzMWM3YTYsJycpfHwnJzt9LCdub3JtYWxpemVQYXRoJzpmdW5jdGlvbihfMHgyMjkzOTYpe2NvbnN0IF8weDExNjM0OD1fMHgyZWEyZjE7cmV0dXJuIF8weDIyOTM5NiYmXzB4MjI5Mzk2W18weDExNjM0OCgweDVjNCldKHByb2Nlc3NbXzB4MTE2MzQ4KDB4NzBkKV09PT0nd2luMzInP18weDExNjM0OCgweDY1Nik6XzB4MTE2MzQ4KDB4YjgpLCcnKVtfMHgxMTYzNDgoMHhhOSldKF8weDJlOTMxZFtfMHgxMTYzNDgoMHg2ZjMpXSlbXzB4MTE2MzQ4KDB4NDJlKV0oJy8nKTt9LCdmaWxlVXJsJzpmdW5jdGlvbihfMHhkY2UzNjQpe2NvbnN0IF8weDEyY2I4OT1fMHgyZWEyZjE7dmFyIF8weDVhZjE0Yj1fMHgyZTkzMWRbXzB4MTJjYjg5KDB4MjgwKV0oXzB4ZGNlMzY0KVtfMHgxMmNiODkoMHg1YzQpXSgvXFwvZywnLycpO3JldHVybiBfMHg1YWYxNGJbMHgwXSE9PScvJyYmKF8weDVhZjE0Yj0nLycrXzB4NWFmMTRiKSxlbmNvZGVVUkkoXzB4MTJjYjg5KDB4YjgpK18weDVhZjE0Yik7fSwndHJpbVNsYXNoZXMnKF8weDUwMDJkOCl7Y29uc3QgXzB4NGY1ZTBhPV8weDJlYTJmMTtyZXR1cm4gXzB4NTAwMmQ4JiZfMHg1MDAyZDhbXzB4NGY1ZTBhKDB4NWM0KV0oL15cL3xcLyQvZywnJyk7fSwncGxhdGZvcm1EZXBlbmRlbnRQYXRoJzpmdW5jdGlvbihfMHg0ZTM5ZDUpe2NvbnN0IF8weGNkNDRmZD1fMHgyZWEyZjE7cmV0dXJuIV8weDRlMzlkNXx8cHJvY2Vzc1tfMHhjZDQ0ZmQoMHg3MGQpXSE9PV8weGNkNDRmZCgweDYxZil8fH5fMHg0ZTM5ZDVbXzB4Y2Q0NGZkKDB4N2E3KV0oXzB4MmU5MzFkWydzZXAnXSk/XzB4NGUzOWQ1Ol8weDRlMzlkNVtfMHhjZDQ0ZmQoMHhhOSldKCcvJylbXzB4Y2Q0NGZkKDB4NDJlKV0oXzB4MmU5MzFkW18weGNkNDRmZCgweDZmMyldKTt9LCdnZXRTb3VyY2VNYXBGcm9tQ29kZSc6ZnVuY3Rpb24oXzB4MmUyYjdmKXtjb25zdCBfMHgyM2I1MjA9XzB4MmVhMmYxO18weGI2YTk4MFsnbGFzdEluZGV4J109MHgwO2xldCBfMHgzYzcxNzA7Zm9yKDsoXzB4M2M3MTcwPV8weGI2YTk4MFsnZXhlYyddKF8weDJlMmI3ZikpIT09bnVsbDspe2NvbnN0IF8weDU2MzQ0Yz1fMHgzYzcxNzA/XzB4M2M3MTcwWzB4MV18fF8weDNjNzE3MFsweDJdfHwnJzpudWxsO2lmKCFfMHg1NjM0NGN8fCFfMHgzMzhjMmJbXzB4MjNiNTIwKDB4NWZmKV0oXzB4NTYzNDRjKSljb250aW51ZTtjb25zdCBfMHgxOWQxNTg9XzB4NTYzNDRjWydzbGljZSddKF8weDU2MzQ0Y1tfMHgyM2I1MjAoMHg3YTcpXSgnLCcpKzB4MSk7cmV0dXJuIEJ1ZmZlcltfMHgyM2I1MjAoMHg3MDEpXShfMHgxOWQxNTgsXzB4MjNiNTIwKDB4YTUpKVsndG9TdHJpbmcnXSgpO319LCdtYWtlUmUnOmZ1bmN0aW9uKF8weDE5OTVjOSxfMHg3MDYzYjIpe2NvbnN0IF8weDRiZGU2Yz1fMHgyZWEyZjE7cmV0dXJuIHR5cGVvZiBfMHgxOTk1Yzk9PV8weDRiZGU2YygweDFhNSk/XzB4M2ZkZTcyKF8weDRiZGU2YygweDNiNSkpW18weDRiZGU2YygweDUyYSldKF8weDE5OTVjOSxfMHg3MDYzYjIsITB4MSwhMHgwKTpfMHgxOTk1Yzk7fSwncGF0aE1hdGNoZXNQYXR0ZXJuJzpmdW5jdGlvbihfMHgyYzkwYmEsXzB4MzdjYjQ1LF8weDRmNDJjNyl7Y29uc3QgXzB4NTllZDMyPV8weDJlYTJmMTtpZihfMHgyYzkwYmEpe2lmKHR5cGVvZiBfMHgzN2NiNDU9PV8weDU5ZWQzMigweDFhNSkpe2NvbnN0IF8weDU1NGQ1Nj1fMHgzZmRlNzIoJ21pY3JvbWF0Y2gnKVtfMHg1OWVkMzIoMHgzYzkpXTtyZXR1cm4gXzB4NTU0ZDU2KF8weDJjOTBiYSxfMHgzN2NiNDUsXzB4NGY0MmM3KTt9ZWxzZSByZXR1cm4gXzB4MmM5MGJhPXRoaXNbXzB4NTllZDMyKDB4NzZjKV0oIV8weDRmNDJjN3x8IV8weDRmNDJjN1tfMHg1OWVkMzIoMHg1MjEpXT8nLi8nOicnKSt0aGlzWydwbGF0Zm9ybURlcGVuZGVudFBhdGgnXShfMHgyYzkwYmEpLF8weDJjOTBiYVtfMHg1OWVkMzIoMHg0OGEpXShfMHgzN2NiNDUpO319LCdlc2NhcGVQYXRoRm9yUmVnZXgnOmZ1bmN0aW9uKF8weDNjY2E5YSl7Y29uc3QgXzB4MjA0YzM3PV8weDJlYTJmMTtyZXR1cm4gXzB4MmU5MzFkW18weDIwNGMzNygweDZmMyldPT09J1x4NWMnJiYoXzB4M2NjYTlhPV8weDNjY2E5YVtfMHgyMDRjMzcoMHg1YzQpXSgvXFwvZywnLycpKSx0aGlzW18weDIwNGMzNygweDdiOSldKHRoaXNbXzB4MjA0YzM3KDB4MjRhKV0oXzB4M2NjYTlhKSk7fSwnZXNjYXBlUmVnRXhwJzpmdW5jdGlvbihfMHgxN2IzNjUpe2NvbnN0IF8weDQ1MjU5NT1fMHgyZWEyZjE7cmV0dXJuIF8weDE3YjM2NVsncmVwbGFjZSddKC9bW1xde30oKSorPy5cXF4kfF0vZyxfMHg0NTI1OTUoMHg0ZjEpKTt9LCdyZXBsYWNlUGF0aFNlcEZvclJlZ2V4JzpmdW5jdGlvbihfMHgzOGExMDEpe3JldHVybiBfMHgyZTkzMWRbJ3NlcCddPT09J1x4NWMnP18weDM4YTEwMVsncmVwbGFjZSddKC8oXC98KC4pP1xcKD8hW1tcXXt9KCkqKz8uXiR8XFxdKSkvZywoXzB4NDdjNzI5LF8weDE3ZDk2NyxfMHhhYjdiZmMpPT5fMHhhYjdiZmMmJl8weGFiN2JmYyE9PSdceDVjJz9fMHhhYjdiZmMrJ1x4NWNceDVjJzonXHg1Y1x4NWMnKTpfMHgzOGExMDE7fSwnZGlzcGxheVRlc3ROYW1lJzpmdW5jdGlvbihfMHgyM2VkZDgpe2NvbnN0IF8weDU4YmUxYz1fMHgyZWEyZjE7cmV0dXJuIF8weDIzZWRkOFtfMHg1OGJlMWMoMHg1YzQpXSgvXHI/XG58XHIvZywnXHgyMCcpW18weDU4YmUxYygweDVjNCldKC9cc1xzKy9nLCdceDIwJyk7fSwnZ2V0T3JpZ2luYWxMaW5lQnlHZW5lcmF0ZWRMaW5lJyhfMHgyYzFmYTQsXzB4MmE5NzAzLF8weDJiY2UyMSl7Y29uc3QgXzB4MmRlYjY0PV8weDJlYTJmMTtsZXQgXzB4NDZkZTUzPV8weDJjMWZhNFtfMHgyYTk3MDNdO2lmKF8weDQ2ZGU1Myl7aWYoXzB4NDZkZTUzPXRoaXNbJ19kZWNvZGVNYXBwaW5nJ10oXzB4NDZkZTUzKSxfMHg0NmRlNTM+MHgwKXJldHVybiBfMHg0NmRlNTM7XzB4MmJjZTIxJiYoXzB4MmJjZTIxPV8weDJiY2UyMS0weDEpO2ZvcihsZXQgXzB4MWY4YTMyPTB4MDtfMHgxZjhhMzI8XzB4NDZkZTUzW18weDJkZWI2NCgweDE5NSldO18weDFmOGEzMisrKXtpZihfMHg0NmRlNTNbXzB4MWY4YTMyXVtfMHgyZGViNjQoMHg2ZTQpXT09PV8weDJiY2UyMSlyZXR1cm4gXzB4NDZkZTUzW18weDFmOGEzMl1bJ2xpbmUnXTtpZihfMHgyYmNlMjE8XzB4NDZkZTUzW18weDFmOGEzMl1bXzB4MmRlYjY0KDB4NmU0KV0pcmV0dXJuIF8weDFmOGEzMj09PTB4MD9fMHg0NmRlNTNbMHgwXVtfMHgyZGViNjQoMHgyYTQpXTpfMHg0NmTigItlNTNbXzB4MWY4YTMyLTB4MV1bXzB4MmRlYjY0KDB4MmE0KV07fXJldHVybiBfMHg0NmRlNTNbXzB4NDZkZTUzW18weDJkZWI2NCgweDE5NSldLTB4MV1bXzB4MmRlYjY0KDB4MmE0KV07fX0sJ19kZWNvZGVNYXBwaW5nJyhfMHg1NmJkMTgpe2NvbnN0IF8weDIzYzZmMD1fMHgyZWEyZjE7aWYoX1tfMHgyM2M2ZjAoMHg0YzcpXShfMHg1NmJkMTgpfHxfW18weDIzYzZmMCgweDJmZCldKF8weDU2YmQxOCl8fF9bXzB4MjNjNmYwKDB4M2NiKV0oXzB4NTZiZDE4KSlyZXR1cm4gXzB4NTZiZDE4O2xldCBfMHg1NjA5OTM9W10sXzB4M2ZlNGU0PTB4MCxfMHg0ZWEzYjI9MHgwLF8weDc2ZDY3MDtmb3IobGV0IF8weDNiYTIxYz0weDA7XzB4M2JhMjFjPF8weDU2YmQxOFtfMHgyM2M2ZjAoMHgxOTUpXTtfMHgzYmEyMWMrPTB4MSl7bGV0IF8weDNjZDY2Mj1fMHg1YWI4NjZbXzB4NTZiZDE4W18weDNiYTIxY11dO2NvbnN0IF8weDNlZGE2Nj1fMHgzY2Q2NjImMHgyMDtpZihfMHgzY2Q2NjImPTB4MWYsXzB4NGVhM2IyKz1fMHgzY2Q2NjI8PF8weDNmZTRlNCxfMHgzZWRhNjYpXzB4M2ZlNGU0Kz0weDU7ZWxzZXtjb25zdCBfMHg1YWU3ZDM9XzB4NGVhM2IyJjB4MTtfMHg0ZWEzYjI+Pj49MHgxO2NvbnN0IF8weDNkMDhlMT1fMHg1YWU3ZDM/XzB4NGVhM2IyPT09MHgwPy0weDgwMDAwMDAwOi1fMHg0ZWEzYjI6XzB4NGVhM2IyO18weDc2ZDY3MD49MHgwPyhfMHg1NjA5OTNbJ3B1c2gnXSh7J2xpbmUnOl8weDc2ZDY3MCwnY29sdW1uJzpfMHgzZDA4ZTF9KSxfMHg3NmQ2NzA9dm9pZCAweDApOl8weDc2ZDY3MD1fMHgzZDA4ZTEsXzB4NGVhM2IyPV8weDNmZTRlND0weDA7fX1yZXR1cm4gXzB4NTYwOTkzO30sJ19lbmNvZGVNYXBwaW5nJyhfMHhjZDY0N2QsXzB4MmE4NDgyLF8weDFkZDJmYyl7Y29uc3QgXzB4NDJjNTQwPV8weDJlYTJmMSxfMHhjNDU5ODc9XzB4Y2Q2NDdkW18weDJhODQ4Ml07aWYoIV9bJ2lzT2JqZWN0J10oXzB4YzQ1OTg3KSlyZXR1cm4gXzB4YzQ1OTg3O2NvbnN0IF8weDQxMGY3ZT1PYmplY3RbXzB4NDJjNTQwKDB4MzNiKV0oXzB4YzQ1OTg3KTtpZihfMHgxZGQyZmMmJl8weDQxMGY3ZVsnbGVuZ3RoJ109PT0weDEmJl8weDQxMGY3ZVsweDBdW18weDQyYzU0MCgweDNmOSldPT09MHgwJiZfMHg0MTBmN2VbMHgwXVsnZ2VuZXJhdGVkQ29sdW1uJ109PT0weDAmJl8weDFkZDJmY1tfMHgyYTg0ODJdKXJldHVybiBfMHgxZGQyZmNbXzB4MmE4NDgyXTtpZihfMHg0MTBmN2VbJ2xlbmd0aCddPT09MHgxfHwhXzB4NDEwZjdlW18weDQyYzU0MCgweDI2YSldKF8weDUwMDc5YT0+XzB4NTAwNzlhW18weDQyYzU0MCgweDYxNyldIT09XzB4NDEwZjdlWzB4MF1bXzB4NDJjNTQwKDB4NjE3KV0pKXJldHVybiBfMHg0MTBmN2VbMHgwXVsnb3JpZ2luYWxMaW5lJ107e18weDQxMGY3ZVtfMHg0MmM1NDAoMHg1NTMpXSgoXzB4MzdiZTVjLF8weDM4MDQ1ZCk9Pl8weDM3YmU1Y1tfMHg0MmM1NDAoMHgxN2MpXS1fMHgzODA0NWRbXzB4NDJjNTQwKDB4MTdjKV0pO2xldCBfMHg0Yjc0ZTg9Jyc7XzB4NGI3NGU4Kz10aGlzW18weDQyYzU0MCgweDNmYildKF8weDQxMGY3ZVsweDBdWydvcmlnaW5hbExpbmUnXSksXzB4NGI3NGU4Kz10aGlzW18weDQyYzU0MCgweDNmYildKF8weDQxMGY3ZVsweDBdW18weDQyYzU0MCgweDE3YyldKTtsZXQgXzB4NTlhODVmPTB4MDtmb3IobGV0IF8weDJmYWZmNT0weDE7XzB4MmZhZmY1PF8weDQxMGY3ZVtfMHg0MmM1NDAoMHgxOTUpXTtfMHgyZmFmZjUrKylpZihfMHg0MTBmN2VbXzB4MmZhZmY1XVtfMHg0MmM1NDAoMHg2MTcpXSE9PV8weDQxMGY3ZVtfMHgyZmFmZjUtMHgxXVtfMHg0MmM1NDAoMHg2MTcpXSl7aWYoXzB4NTlhODVmKyssXzB4NTlhODVmPjB4N2QwKXJldHVybiBfMHg0MTBmN2VbMHgwXVtfMHg0MmM1NDAoMHg2MTcpXTtfMHg0Yjc0ZTgrPXRoaXNbXzB4NDJjNTQwKDB4M2ZiKV0oXzB4NDEwZjdlW18weDJmYWZmNV1bXzB4NDJjNTQwKDB4NjE3KV0pLF8weDRiNzRlOCs9dGhpc1snX2VuY29kZUludGVnZXInXShfMHg0MTBmN2VbXzB4MmZhZmY1XVtfMHg0MmM1NDAoMHgxN2MpXSk7fXJldHVybiBfMHg0Yjc0ZTg7fX0sJ19lbmNvZGVJbnRlZ2VyJyhfMHgxZjdiODQpe2xldCBfMHgyYzE0ZGY9Jyc7XzB4MWY3Yjg0PDB4MD9fMHgxZjdiODQ9LV8weDFmN2I4NDw8MHgxfDB4MTpfMHgxZjdiODQ8PD0weDE7ZG97bGV0IF8weDI1ZGU5Zj1fMHgxZjdiODQmMHgxZjtfMHgxZjdiODQ+Pj49MHg1LF8weDFmN2I4ND4weDAmJihfMHgyNWRlOWZ8PTB4MjApLF8weDJjMTRkZis9XzB4NDg2NGNlW18weDI1ZGU5Zl07fXdoaWxlKF8weDFmN2I4ND4weDApO3JldHVybiBfMHgyYzE0ZGY7fSwnZ2VuZXJhdGVMaW5lTWFwcGluZ3MnOmZ1bmN0aW9uKF8weDQ5ZWVmNyxfMHgyNDIzNjUpe2NvbnN0IF8weDQxNTAyND1fMHgyZWEyZjEsXzB4MjE5ZDkwPXt9O3JldHVybiBPYmplY3RbXzB4NDE1MDI0KDB4MjQzKV0oXzB4NDllZWY3KVtfMHg0MTUwMjQoMHgzZTQpXShfMHgxZmViYzA9Pntjb25zdCBfMHgyYWU2Mzk9XzB4NDE1MDI0O18weDIxOWQ5MFtfMHgxZmViYzBdPXRoaXNbXzB4MmFlNjM5KDB4NTljKV0oXzB4NDllZWY3LF8weDFmZWJjMCxfMHgyNDIzNjUpO30pLF8weDIxOWQ5MDt9LCdfcHJldmlvdXNMaW5lTWFwTmV4dEdyZWF0ZXJUaGFuT3JFcXVhbFRvJyhfMHg0ZTkzYmQsXzB4NWU5MWQ2KXtjb25zdCBfMHgzMjRmZTI9XzB4MmVhMmYxO2xldCBfMHgyNWU3YmQ9MHgwLF8weDEwNjJiMz1fMHg0ZTkzYmRbXzB4MzI0ZmUyKDB4MTk1KV0tMHgxLF8weDU2ZjRlNj0tMHgxO2Zvcig7XzB4MjVlN2JkPD1fMHgxMDYyYjM7KXtsZXQgXzB4MTcxODA4PXBhcnNlSW50KChfMHgyNWU3YmQrXzB4MTA2MmIzKS8weDIsMHhhKTtfMHg0ZTkzYmRbXzB4MTcxODA4XVtfMHgzMjRmZTIoMHg2ZTQpXTxfMHg1ZTkxZDY/XzB4MjVlN2JkPV8weDE3MTgwOCsweDE6KF8weDU2ZjRlNj1fMHgxNzE4MDgsXzB4MTA2MmIzPV8weDE3MTgwOC0weDEpO31yZXR1cm4gXzB4NTZmNGU2PT09MHgwJiYoXzB4NTZmNGU2PTB4MSksXzB4NTZmNGU2PT09LTB4MSYmKF8weDU2ZjRlNj1fMHg0ZTkzYmRbJ2xlbmd0aCddKSxfMHg1NmY0ZTY7fSwnX3ByZXZpb3VzTGluZU1hcE5leHRHcmVhdGVyVGhhbicoXzB4MjIxNTI2LF8weDJhNDNiMSl7Y29uc3QgXzB4MjQ1NTI3PV8weDJlYTJmMTtsZXQgXzB4MjI1MjA1PTB4MCxfMHgxNmY0NTU9XzB4MjIxNTI2W18weDI0NTUyNygweDE5NSldLTB4MSxfMHgzN2U2N2E9LTB4MTtmb3IoO18weDIyNTIwNTw9XzB4MTZmNDU1Oyl7bGV0IF8weDVmNDA4MD1wYXJzZUludCgoXzB4MjI1MjA1K18weDE2ZjQ1NSkvMHgyLDB4YSk7XzB4MjIxNTI2W18weDVmNDA4MF1bXzB4MjQ1NTI3KDB4NmU0KV08PV8weDJhNDNiMT9fMHgyMjUyMDU9XzB4NWY0MDgwKzB4MTooXzB4MzdlNjdhPV8weDVmNDA4MCxfMHgxNmY0NTU9XzB4NWY0MDgwLTB4MSk7fXJldHVybiBfMHgzN2U2N2E9PT0weDAmJihfMHgzN2U2N2E9MHgxKSxfMHgzN2U2N2E9PT0tMHgxJiYoXzB4MzdlNjdhPV8weDIyMTUyNlsnbGVuZ3RoJ10pLF8weDM3ZTY3YTt9LCd1cGRhdGVGaWxlTWFwJzpmdW5jdGlvbihfMHgyMjBjMWYsXzB4YjAwYTgzKXtjb25zdCBfMHhmMDM3MmE9XzB4MmVhMmYxO3ZhciBfMHgzYmQxOWI9X1tfMHhmMDM3MmEoMHg2NjApXSh7fSxfMHgyMjBjMWYpO3JldHVybiBfW18weGYwMzcyYSgweDNlNildKF8weGIwMGE4MyxfMHgyYmI5NjE9Pntjb25zdCBfMHgzNGMyMTQ9XzB4ZjAzNzJhO3ZhciBfMHgxYjViYTI9bmV3IF8weDI5MzkyMChfMHgyYmI5NjEpLF8weDVlMGYwYT17fSxfMHgzMmNlN2I9X1snaXNFbXB0eSddKF8weDNiZDE5Yik7XzB4MWI1YmEyW18weDM0YzIxNCgweDE2OSldKF8weDljNjNhNj0+e2NvbnN0IF8weDE2YjE0Yj1fMHgzNGMyMTQ7aWYoISghXzB4OWM2M2E2W18weDE2YjE0YigweDYxNyldfHwhXzB4OWM2M2E2W18weDE2YjE0YigweDI3MyldKSl7aWYoXzB4MzJjZTdiKV8weDVlMGYwYVtfMHg5YzYzYTZbXzB4MTZiMTRiKDB4MjczKV1dfHwoXzB4NWUwZjBhW18weDljNjNhNltfMHgxNmIxNGIoMHgyNzMpXV09e30pLCghXzB4NWUwZjBhW18weDljNjNhNlsnZ2VuZXJhdGVkTGluZSddXVtfMHg5YzYzYTZbXzB4MTZiMTRiKDB4MTdjKV1dfHxfMHg5YzYzYTZbXzB4MTZiMTRiKDB4MzYzKV0pJiYoXzB4NWUwZjBhW18weDljNjNhNltfMHgxNmIxNGIoMHgyNzMpXV1bXzB4OWM2M2E2W18weDE24oCLYjE0YigweDE3YyldXT1PYmplY3RbJ2Fzc2lnbiddKHt9LF8weDljNjNhNikpO2Vsc2V7aWYoXzB4M2JkMTliW18weDljNjNhNltfMHgxNmIxNGIoMHg2MTcpXV0pe2lmKF8weDVlMGYwYVtfMHg5YzYzYTZbJ2dlbmVyYXRlZExpbmUnXV0mJl8weDVlMGYwYVtfMHg5YzYzYTZbXzB4MTZiMTRiKDB4MjczKV1dW18weDljNjNhNlsnZ2VuZXJhdGVkQ29sdW1uJ11dJiYhXzB4OWM2M2E2W18weDE2YjE0YigweDM2MyldKXJldHVybjtjb25zdCBfMHgyMTI1MmE9XzB4M2JkMTliW18weDljNjNhNltfMHgxNmIxNGIoMHg2MTcpXV09dGhpc1tfMHgxNmIxNGIoMHg0Y2UpXShfMHgzYmQxOWJbXzB4OWM2M2E2W18weDE2YjE0YigweDYxNyldXSk7aWYoIV8weDIxMjUyYSlyZXR1cm47aWYoXzB4MjEyNTJhPjB4MClfMHg1ZTBmMGFbXzB4OWM2M2E2W18weDE2YjE0YigweDI3MyldXXx8KF8weDVlMGYwYVtfMHg5YzYzYTZbJ2dlbmVyYXRlZExpbmUnXV09e30pLF8weDVlMGYwYVtfMHg5YzYzYTZbJ2dlbmVyYXRlZExpbmUnXV1bXzB4OWM2M2E2WydnZW5lcmF0ZWRDb2x1bW4nXV09T2JqZWN0W18weDE2YjE0YigweDQ3ZSldKE9iamVjdFtfMHgxNmIxNGIoMHg0N2UpXSh7fSxfMHg5YzYzYTYpLHsnb3JpZ2luYWxMaW5lJzpfMHgyMTI1MmEsJ29yaWdpbmFsQ29sdW1uJzoweDB9KTtlbHNle2NvbnN0IF8weDI4ODEwNj10aGlzW18weDE2YjE0YigweDUwMCldKF8weDIxMjUyYSxfMHg5YzYzYTZbXzB4MTZiMTRiKDB4M2Y5KV0pO18weDVlMGYwYVtfMHg5YzYzYTZbXzB4MTZiMTRiKDB4MjczKV1dfHwoXzB4NWUwZjBhW18weDljNjNhNltfMHgxNmIxNGIoMHgyNzMpXV09e30pLF8weDVlMGYwYVtfMHg5YzYzYTZbJ2dlbmVyYXRlZExpbmUnXV1bXzB4OWM2M2E2WydnZW5lcmF0ZWRDb2x1bW4nXV09T2JqZWN0W18weDE2YjE0YigweDQ3ZSldKE9iamVjdFtfMHgxNmIxNGIoMHg0N2UpXSh7fSxfMHg5YzYzYTYpLHsnb3JpZ2luYWxMaW5lJzpfMHgyMTI1MmFbXzB4Mjg4MTA2LTB4MV1bXzB4MTZiMTRiKDB4MmE0KV0sJ29yaWdpbmFsQ29sdW1uJzpfMHgyMTI1MmFbXzB4Mjg4MTA2LTB4MV1bJ2NvbHVtbiddfSk7fX19fX0pLF8weDNiZDE5Yj10aGlzW18weDM0YzIxNCgweDJjNSldKF8weDVlMGYwYSxfMHgyMjBjMWYpO30pLF8weDNiZDE5Yjt9LCdmb3JtYXRJbnN0cnVtZW50YXRpb25FcnJvcic6ZnVuY3Rpb24oXzB4MzI5OWQ2LF8weDE4MjhlNSxfMHgzYTVjYjMpe2NvbnN0IF8weDMwZWY3Yj1fMHgyZWEyZjEsXzB4ZTk2MWVjPShfMHgzMjk5ZDYmJihfMHgzMjk5ZDZbXzB4MzBlZjdiKDB4NDM3KV18fF8weDMyOTlkNltfMHgzMGVmN2IoMHhhYildKSkrJyc7bGV0IF8weGY2YzE5OT10aGlzW18weDMwZWY3YigweDc2YSldKF8weGU5NjFlYyk7Y29uc3QgXzB4MjVmZGUwPV8weGY2YzE5OVsweDBdLF8weDQ3YzI1Zj1fMHgyNWZkZTBbXzB4MzBlZjdiKDB4NDhhKV0oL15TeW50YXhFcnJvci4qXCgoXGQrKTooXGQrKVwpJC8pO3JldHVybiBfMHg0N2MyNWYmJihfMHhmNmMxOTk9W3RoaXNbXzB4MzBlZjdiKDB4NGE5KV0oXzB4MTgyOGU1LHBhcnNlSW50KF8weDQ3YzI1ZlsweDFdLDB4YSkscGFyc2VJbnQoXzB4NDdjMjVmWzB4Ml0sMHhhKSsweDEsXzB4MjVmZGUwKV0pLEVycm9yKCdGYWlsZWRceDIwdG9ceDIwaW5zdHJ1bWVudFx4MjAnK18weDNhNWNiMysnXHgwYScrXzB4ZjZjMTk5Wydqb2luJ10oJ1x4MGEnKSk7fSwnY29tYmluZVNvdXJjZU1hcHMnOmZ1bmN0aW9uKF8weDViOWFhMixfMHgxZDFhZDEpe2NvbnN0IF8weDFmZDdjND1fMHgyZWEyZjE7aWYoIV8weDViOWFhMilyZXR1cm4gXzB4MWQxYWQxO2lmKCFfMHgxZDFhZDEpcmV0dXJuIF8weDViOWFhMjt2YXIgXzB4ZThkYmQ5PW5ldyBfMHgyOTM5MjAoXzB4MWQxYWQxKSxfMHg1OTQwNzI9bmV3IF8weDI5MzkyMChfMHg1YjlhYTIpLF8weDk1ZWY2PW5ldyBfMHg0M2U3YmQoKTtfMHhlOGRiZDlbXzB4MWZkN2M0KDB4MTY5KV0oXzB4MmQ5MWJhPT57Y29uc3QgXzB4MTY5ZGMyPV8weDFmZDdjNDtpZihfMHgyZDkxYmFbXzB4MTY5ZGMyKDB4NjE3KV0hPW51bGwpe3ZhciBfMHgyNTE5Zjk9XzB4NTk0MDcyW18weDE2OWRjMigweDcwMyldKHsnbGluZSc6XzB4MmQ5MWJhW18weDE2OWRjMigweDYxNyldLCdjb2x1bW4nOl8weDJkOTFiYVtfMHgxNjlkYzIoMHgzZjkpXX0pO18weDI1MTlmOVsnc291cmNlJ10hPW51bGwmJl8weDk1ZWY2W18weDE2OWRjMigweDUzZSldKHsnb3JpZ2luYWwnOnsnbGluZSc6XzB4MjUxOWY5W18weDE2OWRjMigweDJhNCldLCdjb2x1bW4nOl8weDI1MTlmOVtfMHgxNjlkYzIoMHg2ZTQpXX0sJ2dlbmVyYXRlZCc6eydsaW5lJzpfMHgyZDkxYmFbJ2dlbmVyYXRlZExpbmUnXSwnY29sdW1uJzpfMHgyZDkxYmFbXzB4MTY5ZGMyKDB4MTdjKV19LCdzb3VyY2UnOl8weDI1MTlmOVtfMHgxNjlkYzIoMHgxM2IpXSwnbmFtZSc6XzB4MjUxOWY5WyduYW1lJ118fF8weDJkOTFiYVsnbmFtZSddfSk7fX0pO3ZhciBfMHgzMDk4Zjk9W18weDU5NDA3MixfMHhlOGRiZDldO3JldHVybiBfMHgzMDk4ZjlbXzB4MWZkN2M0KDB4M2U0KV0oXzB4MzhmNDM2PT57Y29uc3QgXzB4MTBiN2NhPV8weDFmZDdjNDtfMHgzOGY0MzZbXzB4MTBiN2NhKDB4Nzc2KV1bXzB4MTBiN2NhKDB4M2U0KV0oXzB4NDY4YjliPT57Y29uc3QgXzB4M2YwY2ZhPV8weDEwYjdjYTtfMHg5NWVmNltfMHgzZjBjZmEoMHgxYzEpXVtfMHgzZjBjZmEoMHg0NDUpXShfMHg0NjhiOWIpO3ZhciBfMHg3MjBmZmM9XzB4MzhmNDM2W18weDNmMGNmYSgweDEyNSldKF8weDQ2OGI5Yik7XzB4NzIwZmZjIT1udWxsJiZfMHg5NWVmNlsnc2V0U291cmNlQ29udGVudCddKF8weDQ2OGI5YixfMHg3MjBmZmMpO30pO30pLF8weDk1ZWY2Wydfc291cmNlUm9vdCddPV8weDViOWFhMlsnc291cmNlUm9vdCddLF8weDk1ZWY2W18weDFmZDdjNCgweDM5MildPV8weDViOWFhMlsnZmlsZSddLEpTT05bXzB4MWZkN2M0KDB4NDk3KV0oXzB4OTVlZjZbJ3RvU3RyaW5nJ10oKSk7fSwnbWFwVGV4dFBvc2l0aW9uJzpmdW5jdGlvbihfMHg0NzY1NmMsXzB4MTk3ZjQzKXtjb25zdCBfMHgzMTQ2ZmM9XzB4MmVhMmYxO2xldCBfMHg0NWEzZmQ7aWYoXzB4NDc2NTZjKXtpZihfMHgxOTdmNDMpe2NvbnN0IF8weDMxY2UzMj17J2xpbmUnOl8weDQ3NjU2Y1tfMHgzMTQ2ZmMoMHgyYTQpXSwnY29sdW1uJzpfMHg0NzY1NmNbXzB4MzE0NmZjKDB4NmU0KV19O18weDMxY2UzMltfMHgzMTQ2ZmMoMHgxM2IpXT1fMHgxOTdmNDNbXzB4MzE0NmZjKDB4Nzc2KV0mJl8weDE5N2Y0M1tfMHgzMTQ2ZmMoMHg3NzYpXVsweDBdfHwnLicsXzB4MzFjZTMyW18weDMxNDZmYygweDQwZildPTB4MixfMHg0NWEzZmQ9XzB4MTk3ZjQzW18weDMxNDZmYygweDFkNyldKF8weDMxY2UzMik7fWVsc2UgXzB4NDVhM2ZkPV8weDQ3NjU2Yzt9cmV0dXJuIF8weDQ1YTNmZDt9LCd0ZXh0SW5kZXhQb3NpdGlvbic6ZnVuY3Rpb24oXzB4MTIxM2E3LF8weDVkYzYxNyl7Y29uc3QgXzB4NDRlZDk3PV8weDJlYTJmMTt2YXIgXzB4M2RiZjUxPXRoaXNbJ3RleHRMaW5lcyddKF8weDEyMTNhNyxfMHg1ZOKAi2M2MTcpO3JldHVybnsnbGluZSc6XzB4M2RiZjUxWydsZW5ndGgnXSwnY29sdW1uJzpfMHgzZGJmNTFbXzB4M2RiZjUxW18weDQ0ZWQ5NygweDE5NSldLTB4MV1bXzB4NDRlZDk3KDB4MTk1KV19O30sJ21hcFRyYW5zZm9ybWVkUmFuZ2VUb09yaWdpbmFsJzpmdW5jdGlvbihfMHgyM2JlZTUsXzB4MzNmNDYyKXtjb25zdCBfMHg1YzZkYjQ9XzB4MmVhMmYxLF8weDNhOWVhMT1mdW5jdGlvbihfMHgyOWExYzYsXzB4ODNjNWU2LF8weDViMmMxOSl7Y29uc3QgXzB4MzVlYjdjPV8weGFlMjYsXzB4MWU0ZTU1PV8weDI5YTFjNltfMHgzNWViN2MoMHg3MDMpXSh7J2xpbmUnOl8weDgzYzVlNiwnY29sdW1uJzpfMHg1YjJjMTksJ2JpYXMnOjB4MX0pO3JldHVybiBfMHgxZTRlNTVbJ3NvdXJjZSddPT09bnVsbD9fMHgyOWExYzZbJ29yaWdpbmFsUG9zaXRpb25Gb3InXSh7J2xpbmUnOl8weDgzYzVlNiwnY29sdW1uJzpfMHg1YjJjMTksJ2JpYXMnOjB4Mn0pOl8weDFlNGU1NTt9LF8weDJlMTQyNj1mdW5jdGlvbihfMHgyNWUxNzgsXzB4M2RjMjVjKXtjb25zdCBfMHgxMjQyZTg9XzB4YWUyNixfMHgyMGY2YzI9XzB4MjVlMTc4W18weDEyNDJlOCgweDcwMyldKHsnbGluZSc6XzB4M2RjMjVjW18weDEyNDJlOCgweDJhNCldLCdjb2x1bW4nOl8weDNkYzI1Y1tfMHgxMjQyZTgoMHg2ZTQpXS0weDF9KTtpZihfMHgyMGY2YzJbXzB4MTI0MmU4KDB4MTNiKV09PT1udWxsKXJldHVybiBudWxsO2NvbnN0IF8weDUwYWU0Zj1fMHgyNWUxNzhbXzB4MTI0MmU4KDB4MWQ3KV0oeydzb3VyY2UnOl8weDIwZjZjMlsnc291cmNlJ10sJ2xpbmUnOl8weDIwZjZjMltfMHgxMjQyZTgoMHgyYTQpXSwnY29sdW1uJzpfMHgyMGY2YzJbXzB4MTI0MmU4KDB4NmU0KV0rMHgxLCdiaWFzJzoweDJ9KTtyZXR1cm4gXzB4NTBhZTRmW18weDEyNDJlOCgweDJhNCldPT09bnVsbHx8XzB4MjVlMTc4W18weDEyNDJlOCgweDcwMyldKF8weDUwYWU0ZilbXzB4MTI0MmU4KDB4MmE0KV0hPT1fMHgyMGY2YzJbXzB4MTI0MmU4KDB4MmE0KV0/eydzb3VyY2UnOl8weDIwZjZjMltfMHgxMjQyZTgoMHgxM2IpXSwnbGluZSc6XzB4MjBmNmMyW18weDEyNDJlOCgweDJhNCldLCdjb2x1bW4nOjB4MS8weDB9Ol8weDI1ZTE3OFtfMHgxMjQyZTgoMHg3MDMpXShfMHg1MGFlNGYpO30sXzB4NTA5MTE4PXsnc3RhcnQnOnsnbGluZSc6XzB4MzNmNDYyWzB4MF0sJ2NvbHVtbic6XzB4MzNmNDYyWzB4MV19LCdlbmQnOnsnbGluZSc6XzB4MzNmNDYyWzB4Ml0sJ2NvbHVtbic6XzB4MzNmNDYyWzB4M119fSxfMHg0ZGZhNjI9XzB4M2E5ZWExKF8weDIzYmVlNSxfMHg1MDkxMThbJ3N0YXJ0J11bXzB4NWM2ZGI0KDB4MmE0KV0sXzB4NTA5MTE4W18weDVjNmRiNCgweDU3OCldWydjb2x1bW4nXSk7bGV0IF8weGMwNWNlYz1fMHgyZTE0MjYoXzB4MjNiZWU1LF8weDUwOTExOFsnZW5kJ10pO3JldHVybiEoXzB4NGRmYTYyJiZfMHhjMDVjZWMpfHwhKF8weDRkZmE2MltfMHg1YzZkYjQoMHgxM2IpXSYmXzB4YzA1Y2VjW18weDVjNmRiNCgweDEzYildKXx8XzB4NGRmYTYyWydzb3VyY2UnXSE9PV8weGMwNWNlY1tfMHg1YzZkYjQoMHgxM2IpXXx8XzB4NGRmYTYyW18weDVjNmRiNCgweDJhNCldPT09bnVsbHx8XzB4NGRmYTYyW18weDVjNmRiNCgweDZlNCldPT09bnVsbHx8XzB4YzA1Y2VjWydsaW5lJ109PT1udWxsfHxfMHhjMDVjZWNbXzB4NWM2ZGI0KDB4NmU0KV09PT1udWxsP251bGw6KF8weDRkZmE2MltfMHg1YzZkYjQoMHgyYTQpXT09PV8weGMwNWNlY1snbGluZSddJiZfMHg0ZGZhNjJbJ2NvbHVtbiddPT09XzB4YzA1Y2VjW18weDVjNmRiNCgweDZlNCldJiYoXzB4YzA1Y2VjPV8weDIzYmVlNVtfMHg1YzZkYjQoMHg3MDMpXSh7J2xpbmUnOl8weDUwOTExOFtfMHg1YzZkYjQoMHgxZjUpXVtfMHg1YzZkYjQoMHgyYTQpXSwnY29sdW1uJzpfMHg1MDkxMThbXzB4NWM2ZGI0KDB4MWY1KV1bJ2NvbHVtbiddLCdiaWFzJzoweDJ9KSxfMHhjMDVjZWNbXzB4NWM2ZGI0KDB4NmU0KV09XzB4YzA1Y2VjWydjb2x1bW4nXS0weDEpLFtfMHg0ZGZhNjJbXzB4NWM2ZGI0KDB4MmE0KV0sXzB4NGRmYTYyW18weDVjNmRiNCgweDZlNCldLF8weGMwNWNlY1tfMHg1YzZkYjQoMHgyYTQpXSxfMHhjMDVjZWNbXzB4NWM2ZGI0KDB4NmU0KV1dKTt9LCdtYXBPcmlnaW5hbFJhbmdlVG9UcmFuc2Zvcm1lZCc6ZnVuY3Rpb24oXzB4NWNhYjVjLFtfMHgyM2Y3YzgsXzB4NWYwMjk4LF8weDNiYmI2ZixfMHgyYzU5ZjddKXtjb25zdCBfMHgyNGQzNjE9XzB4MmVhMmYxO2lmKCFfMHg1Y2FiNWMpcmV0dXJuW18weDIzZjdjOCxfMHg1ZjAyOTgsXzB4M2JiYjZmLF8weDJjNTlmN107Y29uc3QgXzB4MTg5ODczPXsnbGluZSc6XzB4MjNmN2M4LCdjb2x1bW4nOl8weDVmMDI5OH07XzB4MTg5ODczWydzb3VyY2UnXT1fMHg1Y2FiNWNbXzB4MjRkMzYxKDB4Nzc2KV0mJl8weDVjYWI1Y1tfMHgyNGQzNjEoMHg3NzYpXVsweDBdfHwnLic7Y29uc3QgXzB4MzE3Y2Y4PV8weDVjYWI1Y1tfMHgyNGQzNjEoMHgxZDcpXShfMHgxODk4NzMpLF8weDRmOTdmMz17J2xpbmUnOl8weDNiYmI2ZiwnY29sdW1uJzpfMHgyYzU5Zjd9O18weDRmOTdmM1tfMHgyNGQzNjEoMHgxM2IpXT1fMHg1Y2FiNWNbXzB4MjRkMzYxKDB4Nzc2KV0mJl8weDVjYWI1Y1tfMHgyNGQzNjEoMHg3NzYpXVsw4oCLeDBdfHwnLicsXzB4NGY5N2YzW18weDI0ZDM2MSgweDQwZildPTB4Mjtjb25zdCBfMHg1YjQ2ZmQ9XzB4NWNhYjVjW18weDI0ZDM2MSgweDFkNyldKF8weDRmOTdmMyk7aWYoXzB4MzE3Y2Y4JiZfMHg1YjQ2ZmQmJiEoXzB4MzE3Y2Y4W18weDI0ZDM2MSgweDJhNCldPT09bnVsbHx8XzB4MzE3Y2Y4W18weDI0ZDM2MSgweDZlNCldPT09bnVsbCkpe2lmKF8weDViNDZmZFtfMHgyNGQzNjEoMHgyYTQpXT09PW51bGx8fF8weDViNDZmZFtfMHgyNGQzNjEoMHg2ZTQpXT09PW51bGwpe2lmKF8weDMxN2NmOFtfMHgyNGQzNjEoMHgyYTQpXT09PW51bGx8fF8weDMxN2NmOFtfMHgyNGQzNjEoMHg2ZTQpXT09PW51bGwpcmV0dXJuO18weDViNDZmZFtfMHgyNGQzNjEoMHgxM2IpXT1fMHgzMTdjZjhbXzB4MjRkMzYxKDB4MTNiKV0sXzB4NWI0NmZkW18weDI0ZDM2MSgweDJhNCldPV8weDMxN2NmOFsnbGluZSddLF8weDViNDZmZFtfMHgyNGQzNjEoMHg2ZTQpXT0weDEvMHgwO31yZXR1cm4gXzB4NWI0NmZkW18weDI0ZDM2MSgweDJhNCldPF8weDMxN2NmOFtfMHgyNGQzNjEoMHgyYTQpXSYmKF8weDViNDZmZFtfMHgyNGQzNjEoMHgyYTQpXT1fMHgzMTdjZjhbJ2xpbmUnXSksXzB4MzE3Y2Y4WydsaW5lJ109PT1fMHg1YjQ2ZmRbJ2xpbmUnXSYmXzB4NWI0NmZkW18weDI0ZDM2MSgweDZlNCldPF8weDMxN2NmOFsnY29sdW1uJ10mJihfMHg1YjQ2ZmRbXzB4MjRkMzYxKDB4NmU0KV09MHgxLzB4MCksXzB4MzE3Y2Y4W18weDI0ZDM2MSgweDZlNCldPT09bnVsbCYmKF8weDMxN2NmOFtfMHgyNGQzNjEoMHg2ZTQpXT0weDApLF8weDViNDZmZFtfMHgyNGQzNjEoMHg2ZTQpXT09PW51bGwmJihfMHg1YjQ2ZmRbXzB4MjRkMzYxKDB4NmU0KV09MHgwKSxbXzB4MzE3Y2Y4W18weDI0ZDM2MSgweDJhNCldLF8weDMxN2NmOFtfMHgyNGQzNjEoMHg2ZTQpXSxfMHg1YjQ2ZmRbXzB4MjRkMzYxKDB4MmE0KV0sXzB4NWI0NmZkW18weDI0ZDM2MSgweDZlNCldXTt9fSwndGV4dExpbmVzJzpmdW5jdGlvbihfMHgzYjc3ZjYsXzB4NWIwODM2LF8weDEzYWQ4NSxfMHgxYTg2MWEpe2NvbnN0IF8weDJkOTkzMz1fMHgyZWEyZjE7cmV0dXJuIF8weDNiNzdmNj1fW18weDJkOTkzMygweDRjNyldKF8weDViMDgzNil8fF8weDViMDgzNj09PV8weDNiNzdmNltfMHgyZDk5MzMoMHgxOTUpXS0weDE/XzB4M2I3N2Y2Ol8weDNiNzdmNltfMHgyZDk5MzMoMHg1MTEpXSgweDAsXzB4NWIwODM2KSxfMHgzYjc3ZjZbXzB4MmQ5OTMzKDB4YTkpXShfW18weDJkOTkzMygweDRjNyldKF8weDEzYWQ4NSk/L1xyXG58XHJ8XG4vOl8weDEzYWQ4NSxfMHgxYTg2MWEpO30sJ2luc3RydW1lbnRhYmxlUmFuZ2UnOmZ1bmN0aW9uKF8weDQ0MmQ2MSxfMHgzYmQwOWEpe2NvbnN0IF8weDNkNDc5OT1fMHgyZWEyZjE7bGV0IFtfMHgzMTkxZTMsXzB4NTRlZWE5LF8weDI2NzJmZCxfMHgyMTY3NGVdPV8weDNiZDA5YTtpZihfMHgyNjcyZmQtXzB4MzE5MWUzPjB4MWY0KXJldHVybiBfMHgzYmQwOWE7aWYoXzB4MjY3MmZkPF8weDMxOTFlM3x8XzB4MjY3MmZkPT09XzB4MzE5MWUzJiZfMHgyMTY3NGU8XzB4NTRlZWE5KXJldHVybjtjb25zdCBfMHgyMjlmZjI9XzB4NDQyZDYxW18weDNkNDc5OSgweDNjNildO2lmKF8weDMxOTFlMz09PV8weDI2NzJmZCYmXzB4NTRlZWE5PT09XzB4MjE2NzRlJiZfMHgzMTkxZTM+MHgwJiZfMHg1NGVlYTk+PTB4MCYmXzB4MzE5MWUzPD1fMHgyMjlmZjJbXzB4M2Q0Nzk5KDB4MTk1KV0mJl8weDU0ZWVhOTxfMHgyMjlmZjJbXzB4MzE5MWUzLTB4MV1bXzB4M2Q0Nzk5KDB4MTk1KV0rMHgxKXJldHVybiBfMHgzYmQwOWE7XzB4MzE5MWUzPDB4MSYmKF8weDMxOTFlMz0weDEpLF8weDI2NzJmZD5fMHgyMjlmZjJbXzB4M2Q0Nzk5KDB4MTk1KV0mJihfMHgyNjcyZmQ9XzB4MjI5ZmYyW18weDNkNDc5OSgweDE5NSldKSxfMHg1NGVlYTk8MHgwJiYoXzB4NTRlZWE5PTB4MCk7bGV0IF8weDE2NTExMj0hMHgxO2ZvcihsZXQgXzB4NDMzZjQwPV8weDMxOTFlMztfMHg0MzNmNDA8PV8weDI2NzJmZDtfMHg0MzNmNDArKyl7Y29uc3QgXzB4MWZhMzQxPV8weDIyOWZmMltfMHg0MzNmNDAtMHgxXTtfMHgzMTkxZTM9XzB4NDMzZjQwO2NvbnN0IF8weDIwZmZjOT1fMHg0MzNmNDA9PT1fMHgyNjcyZmQmJl8weDIxNjc0ZTw9XzB4MWZhMzQxW18weDNkNDc5OSgweDE5NSldP18weDIxNjc0ZTpfMHgxZmEzNDFbXzB4M2Q0Nzk5KDB4MTk1KV07Zm9yKGxldCBfMHg0MzM5YTU9XzB4NTRlZWE5O18weDQzMzlhNTw9XzB4MjBmZmM5O18weDQzMzlhNSsrKWlmKF8weDU0ZWVhOT1fMHg0MzM5YTUsXzB4MWZhMzQxW18weDNkNDc5OSgweDQwYildKF8weDQzMzlhNSlbXzB4M2Q0Nzk5KDB4NGYzKV0oKVtfMHgzZDQ3OTkoMHgxOTUpXSl7XzB4MTY1MTEyPSEweDA7YnJlYWs7fWlmKF8weDE2NTExMilicmVhaztfMHg1NGVlYTk9MHgwO31pZihfMHgxNjUxMTIpe2ZvcihsZXQgXzB4NWVjNGI1PV8weDI2NzJmZDtfMHg1ZWM0YjU+PV8weDMxOTFlMztfMHg1ZWM0YjUtLSl7Y29uc3QgXzB4MjY2NDk0PV8weDIyOWZmMltfMHg1ZWM0YjUtMHgxXTtfMHgyNjcyZmQhPT1fMHg1ZWM0YjUmJihfMHgyNjcyZmQ9XzB4NWVjNGI1LF8weDIxNjc0ZT1fMHgyNjY0OTRbXzB4M2Q0Nzk5KDB4MTk1KV0pO2NvbnN0IF8weDQyZTY3Yj1fMHg1ZWM0YjU9PT1fMHgzMTkxZTMmJl8weDMxOTFlMz49MHgwP18weDU0ZWVhOToweDA7bGV0IF8weDJhODE4Nj0hMHgxO2ZvcihsZXQgXzB4MjJiMGFkPV8weDIxNjc0ZTtfMHgyMmIwYWQ+PV8weDQyZTY3YjtfMHgyMmIwYWQtLSl7aWYoXzB4MjY2NDk0W18weDNkNDc5OSgweDQwYildKF8weDIyYjBhZClbXzB4M2Q0Nzk5KDB4NGYzKV0oKVsnbGVuZ3RoJ10pe18weDJhODE4Nj0hMHgwO2JyZWFrO31fMHgyMTY3NGU9XzB4MjJiMGFkO31pZihfMHgyYTgxODYpYnJlYWs7fXJldHVybltfMHgzMTkxZTMsXzB4NTRlZWE5LF8weDI2NzJmZCxfMHgyMTY3NGVdO319LCdpbnN0cnVtZW50YWJsZUxvZ3BvaW50UmFuZ2UnKF8weDUxMzExNixfMHgzZGZkODQpe2NvbnN0IF8weDNmMTllOD1fMHgyZWEyZjE7bGV0IFtfMHg0ZjQyZjMsXzB4MjhmMDMsXzB4MWJiYzUyLF8weDJjODM1NF09XzB4M2RmZDg0O2lmKF8weDRmNDJmMz09PV8weDFiYmM1Mil7Y29uc3QgXzB4MTA1ZTJkPV8weDUxMzExNlsndmFsdWUnXVtfMHg0ZjQyZjMtMHgxXTtpZihfMHgxMDVlMmQ9PT12b2lkIDB4MHx8XzB4MTA1ZTJkW18weDNmMTllOCgweDRmMyldKCk9PT0nJylyZXR1cm47aWYoXzB4MjhmMDM9PT1fMHgyYzgzNTQpe2NvbnN0IF8weDQ4MmRmYT1fMHgxMDVlMmRbJ3RyaW1FbmQnXSgpW18weDNmMTllOCgweDE5NSldLTB4MTtpZihfMHgyOGYwMz09PTB4MHx8XzB4MjhmMDM+PV8weDQ4MmRmYSlyZXR1cm5bXzB4NGY0MmYzLF8weDQ4MmRmYSsweDEsXzB4NGY0MmYzLF8weDQ4MmRmYSsweDFdO2lmKF8weDEwNWUyZFtfMHgyOGYwM11bXzB4M2YxOWU4KDB4NGYzKV0oKVtfMHgzZjE5ZTgoMHgxOTUpXSlyZXR1cm5bXzB4NGY0MmYzLF8weDI4ZjAzLF8weDRmNDJmMyxfMHgyOGYwM107Y29uc3QgXzB4MjAzNDZmPV8weDEwNWUyZFtfMHgzZjE5ZTgoMHg1ZGIpXSgweDAsXzB4MjhmMDMpW18weDNmMTllOCgweDNlOCldKClbXzB4M2YxOWU4KDB4MTk1KV07aWYoXzB4MjAzNDZmKXJldHVybltfMHg0ZjQyZjMsXzB4MjAzNDZmLTB4MSxfMHg0ZjQyZjMsXzB4MjAzNDZmLTB4MV07Y29uc3QgXzB4MWQ0MzVkPV8weDEwNWUyZFtfMHgzZjE5ZTgoMHgxOTUpXS1fMHgxMDVlMmRbXzB4M2YxOWU4KDB4NWRiKV0oXzB4MjhmMDMpW18weDNmMTllOCgweDUyOCldKClbXzB4M2YxOWU4KDB4MTk1KV07cmV0dXJuW18weDRmNDJmMyxfMHgxZDQzNWQsXzB4NGY0MmYzLF8weDFkNDM1ZF07fX1yZXR1cm4gdGhpc1tfMHgzZjE5ZTgoMHhhZSldKF8weDUxMzExNixfMHgzZGZkODQpO30sJ3ZlcmlmeUxvY2FsT3JpZ2luJzpmdW5jdGlvbihfMHgzZDE5MmIsXzB4MzFkYzU1KXtjb25zdCBfMHgyYjZlODU9XzB4MmVhMmYxO2lmKCFfMHgzZDE5MmIpcmV0dXJuITB4MDt2YXIgXzB4NTg2ZDMyPSEweDE7dHJ5e3ZhciBfMHg1OWY3M2Y9XzB4M2ZkZTcyKF8weDJiNmU4NSgweDJkYikpW18weDJiNmU4NSgweDQ5NyldKF8weDNkMTkyYilbXzB4MmI2ZTg1KDB4NWU2KV07XzB4NTg2ZDMyPV8weDU5ZjczZj09PV8weDJiNmU4NSgweDI5NSl8fF8weDU5ZjczZj09PScwLjAuMC4wJ3x8XzB4NTlmNzNmPT09XzB4MmI2ZTg1KDB4NDUyKXx8XzB4NTlmNzNmPT09XzB4MmI2ZTg1KDB4MTRkKTt9Y2F0Y2goXzB4MzJkYTU0KXt9cmV0dXJuIV8weDU4NmQzMiYmIV8weDMxZGM1NSYmY29uc29sZVtfMHgyYjZlODUoMHg0ODUpXShfMHgyYjZlODUoMHgyZjQpK18weDNkMTkyYiksXzB4NTg2ZDMyO30sJ3BhdGNoTW9kdWxlJzpmdW5jdGlvbihfMHg0YTIxMTEsXzB4MWUyZDFlKXtjb25zdCBfMHgyOGJmZDM9XzB4MmVhMmYxO3ZhciBfMHgzYTU2ZmM9XzB4M2ZkZTcyKF8weDI4YmZkMygweDY3YykpW18weDI4YmZkMygweDY5ZSldW18weDI4YmZkMygweDU2ZCldLF8weDQ3OGJjYz1fMHgzYTU2ZmNbJ3JlcXVpcmUnXTtfMHgzYTU2ZmNbXzB4MjhiZmQzKDB4NTk3KV09ZnVuY3Rpb24oXzB4M2I0MWMzKXtjb25zdCBfMHgzZmIxN2I9XzB4MjhiZmQzO3JldHVybiBfMHgzYjQxYzM9PT1fMHg0YTIxMTE/XzB4MWUyZDFlKF8weDQ3OGJjY1tfMHgzZmIxN2IoMHg1MzgpXSh0aGlzKSk6XzB4NDc4YmNjWydjYWxsJ10odGhpcyxfMHgzYjQxYzMpO307fSwncGF0Y2hNb2R1bGVzQ29kZSc6ZnVuY3Rpb24oXzB4M2Q3OWRiLF8weDFkNzg0Myl7Y29uc3QgXzB4NDk1NjllPV8weDJlYTJmMSxfMHgxNDExN2E9e307XzB4M2Q3OWRiWydmb3JFYWNoJ10oXzB4MzUxM2M2PT57Y29uc3QgXzB4NDgzMDA0PV8weGFlMjY7XzB4MzUxM2M2WydmaWxlcyddW18weDQ4MzAwNCgweDNlNCldKF8weDE3OTFmND0+e2NvbnN0IF8weDQ54oCLYTYwOD1fMHg0ODMwMDQ7XzB4MTQxMTdhW18weDE3OTFmNF09KF8weDE0MTE3YVtfMHgxNzkxZjRdfHxbXSlbJ2NvbmNhdCddKF8weDM1MTNjNltfMHg0OWE2MDgoMHgyN2MpXSk7fSk7fSk7Y29uc3QgXzB4NDNmNTYxPSdub2RlX21vZHVsZXMvJyxfMHgzNDU3NTM9XzB4NTc0MDUwPT5fMHg1NzQwNTA/KHR5cGVvZiBfMHg1NzQwNTAhPV8weDQ5NTY5ZSgweDFhNSkmJihfMHg1NzQwNTBbJ3Byb3RvY29sJ109PT1fMHg0OTU2OWUoMHhiOCk/XzB4NTc0MDUwPV8weDU3NDA1MFsncGF0aG5hbWUnXXx8Jyc6XzB4NTc0MDUwPV8weDU3NDA1MFsndG9TdHJpbmcnXSgpKSxfMHg1NzQwNTA9XzB4NTc0MDUwW18weDQ5NTY5ZSgweDVjNCldKC9cXC9nLCcvJyksXzB4NTc0MDUwW18weDQ5NTY5ZSgweDUxMSldKF8weDU3NDA1MFtfMHg0OTU2OWUoMHgxNjMpXShfMHg0M2Y1NjEpK18weDQzZjU2MVtfMHg0OTU2OWUoMHgxOTUpXSkpOicnLF8weDE2YTQzNz1fMHgzNDQ5NmVbJ3JlYWRGaWxlU3luYyddO18weDM0NDk2ZVsncmVhZEZpbGVTeW5jJ109ZnVuY3Rpb24oXzB4ZTUwNWQ2KXtjb25zdCBfMHgxMzI0MmI9XzB4NDk1NjllO2xldCBfMHgzNmMzN2I9XzB4MTZhNDM3W18weDEzMjQyYigweDdhNildKHRoaXMsYXJndW1lbnRzKTtjb25zdCBfMHg0MTE5MTg9XzB4MzQ1NzUzKF8weGU1MDVkNiksXzB4MTdmNGFlPV8weDE0MTE3YVtfMHg0MTE5MThdO3JldHVybiBfMHgxN2Y0YWUmJihfMHgzNmMzN2I9XzB4MzZjMzdiWyd0b1N0cmluZyddKCksXzB4MTdmNGFlW18weDEzMjQyYigweDNlNCldKF8weDM3ZGQ1Nz0+e2NvbnN0IF8weDE4ODA5OT1fMHgxMzI0MmIsXzB4OWZhMDU0PV8weDM2YzM3YjtfMHgzNmMzN2I9XzB4MzZjMzdiW18weDE4ODA5OSgweGE5KV0oXzB4MzdkZDU3W18weDE4ODA5OSgweDcwMSldKVtfMHgxODgwOTkoMHg0MmUpXShfMHgzN2RkNTdbJ3RvJ10pLCFfMHgzN2RkNTdbXzB4MTg4MDk5KDB4NGI0KV0mJl8weDM2YzM3Yj09PV8weDlmYTA1NCYmY29uc29sZVsnd2FybiddKCcnW18weDE4ODA5OSgweDQ0OSldKF8weDFkNzg0MywnXHgyMCgnKVtfMHgxODgwOTkoMHg0NDkpXShfMHhlNTA1ZDYsJyknKSk7fSkpLF8weDM2YzM3Yjt9O30sJ3JlcXVpcmVNb2R1bGVGcm9tJzpmdW5jdGlvbihfMHg0ZjU3NjcsXzB4MzkwNWJhKXtjb25zdCBfMHgyODAwYjQ9XzB4MmVhMmYxO3RyeXtyZXR1cm4gXzB4M2ZkZTcyKF8weDJlOTMxZFsnam9pbiddKF8weDRmNTc2Nywnbm9kZV9tb2R1bGVzJyxfMHgzOTA1YmEpKTt9Y2F0Y2goXzB4MzdjNjUxKXtjb25zdCBfMHg0NzAwNzI9XzB4M2ZkZTcyKF8weDI4MDBiNCgweDY3YykpLF8weDE0MDFhNz1uZXcgXzB4NDcwMDcyKCcuJyxudWxsKTtyZXR1cm4gXzB4MTQwMWE3W18weDI4MDBiNCgweDkyKV09XzB4MmU5MzFkW18weDI4MDBiNCgweDQyZSldKF8weDRmNTc2NyxfMHgyODAwYjQoMHgzYTUpKSxfMHgxNDAxYTdbXzB4MjgwMGI0KDB4NzMwKV09XzB4NDcwMDcyW18weDI4MDBiNCgweDczOSldKF8weDRmNTc2NyksXzB4NDcwMDcyWydfbG9hZCddKF8weDM5MDViYSxfMHgxNDAxYTcsITB4MSk7fX0sJ3Jlc29sdmVNb2R1bGVQYXRoRnJvbSc6ZnVuY3Rpb24oXzB4NTY3OTEyLF8weDNhZTYwYSl7Y29uc3QgXzB4NWVhYzU3PV8weDJlYTJmMSxfMHgyMTlkMDA9XzB4M2ZkZTcyKCdtb2R1bGUnKSxfMHgxYzRhZTI9bmV3IF8weDIxOWQwMCgnLicsbnVsbCk7cmV0dXJuIF8weDFjNGFlMltfMHg1ZWFjNTcoMHg5MildPV8weDJlOTMxZFtfMHg1ZWFjNTcoMHg0MmUpXShfMHg1Njc5MTIsXzB4NWVhYzU3KDB4M2E1KSksXzB4MWM0YWUyWydwYXRocyddPV8weDIxOWQwMFtfMHg1ZWFjNTcoMHg3MzkpXShfMHg1Njc5MTIpLF8weDIxOWQwMFtfMHg1ZWFjNTcoMHg1OGYpXShfMHgzYWU2MGEsXzB4MWM0YWUyLCEweDEpO30sJ3RyeVJlcXVpcmVNb2R1bGVXaXRoUGF0aEZyb20nOmZ1bmN0aW9uKF8weDFmMjhhMCxfMHg0OTVhYTQsXzB4M2Q0NTNkKXtjb25zdCBfMHgxYzk0ZTA9XzB4MmVhMmYxO3RyeXtjb25zdCBfMHg1MjE0NjU9XzB4M2ZkZTcyKF8weDFjOTRlMCgweDY3YykpLF8weDRlYmNkMz1uZXcgXzB4NTIxNDY1KCcuJyxudWxsKTtfMHg0ZWJjZDNbXzB4MWM5NGUwKDB4OTIpXT1fMHgyZTkzMWRbJ2pvaW4nXShfMHgxZjI4YTAsXzB4MWM5NGUwKDB4M2E1KSksXzB4NGViY2QzW18weDFjOTRlMCgweDczMCldPV8weDUyMTQ2NVsnX25vZGVNb2R1bGVQYXRocyddKF8weDFmMjhhMCk7Y29uc3QgXzB4NDU5MzlkPV8weDUyMTQ2NVtfMHgxYzk0ZTAoMHg1OGYpXShfMHg0OTVhYTQsXzB4NGViY2QzLCEweDEpO2xldCBfMHgxNjBjNzc7cmV0dXJuIHByb2Nlc3NbJ2VudiddWydXQUxMQUJZX0lOVEVHUkFUSU9OX1RFU1RfUlVOJ118fHByb2Nlc3NbXzB4MWM5NGUwKDB4NDU4KV1bXzB4MWM5NGUwKDB4NTA4KV0/XzB4MTYwYzc3PV8weDNmZGU3MihfMHg0NTkzOWQpOl8weDE2MGM3Nz1fMHg1MjE0NjVbXzB4MWM5NGUwKDB4MTgyKV0oXzB4NDk1YWE0LF8weDRlYmNkMywhMHgxKSx7J21vZHVsZSc6XzB4MTYwYzc3JiZfMHgxNjBjNzdbJ2RlZmF1bHQnXXx8XzB4MTYwYzc3LCdtb2R1bGVFeHBvcnRzJzpfMHgxNjBjNzcsJ3BhdGgnOl8weDQ1OTM5ZH07fWNhdGNoKF8weDViY2M4Yyl7aWYoXzB4M2Q0NTNkKXRocm93IF8weDViY2M4Yzt9fSwnbm9kZU1vZHVsZXNMb29rdXAnOmZ1bmN0aW9uKF8weDM3OTcxMyxfMHg2M2Y0ZGYpe2NvbnN0IF8weDFiYzU4NT1fMHgyZWEyZjE7dmFyIF8weDQ5ZDk0Zj1fMHgzZmRlNzIoJ21vZHVsZScpW18weDFiYzU4NSgweDY5ZSldLF8weDU3ZTY5Nz1fMHg0OWQ5NGZbXzB4MWJjNTg1KDB4NTZkKV0sXzB4YjY3M2EzPV8weDQ5ZDk0ZltfMHgxYmM1ODUoMHg3MzkpXSxfMHg4YWM2YjE9XzB4NTdlNjk3W18weDFiYzU4NSgweDU5NyldO18weDQ5ZDk0ZlsnX25vZGVNb2R1bGVQYXRocyddPWZ1bmN0aW9uKF8weDMwZWUxYSl7dmFyIF8weDI0NmY2Mj1fMHhiNjczYTNbJ2NhbGwnXSh0aGlzLF8weDMwZWUx4oCLYSk7cmV0dXJuIF8weDM3OTcxMyhfMHgyNDZmNjIsXzB4MzBlZTFhLF8weGI2NzNhMyx0aGlzKSxfMHgyNDZmNjI7fSxfMHg2M2Y0ZGYmJihfMHg1N2U2OTdbXzB4MWJjNTg1KDB4NTk3KV09ZnVuY3Rpb24oXzB4MTE0YTI0KXtyZXR1cm4gXzB4OGFjNmIxWydjYWxsJ10odGhpcyxfMHg2M2Y0ZGYoXzB4MTE0YTI0KSk7fSk7fSwnbm9kZU1vZHVsZVBhdGhzJzpmdW5jdGlvbihfMHgzZTZlMWMpe2NvbnN0IF8weDQ1YzIxOD1fMHgyZWEyZjE7cmV0dXJuIF8weDNmZGU3MihfMHg0NWMyMTgoMHg2N2MpKVsnX25vZGVNb2R1bGVQYXRocyddKF8weDNlNmUxYyk7fSwncGF0Y2hCYWJlbFJlc29sdmUnOmZ1bmN0aW9uKF8weDQ2NDY3NSl7Y29uc3QgXzB4NTZhZDQ1PV8weDJlYTJmMSxfMHgxODMzOTE9dGhpc1snbm9kZU1vZHVsZVBhdGhzJ10oXzB4NDY0Njc1KTt0aGlzW18weDU2YWQ0NSgweDFjOCldKCdyZXNvbHZlJyxfMHgxMzJiOGQ9Pntjb25zdCBfMHgxYTUyNDA9XzB4NTZhZDQ1LF8weDQ4YzM0Zj1fMHgxMzJiOGQoXzB4MWE1MjQwKDB4MjgwKSksXzB4MjE0NjJlPV8weDQ4YzM0ZltfMHgxYTUyNDAoMHg1NjgpXTtyZXR1cm4gXzB4NDhjMzRmW18weDFhNTI0MCgweDU2OCldPWZ1bmN0aW9uKF8weDRjZTNjMSxfMHg3MTUwYyl7Y29uc3QgXzB4NGViMGRlPV8weDFhNTI0MDtyZXR1cm5+XzB4NGNlM2MxW18weDRlYjBkZSgweDdhNyldKF8weDRlYjBkZSgweDExYykpJiZfMHg3MTUwYyYmKGFyZ3VtZW50c1sweDFdW18weDRlYjBkZSgweDczMCldPShfMHg3MTUwY1tfMHg0ZWIwZGUoMHg3MzApXXx8W10pW18weDRlYjBkZSgweDQ0OSldKF8weDE4MzM5MSkpLF8weDIxNDYyZVtfMHg0ZWIwZGUoMHg3YTYpXSh0aGlzLGFyZ3VtZW50cyk7fSxfMHg0OGMzNGY7fSk7fSwnaGFzQW5zaSc6ZnVuY3Rpb24oXzB4MzNiM2NlKXtjb25zdCBfMHgxNzU5Njk9XzB4MmVhMmYxO3JldHVybiBfMHgzM2IzY2UmJnR5cGVvZiBfMHgzM2IzY2U9PV8weDE3NTk2OSgweDFhNSkmJl8weDMzYjNjZVtfMHgxNzU5NjkoMHg0OGEpXShfMHg1YWM2NTMpO30sJ3JlbW92ZUFuc2knOmZ1bmN0aW9uKF8weDk3YTExYyl7Y29uc3QgXzB4NGMwMmRlPV8weDJlYTJmMTtyZXR1cm4hXzB4OTdhMTFjfHx0eXBlb2YgXzB4OTdhMTFjIT1fMHg0YzAyZGUoMHgxYTUpP18weDk3YTExYzpfMHg5N2ExMWNbXzB4NGMwMmRlKDB4NWM0KV0oXzB4NWFjNjUzLCcnKTt9LCdjb3B5VG9DbGlwYm9hcmQnOmZ1bmN0aW9uKF8weDQ1MzE0Mil7Y29uc3QgXzB4NDUzNjQwPV8weDJlYTJmMSxfMHgxODVmZjg9XzB4MTc1OGMwPT5fMHgxNzU4YzAmJmNvbnNvbGVbXzB4NDUzNjQwKDB4NjZmKV0oJ01heVx4MjBoYXZlXHgyMGZhaWxlZFx4MjB0b1x4MjBjb3B5XHgyMHRvXHgyMGNsaXBib2FyZC5ceDIwJysocHJvY2Vzc1sncGxhdGZvcm0nXT09PSdsaW51eCc/XzB4NDUzNjQwKDB4NzRiKTonJykrKF8weDE3NThjMCYmXzB4MTc1OGMwWydtZXNzYWdlJ10pKTt0cnl7XzB4M2ZkZTcyKCdjb3B5LXBhc3RlJylbXzB4NDUzNjQwKDB4Njg2KV0oXzB4NDUzMTQyLF8weDE4NWZmOCk7fWNhdGNoKF8weDVmNDQxMSl7XzB4MTg1ZmY4KF8weDVmNDQxMSk7fX0sJ3Rlc3RGaWxlU2VsZWN0aW9uJzpmdW5jdGlvbihfMHg1NzA2YWIsXzB4NTdhZDk0LF8weDEyYjBhYixfMHg2YWI4NDEpe2NvbnN0IF8weDU5NzkwYj1fMHgyZWEyZjE7aWYoX1snaXNTdHJpbmcnXShfMHg1N2FkOTQpKXtjb25zdCBfMHg1NDY2Mjg9XzB4NTdhZDk0O18weDU3YWQ5ND17J3Rlc3QnOl8weDU5ZDM4ZD0+ISF+XzB4NTlkMzhkW18weDU5NzkwYigweDdhNyldKF8weDU0NjYyOCl9O31pZihfW18weDU5NzkwYigweDVmMCldKF8weDEyYjBhYikpe2NvbnN0IF8weDVlZGJjND1fMHgxMmIwYWI7XzB4MTJiMGFiPXsndGVzdCc6XzB4YjY5MzQ2PT4hIX5fMHhiNjkzNDZbXzB4NTk3OTBiKDB4N2E3KV0oXzB4NWVkYmM0KX07fWxldCBfMHgxZjQwYTk9ITB4MSxfMHg1NGVhNDA9ITB4MSxfMHg0Y2JhMjk7Y29uc3QgXzB4YjEwODA1PXt9O2ZvcihfMHgyYWI2YWZbJ2xhc3RJbmRleCddPTB4MDsoXzB4NGNiYTI5PV8weDJhYjZhZltfMHg1OTc5MGIoMHgxOTQpXShfMHg1NzA2YWIpKSE9PW51bGw7KXtjb25zdCBfMHgxN2Q5Zjg9XzB4NGNiYTI5W18weDU5NzkwYigweDU1NildK18weDRjYmEyOVsweDBdW18weDU5NzkwYigweDE5NSldO2ZvcihsZXQgXzB4Mjk1MDMyPV8weDRjYmEyOVtfMHg1OTc5MGIoMHg1NTYpXTtfMHgyOTUwMzI8XzB4MTdkOWY4O18weDI5NTAzMisrKV8weGIxMDgwNVtfMHgyOTUwMzJdPTB4MTtfMHgxZjQwYTk9XzB4MWY0MGE5fHxfMHg1N2FkOTRbJ3Rlc3QnXShfMHg0Y2JhMjlbMHgwXSksXzB4NTRlYTQwPV8weDU0ZWE0MHx8XzB4MTJiMGFiW18weDU5NzkwYigweDVmZildKF8weDRjYmEyOVsweDBdKTt9aWYoIV8weDFmNDBhOSYmXzB4NmFiODQxKXtmb3IoXzB4MjkzMDY4W18weDU5NzkwYigweDI2ZCldPTB4MDsoXzB4NGNiYTI5PV8weDI5MzA2OFsnZXhlYyddKF8weDU3MDZhYikpIT09bnVsbDspaWYoIV8weGIxMDgwNVtfMHg0Y2JhMjlbXzB4NTk3OTBiKDB4NTU2KV1dKXtfMHgxZjQwYTk9ITB4MDticmVhazt9fXJldHVybnsnaW5jbHVkZWRUZXN0RmlsZSc6XzB4MWY0MGE5LCdleGNsdWRlZFRlc3RGaWxlJzpfMHg1NGVhNDB9O30sJ2NvZGVGcmFtZSc6ZnVuY3Rpb24oXzB4NWI1MDY1LF8weDUzODE3NyxfMHg1NGY1ZGEsXzB4NTRhMGMyKXtjb25zdCBfMHgyMzdlNWM9XzB4MmVhMmYxLF8weDNjZDVlZT10aGlzWyd0ZXh0TGluZXMnXShfMHg1YjUwNjUpLF8weDM1MzkyYz17J3N0YXJ0Jzp7J2NvbHVtbic6XzB4NTRmNWRhLCdsaW5lJzpfMHg1MzgxNzd9fTtmdW5jdGlvbiBfMHgyOGJmZmQoXzB4MWEwMjAwLF8weDFmZmUzNSxfMHg1MjIzMjYpe2NvbnN0IF8weDJlNWJjYj1fMHhhZTI2LF8weDQzY2MzMz1PYmplY3RbXzB4MmU1YmNiKDB4NDdlKV0oeydjb2x1bW4nOjB4MCwnbGluZSc6LTB4MX0sXzB4MWEwMjAwWydzdGFydCddKSxfMHgxMjZmMTA9T2JqZWN0Wydhc3NpZ24nXShPYmplY3RbJ2Fzc2lnbiddKHt9LF8weDQzY2MzMyksXzB4MWEwMjAwW18weDJlNWJjYigweDFmNSldKSx7bGluZXNBYm92ZTpfMHgxNWY4MmQ9MHgyLGxpbmVzQmVsb3c6XzB4NGJhZGNmPTB4M309XzB4NTIyMzI2fHx7fSxfMHgyNzMxNWI9XzB4NDNjYzMzW18weDJlNWJjYigweDJhNCldLF8weDNjOGJiMD1fMHg0M2NjMzNbXzB4MmU1YmNiKDB4NmU0KV0sXzB4NTBiN2EyPV8weDEyNmYxMFtfMHgyZTViY2IoMHgyYTQpXSxfMHgzMjczMmU9XzB4MTI2ZjEwW18weDJlNWJjYigweDZlNCldO2xldCBfMHg0ZGVjZGY9TWF0aFtfMHgyZTViY2IoMHgxZGIpXShfMHgyNzMxNWItKF8weDE1ZjgyZCsweDEpLDB4MCksXzB4M2QxYjU4PU1hdGhbXzB4MmU1YmNiKDB4NzFhKV0oXzB4MWZmZTM1WydsZW5ndGgnXSxfMHg1MGI3YTIrXzB4NGJhZGNmKTtfMHgyNzMxNWI9PT0tMHgxJiYoXzB4NGRlY2RmPTB4MCksXzB4NTBiN2EyPT09LTB4MSYmKF8weDNkMWI1OD1fMHgxZmZlMzVbXzB4MmU1YmNiKDB4MTk1KV0pO2NvbnN0IF8weDcxYTAzNj1fMHg1MGI3YTItXzB4MjczMTViLF8weDFlYzBmYj17fTtpZihfMHg3MWEwMzYpZm9yKGxldCBfMHgzNGI0YjM9MHgwO18weDM0YjRiMzw9XzB4NzFhMDM2O18weDM0YjRiMysrKXtjb25zdCBfMHg2ZTJmY2Q9XzB4MzRiNGIzK18weDI3MzE1YjtpZighXzB4M2M4YmIwKV8weDFlYzBmYltfMHg2ZTJmY2RdPSEweDA7ZWxzZXtpZihfMHgzNGI0YjM9PT0weDApe2NvbnN0IF8weDY4ZmEyMT1fMHgxZmZlMzVbXzB4NmUyZmNkLTB4MV1bXzB4MmU1YmNiKDB4MTk1KV07XzB4MWVjMGZiW18weDZlMmZjZF09W18weDNjOGJiMCxfMHg2OGZhMjEtXzB4M2M4YmIwXTt9ZWxzZXtpZihfMHgzNGI0YjM9PT1fMHg3MWEwMzYpXzB4MWVjMGZiW18weDZlMmZjZF09WzB4MCxfMHgzMjczMmVdO2Vsc2V7Y29uc3QgXzB4Mjk5ZTQ3PV8weDFmZmUzNVtfMHg2ZTJmY2QtXzB4MzRiNGIzXVsnbGVuZ3RoJ107XzB4MWVjMGZiW18weDZlMmZjZF09WzB4MCxfMHgyOTllNDddO319fX1lbHNlIF8weDNjOGJiMD09PV8weDMyNzMyZT9fMHgzYzhiYjA/XzB4MWVjMGZiW18weDI3MzE1Yl09W18weDNjOGJiMCwweDBdOl8weDFlYzBmYltfMHgyNzMxNWJdPSEweDA6XzB4MWVjMGZiW18weDI3MzE1Yl09W18weDNjOGJiMCxfMHgzMjczMmUtXzB4M2M4YmIwXTtyZXR1cm57J3N0YXJ0JzpfMHg0ZGVjZGYsJ2VuZCc6XzB4M2QxYjU4LCdtYXJrZXJMaW5lcyc6XzB4MWVjMGZifTt9Y29uc3Qge3N0YXJ0Ol8weDQ0YzhhNSxlbmQ6XzB4M2M4MzhlLG1hcmtlckxpbmVzOl8weDE5OTdlZn09XzB4MjhiZmZkKF8weDM1MzkyYyxfMHgzY2Q1ZWUpLF8weDMyZDYxZD1fMHgzNTM5MmNbXzB4MjM3ZTVjKDB4NTc4KV0mJnR5cGVvZiBfMHgzNTM5MmNbXzB4MjM3ZTVjKDB4NTc4KV1bJ2NvbHVtbiddPT1fMHgyMzdlNWMoMHg2OTkpLF8weDEyYjBjNj1TdHJpbmcoXzB4M2M4MzhlKVtfMHgyMzdlNWMoMHgxOTUpXTtsZXQgXzB4M2IyZTNkPV8weDNjZDVlZVtfMHgyMzdlNWMoMHg1MTQpXShfMHg0NGM4YTUsXzB4M2M4MzhlKVsnbWFwJ10oKF8weDQxYjJjZSxfMHg0MWFhODgpPT57Y29uc3QgXzB4NDc1MmU0PV8weDIzN2U1YyxfMHgxOTA1MjE9XzB4NDRjOGE1KzB4MStfMHg0MWFhODgsXzB4NTViMTMxPSdceDIwJ1tfMHg0NzUyZTQoMHg0NDkpXShfMHgxOTA1MjEpW18weDQ3NTJlNCgweDUxNCldKC1fMHgxMmIwYzYpLF8weDViNTE2NT0nXHgyMCdbJ2NvbmNhdCddKF8weDU1YjEzMSxfMHg0NzUyZTQoMHgyZjEpKSxfMHgyYjUxY2Q9XzB4MTk5N2VmW18weDE5MDUyMV0sXzB4MjI2NGEzPSFfMHgxOTk3ZWZbXzB4MTkwNTIxKzB4MV07aWYoXzB4MmI1MWNkKXtsZXQgXzB4MTRiMmRmPScnO2lmKEFycmF5W18weDQ3NTJlNCgweDcxNyldKF8weDJiNTFjZCkpe2NvbnN0IF8weDJhZDZkOD1fMHg0MWIyY2VbXzB4NDc1MmU0KDB4NTE0KV0oMHgwLE1hdGhbXzB4NDc1MmU0KDB4MWRiKV0oXzB4MmI1MWNkWzB4MF0tMHgxLDB4MCkpW18weDQ3NTJlNCgweDVjNCldKC9bXlx0XS9nLCdceDIwJyksXzB4NDE5M2M3PV8weDJiNTFjZFsweDFdfHwweDE7XzB4MTRiMmRmPVsnXHgwYVx4MjAnLF8weDViNTE2NVtfMHg0NzUyZTQoMHg1YzQpXSgvXGQvZywnXHgyMCcpLF8weDJhZDZkOCwnXidbXzB4NDc1MmU0KDB4NDIxKV0oXzB4NDE5M2M3KV1bXzB4NDc1MmU0KDB4NDJlKV0oJycpLF8weDIyNjRhMyYmXzB4NTRhMGMyJiYoXzB4MTRiMmRmKz0nXHgyMCcrXzB4NTRhMGMyKTt9cmV0dXJuWyc+JyxfMHg1YjUxNjUsXzB4NDFiMmNlLF8weDE0YjJkZl1bXzB4NDc1MmU0KDB4NDJlKV0oJycpO31lbHNlIHJldHVybidceDIwJ1tfMHg0NzUyZTQoMHg0NDkpXShfMHg1YjUxNjUpW18weDQ3NTJlNCgweDQ0OSldKF8weDQxYjJjZSk7fSlbJ2pvaW4nXSgnXHgwYScpO3JldHVybiBfMHgzMmQ2MWR8fChfMHgzYjJlM2Q9JydbXzB4MjM3ZTVjKDB4NDQ5KV0oJ1x4MjAnW18weDIzN2U1YygweDQyMSldKF8weDEyYjBjNisweDEpKVtfMHgyMzdlNWMoMHg0NDkpXShfMHg1NGEwYzIsJ1x4MGEnKVsnY29uY2F0J10oXzB4M2IyZTNkKSksXzB4M2IyZTNkO30sJ2xvYWRKZXN0Jzphc3luYyBmdW5jdGlvbihfMHg0ZmU1ZjksXzB4MWNjZDVlLF8weDQ2YzcxOCl7Y29uc3QgXzB4NDEzMzQ4PV8weDJlYTJmMTtsZXQgXzB4MTI5YzRlLF8weDNmZDczYj0hMHgxO3RyeXtjb25zdCBfMHgyOGI3MmE9XzB4M2ZkZTcyKF8weDJlOTMxZFtfMHg0MTMzNDgoMHgyODApXShfMHg0ZmU1ZjksXzB4NDEzMzQ4KDB4NWJkKSkpLF8weGZjMTZkYT1fMHgyOGI3MmEmJl8weDI4YjcyYVtfMHg0MTMzNDgoMHhmZildLF8weDRjMzAzMT1fMHgyOGI3MmEmJl8weDI4YjcyYVtfMHg0MTMzNDgoMHhlNCldfHx7fSxfMHgyNWM1NjI9XzB4MjhiNzJhJiZfMHgyOGI3MmFbXzB4NDEzMzQ4KDB4M2YyKV18fHt9O18weDNmZDczYj0hIV8weDRjMzAzMVtfMHg0MTMzNDgoMHg1ZjMpXXx8ISFfMHgyNWM1NjJbXzB4NDEzMzQ4KDB4Nzg3KV18fCEhXzB4MjVjNTYyW18weDQxMzM0OCgweDVmMyldLF8weGZjMTZkYSYmXzB4ZmMxNmRhW18weDQxMzM0OCgweDVmZildJiZfMHhmYzE2ZGFbXzB4NDEzMzQ4KDB4NWZmKV1bJ2luZGV4T2YnXShfMHg0MTMzNDgoMHg0MjcpKSE9PS0weDE/KHRoaXNbXzB4NDEzMzQ4KDB4M2ZjKV0oXzB4NGZlNWY5LF8weDQxMzM0OCgweDMzZSkpLHRoaXNbXzB4NDEzMzQ4KDB4M2ZjKV0oXzB4NGZlNWY5LF8weDQxMzM0OCgweDZhYSkpLF8weDEyOWM0ZT10aGlzWyd0cnlSZXF1aXJlTW9kdWxlV2l0aFBhdGhGcm9tJ10oXzB4NGZlNWY5LF8weDQxMzM0OCgweDY5ZikpKTooXzB4ZmMxNmRhJiZfMHhmYzE2ZGFbXzB4NDEzMzQ4KDB4NWZmKV0mJl8weGZjMTZkYVtfMHg0MTMzNDgoMHg1ZmYpXVtfMHg0MTMzNDgoMHg3YTcpXShfMHg0MTMzNDgoMHg3ODcpKSE9PS0weDF8fCFfMHg0YzMwMzF8fCFfMHg0YzMwMzFbXzB4NDEzMzQ4KDB4NWYzKV0pJiYhKF8weGZjMTZkYSYmXzB4ZmMxNmRhWyd0ZXN0J10mJl8weGZjMTZkYVtfMHg0MTMzNDgoMHg1ZmYpXVtfMHg0MTMzNDgoMHg3YTcpXSgnamVzdCcpIT09LTB4MSYmXzB4ZmMxNmRhWyd0ZXN0J11bXzB4NDEzMzQ4KDB4N2E3KV0oXzB4NDEzMzQ4KDB4Nzg3KSk9PT0tMHgxKSYmKF8weDEyOWM0ZT10aGlzW18weDQxMzM0OCgweDNmYyldKF8weDRmZTVmOSxfMHg0MTMzNDgoMHg2OWYpKSx0aGlzW18weDQxMzM0OCgweDNmYyldKF8weDRmZTVmOSxfMHg0MTMzNDgoMHg2YWEpKSk7fWNhdGNoKF8weDM2NmYxNCl7XzB4MTI5YzRlPXZvaWQgMHgwO31sZXQgXzB4MjE4NjM4LF8weDJmY2JmZDtfMHgxY2NkNWU9XzB4MWNjZDVlJiYoXzB4MmU5MzFkWydpc0Fic29sdXRlJ10oXzB4MWNjZDVlKT9fMHgxY2NkNWU6XzB4MmU5MzFkW18weDQxMzM0OCgweDI4MCldKF8weDJlOTMxZFsnam9pbiddKF8weDRmZTVmOSxfMHgxY2NkNWUpKSksXzB4MWNjZDVlP18weDIxODYzOD10aGlzW18weDQxMzM0OCgweDNmYyldKF8weDFjY2Q1ZSxfMHg0MTMzNDgoMHg1ZjMpKTpfMHgxMjljNGU/XzB4MjE4NjM4PXRoaXNbXzB4NDEzMzQ4KDB4M2ZjKV0oXzB4MTI5YzRlW18weDQxMzM0OCgweDQ4ZildLCdqZXN0Jyk6XzB4MjE4NjM4PXRoaXNbXzB4NDEzMzQ4KDB4M2ZjKV0oXzB4NGZlNWY5LF8weDQxMzM0OCgweDVmMykpO2NvbnN0IF8weDhiMmUzZD1fMHgyMTg2Mzg/XzB4MjE4NjM4WydwYXRoJ106XzB4NGZlNWY5O2xldCBfMHgzMmMwZmQ7Y29uc3QgXzB4NzkzOWY4PXRoaXNbJ3RyeVJlcXVpcmVNb2R1bGVXaXRoUGF0aEZyb20nXShfMHg4YjJlM2QsXzB4NDEzMzQ4KDB4NTY3KSk7aWYoXzB4NzkzOWY4KXtjb25zdCBfMHg1NWQ3ZTk9XzB4NzkzOWY4Wydtb2R1bGUnXVtfMHg0MTMzNDgoMHg3MzEpXT8oKT0+XzB4NzkzOWY4W18weDQxMzM0OCgweDY3YyldW18weDQxMzM0OCgweDczMSldKCk6XzB4MjE4NjM4JiZfMHgyMTg2MzhbXzB4NDEzMzQ4KDB4NjdjKV1bXzB4NDEzMzQ4KDB4NzMxKV0/KCk9Pl8weDIxODYzOFtfMHg0MTMzNDgoMHg2N2MpXVtfMHg0MTMzNDgoMHg3MzEpXSgpOnZvaWQgMHgwO+KAi2lmKF8weDU1ZDdlOSl7bGV0IF8weDI4ZjEzMj1fMHg0MTMzNDgoMHhmNCksXzB4M2Q0ZTc4PTB4MDt0cnl7XzB4MjhmMTMyPV8weDU1ZDdlOSgpLF8weDNkNGU3OD1wYXJzZUludChfMHgyOGYxMzJbXzB4NDEzMzQ4KDB4YTkpXSgnLicpWzB4MF0pO31jYXRjaChfMHgyNDc4ZDYpe3Rocm93IG5ldyBFcnJvcihfMHg0MTMzNDgoMHhkZilbJ2NvbmNhdCddKF8weDI0NzhkNlsnbWVzc2FnZSddLCcuJykpO31pZihfMHgzZDRlNzg8MHgxOCl0aHJvdyBuZXcgRXJyb3IoXzB4NDEzMzQ4KDB4NzI0KVtfMHg0MTMzNDgoMHg0NDkpXShfMHgyOGYxMzIsXzB4NDEzMzQ4KDB4MjJjKSlbXzB4NDEzMzQ4KDB4NDQ5KV0oXzB4NzkzOWY4W18weDQxMzM0OCgweDQ4ZildLCdceDI3LicpKTt9ZWxzZSB0aHJvdyBuZXcgRXJyb3IoXzB4NDEzMzQ4KDB4NGM1KSk7aWYoXzB4MmZjYmZkPXRoaXNbXzB4NDEzMzQ4KDB4M2ZjKV0oXzB4NzkzOWY4W18weDQxMzM0OCgweDQ4ZildLCdqZXN0LWNvbmZpZycpLF8weDJmY2JmZCl0cnl7XzB4NDZjNzE4PV8weDQ2YzcxOCYmKF8weDJlOTMxZFtfMHg0MTMzNDgoMHgyYzEpXShfMHg0NmM3MTgpP18weDQ2YzcxODpfMHgyZTkzMWRbXzB4NDEzMzQ4KDB4MjgwKV0oXzB4MmU5MzFkW18weDQxMzM0OCgweDQyZSldKF8weDRmZTVmOSxfMHg0NmM3MTgpKSksXzB4MzJjMGZkPWF3YWl0IF8weDJmY2JmZFtfMHg0MTMzNDgoMHg2N2MpXVtfMHg0MTMzNDgoMHgzN2UpXShfMHg0NmM3MTg/eydjb25maWcnOl8weDQ2YzcxOH06XzB4MTI5YzRlP3snY29uZmlnJzpKU09OW18weDQxMzM0OCgweDY0ZSldKF8weDEyOWM0ZVtfMHg0MTMzNDgoMHg2N2MpXShfMHg0YTNkZDU9Pl8weDJlOTMxZFtfMHg0MTMzNDgoMHgyODApXShfMHgxMjljNGVbXzB4NDEzMzQ4KDB4NDhmKV0sXzB4NDEzMzQ4KDB4MjQ4KSxfMHg0YTNkZDUpKSl9Ont9LFtfMHg0ZmU1ZjldKSxfMHgzMmMwZmRbXzB4NDEzMzQ4KDB4NDExKV09T2JqZWN0Wydhc3NpZ24nXSh7fSxfMHgzMmMwZmRbXzB4NDEzMzQ4KDB4NDExKV0pLF8weDMyYzBmZFtfMHg0MTMzNDgoMHg3OTkpXT0oXzB4MzJjMGZkWydjb25maWdzJ118fFtdKVtfMHg0MTMzNDgoMHg3MjUpXShfMHg1YTQ2NT0+XzB4NWE0NjVbXzB4NDEzMzQ4KDB4MmU2KV09PT1fMHg0MTMzNDgoMHgyNzUpfHx+dGhpc1snbm9ybWFsaXplUGF0aCddKF8weDVhNDY1WydydW5uZXInXXx8JycpW18weDQxMzM0OCgweDdhNyldKCdub2RlX21vZHVsZXMvamVzdC1ydW5uZXIvJyl8fF8weDVhNDY1W18weDQxMzM0OCgweDJlNildPT09J2plc3QtcnVubmVyLWdyb3Vwcyd8fH50aGlzW18weDQxMzM0OCgweDM2NSldKF8weDVhNDY1WydydW5uZXInXXx8JycpWydpbmRleE9mJ10oXzB4NDEzMzQ4KDB4MzEyKSkpW18weDQxMzM0OCgweDc1YyldKF8weDMyOGVjYz0+T2JqZWN0W18weDQxMzM0OCgweDQ3ZSldKHt9LF8weDMyOGVjYykpO31jYXRjaChfMHhkNmJlODgpe3Rocm93IG5ldyBFcnJvcignRmFpbGVkXHgyMHRvXHgyMHJlYWRceDIwSmVzdFx4MjBjb25maWd1cmF0aW9uXHgyMGZyb21ceDIwXHgyNydbXzB4NDEzMzQ4KDB4NDQ5KV0oXzB4NGZlNWY5LF8weDQxMzM0OCgweDQzZSkpW18weDQxMzM0OCgweDQ0OSldKF8weGQ2YmU4OFtfMHg0MTMzNDgoMHg0MzcpXT9fMHhkNmJlODhbXzB4NDEzMzQ4KDB4NDM3KV06J3Vua25vd24uJykpO319ZWxzZSB0aHJvdyBuZXcgRXJyb3IoXzB4NDEzMzQ4KDB4YjMpW18weDQxMzM0OCgweDQ0OSldKF8weDRmZTVmOSwnXHgyNy4nKSk7aWYoIV8weDMyYzBmZCl0aHJvdyBuZXcgRXJyb3IoXzB4NDEzMzQ4KDB4NzE2KVtfMHg0MTMzNDgoMHg0NDkpXShfMHg0ZmU1ZjksJ1x4MjcuJykpO2lmKCFfMHgzMmMwZmRbXzB4NDEzMzQ4KDB4Nzk5KV1bXzB4NDEzMzQ4KDB4MTk1KV0pdGhyb3cgbmV3IEVycm9yKF8weDQxMzM0OCgweDE3ZClbXzB4NDEzMzQ4KDB4NDQ5KV0oXzB4NGZlNWY5LCdceDI3LicpKTtyZXR1cm57J2plc3RDb25maWcnOl8weDMyYzBmZCwnamVzdENMSSc6XzB4NzkzOWY4LCdqZXN0Q29uZmlnTG9hZGVyJzpfMHgyZmNiZmQsJ2lzRGlyZWN0RGVwZW5kZW5jeSc6XzB4M2ZkNzNifTt9LCdzZXJpYWxpemVSZWdFeHAnOmZ1bmN0aW9uKF8weDQyZjUwNCl7Y29uc3QgXzB4MjhlODBjPV8weDJlYTJmMTtpZihfWydpc1JlZ0V4cCddKF8weDQyZjUwNCkpcmV0dXJuIF8weDI4ZTgwYygweDI5OSkrXzB4NDJmNTA0Wyd0b1N0cmluZyddKCk7aWYoX1snaXNTdHJpbmcnXShfMHg0MmY1MDQpKXJldHVybiBfMHg0MmY1MDQ7dGhyb3cgbmV3IEVycm9yKF8weDI4ZTgwYygweDc5MykpO30sJ2Rlc2VyaWFsaXplUmVnRXhwJzpmdW5jdGlvbihfMHhlZGEwOTEpe2NvbnN0IF8weDRmOGNjOD1fMHgyZWEyZjE7aWYoXzB4ZWRhMDkxW18weDRmOGNjOCgweDdhNyldKF8weDRmOGNjOCgweDI5OSkpPT09MHgwKXt2YXIgXzB4NWM1MDI5PV8weGVkYTA5MVtfMHg0ZjhjYzgoMHhhOSldKF8weDRmOGNjOCgweDI5OSkpWzB4MV1bXzB4NGY4Y2M4KDB4NDhhKV0oL1wvKC4qKVwvKC4qKT8vKTtyZXR1cm4gbmV3IFJlZ0V4cChfMHg1YzUwMjlbMHgxXSxfMHg1YzUwMjlbMHgyXXx8JycpO31lbHNlIHJldHVybiBfMHhlZGEwOTE7fSwnaXNKYXZhU2NyaXB0JzpfMHg1MjBhYWIsJ2lzVHlwZVNjcmlwdCc6XzB4MWIwNjgzLCdpc1Z1ZSc6XzB4M2M0M2IyLCdpc1N2ZWx0ZSc6XzB4NTE3YTdiLCdpc0NvZmZlZVNjcmlwdCc6XzB4MTFiNGZiLCdpc0NvdmVyYWJsZSc6KF8weDM3ODVlNCxfMHgxZjE4MjIsXzB4MjI0ZTUwKT0+XzB4NTIwYWFiKF8weDM3ODVlNCxfMHgyMjRlNTApfHxfMHgxYjA2ODMoXzB4Mzc4NWU0KXx8XzB4M2M0M2IyKF8weDM3ODVlNCl8fF8weDExYjRmYihfMHgzNzg1ZTQsXzB4MWYxODIyKXx8XzB4NTE3YTdiKF8weDM3ODVlNCksJ3F1aWNrSGFzaCc6ZnVuY3Rpb24oXzB4MzBlOWZjKXtjb25zdCBfMHg1MzdjZjU9XzB4MmVhMmYxO3ZhciBfMHhhODNmNzA9MHgwLF8weDJhYjk3YSxfMHg1OGM2NDcsXzB4MjljYjJiO2lmKF8weDMwZTlmY1tfMHg1MzdjZjUoMHgxOTUpXT4weDApe2ZvcihfMHgyYWI5N2E9MHgwLF8weDI5Y2IyYj1fMHgzMGU5ZmNbXzB4NTM3Y2Y1KDB4MTk1KV07XzB4MmFiOTdhPF8weDI5Y2IyYjtfMHgyYWI5N2ErKylfMHg1OGM2NDc9XzB4MzBlOWZjW18weDUzN2NmNSgweDM4OSldKF8weDJhYjk3YSksXzB4YTgzZjcwPShfMHhhODNmNzA8PDB4NSktXzB4YTgzZjcwK18weDU4YzY0NyxfMHhhODNmNzB8PTB4MDt9cmV0dXJuIF8weGE4M2Y3MDt9LCdpc0RvY2tlcic6XzB4NDE5M2ZlLCdpc1dzbCc6KCk9Pntjb25zdCBfMHgyZGZiZGU9XzB4MmVhMmYxLF8weDIyODNiPV8weDNmZGU3Mignb3MnKTtpZihwcm9jZXNzW18weDJkZmJkZSgweDcwZCldIT09J2xpbnV4JylyZXR1cm4hMHgxO2lmKF8weDIyODNiW18weDJkZmJkZSgweDYxNSldKClbXzB4MmRmYmRlKDB4MTRjKV0oKVtfMHgyZGZiZGUoMHgyYWEpXShfMHgyZGZiZGUoMHgyYmQpKSlyZXR1cm4hXzB4NDE5M2ZlKCk7dHJ5e3JldHVybiBfMHgzNDQ5NmVbXzB4MmRmYmRlKDB4MzE5KV0oXzB4MmRmYmRlKDB4MzY4KSxfMHgyZGZiZGUoMHgxZGEpKVtfMHgyZGZiZGUoMHgxNGMpXSgpW18weDJkZmJkZSgweDJhYSldKF8weDJkZmJkZSgweDJiZCkpPyFfMHg0MTkzZmUoKTohMHgxO31jYXRjaChfMHg2M2NhNTMpe3JldHVybiEweDE7fX0sJ3dzbEhvc3RJcEFkZHJlc3MnOigpPT57Y29uc3QgXzB4NGEyZDliPV8weDJlYTJmMSxfMHhhYTg0MTc94oCLXzB4MzQ0OTZlW18weDRhMmQ5YigweDMxOSldKF8weDRhMmQ5YigweDRmYykpW18weDRhMmQ5YigweDNkNildKClbXzB4NGEyZDliKDB4YTkpXSgnXHgwYScpW18weDRhMmQ5YigweDc1YyldKF8weGM5MjQyMD0+XzB4YzkyNDIwWydzcGxpdCddKCdceDIwJykpW18weDRhMmQ5YigweDcyNSldKF8weDU2Y2Y3Yz0+XzB4NTZjZjdjWzB4MF09PT0nbmFtZXNlcnZlcicpW18weDRhMmQ5YigweDc1YyldKF8weDE3ZjliYT0+XzB4MTdmOWJhW18weDRhMmQ5YigweDE5NSldPjB4MSYmXzB4MTdmOWJhWzB4MV0pO3JldHVybiBfMHhhYTg0MTdbJ2xlbmd0aCddPjB4MT9fMHhhYTg0MTdbMHgwXTpfMHg0YTJkOWIoMHg0NTIpO30sJ2xhenlMb2FkRGVwZW5kZW5jeVJlcGxhY2VtZW50JzooXzB4MmExZjJkLF8weDQwYzJlZix7ZG91YmxlUXVvdGVzOl8weDQyMWU3MSxkZXBlbmRlbmN5T3ZlcnJpZGU6XzB4MjRiODcyLHJlcGxhY2VCb3RoRGVwZW5kZW5jeUFuZERlcGVuZGVuY3lPdmVycmlkZTpfMHgzODY3MWUsdmFyVHlwZTpfMHgxMTRmOTB9PXt9KT0+e2NvbnN0IF8weDRmMzQyMD1fMHgyZWEyZjE7XzB4MTE0ZjkwPV8weDExNGY5MHx8XzB4NGYzNDIwKDB4NTg1KTtjb25zdCBfMHg0NDExNGI9XzB4NDIxZTcxPydyZXF1aXJlKFx4MjInW18weDRmMzQyMCgweDQ0OSldKF8weDQwYzJlZiwnXHgyMiknKToncmVxdWlyZShceDI3J1tfMHg0ZjM0MjAoMHg0NDkpXShfMHg0MGMyZWYsJ1x4MjcpJyksXzB4MmM0ODcwPV8weDI0Yjg3Mnx8XzB4NDQxMTRiLF8weDU1ZDEyMz1beydmcm9tJzonJ1snY29uY2F0J10oXzB4MmExZjJkKSwndG8nOicnWydjb25jYXQnXShfMHgyYTFmMmQsJygpJyksJ29wdGlvbmFsJzohMHgwfSx7J2Zyb20nOicnWydjb25jYXQnXShfMHgxMTRmOTAsJ1x4MjAnKVsnY29uY2F0J10oXzB4MmExZjJkLF8weDRmMzQyMCgweDYyNSkpW18weDRmMzQyMCgweDQ0OSldKF8weDJjNDg3MCwnOycpLCd0byc6J3Zhclx4MjAnW18weDRmMzQyMCgweDQ0OSldKF8weDJhMWYyZCxfMHg0ZjM0MjAoMHgyY2UpKVtfMHg0ZjM0MjAoMHg0NDkpXShfMHgyYzQ4NzAsJztceDIwJylbXzB4NGYzNDIwKDB4NDQ5KV0oXzB4MmExZjJkLF8weDRmMzQyMCgweDY5YykpLCdvcHRpb25hbCc6ITB4MH1dO3JldHVybiBfMHgzODY3MWUmJl8weDU1ZDEyM1tfMHg0ZjM0MjAoMHg0MmQpXSh7J2Zyb20nOicnW18weDRmMzQyMCgweDQ0OSldKF8weDExNGY5MCwnXHgyMCcpWydjb25jYXQnXShfMHgyYTFmMmQsXzB4NGYzNDIwKDB4NjI1KSlbXzB4NGYzNDIwKDB4NDQ5KV0oXzB4NDQxMTRiLCc7JyksJ3RvJzpfMHg0ZjM0MjAoMHgzZmQpW18weDRmMzQyMCgweDQ0OSldKF8weDJhMWYyZCxfMHg0ZjM0MjAoMHgyY2UpKVtfMHg0ZjM0MjAoMHg0NDkpXShfMHg0NDExNGIsJztceDIwJylbXzB4NGYzNDIwKDB4NDQ5KV0oXzB4MmExZjJkLF8weDRmMzQyMCgweDY5YykpLCdvcHRpb25hbCc6ITB4MH0pLF8weDU1ZDEyMzt9LCdmaW5kRmlyc3RGaWxlTWF0Y2hpbmdDb250ZW50SW5EaXJlY3RvcnknKF8weDk2NTFhYixfMHgyYTcwYjApe2lmKCFfMHgzNDQ5NmVbJ2V4aXN0c1N5bmMnXShfMHg5NjUxYWIpKXJldHVybicnO2Z1bmN0aW9uIF8weDFhNzYyYShfMHg0MDkyMzgpe2NvbnN0IF8weDQ5MjRiMD1fMHhhZTI2LF8weDExYjdmOD1fMHgzNDQ5NmVbXzB4NDkyNGIwKDB4NDFjKV0oXzB4NDA5MjM4KTtmb3IoY29uc3QgXzB4MWY1YmRiIG9mIF8weDExYjdmOCl7Y29uc3QgXzB4M2M4Nzg3PV8weDJlOTMxZFsncmVzb2x2ZSddKF8weDJlOTMxZFtfMHg0OTI0YjAoMHg0MmUpXShfMHg0MDkyMzgsXzB4MWY1YmRiKSk7aWYoXzB4MzQ0OTZlW18weDQ5MjRiMCgweDJiNSldKF8weDNjODc4NylbXzB4NDkyNGIwKDB4Njk0KV0oKSl7Y29uc3QgXzB4MTNhNWQxPV8weDFhNzYyYShfMHgzYzg3ODcpO2lmKF8weDEzYTVkMSlyZXR1cm4gXzB4MTNhNWQxO31lbHNle2lmKChfMHgxZjViZGJbXzB4NDkyNGIwKDB4ZmIpXShfMHg0OTI0YjAoMHgyOTEpKXx8XzB4MWY1YmRiWydlbmRzV2l0aCddKCcubWpzJykpJiZfMHgzNDQ5NmVbXzB4NDkyNGIwKDB4MzE5KV0oXzB4M2M4Nzg3LCd1dGY4JylbXzB4NDkyNGIwKDB4N2E3KV0oXzB4MmE3MGIwKSE9PS0weDEpcmV0dXJuIF8weDNjODc4Nzt9fX1yZXR1cm4gXzB4NDMzYTdiKF8weDFhNzYyYShfMHg5NjUxYWIpKTt9fTt9LHsnLi9leHRlbnNpb24vc2hhcmVkL3V0aWxzJzoweDFhLCdjb3B5LXBhc3RlJzp2b2lkIDB4MCwnZnMnOnZvaWQgMHgwLCdtaWNyb21hdGNoJzp2b2lkIDB4MCwnbW9kdWxlJzp2b2lkIDB4MCwnb3MnOnZvaWQgMHgwLCdwYXRoJzp2b2lkIDB4MCwnc291cmNlLW1hcCc6dm9pZCAweDAsJ3VybCc6dm9pZCAweDB9XSwweDIyOltmdW5jdGlvbihfMHgzMmEyNjQsXzB4MzkxNzdmLF8weDM1Mzc0Mil7Y29uc3QgXzB4MmFmY2E1PV8weGFlMjY7XzB4MzJhMjY0KF8weDJhZmNhNSgweDVhNikpO2NvbnN0IF8weDRhMGViND1fMHgzMmEyNjQoXzB4MmFmY2E1KDB4MjI4KSk7XzB4MzkxNzdmW18weDJhZmNhNSgweDM2NildPWZ1bmN0aW9uKF8weDg3Yjg2NyxfMHg0NWM5YmQsXzB4MzcyYWE3LF8weDViMzc2MixfMHgxODEwYjcsXzB4MjJjZDkxLF8weDU1MjA2MSl7Y29uc3QgXzB4MzU0YmM4PV8weDJhZmNhNTtpZighXzB4ODdiODY3fHwhXzB4NDVjOWJkJiYhXzB4MzcyYWE3JiYhXzB4NWIzNzYyJiYhXzB4MTgxMGI3JiYhXzB4MjJjZDkxJiYhXzB4NTUyMDYxKXJldHVybjtpZihfW18weDM1NGJjOCgweDVmMCldKF8weDE4MTBiNykpe2NvbnN0IF8weDVlMWQ0ZT1fMHgxODEwYjc7XzB4MTgxMGI3PXsndGVzdCc6XzB4MTg1MDYwPT4hIX5fMHgxODXigIswNjBbJ2luZGV4T2YnXShfMHg1ZTFkNGUpfTt9aWYoX1tfMHgzNTRiYzgoMHg1ZjApXShfMHgyMmNkOTEpKXtjb25zdCBfMHg0OWUzOTU9XzB4MjJjZDkxO18weDIyY2Q5MT17J3Rlc3QnOl8weDI0ZWI2NT0+ISF+XzB4MjRlYjY1W18weDM1NGJjOCgweDdhNyldKF8weDQ5ZTM5NSl9O31sZXQgXzB4MWUzZWMyPSFfMHgxODEwYjcmJiFfMHgyMmNkOTEmJiFfMHg1NTIwNjE/dm9pZCAweDA6e30sXzB4MmIwMWUwLF8weDQ1NWI4YixfMHhjNWFlNjc7Y29uc3QgXzB4NDcxNDU2PW5ldyBSZWdFeHAoL1wvXCpbXHNcU10qP1wqXC98XC9cLy4qJC9nbSk7bGV0IF8weDNhY2U3ZD1bXSxfMHgzZDlkZDYsXzB4NGViYWU5PTB4MDtjb25zdCBfMHgyNTZlMTM9W107Zm9yKDsoXzB4M2Q5ZGQ2PV8weDQ3MTQ1NltfMHgzNTRiYzgoMHgxOTQpXShfMHg4N2I4NjcpKSE9PW51bGw7KXtjb25zdCBfMHg1ZjE5YTc9XzB4M2Q5ZGQ2WzB4MF07aWYoXzB4NWIzNzYyJiZfMHg1YjM3NjJbJ3Rlc3QnXShfMHg1ZjE5YTcpJiYoXzB4YzVhZTY3PSEweDAsXzB4M2FjZTdkPVtdLCFfMHgxODEwYjcmJiFfMHgyMmNkOTEpKWJyZWFrO2lmKF8weDFlM2VjMiYmKF8weDE4MTBiNyYmIV8weDFlM2VjMltfMHgzNTRiYzgoMHg3NmQpXSYmXzB4MTgxMGI3W18weDM1NGJjOCgweDVmZildKF8weDNkOWRkNlsweDBdKSYmKF8weDFlM2VjMltfMHgzNTRiYzgoMHg3NmQpXT0hMHgwKSxfMHgyMmNkOTEmJiFfMHgxZTNlYzJbXzB4MzU0YmM4KDB4ZjEpXSYmXzB4MjJjZDkxW18weDM1NGJjOCgweDVmZildKF8weDNkOWRkNlsweDBdKSYmKF8weDFlM2VjMltfMHgzNTRiYzgoMHhmMSldPSEweDApLF8weDU1MjA2MSkpe2NvbnN0IF8weDI0M2Y0OD1fMHgzZDlkZDZbXzB4MzU0YmM4KDB4NTU2KV0sXzB4NTUyMTJlPV8weDQ3MTQ1NlsnbGFzdEluZGV4J107XzB4MjU2ZTEzW18weDM1NGJjOCgweDQyZCldKHsnc3RhcnQnOl8weDI0M2Y0OCwnZW5kJzpfMHg1NTIxMmV9KTt9IV8weGM1YWU2NyYmXzB4MzcyYWE3JiZfMHgzNzJhYTdbXzB4MzU0YmM4KDB4NWZmKV0oXzB4NWYxOWE3KSYmKF8weDNkOWRkNltfMHgzNTRiYzgoMHg1NTYpXT5fMHg0ZWJhZTkmJihfMHg0ZWJhZTk9XzB4NDcxNDU2WydsYXN0SW5kZXgnXSksXzB4M2FjZTdkWydwdXNoJ10oeydzdGFydCc6XzB4M2Q5ZGQ2W18weDM1NGJjOCgweDU1NildLCdlbmQnOl8weDQ3MTQ1NltfMHgzNTRiYzgoMHgyNmQpXSwndHlwZSc6XzB4MzU0YmM4KDB4MzgyKX0pKSwhXzB4YzVhZTY3JiZfMHg0NWM5YmQmJl8weDVmMTlhN1tfMHgzNTRiYzgoMHgxOTUpXT4weDImJihfMHg0NWM5YmRbXzB4MzU0YmM4KDB4MTk1KV09PT0weDEmJl8weDVmMTlhN1sweDJdPT09XzB4NDVjOWJkfHxfMHg1ZjE5YTdbXzB4MzU0YmM4KDB4N2E3KV0oXzB4NDVjOWJkKT09PTB4MikmJihfMHgzZDlkZDZbXzB4MzU0YmM4KDB4NTU2KV0+XzB4NGViYWU5JiYoXzB4NGViYWU5PV8weDNkOWRkNltfMHgzNTRiYzgoMHg1NTYpXSksXzB4M2FjZTdkW18weDM1NGJjOCgweDQyZCldKHsnc3RhcnQnOl8weDNkOWRkNltfMHgzNTRiYzgoMHg1NTYpXSwnZW5kJzpfMHg0NzE0NTZbXzB4MzU0YmM4KDB4MjZkKV0sJ2NvbnRlbnQnOl8weDVmMTlhNywndHlwZSc6J2xpdmUnfSkpO31pZihfMHgxZTNlYzImJiFfMHgxZTNlYzJbXzB4MzU0YmM4KDB4NzZkKV0mJl8weDU1MjA2MSl7Y29uc3QgXzB4MTJkOWY0PW5ldyBSZWdFeHAoXzB4NGEwZWI0W18weDM1NGJjOCgweDQzNCldW18weDM1NGJjOCgweDEzYildLF8weDRhMGViNFtfMHgzNTRiYzgoMHg0MzQpXVsnZmxhZ3MnXSk7bGV0IF8weDQ3MTllNDtmb3IoOyhfMHg0NzE5ZTQ9XzB4MTJkOWY0W18weDM1NGJjOCgweDE5NCldKF8weDg3Yjg2NykpIT09bnVsbDspe2xldCBfMHg0YzI2NWE9ITB4MTtmb3IoY29uc3QgXzB4YjAzNTA2IG9mIF8weDI1NmUxMylpZihfMHg0NzE5ZTRbXzB4MzU0YmM4KDB4NTU2KV0+PV8weGIwMzUwNltfMHgzNTRiYzgoMHg1NzgpXSYmXzB4MTJkOWY0W18weDM1NGJjOCgweDI2ZCldPD1fMHhiMDM1MDZbXzB4MzU0YmM4KDB4MWY1KV0pe18weDRjMjY1YT0hMHgwO2JyZWFrO31pZighXzB4NGMyNjVhKXtfMHgxZTNlYzJbJ2luY2x1ZGVkJ109ITB4MDticmVhazt9fX1sZXQgXzB4NDA0NTQ3PSEweDE7aWYoXzB4M2FjZTdkW18weDM1NGJjOCgweDE5NSldKXtjb25zdCBfMHg0ZWYwODg9XzB4NGEwZWI0Wyd0ZXh0TGluZXMnXShfMHg4N2I4NjcsXzB4NGViYWU5LCdceDBhJyk7bGV0IF8weDQwYjY2YT0weDAsXzB4MzhhNjM1PTB4MDtmb3IoY29uc3QgXzB4Mzg0MTM3IG9mIF8weDRlZjA4OCl7XzB4MzhhNjM1Kys7Zm9yKGNvbnN0IHtzdGFydDpfMHgyNjBlNTIsZW5kOl8weDU0MDFkMSxjb250ZW50Ol8weDI3YmNiZCx0eXBlOl8weGFjZGU2NH1vZiBfMHgzYWNlN2Qpe2lmKF8weGFjZGU2ND09PV8weDM1NGJjOCgweDc1ZSkmJl8weDI2MGU1Mj49XzB4NDBiNjZhJiZfMHgyNjBlNTI8PV8weDQwYjY2YStfMHgzODQxMzdbJ2xlbmd0aCddKXtsZXQgXzB4MTc3MDBiPV8weDI3YmNiZFsweDFdPT09JyonP18weDI3YmNiZFtfMHgzNTRiYzgoMHg1ZGIpXSgweDIrXzB4NDVjOWJkW18weDM1NGJjOCgweDE5NSldLF8weDI3YmNiZFtfMHgzNTRiYzgoMHgxOTUpXS0weDIpOl8weDI3YmNiZFtfMHgzNTRiYzgoMHg1ZGIpXSgweDIrXzB4NDVjOWJkW18weDM1NGJjOCgweDE5NSldKTsoIV8weDE3NzAwYnx8XzB4MTc3MDBiWyd0cmltJ10oKVtfMHgzNTRiYzgoMHgxOTUpXT09PTB4MCkmJihfMHgxNzcwMGI9dm9pZCAweDApLF8weDJiMDFlMHx8KF8weDJiMDFlMD1bXSksXzB4NDA0NTQ3PSEweDAsXzB4MmIwMWUwW18weDM1NGJjOCgweDQyZCldKHsncG9zaXRpb24nOnsnbGluZSc6XzB4MzhhNjM1LCdjb2x1bW4nOl8weDI2MGU1Mi1fMHg0MGI2NmF9LCdleHAnOl8weDE3NzAwYn0pO31fMHhhY2RlNjQ9PT1fMHgzNTRiYzgoMHgzODIpJiZfMHg1NDAxZDE+PV8weDQwYjY2YSYmXzB4NTQwMWQxPD1fMHg0MGI2NmErXzB4Mzg0MTM3W18weDM1NGJjOCgweDE5NSldJiYoXzB4NDU1YjhifHwoXzB4NDU1YjhiPVtdKSxfMHg0MDQ1NDc9ITB4MCxfMHg0NTViOGJbXzB4MzU0YmM4KDB4NDJkKV0oeydwb3NpdGlvbic6eydsaW5lJzpfMHgzOGE2MzUsJ2NvbHVtbic6XzB4NTQwMWQxLV8weDQwYjY2YX19KSk7fV8weDQwYjY2YSs9XzB4Mzg0MTM3W18weDM1NGJjOCgweDE5NSldKzB4MTt9fXJldHVybiBfMHhjNWFlNjc/eydpc0NvdmVyYWdlSWdub3JlZCc6ITB4MCwndGVzdEZpbGVTZWxlY3Rpb24nOl8weDFlM2VjMn06XzB4NDA0NTQ3fHxfMHgxZTNlYzI/eydpZ25vcmVDb21tZW50cyc6XzB4NDU1YjhiLCdsaXZlQ29tbWVudHMnOl8weDJiMDFlMCwndGVzdEZpbGVTZWxlY3Rpb24nOl8weDFlM2VjMn06dm9pZCAweDA7fTt9LHsnLi4vLi4vbGliL2dsb2JhbCc6MHgxZSwnLi4vLi4vbGliL3V0aWxzJzoweDIxfV19LHt9LFsweDRdKSk7ZnVuY3Rpb24gXzB4YWUyNihfMHg0OTA4ZDcsXzB4MTYyZjZmKXtjb25zdCBfMHg1Y2U0MWQ9XzB4NWNlNCgpO3JldHVybiBfMHhhZTI2PWZ1bmN0aW9uKF8weGFlMjYwYSxfMHg0MDk1OTQpe18weGFlMjYwYT1fMHhhZTI2MGEtMHg4YztsZXQgXzB4MTVlY2M1PV8weDVjZTQxZFtfMHhhZTI2MGFdO3JldHVybiBfMHgxNWVjYzU7fSxfMHhhZTI2KF8weDQ5MDhkNyxfMHgxNjJmNmYpO31mdW5jdGlvbiBfMHg1Y2U0KCl7Y29uc3QgXzB4MmIxMzUwPVsnYWRkVGVzdExvY2F0aW9ucycsJy4vdHJhY2tlZFNvdXJjZUZpbGUnLCdjb25maXJtJywnX3NhdmVUdXRvcmlhbFN0YXRlJywnTGlzdGVuaW5nXHgyMHBvcnRceDIwJXMnLCdpc0FmZmVjdGVkQnlHbG9iYWxFcnJvcnMnLCdfbm9Db3ZlcmFnZUNhbGN1bGF0aW9uJywnXHgyMFVUQycsJ1x4MjJceDIwd2lsbFx4MjBiZVx4MjAnLCdfZ2V0UmFuZ2VJZExvb2t1cEZvclJhbmdlcycsJ0BiYWJlbC9wYXJzZXInLCdfbmV0d29ya0FkZHJlc3MnLCdceDIwd2l0aG91dFx4MjB0aGlzXHgyMGxpbWl0YXRpb24sXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjInLCdtb2RlbDp0ZXN0c0V4ZWN1dGVkJywnLm9sJywnUG9zdHByb2Nlc3Nvclx4MjBydW5ceDIwZmFpbHVyZTpceDIwJywnbWFwJywnXHgyMj5yZXF1ZXN0XHgyMGFuXHgyMGV4dGVuZGVkXHgyMHRyaWFsXHgyMGxpY2Vuc2U8L2E+Ljxici8+VmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJywnbGl2ZScsJ19maWxlU3RhdFByb21pc2UnLCdldmFsdWF0ZUV4cHJlc3Npb25JbkVkaXRvcicsJ3NldEluc3RydW1lbnRlZEJ5VGVzdGluZ0ZyYW1ld29yaycsJzAuMC4wLjAnLCdfbnVtYmVyT2ZBbGxSYW5nZXMnLCdwbHVnaW4nLCdjb3JyZWxhdGlvbklkJywnX2VtaXRTdG9wcGVkJywnZXhwaXJlZFRyaWFsJywnaW5zcGVjdG9yJywnX2RhdGEnLCd0ZXh0TGluZXMnLCdtb2RlbDpiYWNrZ3JvdW5kVGFza1Byb2dyZXNzJywncGxhdGZvcm1EZXBlbmRlbnRQYXRoJywnaW5jbHVkZWQnLCdzbWFydCcsJ2xhdGVzdEZhaWxpbmdUZXN0JywnbXVsdGlVc2VyS2V5JywnSU5WQUxJRF9MSUNFTlNFJywnaW5zdHJ1bWVudGVkJywnX2xhdGVzdE51bWJlck9mQWxsUmFuZ2VzJywnX2dldEJhc2VEaXInLCdzZXRCcm9hZGNhc3QnLCdzb3VyY2VzJywnR0VUXHgyMC9ceDIwSFRUUC8xLjFceDBhXHgwYScsJ2RlY2xhcmF0aW9uJywncmVtb3ZlTG9ncycsJ2NvdmVyYWJsZScsJ2FkZFRlc3RNYXRjaFNuYXBzaG90Q2FsbHMnLCdceDIyXHgyMGlzXHgyMCcsJ1Rlc3RceDIwZm9jdXNpbmdceDIwYW5kXHgyMGZpbHRlcmluZycsJ3NvbWUnLCd0ZXN0QnlLZXknLCcuLi9zaGFyZWQvZW51bXMnLCdsb3dDb3ZlcmFnZVRocmVzaG9sZCcsJ3Rlc3RzQnlSZXF1ZXN0JywnWW91clx4MjAnLCdWYWxpZGF0aW5nXHgyME9wZW5ceDIwU291cmNlXHgyMExpY2Vuc2UnLCdsb2FkJywnX21hcFJhbmdlVG9EaXNwbGF5UmFuZ2UnLCdyZWFjdC1zY3JpcHRzJywndmFsaWRQYWNrYWdlTmFtZScsJ19pbml0aWFsaXplVGVzdEZpbHRlclN0YXRlJywnaWRzJywnXHgyMGlzXHgyMDxiPm5vdFx4MjBjb3ZlcmVkXHgyMGJ5XHgyMHlvdXJceDIwbGljZW5zZTwvYj4uXHgyMFBsZWFzZVx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInLCdpbnN0cnVtZW50JywnX2ZpbGVJZEdlbmVyYXRvcicsJ1x4MjI+ZXh0ZW5kZWRceDIwdHJpYWxceDIwbGljZW5zZTwvYT4uPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCdzdXBwcmVzc2lvbicsJ191cGRhdGVBZmZlY3RlZEZpbGVzJywnZmFpbGluZ1Rlc3QnLCdudW1iZXJPZkNvdmVyZWRSYW5nZXMnLCdNdXN0XHgyMHBhc3NceDIwYVx4MjBzdHJpbmdceDIwb3JceDIwYVx4MjByZWd1bGFyXHgyMGV4cHJlc3Npb24nLCdwcm9qZWN0OnRlc3RSdW5SZVF1ZXVlZCcsJ3BhcnRpYWxBcHBsaWNhdGlvbicsJzA0X2Vycm9yX3JlcG9ydGluZycsJ2xhdGVzdFNlcnZlcicsJ3NoaWZ0RXJyb3JzJywnY29uZmlncycsJ2hpbnRzJywnaGllcmFyY2h5JywnbGVmdCcsJ2VzNycsJy4vc2VydmVyL2xpbmVEaWZmZXJlbmNlcycsJ19wcmV2aW91c1RyYWNlU3RhdGUnLCdfY2hhbmdlZCcsJ21vZGVsOnRlc3RGaWx0ZXJUZXN0U2VsZWN0aW9uUmVxdWVzdGVkJywnX3BhdGhNYXAnLCcvbGljZW5zZUF1ZGl0JywnYWRkcmVzcycsJ2tleS5saWMnLCdhcHBseScsJ2luZGV4T2YnLCdpbnRlcm5hbCcsJ2xpbmVFcnJvcnMnLCdvdmVyJywnbW9jLnNqeWJhbGxhd0BvbGxlaFx4MjB0YVx4MjBsaWFtZVx4MjBhaXZceDIwc3VceDIwdGNhdG5vY1x4MjBlc2FlbHBceDIwLG1hZXRceDIwcnVveVx4MjByb1x4MjBmbGVzcnVveVx4MjByb2ZceDIwZG9pcmVwXHgyMGxhaXJ0XHgyMHJlZ25vbFx4MjBhXHgyMGVnbmFycmFceDIwb3RceDIwZWtpbFx4MjBkbHVvd1x4MjB1b3lceDIwZklceDBhLmVzbmVjaWxceDIwYVx4MjBlc2FoY3J1cFx4MjBvdFx4MjBlc2FoY3J1cC9tb2Muc2p5YmFsbGF3Ly86c3B0dGhceDIwdGFceDIwZXRpc2Jld1x4MjBydW9ceDIwdGlzaXZceDIwZXNhZWxwXHgyMCx0Y2Vqb3JwXHgyMGVodFx4MjB0cm9wcHVzXHgyMGRuYVx4MjB0aVx4MjBnbmlzdVx4MjBldW5pdG5vY1x4MjBvdFx4MjBla2lsXHgyMGRsdW93XHgyMHVveVx4MjBkbmFceDIwLHl0aXZpdGN1ZG9ycFx4MjBydW95XHgyMGRlc2FlcmNuaVx4MjBzYWhceDIwc2oueWJhbGxhd1x4MjBmSVx4MGEudHVvXHgyMHRpXHgyMGduaXlydFx4MjByb2ZceDIwc2tuYWh0XHgyMCxyZXZvXHgyMHNpXHgyMGRvaXJlcFx4MjBsYWlydFx4MjBzai55YmFsbGF3XHgyMHJ1b1knLCd0b2dnbGVkJywncHJvamVjdCcsJ2xlbmd0aDInLCcoZXhwb3J0c1x4MjA9Plx4MjB7XHgyMCcsJ1dhbGxhYnkuanNceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHlvdXJceDIwcHJvamVjdFx4MjBpc1x4MjBub3RceDIwYXNzb2NpYXRlZFx4MjB3aXRoXHgyMGFceDIwdmFsaWRceDIwR2l0SHViXHgyMHByb2plY3RceDIwKGVycjoxMDEzKS4nLCdoaWRkZW5UaW1lbGluZUZyYWdtZW50cycsJy4uL3V0aWxzJywnYWx0ZXJuYXRlJywncmVjb3JkVHJhY2UnLCdfdHV0b3JpYWxTdGF0ZScsJ2VkaXRvcklkJywnc2NhbicsJ19odHRwU2VydmVyJywncmVwbGFjZVBhdGhTZXBGb3JSZWdleCcsJ19jb3ZlcmluZ1Rlc3RzJywnZGlmZk1hdGNoUGF0Y2gnLCdJbXBvcnREZWNsYXJhdGlvbicsJ2ZpbmRMYXN0SW5kZXgnLCdpbnN0cnVtZW50YWJsZUxvZ3BvaW50UmFuZ2UnLCdzZW5kRmlsZUNoYW5nZXNUb0VkaXRvcicsJ3N0ZXAnLCdBdWd1c3QnLCdjb21wbGV0aW9uJywnZmlsZW5hbWUnLCdfaXNTdG9wcGVkJywnX3BlcmZvcm1QZXJpb2RpY2FsbHknLCdudW1lcmljU2VwYXJhdG9yJywnY3RzJywnaXNFbXB0eScsJ1dhbGxhYnkuanNceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHlvdXJceDIwcHJvamVjdFx4MjBpc1x4MjBub3RceDIwYXNzb2NpYXRlZFx4MjB3aXRoXHgyMGFceDIwdmFsaWRceDIwR2l0SHViXHgyMHByb2plY3QuJywnaW52YWxpZFZlcnNpb24nLCdhbHRUcycsJy0tLS0tQkVHSU5ceDIwUFVCTElDXHgyMEtFWS0tLS0tXHgwYU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdTFFRURaelErK2w2dHoyaW9DUGFceDBhSHhPU2NqeTJrUkRkUG9YdVE4OHpaRzZWZXZ4cW1JemFkSFBGR2pWNXAzWm04T1k5UitTZjYxa2R6Ulp6dldSZ1x4MGF4b3JsYW5vT2x1dHZmQmZHMmxrdjJKNEgvQjc1WHBvQWVHdmR2SWxPTW9EeGZ3ajJ2TUlRNG9ITmFDSjJ5K08vXHgwYWlvaFRGT0MwN25ZN3VmMnNhMHVzT0FaN3pnK2JYeXo2My9mdVNlVm91RkNLR2VZS3ZxMVlDOTkxRjJIajBUaE1ceDBheHhlbGxjNngxQWFGdXl5RzVIbWRZcWJ1S05TK2lBdDd3OHBZVEpvWHhpOWpFMDIxNEdmMHNic0ZuQWJCRmoyc1x4MGFrT2FlZTRQU3BseVNaWEVtWVJlcFAxK3c2YURrdWJWdHNITXZGdCtBcjR3dTRkTHVBajdTOHl4VlZyS0VHOVJ6XHgwYTR3SURBUUFCXHgwYS0tLS0tRU5EXHgyMFBVQkxJQ1x4MjBLRVktLS0tLScsJy53YWxsYWJ5Jywnc2V0dGluZ3MnLCdUdXRvcmlhbFx4MjBtb2R1bGVceDIwXHgyMicsJ2hhc1JhbmdlcycsJ21heExpbmVOdW1iZXInLCdfY3JlYXRlVGVzdFJlc3VsdHMnLCdzZXRUZXN0RmlsZScsJ3VpOmNsb3NlZEluRWRpdG9yJywnc3ZlbHRlJywnYmFzZTY0JywnU291cmNlTWFwQ29uc3VtZXInLCdyZW1vdmVUZXN0TG9jYXRpb25zJywnc2NoZWR1bGVDaGFuZ2VkUXVldWVQcm9jZXNzaW5nJywnc3BsaXQnLCdmdW5jdGlvblNlbnQnLCdtZXNzYWdlJywnX2lzU2V0JywnX2RlYnVnZ2VyRmlsdGVyJywnaW5zdHJ1bWVudGFibGVSYW5nZScsJ3VkcDQnLCdfY29uc29sZUxvZ1RleHRUcycsJ19maW5kQmVzdE1hdGNoaW5nU3RlcCcsJ19jb250ZXh0JywnTW9kdWxlXHgyMGplc3QtY2xpXHgyMGlzXHgyMG5vdFx4MjBmb3VuZFx4MjBpblx4MjBceDI3JywnX2ZzJywnbm9kZVZlcnNpb24nLCdtZHViJywnX3NoaWZ0VGVzdERlY2xhcmF0aW9uQW5kRXJyb3JMaW5lcycsJ2ZpbGU6Ly8nLCd0cmFjaycsJ1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIweW91clx4MjBsaWNlbnNlXHgyMGFjdGl2YXRpb25ceDIwY291bGRceDIwbm90XHgyMGJlXHgyMGNvbmZpcm1lZC4nLCdpZEJ5UGF0aCcsJ2xzdGF0JywnVG9ceDIwY29udGludWVceDIwJywnaW52YWxpZGF0ZScsJ19tYXBUZXN0cycsJ19jcmVhdGVUZXN0RmlsdGVyVG90YWxDb3ZlcmFnZScsJ19xdW9ra2EnLCdXYWxsYWJ5LmpzXHgyMGhhc1x4MjBiZWVuXHgyMHN0b3BwZWRceDIwYmVjYXVzZVx4MjBhblx4MjBvcGVuXHgyMHNvdXJjZVx4MjBsaWNlbnNlXHgyMHdhc1x4MjBub3RceDIwZm91bmRceDIwZm9yXHgyMGVtYWlsXHgyMGFkZHJlc3NceDIwKGVycjoxMDA0KTpceDIwJywnZW1pdCcsJ3ByZWZlcmVuY2VzJywnRXJyb3JceDIwZml4aW5nXHgyMGxpbmVceDIwZGlmZmVyZW5jZXMnLCd0c3gnLCdldmVudCcsJ2RpZ2VzdCcsJ19sYXN0Q2hlY2snLCdmdW5jdGlvblx4MjB0b1N0cmluZygpXHgyMHtceDIwW25hdGl2ZVx4MjBjb2RlXVx4MjB9JywncnVuTW9kZScsJy4vdWkvdHV0b3JpYWwnLCdEZWNlbWJlcicsJ1x4MjJMb2dwb2ludFx4MjBmZWF0dXJlc1x4MjBvbmx5XHgyMHN1cHBvcnRlZFx4MjBpblx4MjBceDI3UHJvXHgyN1x4MjBlZGl0aW9uLFx4MjBzZWVceDIwaHR0cHM6Ly9xdW9ra2Fqcy5jb20vcHJvL1x4MjBmb3JceDIwbW9yZVx4MjBkZXRhaWxzXHgyMicsJ1x4MjI+Y2xpY2tceDIwXHgyMkNvbnRpbnVlXHgyMjwvYT4uPGJyLz5JZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjB0cnlceDIwJywnaHR0cHM6Ly93YWxsYWJ5anMuY29tL2xpY2Vuc2UvJywnX3Rlc3RSdW5HbG9iYWxMb2dzJywnbG9nJywnX2VkaXRvcicsJ19oYW5kbGVUZXN0RmlsdGVyQ2hhbmdlJywnQnVpbGRpbmcnLCdvc3MnLCdJbnRlbGxpSicsJy4vY292ZXJhYmxlUmFuZ2UnLCdpbmRleC5odG1sJywnZXh0ZW5kZWRDb3JlJywnc3RhcnRzV2l0aCcsJ3RydWUnLCdOb1x4MjBjaGFuZ2VzXHgyMGRldGVjdGVkXHgyMGZvclx4MjAlcycsJ3JhbmdlS2V5JywnQ2Fubm90XHgyMGRldGVjdC9wYXJzZVx4MjBqZXN0LWNsaVx4MjBtb2R1bGVceDIwdmVyc2lvbjpceDIwJywnX2ZpbGVDaGFuZ2VkJywndWk6bmF2aWdhdGUnLCdzaGlmdExpbmVzJywnUXVva2thLmpzXHgyMFx4MjdQcm9ceDI3JywnZGV2RGVwZW5kZW5jaWVzJywnZXJyb3IuJywnX2tleXMnLCdyZWFkeVN0YXRlJywnYWRkV2FsbGFieVJhbmRvbUlkQ29tbWVudFRvRmlsZUNvbnRlbnQnLCdyYW5kb21JZCcsJ25vdEluc3RydW1lbnRlZExvZ01hcmtlcnMnLCdpc05hTicsJ3Byb2plY3Q6bGl2ZScsJ2NvbXBsZXRlZE1vZHVsZXMnLCd3YWxsYWJ5anMuY29tJywnX3F1b2trYUZpbGVOYW1lJywnYWRkVGVzdEZpbGVXaXRoR2xvYmFsRXJyb3JUb1Rlc3RUYXNrJywnZXhjbHVkZWQnLCdfc3RvcCcsJ1x4MjDwn5qAJywneC54LngnLCduZXh0VGljaycsJ2Vycm9yU291cmNlJywnb3NWZXJzaW9uJywncXVva2thLmpzZG9tJywnY3JlYXRlU2VydmVyJywnUmV0dXJuU3RhdGVtZW50JywnZW5kc1dpdGgnLCdOb1x4MjBtZXRhZGF0YVx4MjBmb3JceDIwZGVsZXRlZFx4MjBmaWxlXHgyMGZvdW5kOlx4MjAlcycsJ3Nsb3cnLCdzZXRSYW5nZUNvbnNvbGVMb2cnLCdzY3JpcHRzJywncmVhbHBhdGgnLCdxdW9ra2FTZXR0aW5nc092ZXJyaWRlJywnMjY1cScsJ3RpbWVvdXQnLCdkaWZmcycsJ2RhcndpbicsJ1Ryb3VibGVzaG9vdGluZycsJ3dhbGxhYnlqc0BnbWFpbC5jb20nLCdsaW5lTnVtYmVyJywnVVRDJywnbW9kZWw6dGVzdEZpbGVEZWxldGVkJywnVmFyaWFibGVEZWNsYXJhdGlvbicsJ3Byb2plY3Q6Y29weVRvQ2xpcGJvYXJkJywnX3RyYWNrZWRMaW5lTWFwJywnU29ja2V0XHgyMGVycm9yXHgyMHJ1bm5pbmdQcm9qZWN0c1JlcXVlc3RlZCcsJ19wYWNrYWdlSnNvbicsJ0ludHJvZHVjdGlvbicsJ3NoYTI1NicsJ2luRWRpdG9yJywnbmV3JywnLi9kZWJ1Z2dlckZpbHRlcicsJ3JlbW92ZVJhbmdlcycsJ3R1dG9yaWFsLm9wZW4uJywnX2ludmFsaWRhdGVkJywnX2V4cGVjdGVkJywnX2VtaXRGaWxlQ2hhbmdlcycsJ3N0YXR1cycsJ19saW5lRGlmZmVyZW5jZXMnLCdiYWJlbCcsJ21vZHVsZXMnLCdXYWxsYWJ5LmpzXHgyMGNvbXBhbnlceDIwbGljZW5zZVx4MjAoVlNceDIwQ29kZSlceDIwKFZpc3VhbFx4MjBTdHVkaW8pXHgyMChJbnRlbGxpSilceDIwKFN1YmxpbWVceDIwVGV4dClceDIwKEF0b20pXHgyMFdhbGxhYnkuanNceDIwK1x4MjBRdW9ra2EuanMnLCdlbmRDb2x1bW4nLCdceDIwWW91XHgyMG1heVx4MjBhbHNvXHgyMDxhXHgyMGhyZWY9XHgyMicsJ05vXHgyMGNoYW5nZXNceDIwZGV0ZWN0ZWRceDIwZm9yXHgyMCVzXHgyMChpbmNsdWRlc1x4MjByYW5kb21ceDIwaWRceDIwc3VmZml4KScsJ2ZpbGVNZXNzYWdlcycsJ19jb25zb2xlTG9nUmVtb3ZhYmxlJywnX2ZpbGVzQWZmZWN0ZWRCeUdsb2JhbEVycm9ycycsJ3NvdXJjZUNvbnRlbnRGb3InLCdzZXRUZXN0S2V5JywnZGVsZXRlZCcsJ19yZW1vdmVMb2dzJywnZ2V0RmlsZU1lc3NhZ2VzJywnaW5jbHVkZUVycm9yRXh0ZW5kZWREZXRhaWxzJywnX2NsZWFuU3RhY2snLCdtdXRlTm90aWZpY2F0aW9uJywnTG9ncG9pbnRDYWNoZScsJ3JlZ3VsYXInLCdfZmluZEZyZWVQb3J0JywnRmlsZVx4MjBjaGFuZ2VkLFx4MjBydW5uaW5nXHgyMHBlbmRpbmdceDIwdGVzdHMnLCdceDIwdHJpYWxceDIwc2Vzc2lvbixceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCdfbGF0ZXN0RmlsZUNoYW5nZScsJ19jb3ZlcmVkRmlsZXMnLCdTdGF0ZW1lbnQnLCdPcGVuXHgyMFNvdXJjZScsJ3VpOnJ1bm5pbmdQcm9qZWN0c1JlcXVlc3RlZCcsJ1x4MjBhY3RpdmF0aW9uXHgyMHJlcXVpcmVzXHgyMGNvbmZpcm1hdGlvblx4MjBiZWZvcmVceDIwdXNlLlx4MjBBXHgyMGNvbmZpcm1hdGlvblx4MjBsaW5rXHgyMGhhc1x4MjBiZWVuXHgyMHNlbnRceDIwdG9ceDIweW91clx4MjBlbWFpbFx4MjBhZGRyZXNzLicsJ3R1dG9yaWFsOmhhbmRzaGFrZScsJ1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIwYW5ceDIwZXJyb3JceDIwb2NjdXJyZWRceDIwYXR0ZW1wdGluZ1x4MjB0b1x4MjBhY3RpdmF0ZS5ceDIwWW91XHgyMG11c3RceDIwYmVceDIwY29ubmVjdGVkXHgyMHRvXHgyMHRoZVx4MjBpbnRlcm5ldFx4MjBpblx4MjBvcmRlclx4MjB0b1x4MjBhY3RpdmF0ZVx4MjB5b3VyXHgyMGxpY2Vuc2UuXHgyMCgnLCdGb3JTdGF0ZW1lbnQnLCdzb3VyY2UnLCdleGl0JywncHJvamVjdDptb2R1bGVMb2FkZWQnLCdhdXRvSW5zcGVjdEZvckRlYnVnZ2VyJywnYWN0aXZlVGVzdEZpbGVDb3ZlcmFnZUNoYW5nZWQnLCd0c09ubHlDaGFuZ2UnLCcucXVva2thJywnY29uZmlndXJlJywnZGVidWdUZXN0JywnX3VwZGF0ZVByb2plY3RGaWxlJywnX3Byb2Nlc3NDYWxsU3RhY2snLCcuLi91dGlscy9leHRyYWN0Q29tbWVudHMnLCdkZWxldGUnLCdTb3VyY2VNYXBHZW5lcmF0b3InLCd0b3RhbE51bWJlcicsJ19wcm9FbW9qaScsJ2NyZWF0ZUtleScsJ3RvTG93ZXJDYXNlJywnOjoxJywnMjJXZEl2bEwnLCdfaW50ZXJuYWwnLCdvYnNvbGV0ZScsJ2JlZm9yZScsJ2FkZENhdGVnb3J5JywnaW5zdGFsbFBhY2thZ2UnLCd3YWxsYWJ5RW1haWwnLCd1aTpoYW5kc2hha2UnLCdvbm1lc3NhZ2UnLCdleHBpcmF0aW9uRGF0ZVN0cmluZ0Zvcm1hdHRlZCcsJ3Rlc3RFcnJvclJlcG9ydGVkJywnXHgyMj5yZXF1ZXN0XHgyMGFuXHgyMGV4dGVuZGVkXHgyMHRyaWFsXHgyMGxpY2Vuc2U8L2E+Ljxici8+SWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRceDIwdGhlXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJywnY2hhbmdlcycsJ2RpclJlbW92ZVN5bmMnLCdpZG00NWhiNjU3OGJ3NDV0JywnbG9hZGVkJywnY2hhbmdlRnJhbWUnLCdzYXZlTGF0ZXN0UXVva2thRmlsZUNoYW5nZScsJ3Byb2ZpbGVBdmFpbGFibGUnLCdnbG9iJywnZm9ybWF0JywnbGFzdEluZGV4T2YnLCdfc3VwcHJlc3Npb25GaWx0ZXInLCdsaWNlbnNlJywnaW5hY3RpdmUnLCdoYXNFcnJvclNvdXJjZScsJ0luc3BlY3RpbmdceDIwUnVudGltZVx4MjBWYWx1ZXMnLCdlYWNoTWFwcGluZycsJ0lkZW50aWZpZXInLCdfcmVhZEZpbGVQcm9taXNlJywnLi9kb2N1bWVudExpbmUnLCdfc29tZVJlc3VsdHNSZXNwb25zZVNlcU51bScsJ190cmFjZVN0ZXBOb3RGb3VuZCcsJ3BvcnQnLCd1bnNoaWZ0Jywnd2FsbGFieS1hcHAnLCdfcmVwb3J0Tm9ybWFsUnVuJywnd3JpdGUnLCdhZGRJbnNwZWN0aW9ucycsJ3NvdXJjZUZpbGUnLCdpbnNwZWN0aW9ucycsJy50c3gnLCd1cGRhdGVUZXN0cycsJ2xvZ2ljYWxBc3NpZ25tZW50JywnaHR0cHM6Ly93YWxsYWJ5anMuY29tL2FwcC8nLCdDSE9LSURBUl9QUklOVF9GU0VWRU5UU19SRVFVSVJFX0VSUk9SJywnZ2VuZXJhdGVkQ29sdW1uJywnQ2FuXHgyMG5vdFx4MjBmaW5kXHgyMGFueVx4MjBKZXN0XHgyMHJ1bm5lclx4MjBjb25maWd1cmF0aW9uc1x4MjBpblx4MjBceDI3Jywnc2tpcHBlZE51bWJlcicsJ19maWxlc1dpdGhMb2FkYWJsZU1lc3NhZ2VzJywnX3dpdGhOb3JtYWxpemVkUGF0aCcsJ1F1b2trYScsJ19sb2FkJywnZXhwcmVzc2lvbnNUb0V2YWx1YXRlJywnaXNPcGVuZWRJbkVkaXRvcicsJ2ZpbGVDaGFuZ2VzJywnaGFzQW55UGVuZGluZ1BhdXNlZEZpbGVDaGFuZ2VzJywnY2hhbmdlUnVuJywnXHgyMC1ceDIwRWxlY3Ryb24nLCdXYWxsYWJ5LmpzXHgyMGlzXHgyMHZhbGlkYXRpbmdceDIwdGhlXHgyMG9wZW4tc291cmNlXHgyMHN0YXR1c1x4MjBvZlx4MjB5b3VyXHgyMHByb2plY3QuJywnaW5zcGVjdGlvbicsJzA1X3J1bnRpbWVfdmFsdWVzJywnbm93JywncXVva2thLmludGVyYWN0aXZlLWV4YW1wbGVzJywnZXh0ZXJuYWxGaWxlQ2hhbmdlJywncXVva2thLmZpbGUuNW0uJywndGV4dEluZGV4UG9zaXRpb24nLCdfZmlsZUlkQnlQYXRoJywnY3VycmVudE1vZHVsZU5hbWUnLCdORVNURURfR0lUJywnZXhlYycsJ2xlbmd0aCcsJ3RyYWNlZFRlc3QnLCdhZGRSYW5nZScsJ19sb2FkRmlsZScsJ2FjdGl2ZScsJ192ZXJpZmljYXRpb25Qcm9jZXNzaW5nJywnX3VubGlua0ZpbGVTeW5jJywnV2FsbGFieS5qc1x4MjBpc1x4MjBvdXRceDIwb2ZceDIwZGF0ZVx4MjBhbmRceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZC5ceDIwUGxlYXNlXHgyMHVwZGF0ZVx4MjB0b1x4MjBjb250aW51ZVx4MjB1c2UuXHgyMElmXHgyMFdhbGxhYnlceDIwZG9lc1x4MjBub3RceDIwdXBkYXRlXHgyMGF1dG9tYXRpY2FsbHksXHgyMHBsZWFzZVx4MjBwZXJmb3JtXHgyMGFceDIwZm9yY2VceDIwY29yZVx4MjB1cGRhdGUuJywnX2Z1bGxOYW1lJywnbW9kZWw6cmVzdW1pbmcnLCdFcnJvclx4MjB3aGlsZVx4MjByZWFkaW5nXHgyMHNuYXBzaG90XHgyMGNvbnRlbnQ6XHgyMCcsJ1Jlc3VtaW5nJywnXHgyMj5hY3RpdmF0ZVx4MjBpdDwvYT4uXHgyMENsaWNrXHgyMDxhXHgyMGhyZWY9XHgyMmh0dHBzOi8vcXVva2thanMuY29tL2RvY3MvcHJldmlvdXMuaHRtbD9leHBpcnlkYXRlPScsJ19maW5kQ2xvc2VzdFZpc2libGVTdGVwJywnRmFpbGVkXHgyMHRvXHgyMGRlc2VyaWFsaXplXHgyMG1lc3NhZ2VceDIwZnJvbVx4MjB3YWxsYWJ5XHgyMFVJOlx4MjAnLCdfYWRqdXN0UXVva2thRmVhdHVyZXMnLCdzdHJpbmcnLCdjaGFuZ2VUcycsJ3JlZHVjZScsJ3J1blRlc3RzJywnZm9ybWF0TGluZUVycm9yTWVzc2FnZScsJ2xlYWYnLCdfaGl0cycsJ3BybycsJ2NsaWVudCcsJ1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIweW91clx4MjBsaWNlbnNlXHgyMGFjdGl2YXRpb25ceDIwaXNceDIwbm9ceDIwbG9uZ2VyXHgyMHZhbGlkLicsJ190cnVuY2F0ZU1lc3NhZ2UnLCdfaXNFbnRpdHlFeGNsdWRlZCcsJ19pdGVtcycsJ1x4MjBhY3RpdmF0aW9uXHgyMGNoZWNrXHgyMGlzXHgyMGJlaW5nXHgyMHBlcmZvcm1lZC5ceDIwJywnX2R1cGxpY2F0ZU51bWJlcicsJ1x4MjBsaWNlbnNlXHgyMGlzXHgyMGFzc29jaWF0ZWRceDIwd2l0aFx4MjB5b3VyXHgyMGVtYWlsXHgyMGFkZHJlc3MuJywnX3RpbWVvdXQnLCd2YWx1ZUNoYW5nZWQnLCdoaWRlYWJsZScsJ0ZpbGVceDIwZGVsZXRlZFx4MjByZXBvcnRlZCxceDIwYnV0XHgyMHN0aWxsXHgyMGV4aXN0c1x4MjBvblx4MjBkaXNrOlx4MjAlcycsJ19saW5lVG9SYW5nZU1hcCcsJ19lbnN1cmVSZWFkRmlsZVdpdGhDb3JyZWN0Q29udGVudCcsJ3Nlc3Npb24nLCdmaWxlJywnLFx4MjBTeW50YXhFcnJvcjonLCdjaGVja1N1bScsJ1dhbGxhYnkuanNceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHlvdXJceDIwcHJvamVjdFx4MjBpc1x4MjBub3RceDIwYXNzb2NpYXRlZFx4MjB3aXRoXHgyMGFceDIwdmFsaWRceDIwR2l0SHViXHgyMHByb2plY3RceDIwKGVycjoxMDAxKS4nLCdocmVmJywnX3NvdXJjZXMnLCd0dXRvcmlhbC5qc29uJywnc2h1dGRvd24nLCdpc0NvdmVyZWRCeVRlc3RzJywnZmlsZUlkQnlQYXRoJywnX2ZpbGVzQnlJZCcsJ3JlcnVuU2NoZWR1bGVkJywncGF0Y2hNb2R1bGUnLCcuL3V0aWxzJywnX3J1bkVycm9yJywnZ2V0TGF0ZXN0T3JpZ2luYWxGaWxlQ29udGVudEJ5UGF0aCcsJ24vYScsJ19lbmRDb2x1bW4nLCd1aTpmaWxlcycsJ1tyZW1vdGUnLCdjaGVja1BvcnQnLCdfcmVsZWFzZWRJZHMnLCdmaWxlQ2xvc2VkSW5BbGxFZGl0b3JzJywnX2VtaXREb2N1bWVudFVwZGF0ZXMnLCdydW5FcnJvcicsJ0ZpbGVceDIwYWRkZWQ6XHgyMCVzJywnZGVidWdnZXInLCdnZW5lcmF0ZWRQb3NpdGlvbkZvcicsJ21vZGVsOnRlc3RGaWx0ZXJFeHBsaWNpdGx5Q2hhbmdlZCcsJ3RvZ2dsZVRlc3RGaWx0ZXInLCd1dGY4JywnbWF4JywnZmFpbHVyZScsJ2FsbCcsJzAwX3Ryb3VibGVzaG9vdGluZycsJ0xvZ3BvaW50JywnX3dhaXRFeGlzdGluZ0NsaWVudFRpbWVvdXQnLCdXYWxsYWJ5LmpzXHgyMGhhc1x4MjBiZWVuXHgyMHN0b3BwZWRceDIwYmVjYXVzZVx4MjB5b3VyXHgyMHByb2plY3RceDIwaXNceDIwbm90XHgyMGFzc29jaWF0ZWRceDIwd2l0aFx4MjBhXHgyMHZhbGlkXHgyMEdpdEh1Ylx4MjBwcm9qZWN0XHgyMChlcnI6MTAxNykuJywnbG9ncG9pbnQnLCdxbWQnLCdjb3JlVmVyc2lvbicsJ1F1aWNrXHgyMHN0YXJ0Jywnc2l6ZScsJ2pzeCcsJ2FsbG93RGVidWdnZXJFZGl0QW5kQ29udGludWUnLCdsb2NhdGlvbicsJ3R5cGVzY3JpcHQnLCdfZ2V0VGltZWxpbmVTdGVwSW5kZXgnLCdlZGl0b3InLCd2YWx1ZUJhZycsJ2NsZWFyUmFuZ2VDb25zb2xlTG9nJywnbnVtJywnYWZmZWN0ZWQnLCdceDIyPmhlcmU8L2E+XHgyMGZvclx4MjBoZWxwLicsJy4vc3RhY2tFbnRyeScsJ19wcm9maWxpbmdTdXBwb3J0ZWQnLCdVcGxvYWRpbmdceDIwdG9ceDIwY29kZWNsaXAuaW8nLCdlbmQnLCdkaXNwbGF5UmFuZ2UnLCd0cmVhc3VyZS1odW50JywnZXh0ZW5zaW9ucycsJ3NuYXBzaG90UGF0aCcsJ190eXBlJywncHJvZmlsZVJ1bicsJ2V4ZWN1dGVkJywnX3NlbmQnLCdfc2VuZFRlc3RSZXN1bHRzJywnb21pdCcsJ2V4cGlyaW5nU29vbicsJ190ZXN0RmlsdGVyU3RhdGUnLCdfdHJhY2tFcnJvcicsJ2VtaXRCYWNrZ3JvdW5kVGFza1Byb2dyZXNzJywncmVzdW1lZCcsJ3NlbGYnLCdyYW5kb20nLCdjb3ZlcnMnLCdfcGFyZW50JywnX2FkZEZpbGUnLCdjb2RlY2xpcC5zaGFyZScsJ25vcm1hbGl6ZScsJ210aW1lJywnX2ZpdmVNaW51dGVJbnRlcnZhbCcsJ19hY2N1bXVsYXRlVGVzdEZpbHRlclN0YXRlRm9yRmlsZScsJ2dldFVUQ0Z1bGxZZWFyJywndXNlci5pZCcsJ2NsYXNzUHJpdmF0ZVByb3BlcnRpZXMnLCcuL2V4dGVuc2lvbi91aS9zZXJ2aWNlJywnc3RhcnRNb2R1bGUnLCdceDIwdHJpYWxceDIwcGVyaW9kXHgyMGlzXHgyMGFsbW9zdFx4MjBvdmVyXHgyMGFuZFx4MjA8Yj5maW5pc2hlc1x4MjBvblx4MjAnLCd1bmxpbmsnLCdhbGxOb3RDb3ZlcmVkJywnX2Vycm9yUmFuZ2VzTm90Q292ZXJlZEJ5VGVzdCcsJ2xhcmdlVmFsdWVzQW5kRXJyb3JzJywnX3ZhbHVlJywnMDJfaW5zdGFudF90ZXN0X2V4ZWN1dGlvbicsJ1RoZVx4MjBpbnN0YWxsZWRceDIwJywnLi9leHRlbnNpb24vc2hhcmVkL3V0aWxzJywnbGljZW5zZWVOYW1lJywnX3VwZGF0ZVRlc3RXaXRoUG9zc2libGVGYWlsZWRPblRoZVJhbmdlJywncmFuZ2VJZHMnLCdzdGFydGluZ1RyaWFsJywnV2FsbGFieS5qc1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIwdGhlXHgyMG9wZW5ceDIwc291cmNlXHgyMHN0YXR1c1x4MjBvZlx4MjB5b3VyXHgyMHByb2plY3RceDIwY291bGRceDIwbm90XHgyMGJlXHgyMHZlcmlmaWVkLlx4MjBQbGVhc2VceDIwbm90ZTpceDIwYW5ceDIwaW50ZXJuZXRceDIwY29ubmVjdGlvblx4MjBpc1x4MjByZXF1aXJlZFx4MjBmb3JceDIwdmFsaWRhdGlvbi4nLCdTZWxlY3RlZFx4MjB0ZXN0XHgyMG5hbWVceDIwaXNceDIwbm90XHgyMHVuaXF1ZVx4MjB3aXRoaW5ceDIwdGhlXHgyMGZpbGUuXHgyMFRoZVx4MjBmaXJzdFx4MjB0ZXN0XHgyMHdpdGhceDIwdGhlXHgyMG5hbWVceDIwXHgyMicsJ2FsbG93UmVjb3JkaW5nUHJldmlvdXNUcmFjZVN0YXRlJywnY29uZmlnRmlsZVBhdGgnLCd0ZXN0VGltZWxpbmVSZXNldCcsJ19mb3JtYXQnLCdfb3V0ZGF0ZWRSYW5nZXMnLCcuLi8uLi9saWIvdXRpbHMnLCdceDIyPltBY3RpdmF0ZV08L2E+LFx4MjA8YVx4MjBocmVmPVx4MjJodHRwczovL3F1b2trYWpzLmNvbS9kb2NzL3ByZXZpb3VzLmh0bWw/ZXhwaXJ5ZGF0ZT0nLCcuL3N1cHByZXNzaW9uRmlsdGVyJywncXVva2thJywnXHgyMGF0XHgyMFx4MjcnLCdhbHdheXMnLCdEZWJ1Z2dpbmcnLCdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvPScsJ3N1bW1hcnknLCdmb3JtYXR0ZWRNZXNzYWdlJywnX2FsbG93ZWRUb1NlbmRBbGxGaWxlcycsJ19saW5lU3RhdGUnLCdfZmlsZUFkZGVkJywnbGl2ZUNvbW1lbnQnLCdfbG9uZ0NvbnNvbGVMb2dUZXh0JywnbG9ncG9pbnRJbmZvJywncmVxdWVzdFRlc3RSdW5TdW1tYXJ5JywnRXJyb3JceDIwZXh0cmFjdFx4MjBnaXRceDIwcmVtb3RlXHgyMGRldGFpbHMuJywnQXRvbScsJ19mZWF0dXJlVXNlZCcsJ19tYXBNZXNzYWdlJywndHRsJywnX2RpckVuc3VyZVN5bmMnLCdvbkVycm9yUGF0aCcsJ19lbWl0UHJvamVjdENvbmZpZ3VyZWQnLCdodHRwczovL3dhbGxhYnlqcy5jb20vZG93bmxvYWQvI3RyeS1pdC1mcmVlJywnc2NoZWR1bGVDaGFuZ2VRdWV1ZVByb2Nlc3NpbmdJZkluRWRpdG9yUGVuZGluZ0NoYW5nZXMnLCdrZXlzJywnZmFpbHMnLCdxdWljay1zdGFydCcsJy0tLS0tQkVHSU5ceDIwUFVCTElDXHgyMEtFWS0tLS0tXHgwYU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNHBEb3RlanR6aGlUL2xwTmZkMEhceDBhMkR2MDhOVFNKOC9peHVRejNpSmlWUnhRa290NVNuNDV3dTRRaVFFb1k1TlEvdERmOFY5bURlZVBOVS9aZDhLWVx4MGFkeVJGb3E2YndPbEhjMEhBYTUwdGVjUkNFQ0VTQit0M1RWY3FMTW9nWDMydmdRa1NtbHkwc0Z4dEdGQmpOOFd4XHgwYVYrUTdXUThuZWZ0N0pLYVh0bSsyRnQ3UDQxb25kK1NmQmVUb2g5bW45REZmdCtPdUkydno3czBPU2pkK1AyYndceDBhK0dFSXIzb3RsM0NBNVJySUg5V1JzQVZqYXd2K3o1THZha1FYdE82Sk5ObUpnRXJIV1pta0JJbHYyVkhEc29TZFx4MGFNTGdhMmpUaUVIcmtaeWxLUEZvei9oT2RoL2lWSDQvcjFBV3hCaGo4SWdRbFJjTEpndlNCekpvNE9sQmhsWWg2XHgwYXh3SURBUUFCXHgwYS0tLS0tRU5EXHgyMFBVQkxJQ1x4MjBLRVktLS0tLScsJy4uL3NoYXJlZC91dGlscycsJy4uLy4uLy4uJywnQmxvY2tTdGF0ZW1lbnQnLCdlc2NhcGVSZWdFeHAnLCdfbnVtYmVyJywncmVtb3ZlVGVzdCcsJ2ZvbGRlcicsJ19xdW9ra2FFZGl0aW9uJywnZGlzcG9zZScsJ2xvZ3BvaW50UmVtb3ZlZCcsJ3NoaWZ0JywnbW9kZWw6dGVzdEZpbHRlclRvZ2dsZWQnLCdhZGRlZCcsJ2lzTmF0aXZlQnVuZGxlcicsJ19iYWNrZ3JvdW5kRmlsZXNMaW5lc1VudHJhY2tpbmcnLCdyZXNldEFjdGlvbicsJ2xhc3RVcGRhdGUnLCdfdXNlclJlcXVlc3RlZFRyYWNlUnVuJywnQ2FuXHgyMG5vdFx4MjBsb2NhdGVceDIwYVx4MjBmYWlsaW5nXHgyMHRlc3QnLCdmYWlsaW5nTnVtYmVyJywnLFx4MjBwbGVhc2VceDIwPGI+cmVzdGFydFx4MjB5b3VyXHgyMGVkaXRvcjwvYj5ceDIwb3JceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJywnX2N1cnJlbnRTdGVwJywnTm92ZW1iZXInLCdfZ2V0dGVyJywnX3RyYWNlU3RhdGVBdFRoZVN0YXJ0T2ZDb2RlQ2hhbmdlc0luQUZpbGUnLCdyZWFkZGlyJywnc2tpcHBlZCcsJ19idWlsZEFycmF5VGVzdFN0cnVjdHVyZScsJ19wcm9jZXNzVHJhY2VUZXN0cycsJ1RyYWNraW5nXHgyMGVycm9ycycsJzAwX01pc2NlbGxhbmVvdXMnLCdfcmFuZ2UnLCcwMV9pbnRyb2R1Y3Rpb24nLCdfZmlsdGVyJywnc29tZVJlc3VsdHNVcGRhdGVkJywnZmluZCcsJ01pc2NlbGxhbmVvdXMnLCdSdW5uaW5nJywnbGFzdEluZGV4JywnV2hpbGVTdGF0ZW1lbnQnLCdiYXNlJywnXHgyMj5bUmVuZXddPC9hPixceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicsJ2dsb2JhbEVycm9ycycsJ19sb2cnLCdnZW5lcmF0ZWRMaW5lJywnY2hhbmdlZCcsJ2plc3QtcnVubmVyJywnZGV0YWNoVmFsdWVCYWcnLCdDb2RlXHgyMENvdmVyYWdlJywnVGVzdFx4MjBwcm9maWxpbmdceDIwaXNceDIwb25seVx4MjBhdmFpbGFibGVceDIwZm9yXHgyMGNocm9tZVx4MjBvclx4MjBub2RlXHgyMHRlc3RceDIwcnVubmVycy4nLCd1bmRlZmluZWROYW1lJywnZmFpbHNUZXN0JywndG9nZ2xlU2hvd1NpbmdsZUlubGluZVZhbHVlJywncmVwbGFjZW1lbnRzJywnbGluZVJhbmdlcycsJ19kaXNwbGF5UmFuZ2VzTGluZU1hcCcsJ1dhbGxhYnkuanNceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHRoZVx4MjBvcGVuXHgyMHNvdXJjZVx4MjBzdGF0dXNceDIwb2ZceDIweW91clx4MjBwcm9qZWN0XHgyMGNvdWxkXHgyMG5vdFx4MjBiZVx4MjB2ZXJpZmllZFx4MjAoZXJyOjEwMTEpLicsJ3Jlc29sdmUnLCdodHRwczovL2dpdGh1Yi5jb20vJywndHJhY2VOYXZpZ2F0ZWQnLCdfdXNlZCcsJy9saWNlbnNpbmcnLCdKdW5lJywnZGVidWdnZXJFZGl0Q29udGludWVMaW1pdGF0aW9uSW5Db21tdW5pdHlFZGl0aW9uJywnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT4uPGJyLz4nLCdpbml0JywnZmlsZURlbGV0ZWQnLCdGYWlsZWRceDIwdG9ceDIwc2V0XHgyMHVwXHgyMHByb2plY3RceDIwZmlsZVx4MjBzeXN0ZW06XHgyMCcsJ3dhbGxhYnlBcHBVcmwnLCdjb2RlQ2xpcFNoYXJpbmdSdW4nLCdsb2NhbCcsJ25hdGl2ZUVzbScsJ2ludGVyYWN0aXZlLWRlbW8nLCdsaWNlbnNlZFByb2R1Y3QnLCcuanMnLCdwcm9ncmVzcycsJ19jb25zb2xlTWVzc2FnZXMnLCcvcHJvYy9zZWxmL2Nncm91cCcsJ2xvY2FsaG9zdCcsJ29uc2F2ZScsJ3dpdGhGcmVlUG9ydCcsJ19hY3RpdmUnLCdfX1JFR0VYUFx4MjAnLCdwcm9maWxpbmdTdXBwb3J0ZWRCeVJ1bm5lcicsJ2Nsb3NlclRvVGhlTGluZVRoYW4nLCdzZXQnLCdnZXRUaW1lJywnaHR0cHM6Ly93YWxsYWJ5anMuY29tL2RvY3MvaW50cm8vZ2V0LXN0YXJ0ZWQtdnNjb2RlLmh0bWw/cG9ydD0nLCdfZmlsZUV4aXN0c1N5bmMnLCdjbG9zZXN0JywnaW5zdGFuY2VzJywnXHgyMHZlcnNpb25ceDIwaXNceDIwbm90XHgyMGNvdmVyZWRceDIwYnlceDIweW91clx4MjBjdXJyZW50XHgyMGxpY2Vuc2UuXHgwYVBsZWFzZVx4MjB2aXNpdFx4MjBvdXJceDIwd2Vic2l0ZVx4MjB0b1x4MjB1cGdyYWRlXHgyMHlvdXJceDIwbGljZW5zZTpceDIwJywnb3BlbicsJ2xpbmUnLCdfb3JpZ2luYWxRdW9ra2FGaWxlTmFtZScsJ19mb3JtYXR0ZWRNZXNzYWdlJywnY29kZUNoYW5nZWQnLCdjb25zb2xlT3V0cHV0Jywnbm9kZV9tb2R1bGVzJywnaW5jbHVkZXMnLCcyMDdGYmNveVUnLCdjb3ZlcmluZ1Rlc3RzJywnaWdub3JlQ292ZXJhZ2UnLCdldmVyeScsJ190ZXN0QWRkZWQnLCd0ZXN0UnVuQ29tcGxldGUnLCdleGNsdWRlJywnX3Rlc3RNYXRjaFNuYXBzaG90Q2FsbExpbmVNYXAnLCdzdGF0cycsJ19zdGFydFdzU2VydmVyJywnc3RhdFN5bmMnLCdwaXBlJywnT25seVx4MjBceDI3UHJvXHgyNycsJ2V4cG9ydERlZmF1bHRGcm9tJywnaXNFcnJvclNvdXJjZScsJ2lzT25FcnJvclBhdGgnLCdvcmlnaW4nLCdvbmNlJywnbWljcm9zb2Z0JywnbmVlZFRvUmVidWlsZERpc3BsYXlhYmxlUmFuZ2VzJywndW50cmFja0xpbmVzJywnY2xvbmUnLCdpc0Fic29sdXRlJywnbC5lJywnV2VceDIwcmVjZW50bHlceDIwYWRkZWRceDIwdGhlXHgyMExvZ3BvaW50c1x4MjBmZWF0dXJlXHgyMGZvclx4MjBRdW9ra2FceDIwUHJvXHgyMPCfmoBceDIwYW5kXHgyMGNoYW5nZWRceDIwdGhlXHgyMFx4MjJTaG93XHgyMFZhbHVlXHgyMG9uXHgyMFNlbGVjdGlvblx4MjJceDIwb3B0aW9uXHgyMHRvXHgyMGJlXHgyMG9mZlx4MjBieVx4MjBkZWZhdWx0XHgyMPCfpKsuXHgyMEJlXHgyMHN1cmVceDIwdG9ceDIwY2hlY2tceDIwb3V0XHgyMHRoZVx4MjBuZXdceDIwTG9ncG9pbnRzXHgyMGZlYXR1cmUuXHgyMElmXHgyMHlvdVx4MjBhcmVceDIwbWlzc2luZ1x4MjBceDIyU2hvd1x4MjBWYWx1ZVx4MjBvblx4MjBTZWxlY3Rpb25ceDIyLFx4MjByZS1lbmFibGVceDIwaXRceDIwd2l0aFx4MjB0aGVceDIwYnV0dG9uXHgyMGJlbG93XHgyMChvclx4MjBpblx4MjBRdW9ra2FceDIwc2V0dGluZ3NceDIwYXRceDIwYW55XHgyMHRpbWUpLicsJ2ZpbGVzV2l0aENvdmVyYWdlQ2FsY3VsYXRlZCcsJ2dlbmVyYXRlTGluZU1hcHBpbmdzJywnX2VtaXRFeHBpcmVkTGljZW5zZScsJ1NlcnZlcicsJ2NhbGwnLCdjb25zZXF1ZW50JywnX3VwZGF0ZUhpZXJhcmNoeVRlc3RzJywnbW9kZWw6dGVzdFJ1blJlUXVldWVkJywnYWxsQWZmZWN0ZWRGaWxlcycsJ19pbnN0cnVtZW50ZWRCeVRlc3RpbmdGcmFtZXdvcmsnLCdceDIwPVx4MjBmdW5jdGlvbigpXHgyMHtceDIwY29uc3RceDIwZGF0YVx4MjA9XHgyMCcsJ2xpY2Vuc2VUYWdzJywnX2dldE9yQ3JlYXRlRmlsZUVudHJ5JywndGVzdEZpbHRlclRvZ2dsZWQnLCd0cmFja0xpbmUnLCcuL2NvbnNvbGVNZXNzYWdlJywnaGFzVGVzdExvY2F0aW9uJywnc2hpZnRMaW5lJywnV2FsbGFieS5qc1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIwdGhlXHgyMG9wZW5ceDIwc291cmNlXHgyMHN0YXR1c1x4MjBvZlx4MjB5b3VyXHgyMHByb2plY3RceDIwY291bGRceDIwbm90XHgyMGJlXHgyMHZlcmlmaWVkXHgyMChlcnI6MTAwOSkuJywnbmV3Q29udGVudCcsJ2luZm8nLCcuL2V4dGVuc2lvbi9zZXJ2ZXIvbW9kZWwnLCdleHBpcnlEYXRlJywndXJsJywndHJhY2VCeVJlcXVlc3QnLCdfZ2V0QWN0aXZlVGVzdEZpbGVDb3ZlcmVkRmlsZXMnLCdtZXJnZUNvbnNvbGVMb2cnLCdkaXJuYW1lJywnRmlsZVx4MjBzeXN0ZW1ceDIwc2Nhblx4MjBjb21wbGV0ZWQnLCdtb2RlbDonLCdfbGF0ZXN0RmFpbGluZ1Rlc3RCeUZpbGVBbmRMaW5lJywnbGljZW5zZVNpZ25hdHVyZScsJ3VwZGF0ZVRvdGFsQ292ZXJhZ2UnLCdfbXV0ZVByb0VkaXRpb25Gb3JWYWx1ZUV4cGxvcmVyTm90aWZpY2F0aW9uJywncnVubmVyJywnaGVhZGVycycsJzAwX3F1aWNrX3N0YXJ0JywnaGFkR2xvYmFsRXJyb3JzUHJldmlvdXNSdW4nLCdpbXBvcnRNZXRhJywnaW5zcGVjdCcsJ2xpY2Vuc2luZy53YWxsYWJ5anMuY29tJywnX3Rlc3RLZXknLCdceDIwUGxlYXNlXHgyMHRyeVx4MjBhZ2Fpblx4MjBsYXRlci4nLCdwcm9wcycsJ3Vua25vd24nLCdceDIwfFx4MjAnLCcvLmRvY2tlcmVudicsJ3BhdXNlZCcsJ3dhbGxhYnkuanNceDIwcmVmdXNlZFx4MjB0b1x4MjBhY2NlcHRceDIwY29ubmVjdGlvblx4MjBmcm9tXHgyMCcsJ19saW5lUmVwb3J0JywnNmJydmhlcicsJ19tZXNzYWdlJywnbmV0d29ya0ludGVyZmFjZXMnLCd0ZXN0cycsJ19pc0luY2x1ZGVkJywnX3N1Z2dlc3RlZFByb0VkaXRpb25Gb3JQcm9qZWN0RmlsZUltcG9ydCcsJ3R1dG9yaWFsLnN0YXJ0TW9kdWxlLicsJ2lzT2JqZWN0JywncmVtb3ZlTG9ncG9pbnRzJywnbmVzdGVkUGF0dGVybnMnLCdzZXRIb3VycycsJ19yZXNvbHZlVGVzdEZpbHRlclN0YXRlJywnbm90aWZpY2F0aW9uJywndGVzdFJ1blN1bW1hcnknLCd0cmlhbEVuZGVkJywnX3VwZGF0ZVRlc3QnLCdkb2N1bWVudHMnLCdnZXRGaWxlTWV0YWRhdGFCeVBhdGgnLCdpc1plcm9Db25maWdKZXN0Jywnc3RhcnRNb2RlJywnX3RpbWUnLCdkb2N1bWVudHNVcGRhdGVkJywnXHgyMFx4MjAuLi5ceDBhXHgyMCcsJ19jb25zb2xlTG9nVGV4dCcsJ19jb25zb+KAi2xlTG9nJywnY2FsbFN0YWNrJywnc25hcHNob3RCeVJlcXVlc3QnLCdXYWxsYWJ5LmpzXHgyMGhhc1x4MjBiZWVuXHgyMHN0b3BwZWRceDIwYmVjYXVzZVx4MjB5b3VyXHgyMG9wZW5ceDIwc291cmNlXHgyMGxpY2Vuc2VceDIwYWN0aXZhdGlvblx4MjBpc1x4MjBub3RceDIwdmFsaWRceDIwZm9yXHgyMHRoaXNceDIwY29tcHV0ZXIuXHgyMFBsZWFzZVx4MjByZS1lbnRlclx4MjB5b3VyXHgyMGVtYWlsXHgyMGFkZHJlc3NceDIwaW5ceDIwV2FsbGFieVx4MjdzXHgyMG1hbmFnZVx4MjBsaWNlbnNlXHgyMGRpYWxvZy4nLCdub2RlX21vZHVsZXMvamVzdC1ydW5uZXItZ3JvdXBzLycsJ2lzRXF1YWwnLCdyYW5nZUNvbnNvbGVMb2cnLCdwcm9qZWN0Om5hdmlnYXRpb25SZXF1ZXN0ZWQnLCd1c2VkJywnb3B0aW9ucycsJ19vcGVuZWRGaWxlcycsJ3JlYWRGaWxlU3luYycsJ3Nob3dTaW5nbGVJbmxpbmVWYWx1ZScsJ2ZpbGVCeVBhdGgnLCdjb2RlJywnX2luc3BlY3RvcicsJ3NoYXJlQ29kZUNsaXAnLCdjb250aW51ZVRyaWFsJywnaXNEZWJ1ZycsJ2RlbGV0aW9ucycsJ3ViOScsJ0ZTV2F0Y2hlcicsJ3NldExpY2Vuc2VNb2RlJywnZmlsZXNUb1RyYWNrJywnbW9kZScsJ0ZpbGVceDIwY2hhbmdlZDpceDIwJXMnLCdzZXRDb25zb2xlTG9nJywnZmlsZXNCeVBhdGgnLCdsaWNlbnNlLnVzZScsJ2lzQ292ZXJlZCcsJzE5NDg0NjRvSUFobkwnLCdfdHMnLCd0cmFja0Vycm9ycycsJ2ZhaWxlZC5mc2V2ZW50cy5sb2FkJywncGF0Y2hfZnJvbVRleHQnLCdTb2NrZXQnLCdmZWF0dXJlVXNlZCcsJ2luc3BlY3RhYmxlJywnX2dldE5ldHdvcmtBZGRyZXNzZXMnLCdkaXInLCdyZW1vdmVXYWxsYWJ5UmFuZG9tSWRDb21tZW50RnJvbUZpbGVDb250ZW50JywndW5hbWJpZ3VvdXMnLCdoYXNDYXRlZ29yeScsJ1dBTExBQllfREVCVUdfRU5BQkxFRCcsJ19jb3ZlcmluZ1Rlc3RNYXAnLCd2YWx1ZXMnLCdzdWdnZXN0TG9ncG9pbnRzJywnX2xpY2Vuc2VWZXJpZmljYXRpb25SZXN1bHQnLCdyZWFjdC1hcHAtcmV3aXJlZC9zY3JpcHRzL3Rlc3QnLCdvd25UZXN0cycsJ19zdGF0dXMnLCdSRU1PVEVfVkFMSURBVElPTl9GQUlMRUQnLCdfcmVidWlsZFJhbmdlTWFwJywnX3dhbGxhYnlBcHBDaGVja2VyJywnWW91clx4MjBwcm9qZWN0XHgyMGZpbGVceDIwcGF0aFx4MjBsb29rc1x4MjBsaWtlXHgyMGFceDIwdmFsaWRceDIwZ2xvYlx4MjBwYXR0ZXJuXHgyMGFuZFx4MjBjb250YWluc1x4MjBnbG9iXHgyMGNoYXJhY3RlcnMsXHgyMGxpa2VceDIwYHtgLFx4MjBgfWAsXHgyMGBbYCxceDIwYF1gLFx4MjBgKGAsXHgyMGApYCxceDIwYCpgLFx4MjBgfGA7XHgyMGl0XHgyMG1heVx4MjBjYXVzZVx4MjB0aGVceDIwcHJvamVjdFx4MjBmaWxlXHgyMHNjYW5uaW5nXHgyMHRvXHgyMGZhaWwsXHgyMHBsZWFzZVx4MjByZW1vdmVceDIwZ2xvYlx4MjBjaGFyYWN0ZXJzXHgyMGZyb21ceDIwdGhlXHgyMHByb2plY3RceDIwcGF0aC4nLCdjcmVhdGVWZXJpZnknLCdceDBhLS0tXHgwYScsJyg/Oi9ceDVjKig/Olx4NWNzKlx4MGQ/XHgwYSg/Oi8vKT8pPyg/OicsJ2F1dG9JbnNwZWN0JywndHJhaXRzJywnb3B0aW9uYWxDaGFpbmluZycsJ1NoYXJpbmdceDIwY29kZVx4MjBjbGlwJywnX2VtaXRTdGF0c1VwZGF0ZScsJ190cmFja2VyJywnYnVzeScsJ19wcmV2aW91c1NraXBwZWRUZXN0c051bWJlcicsJ1dhbGxhYnkuanNceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHRoZVx4MjBvcGVuXHgyMHNvdXJjZVx4MjBzdGF0dXNceDIwb2ZceDIweW91clx4MjBwcm9qZWN0XHgyMGNvdWxkXHgyMG5vdFx4MjBiZVx4MjBjb25maXJtZWRceDIwKGVycjoxMDA4KS4nLCdmaWxlQWRkZWQnLCd0ZXN0VGltZWxpbmUnLCdodHRwczovLycsJ3VwZGF0ZVNuYXBzaG90cycsJ19pZCcsJzwvYj4uXHgyMElmXHgyMHlvdVx4MjB3b3VsZFx4MjBsaWtlXHgyMHRvXHgyMHdvcmtceDIwd2l0aFx4MjB0aGVceDIwbGF0ZXN0XHgyMHZlcnNpb25ceDIwb2ZceDIwJywndW50cmFja0xpbmUnLCdib290c3RyYXAnLCd1bmxpbmtGaWxlU3luYycsJ1x4MjBmb3VuZCcsJ21vZGVsOmJ1c3knLCdyYW5nZUlkJywnY29kZWNsaXAuaW8nLCdhY3RpdmF0ZS1saW5rJywnSWZTdGF0ZW1lbnQnLCdfY2xlYXJDb25zb2xlT3V0cHV0U2VuZFF1ZXVlJywnYWxsVGVzdEZpbGVzJywnRmFpbGVkXHgyMHRvXHgyMGhhbmRsZVx4MjBceDI3JywnbmFtZScsJy4vYmFiZWxWaXNpdG9yJywnbm9ybWFsaXplUGF0aCcsJ2V4cG9ydHMnLCdhZGRGaWxlJywnL3Byb2MvdmVyc2lvbicsJ19kZWNsYXJhdGlvbkNvbHVtbicsJ19maW5hbGl6ZVRlc3RGaWx0ZXJTdGF0ZScsJ19hZmZlY3RlZFJhbmdlcycsJzU2MTIxMHJiTk54YycsJ1dhbGxhYnkuanMnLCdtYWluVHMnLCdjb3B5VG9DbGlwYm9hcmQnLCdjb25zb2xlTWVzc2FnZXMnLCdNZW1vaXplZCcsJ3Byb2plY3RDb25maWcnLCdyZW1vdmVJbnNwZWN0aW9ucycsJ0NvbnRlbnQtTGVuZ3RoJywnYXBwbGljYXRpb24vanNvbicsJ05PX1VTRVInLCdpbnRlcmFjdGl2ZS1leGFtcGxlcycsJ19zZXRLZXknLCdpbnN0YW50JywnbG9nc1JlbW92ZWQnLCdleGlzdHNTeW5jJywnX2ZpbGVzRm9yUHJvamVjdCcsJ3JldHVybmVkXHgyMGFuXHgyMHVuZXhwJywncmVhZENvbmZpZ3MnLCdoYXMnLCdfZW1pdEFjdGl2ZVRlc3RGaWxlQ292ZXJhZ2UnLCdza2lwcGVkVGVzdHNOdW1iZXInLCdpZ25vcmUnLCdfdWlTZXJ2aWNlJywnLS0tLS1CRUdJTlx4MjBSU0FceDIwUFVCTElDXHgyMEtFWS0tLS0tXHgwYU1JSUJDZ0tDQVFFQXdXSytybnZlMTMwWUExRXdMRXJ6QXh1ZEl1NTE3aWV2eERuU3JkTWs1d0hFU2VleE1tdnhceDBhNkRPcGFTaHc4R2w4aHlRaXBXZWttdzBlUjdCdUhSNmlLRG05MUhxcGxLZW9vcVVURzVjQXF2Uk0wRVJUcDNBdFx4MGE0bGh5eVJ4cTFhQTZJV1UxV1B2c3FWa2w2M1g5MTNqdXBJOEd2bndic2l5M3ZWZXZDTlREVnFuOW1KWnZBcXNPXHgwYS84QTR1akdyb2NTUGJHWjBLM0p1alZWUWR1ZkVZS1dSVVlUeGhhUitmNnUzTmhIRTdsb1l4S010ckxZc3RVY0dceDBhdUl6VEk1OFpHbTQwaDd5Y2NhU3RkR1A4VG5GUURSd0ZyMjZaK3I2Rng4dStWbEJIOHQ0ZmVkRndUT2NjSGlVZlx4MGF3R0RiaEQ2ZUJsL1IyeFUyZFNRSzdvUS9wZ29OMXJ3Y3p3SURBUUFCXHgwYS0tLS0tRU5EXHgyMFJTQVx4MjBQVUJMSUNceDIwS0VZLS0tLS1ceDBhJywnX2ZpbGVzV2l0aE1lc3NhZ2VzJywnc29ydEJ5JywnYWRkVGVzdCcsJ3VpOnRlc3RzOmFsbFJlc3VsdHNVcGRhdGVkJywnY2hhckNvZGVBdCcsJ190dXRvcmlhbFN0YXRlUGF0aCcsJ2V4cGlyZWQnLCdfbG9ncG9pbnRDYWNoZScsJ2FkZE1lbWJlcnNoaXAnLCdOb1x4MjAnLCdlcnJvckJ5UmVxdWVzdCcsJ2ZpbGVPcGVuZWRJbkVkaXRvcicsJ19tYXBFcnJvcnMnLCdfZmlsZScsJ19zZW5kU3RhdGVVcGRhdGUnLCdfdXBkYXRlRmlsZVJhbmdlcycsJy4vdGVzdEZpbHRlcicsJ1x4MjBpc1x4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIweW91clx4MjBsaWNlbnNlXHgyMGlzXHgyMGJlaW5nXHgyMHVzZWRceDIwZWxzZXdoZXJlXHgyMG9uXHgyMHRoZVx4MjBuZXR3b3JrXHgyMGJ5XHgyMDxiPicsJ0ZpbGVDb250ZW50Lmxlbmd0aFx4MjBub3RceDIwZXF1YWxceDIwdG9ceDIwRmlsZUluZm8ubGVuZ3RoJywnXHgyMGFuZFx4MjBmdXR1cmVceDIwdmVyc2lvbnNceDIwcmVsZWFzZWRceDIwd2l0aGluXHgyMHRoZVx4MjBuZXh0XHgyMDEyXHgyMG1vbnRocyxceDIwcGxlYXNlXHgyMHZpc2l0XHgyMDxhXHgyMGhyZWY9XHgyMicsJ3JlbW92ZUxpc3RlbmVyJywnaGFzUmVwb3J0YWJsZUNvdmVyYWdlT3JUZXN0RmlsZScsJ0Nhblx4MjBub3RceDIwZmluZFx4MjB0ZXN0XHgyMHRvXHgyMGRlYnVnLicsJ1x4MjB3aWxsXHgyMGJlXHgyMHN0YXJ0ZWRceDIwdW50aWxceDIwYWZ0ZXJceDIwYVx4MjBzdWNjZXNzZnVsXHgyMGNoZWNrLicsJ2RlY29yYXRvcnMtbGVnYWN5Jywnd2FsbGFieVJhbmRvbUlkQ29tbWVudFBvc3RmaXgnLCdfY2FwYWJpbGl0aWVzJywnaW5pdGlhbFRyYWNlUnVuJywnX3Rlc3RGaWxlJywnc3RyJywnX21hcE1lc3NhZ2VzJywnMzE4Nzc2NWdGRWR2eicsJ3dhbGxhYnkuanMnLCdzbmFwc2hvdEtleScsJ2V4dG5hbWUnLCdOT19QUk9EVUNUJywnZ2l0JywnX2lzSW5zaWRlT2YnLCdtZXRhZGF0YScsJy4uLicsJ2xvY2FsZUNvbXBhcmUnLCdxdW9ra2EuZXNtJywnYnVpbGREaXNwbGF5UmFuZ2VzSWZSZXF1aXJlZCcsJ0lOVkFMSURfQUNUSVZBVElPTicsJ2VtaXRFbXB0eURvY3VtZW50VXBkYXRlc0Zvck9wZW5lZEVkaXRvcnMnLCdnZXRUcmFja2VkTGluZUJ5TGluZU51bWJlcicsJ191c2luZ0ZzRXZlbnRzJywnY292ZXJhZ2UnLCdtaWNyb21hdGNoJywnY3VycmVudE1vZHVsZUZvbGRlcicsJ2FjdGl2YXRpb24nLCdfdHJhY2VCeVJlcXVlc3QnLCdfY2xpZW50Jywnc3RhdHVzQ29kZScsJ1dhbGxhYnkuanNceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHRoZVx4MjBvcGVuXHgyMHNvdXJjZVx4MjBzdGF0dXNceDIwb2ZceDIweW91clx4MjBwcm9qZWN0XHgyMGNvdWxkXHgyMG5vdFx4MjBiZVx4MjBjb25maXJtZWQuJywnZmFpbGluZycsJ2ZzZXZlbnRzJywnbm90RmFpbHMnLCdsaW51eCcsJ19maWxlc0NoYW5nZWRPckFkZGVkUHJpb3JUb0NvbXBsZXRlZE9yUmVxdWV1ZWRUZXN0UnVuJywnX2luaXRpYWxJZHNCeVBhdGgnLCdpbnN0cnVtZW50ZWRCeVRlc3RpbmdGcmFtZXdvcmsnLCdjdXJyZW50RnJhbWUnLCdfYWN0dWFsJywnVUlceDIwY2xpZW50XHgyMGNvbm5lY3RlZCcsJ3ZhbHVlJywndGVzdFJ1blJlUXVldWVkJywnY2hhbmdlJywnaXNNYXRjaCcsJ2ZpbGVFeGlzdHNTeW5jJywnaXNOdW1iZXInLCdhZnRlcicsJ2FsbG93SWdub3JpbmdDb3ZlcmFnZUluVGVzdHMnLCd0ZXN0S2V5JywnbGluZVRlc3RzJywncTJsMicsJzIxMzQyOVhQS1ladycsJ2NsYXNzUHJvcGVydGllcycsJ2ZpbmRMYXN0JywnaXNOb3RpZmljYXRpb25NdXRlZCcsJ19xdW9ra2FNYXhGaWxlU2l6ZScsJ3RvU3RyaW5nJywnbG9ncycsJy4vZXh0ZW5zaW9uL3NlcnZlci9tdWx0aWNhc3RlcicsJ1x4MjI+b3VyXHgyMHdlYnNpdGU8L2E+XHgyMHRvXHgyMHB1cmNoYXNlXHgyMGFceDIwbGljZW5zZS48YnIvPklmXHgyMHlvdVx4MjB3b3VsZFx4MjBsaWtlXHgyMHRvXHgyMHRyeVx4MjAnLCdzZXRSYW5nZScsJ19lbWl0RmlsZUNoYW5nZScsJ3BsdWdpbnMnLCd1bmNvdmVyZWRSZWdpb25zQnlSZXF1ZXN0JywnY29udmVydGVkJywnbWl4aW4nLCd0ZXN0UnVuRXJyb3InLCdjb250ZXh0UmFuZ2VzJywnaGV4JywnLi4vc2VydmVyL3Rlc3RGaWx0ZXInLCdmb3JFYWNoJywnbG9hZEZpbGVzJywnZWFjaCcsJ2VuYWJsZWQnLCd0cmltRW5kJywnLS0tLS1CRUdJTlx4MjBQVUJMSUNceDIwS0VZLS0tLS1ceDBhTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFvaFIvTzhYNXB0Z1BiZWxzU3NhWlx4MGFXSkhaN0ZrcW8zOUN4OVVZUHMycll6Ync5NGFackllUmRkZmdENTVnU1paM0prUlhSZFo3S2JtK1hUcmk2VjAvXHgwYTBaZXQrRkthZVcweGtvdEh2TVAwZlR6R25halE2QzgzNk04d1FSOWYxbmRxZDdUc2EzMGtBZWd2UHFoS3VJK1dceDBhYVcxR1pyU2VlZXlxMy91WjR0aFBFR3ZGRFhqNlAyb2dFYUV4MzZXdXFEOURWMVV1WTd2Y20vZlBZWnBmR2dQdVx4MGE4SjRIQXpLNUcwT3lyU2VuVFgvK0pPOHBLak90RjZKSEthUW1pM0NGMXRDQTFldzhzdlowWkxrSzlBR29NKzhPXHgwYWE5a3gxc0JwNFl2Q2pBMFZSeGRPLzY2T3RCUmhGbktWNkpib1BUUTRTRzJiRkFLWVJKTzd0blM3bm5oaWNnSHNceDBhRXdJREFRQUJceDBhLS0tLS1FTkRceDIwUFVCTElDXHgyMEtFWS0tLS0tJywnRUFERFJOT1RBVkFJTCcsJ3RyYWNlQmVpbmdOYXZpZ2F0ZWQnLCdnZXQnLCdleHBpcmF0aW9uRGF0ZScsJ2xpbmVSZXBvcnRCeVJlcXVlc3QnLCdpbnZhbGlkYXRlTGluZXMnLCdnaXQ6Ly9naXRodWIuY29tLycsJ2NvbnNvbGVMb2cnLCdkZXBlbmRlbmNpZXMnLCdfc25hcHNob3QnLCdwYXJlbnQnLCdsb2dwb2ludHNOb3RBdmFpbGFibGVFeHByZXNzaW9uJywnRnJlZWRvbScsJ2Rlc3Ryb3knLCdtaXNzaW5nQnJvd3Nlckdsb2JhbCcsJ29yaWdpbmFsQ29sdW1uJywndXNlclJlcXVlc3RlZEluaXRpYWxUcmFjZVJ1bicsJ19lbmNvZGVJbnRlZ2VyJywndHJ5UmVxdWlyZU1vZHVsZVdpdGhQYXRoRnJvbScsJ3Zhclx4MjAnLCd0cmFjZUNvbnRleHQnLCdwYXRoTWF0Y2hlc1BhdHRlcm4nLCdfcHJldmlvdXNUb2RvVGVzdHNOdW1iZXInLCd0aXknLCc8c2VlXHgyMHRoZVx4MjBkaWZmXHgyMGluXHgyMHF1b2trYVx4MjBvdXRwdXQ+JywncHJvcGVydHlJc0VudW1lcmFibGUnLCdMb2dwb2ludENhY2hlUmVzdWx0JywnZ2V0RGF0ZScsJ19sb2FkRmlsZVdpdGhDYWNoZScsJ091dGdvaW5nXHgyMG1lc3NhZ2VceDIwJXMnLCd1bmNvdmVyZWRSZWdpb25zJywnPC9iPi5ceDIwSWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwY29udGludWVceDIwdG9ceDIwdeKAi3NlXHgyMCcsJ3VwZGF0ZWQnLCdjaGFyQXQnLCdsb2dwb2ludHMnLCdfY29weVRyYW5zaWVudENoYW5nZUlkJywnaXNBY3RpdmUnLCdiaWFzJywnX2NvbnNvbGVMb2dUeXBlJywnZ2xvYmFsQ29uZmlnJywnX29zc1Byb2Nlc3NpbmcnLCdsLnAnLCdfaXNRdWlja1N0YXJ0JywndGVzdE1hdGNoU25hcHNob3RDYWxsTG9jYXRpb24nLCd0b3AnLCdfbG9ncG9pbnRzJywnaHR0cHMnLCd0ZXN0RGF0YScsJ2JsdXInLCdyZWxhdGl2ZScsJ3JlYWRkaXJTeW5jJywnZGVmaW5lUHJvcGVydHknLCdfZmFpbGluZ1Rlc3RzJywnZmxvd0NvbW1lbnRzJywndXBkYXRlZERvY3VtZW50cycsJ3JlcGVhdCcsJ3NldERhdGUnLCdpbmNsdWRlJywnWW91XHgyMGFyZVx4MjA8Yj5ub3RceDIwbGljZW5zZWRceDIwdG9ceDIwdXNlXHgyMFBST1x4MjBmZWF0dXJlc1x4MjBmb3JceDIwdGhpc1x4MjB2ZXJzaW9uXHgyMG9mXHgyMCcsJ2h0dHA6Ly9sb2NhbGhvc3Q6NTEyNDUvJywnRmlsZVx4MjBkZWxldGVkOlx4MjAlcycsJ3JlYWN0LWFwcC1yZXdpcmVkJywnbW9kZWw6c3RhdHNNYXliZUNoYW5nZWQnLCdZb3VceDIwZG9ceDIwbm90XHgyMGhhdmVceDIwYVx4MjB2YWxpZFx4MjBsaWNlbnNlXHgyMHRvXHgyMHVzZVx4MjAnLCdob21lZGlyJywnMjY1JywnX2dsb2JhbEVycm9ycycsJ3B1c2gnLCdqb2luJywnX2xhc3RFZGl0ZWRGaWxlUGF0aCcsJ3VpOnRlc3RGaWx0ZXJDaGFuZ2VkJywnX3NlbmRlcicsJ2V4cGlyYXRpb25UaW1lJywnZGVsJywnc2VsZWN0ZWRUZXN0UmVnRXhwJywnX2RlYnVnZ2VyRmlsdGVyU3RhdGUnLCd1OXgnLCdzdGFjaycsJ3NldEZpbGUnLCdUaGlzXHgyMGNvZGVceDIwY2FuXHgyMG5vdFx4MjBydW4sXHgyMHBsZWFzZVx4MjBmaXhceDIwaXRceDIwYmVmb3JlXHgyMHNoYXJpbmcuJywnZmlsZXNPcGVuZWRJbkVkaXRvcicsJ19fcmVzdCcsJ+KAi2NvbXBhcmUnLCdnbG9iYWxTZXR0aW5nc0RpcicsJ1x4Mjc6XHgyMCcsJ2VtaXROb0NvZGVDaGFuZ2VFdmVudHMnLCdfbGlzdGVuZXJzJywnRXJyb3JceDIwc2F2aW5nXHgyMG9wZW5ceDIwc291cmNlXHgyMG1hbmlmZXN0JywnbHJ1LWNhY2hlJywnTmV3XHgyMGZpbGVceDIwb3JceDIwY29tcGxleFx4MjBmaWxlXHgyMGNoYW5nZScsJ1x4MjI+W0Rvd25ncmFkZV08L2E+LFx4MjBvclx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJywnYWRkJywnb3BlbmVkRG9jdW1lbnRMaW5lUmFuZ2VzJywnX251bWJlck9mQ292ZXJlZFJhbmdlcycsJ2NyZWF0ZScsJ2NvbmNhdCcsJ193c3MnLCdceDI3XHgyMGV2ZW50Olx4MjAnLCd3aGVuJywnY29lcmNlJywnc2V0dXAnLCdfbmVlZFRvUmVidWlsZERpc3BsYXlhYmxlUmFuZ2VzJywnU2VwdGVtYmVyJywnZGF0YScsJzEyNy4wLjAuMScsJ3NldExvZ3BvaW50cycsJ3R5cGUnLCdfaGFzR2xvYkNoYXJzJywnLnFsYycsJ1dhbGxhYnkuanNceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHlvdXJceDIwcHJvamVjdFx4MjBpc1x4MjBub3RceDIwYXNzb2NpYXRlZFx4MjB3aXRoXHgyMGFceDIwdmFsaWRceDIwR2l0SHViXHgyMHByb2plY3RceDIwKGVycjoxMDE0KS4nLCdlbnYnLCdlZGl0JywnYWJzJywndWk6dG9nZ2xlVGVzdEZpbHRlcicsJ2hpZGUnLCdXYWxsYWJ5LmpzXHgyMGhhc1x4MjBiZWVuXHgyMHN0b3BwZWRceDIwYmVjYXVzZVx4MjB5b3VyXHgyMG9wZW5ceDIwc291cmNlXHgyMGxpY2Vuc2VceDIwYWN0aXZhdGlvblx4MjBpc1x4MjBub3RceDIwdmFsaWRceDIwZm9yXHgyMHRoaXNceDIwY29tcHV0ZXJceDIwKGVycjoxMDA1KS4nLCdfbmV4dElkJywnX2xpbmVTaGlmdE9ySW52YWxpZGF0aW9uU2luY2VMYXN0VXBkYXRlJywnbWlzc2luZ1BhY2thZ2UnLCdsb2NhdGlvbkJ5UmVxdWVzdCcsJ2tleScsJ2Rpc3BsYXlUZXN0TmFtZScsJ19pc0Rpc3Bvc2VkJywnc2V0VGltZW91dCcsJ3N1cHByZXNzZWQnLCdfb3JkZXJlZFJhbmdlcycsJ3NuYXBzaG90JywncnRyaW0nLCdtb2RlbDpmaWxlQWRkZWQnLCd2aXRlJywnX2J1aWxkUmFuZ2VFcnJvcicsJ3ZlcmlmeUxpY2Vuc2UnLCdpbnRlcnZhbEFjdGlvbicsJ19yYW5nZXMnLCdhbGxSZXN1bHRzVXBkYXRlZCcsJ3VzZXJuYW1lJywndmVyaWZ5JywnQWJvdXRceDIwdGhlXHgyMHR1dG9yaWFsJywnaXNWaXRlc3QnLCdfcG9ydCcsJ3R1dG9yaWFsOnNhdmVQcm9ncmVzcycsJ2VjdGVkXHgyMHJlc3VsdDpceDIwRVBFJywnV2FsbGFieS5qc1x4MjB3aWxsXHgyMGJlXHgyMHN0YXJ0ZWRceDIwYWZ0ZXJceDIwdGhlXHgyMG9wZW4tc291cmNlXHgyMHN0YXR1c1x4MjBvZlx4MjB5b3VyXHgyMHByb2plY3RceDIwaGFzXHgyMGJlZW5ceDIwdmFsaWRhdGVkLicsJ19jb25zb2xlT3V0cHV0JywnUGF1c2luZycsJ19wcm92aWRlVGVzdFJ1blN1bW1hcnknLCdtb2RlbDpmaWxlRGVsZXRlZCcsJ0phbnVhcnknLCdhc3NpZ24nLCdfcmVwb3J0RmlsZUNvdmVyYWdlJywnZ2V0RGVidWdnZWRUZXN0JywnUlNBLVNIQTUxMicsJ3ZhbGlkJywnLi9zZXJ2ZXIvbW9kZWwnLCdzaG93JywnZXJyb3InLCdfZmlsZUlkJywnX3RyaWFsTW9kZScsJ3VuZXhlY3V0ZWRUZXN0JywnZ2V0VGVzdE1hdGNoU25hcHNob3RDYWxsQnlMaW5lTnVtYmVyJywnbWF0Y2gnLCdpc1Rlc3RGaWxlJywnSW5zdGFudFx4MjBBZmZlY3RlZFx4MjBUZXN0XHgyMEV4ZWN1dGlvbicsJ2xlbmd0aDEnLCd3ZWJzaXRlJywncGF0aCcsJ3RoZW5ceDIwJywnZXZlbnRzJywnX2FsbFJhbmdlc1JlY2VpdmVkJywnX2ZhaWxlZE9uTWVUZXN0cycsJ2Rpc3BsYXlQYXRoJywndGFrZScsJ2V4cGlyZWRMaWNlbnNlJywncGFyc2UnLCdEYXRlJywnX2lzQ292ZXJlZCcsJ05vXHgyMGdpdFx4MjByZW1vdGVzXHgyMGZvdW5kXHgyMGZvclx4MjB0aGlzXHgyMHByb2plY3QuJywnYWN0aW9uJywnZXhwaXJlZFRyaWFsV2l0aE5vV2Vic2l0ZVJlbmV3YWxPcHRpb24nLCdpc0Rpc3Bvc2VkJywncmVzdW1lJywnV2FsbGFieS5qc1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIwdGhlXHgyMG9wZW5ceDIwc291cmNlXHgyMHN0YXR1c1x4MjBvZlx4MjB5b3VyXHgyMHByb2plY3RceDIwY291bGRceDIwbm90XHgyMGJlXHgyMHZlcmlmaWVkLicsJ2ZhaWxpbmdUZXN0c051bWJlcicsJ3BhY2thZ2VKU09OJywnT1NTJywnX3N0b3BwZWQnLCdub3RDaGFuZ2VkJywnZnJhbWUnLCdfdGVzdE1hcCcsJ2NoaWxkX3Byb2Nlc3MnLCdlbWFpbCcsJ2NvZGVGcmFtZScsJ2ludmFsaWRhdGVGYWlsZWRCeU1lVGVzdHMnLCcsXHgyMHlvdVx4MjBjYW5ceDIwcmVzdGFydFx4MjBvclx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInLCdyZW1vdmFibGUnLCdpbmhlcml0JywnMjMwLjAuMC4zJywnLi4vLi4vdXRpbHMnLCdleHBpcmluZ0xpY2Vuc2UnLCd0aW1lcnMnLCdjbGFzc1ByaXZhdGVNZXRob2RzJywnZGVjbGFyYXRpb25MaW5lJywnb3B0aW9uYWwnLCdkZWZhdWx0Jywnc3RhY2tFbnRyeScsJ19nZXRGaWxlQ29udGVudCcsJ2NyZWF0ZUhhc2gnLCdzZXBhcmF0b3InLCdfcHJvamVjdCcsJ19yZXBvcnRGYWlsZWRSdW4nLCdwYXR0ZXJuJywnaW5jbHVzaW9ucycsJ21kNScsJ2Nsb25lRGVlcCcsJ2dsb2JhbFNldHRpbmdzRmlsZScsJ3R1dG9yaWFsOnJlc2V0TW9kdWxlJywncmFuZ2VXaXRoQ29udGV4dCcsJ2wuaycsJ3F1b2trYUVtYWlsJywnQ2Fubm90XHgyMGZpbmRceDIwY29tcGF0aWJsZVx4MjBqZXN0LWNsaVx4MjBtb2R1bGUuJywnY2FsY3VsYXRvci50ZXN0LmpzJywnaXNVbmRlZmluZWQnLCd2YWx1ZUV4cGxvcmVyJywnUE9TVCcsJ2hhc0NoZWNrZWRJZ25vcmVkJywnYnVpbHRpbk1vZHVsZXMnLCdfcmVhZEZpbGVTeW5jJywncmVhbHBhdGhTeW5jJywnX2RlY29kZU1hcHBpbmcnLCdfYWNjdW11bGF0ZVRlc3RGaWx0ZXJTdGF0ZUZvckZpbGVzJywnX3Rlc3RJZCcsJ3RyYWNrZWRMaW5lJywnY2FsY3VsYXRlVG90YWxDb3ZlcmFnZScsJzMyOTE4NTZ1ZVhHQUonLCdfcmVzb2x2ZURlYnVnZ2VyRmlsdGVyU3RhdGUnLCd1dGlsJywnc3RvcCcsJ19lbWl0RG9jdW1lbnRMaW5lcycsJ2NvbnRleHQnLCdydW5JblRoaXNDb250ZXh0JywnLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyJywnZnJlc2gnLCdfZXJyb3JNZXNzYWdlJywnZG9ja2VyJywnX2xpbmUnLCdpZ25vcmVTdGFydEZyYW1lJywnX3Rlc3RzUmVtb3ZlZCcsJ3Byb2ZpbGluZycsJ19yZXNvbHZlcicsJ2FjdGl2ZVRlc3RGaWxlQ292ZXJhZ2VTdXBwb3J0ZWQnLCdfbGluZXMnLCdfY292ZXJlZFJhbmdlcycsJ21vZGVsOnRlc3RSdW5FcnJvcicsJ3RoZW4nLCdoaWRlRnJvbUVycm9yU3RhY2tUcmFjZScsJ19yZWFscGF0aFN5bmMnLCd0aW1lJywnZXhwb3J0TmFtZXNwYWNlRnJvbScsJ2R1cGxpY2F0ZU51bWJlcicsJ19tdXRlUHJvRWRpdGlvbkZvckRlYnVnZ2VyRWRpdENvbnRpbnVlTm90aWZpY2F0aW9uJywnX2RlbGV0ZUZpbGUnLCdzeXN0ZW0nLCd1c2UnLCdceDVjJCYnLCdfZmlsZXNCeVBhdGgnLCd0cmltJywnUmVtb3ZpbmdceDIwaW5zcGVjdGlvbnMnLCdfbXVsdGljYXN0ZXInLCdwZXJtYW5lbnQnLCdfY29uc29sZU91dHB1dFRpbWVvdXQnLCdfc2xvdycsJ2V4cGlyYXRpb25EYXRlU3RyaW5nJywnX2NvdmVyYWdlQ2FsY3VsYXRpb25FeHBlY3RlZCcsJ190ZXN0UnVuRXJyb3JNZXNzYWdlJywnL2V0Yy9yZXNvbHYuY29uZicsJ2RlYnVnJywnZmlsZVNjYW5UaW1lb3V0JywnXHgyMGVkaXRpb25ceDIwb2ZceDIwUXVva2thLmpzXHgyMHN1cHBvcnRzXHgyMGNvZGVceDIwcHJvZmlsaW5nLicsJ19wcmV2aW91c0xpbmVNYXBOZXh0R3JlYXRlclRoYW4nLCdfY29kZVN0b3J5U3VwcG9ydGVkJywnZnVsbHlDb3ZlcmVkJywndG9VcHBlckNhc2UnLCcyMnQnLCdfdGVzdEZpbHRlcicsJ25hbWVzcGFjZScsJ19yYW5nZUNvbnNvbGVMb2cnLCdXQUxMQUJZX1VOSVRfVEVTVF9SVU4nLCdceDIwdHJpYWxceDIwaGFzXHgyMG5vd1x4MjBleHBpcmVkXHgyMGFuZFx4MjB5b3VyXHgyMHByZXZpb3VzXHgyMGxpY2Vuc2VceDIwaGFzXHgyMGJlZW5ceDIwcmUtYXBwbGllZC5ceDIwJywnY2FyLnNwZWMuanMnLCdkaWZmJywnX2Vycm9yU3RhY2tNYXAnLCdfbWFwU3RhY2tUcmFjZUVudHJ5JywnaGFzaCcsJ19hZ2dyZWdhdGVGaWxlQ292ZXJhZ2UnLCdodHRwJywnc3Vic3RyJywnYWxsQ292ZXJlZCcsJ2Nsb3NlQWxsRWRpdG9ycycsJ3NsaWNlJywnY292ZXJlZEZpbGVzJywndW5rbm93blx4MjBhZGRyZXNzJywnQ2FuXHgyMG5vdFx4MjBmaW5kXHgyMGFueVx4MjB0ZXN0XHgyMGVycm9ycycsJ1x4MjBoYXNceDIwYmVlblx4MjBzdWNjZXNzZnVsbHlceDIwYWN0aXZhdGVkLicsJ19zZXRJc0NvdmVyZWQnLCdfYnVpbGRGdWxsTmFtZUFuZFBhdGgnLCdsa3AnLCdfc291cmNlJywnX2FjY3VtdWxhdGVUZXN0RmlsdGVyU3RhdGVGb3JSYW5nZScsJ2JpbmFyeScsJ3Rlc3RUaW1lbGluZUJ5UmVxdWVzdCcsJ2xpc3RlbmluZycsJ2Fic29sdXRlJywnX3JlY3ljbGVMaW5lSWZJbkNoYW5nZUZyYW1lJywncmVqZWN0JywnZm9ybWF0dGVycycsJ1dhbGxhYnkuanNceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHRoZVx4MjBvcGVuXHgyMHNvdXJjZVx4MjBzdGF0dXNceDIwb2ZceDIweW91clx4MjBwcm9qZWN0XHgyMGNvdWxkXHgyMG5vdFx4MjBiZVx4MjB2ZXJpZmllZFx4MjAoZXJyOjEwMDcpLicsJ19idWlsZExvY2F0aW9uJywnV0FMTEFCWV9UUkFDRV9FTkFCTEVEJywndHJpbVN0YXJ0JywnX3ZhbHVlc0luY2x1ZGVkSW5Db3ZlcmFnZUFnZ3JlZ2F0ZScsJ21ha2VSZScsJ2N3ZCcsJ3Byb2plY3Q6dGVzdFJ1blN0YXJ0ZWQnLCdfcmVzZXRNb2R1bGUnLCdQcm9qZWN0JywnRmFpbGVkXHgyMHRvXHgyMHN0YXJ0XHgyMHdhbGxhYnlceDIwYXBwXHgyMHNlcnZpY2U6XHgyMCcsJ3Byb21pc2UnLCdkaXJFbnN1cmVTeW5jJywnX2NhbGN1bGF0ZUxpbmVTdGF0ZScsJ0Nhblx4MjBub3RceDIwZmluZFx4MjBhbnlceDIwZmFpbGluZ1x4MjB0ZXN0cycsJ3Byb2plY3Q6Y29uc29sZU91dHB1dCcsJ19zdGFydExpbmUnLCdyZWFkeScsJ2xpbmVTdGF0ZScsJ2JpbmQnLCdfd2Vic2l0ZUxpY2Vuc2VFeHBpcmF0aW9uVGltZXN0YW1wJywnZnVsbFJ1bicsJ2NvbXBsZXRlSW5pdGlhbGl6YXRpb24nLCdtYXJrQXNDaGFuZ2VkJywnY29tbWVudEF1dG9Mb2cnLCdhZGRNYXBwaW5nJywnRXZlbnRFbWl0dGVyJywnbWpzJywnaXNTeW1ib2xpY0xpbmsnLCdjanMnLCd0cmFjZVN0ZXAnLCdfcmVtb3ZlQ2F0ZWdvcnlPclRlc3QnLCc0MjU4MjEwdnhha2pLJywnbGFzdCcsJ19lbWl0RmlsZXNUb1RyYWNrJywnc3RhcnRGaWxlJywnNXo5JywnVGhpc0V4cHJlc3Npb24nLCdwcm9qZWN0OicsJ19kaXJSZW1vdmVTeW5jJywnY2xlYXJUaW1lb3V0JywnbW9kdWxlQ291bnQnLCdfcmVjZWl2ZXInLCdfZXJyb3InLCdmaW5kSW5kZXgnLCd1cGRhdGUnLCdzb3J0Jywnb3duZXInLCdfbnVtT2ZDb3ZlcmluZ1Rlc3RzJywnaW5kZXgnLCdfY29yZScsJ0JyZWFrU3RhdGVtZW50JywnZXhlY1N5bmMnLCdfZXhjbHVzaXZlVGVzdFJ1bicsJ3ZlcnNpb24nLCdfcGF0aCcsJ2h0dHBzOi8vcXVva2thanMuY29tL3Byby8jdHJ5LXByby1mcmVlJywnc3Rkb3V0JywnLmdpdCcsJ2FjdHVhbCcsJ2NmNycsJ3VybFx4MjA9XHgyMCcsJ3Jlc3RhcnQnLCdhc3luY0dlbmVyYXRvcnMnLCdzdGFydENvbHVtbicsJ3NvdXJjZS1tYXAnLCdqZXN0LWNsaScsJ3N5bmMnLCdib2R5JywncmVtb3ZlQWxsVGVzdHMnLCdfYWRkRmFpbGVkT25NZVRlc3RJZkZhaWxpbmcnLCdfc2VuZEFmZmVjdGVkRmlsZXNBbmRDb3ZlcmFnZUNoYW5nZXMnLCdwcm90b3R5cGUnLCdGaWxlXHgyMHdhdGNoZXJceDIwaGFkXHgyMCcsJ3NldFRlc3RNYXRjaFNuYXBzaG90Q2FsbHMnLCdfc3RhdGUnLCdzdGF0ZScsJ1Byb21pc2UnLCdfc2NoZWR1bGVDb25zb2xlT3V0cHV0U2VuZCcsJ25vb3BU4oCLcnVlJywnLnRzJywncHJvamVjdDp0ZXN0UmVzdWx0cycsJ3dhbGxhYnkuYXBwJywnc3RhcnQnLCdfZmlsZXNUb1VwZGF0ZVdoZW5BY3RpdmVBZ2FpbicsJ3Byb2plY3Q6YXV0b0NvbmZpZ3VyYXRpb25BdmFpbGFibGUnLCdfbXV0ZVByb0VkaXRpb25TdWdnZXN0TG9ncG9pbnRzTm90aWZpY2F0aW9uJywnLlx4MjBZb3VceDIwbWF5XHgyMGZvcmNlXHgyMGFceDIwcmVmcmVzaFx4MjBvZlx4MjB5b3VyXHgyMGxpY2Vuc2VceDIwYnlceDIwcmUtZW50ZXJpbmdceDIweW91clx4MjBlbWFpbFx4MjBhZGRyZXNzXHgyMGluXHgyMHRoZVx4MjBtYW5hZ2VceDIwbGljZW5zZVx4MjBkaWFsb2cuJywnaW5zcGVjdE9wdHMnLCdfaXNXaW4nLCdzZXRNdWx0aWNhc3RUVEwnLCd0cmlnZ2VyJywnXHgyMj5hY3RpdmF0ZVx4MjBpdDwvYT4uPGJyLz5JZlx4MjB5b3VceDIwd2914oCLbGRceDIwbGlrZVx4MjB0b1x4MjBwdXJjaGFzZVx4MjBhXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInLCctLS0tLUJFR0lOXHgyMFBVQkxJQ1x4MjBLRVktLS0tLVx4MGFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXQzRDlyVSttYWUxVFlJR0liY0hyXHgwYSs4LzNwUVhScklpNlkwTEtjTGwrbCtXTE4xNUlOTUJuZ24zMmQyN2VIakE5QVhWKzlCdTBObVFPVWZHVEoyZlhceDBhRHpKV1ZVVW13WExZSENXRVJKSjBQSTl0dTNBdW5md0NZbTMzbGxZelcwSU12aHdDM3l2SlJSdzVhUTJ3VVJjMVx4MGFlbFV4cDI0bGl1Yytvd1ZkOGcyWVdJTnQySXVtWDNOc1RlbmMrL3JoT1BuaWJLT0s0TlBZYWl5elNoTHc3U2FTXHgwYTZubHBhY2xqK0hmdTlCVXFkaEpsZVY5TGh3RE9uVndydGVYR3J1d0tSZVpsMWc4M3p5M2orNXRxQlEvR0k4N0RceDBhM2NHa3k5bDdwSDZ2UTl4aGJQS2N5ei95T3d6Z3ljcFJodmJkanVBTGZkMFFwdXVXSjUvZVlvcGZhWGRrYzZCSVx4MGEzUUlEQVFBQlx4MGEtLS0tLUVORFx4MjBQVUJMSUNceDIwS0VZLS0tLS0nLCdfZmlsZURlbGV0ZWQnLCdFeHByZXNzaW9uU3RhdGVtZW50JywndmFyJywnZXM2JywnZXhlY3V0ZWRMaW5lJywna2luZCcsJ2ZpbGVDaGFuZ2VkSW5FZGl0b3InLCc0ZTUzZTRmOGFhNWRhYmJlYTg3YTgxNmQyOGIwMzkzZScsJ2ZpbGVDaGFuZ2VkUnVuJywnaXNUZXN0JywnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT5ceDIwdG9ceDIwcHVyY2hhc2VceDIwYVx4MjBsaWNlbnNlLjxici8+SWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRceDIwdGhlXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJywncGVuZGluZ0FjdGl2YXRpb24nLCdfcmVzb2x2ZUZpbGVuYW1lJywnZm9ybWF0V2l0aE9wdGlvbnMnLCdyZWFsUGF0aCcsJ2hlbGxvLnRlc3QuanMnLCdmdW5jdGlvblx4MjBEYXRlKClceDIwe1x4MjBbbmF0aXZlXHgyMGNvZGVdXHgyMH0nLCdfYWNjdW11bGF0ZVJhbmdlQ29uc29sZUxvZ1RleHQnLCd1c2VySW5mbycsJ3Rlc3RNYXRjaFNuYXBzaG90Q2FsbHMnLCdyZXF1aXJlJywnc25hcCcsJ3VpOnBhdXNlZCcsJ2xpbmVTaGlmdCcsJ19iYXNlRGlyJywnX2VuY29kZU1hcHBpbmcnLCdjb25maWcnLCcqKi8nLCc0NTQ0NDhJcFFBck4nLCdzZW5kJywnbG9nTWFya2VyJywncmVzdW1pbmcnLCdfdHJhY2VTdGF0ZScsJ2lzVHJhY2tpbmdMaW5lcycsJ3RjZicsJy4uLy4uL2xpYi9nbG9iYWwnLCdXYWxsYWJ5LmpzXHgyMGhhc1x4MjBiZWVuXHgyMHN0b3BwZWRceDIwYmVjYXVzZVx4MjBhblx4MjBvcGVuXHgyMHNvdXJjZVx4MjBsaWNlbnNlXHgyMHdhc1x4MjBub3RceDIwZm91bmRceDIwZm9yXHgyMGVtYWlsXHgyMGFkZHJlc3NceDIwKGVycjoxMDA2KTpceDIwJywnX3R1dG9yaWFsJywnNjY1NzEwOWZiNDQyNjMzZjQxMmYxMjg3ODg4NzE5NjAnLCdsb2dnZXInLCcoZm9jdXNlZFx4MjB0ZXN0KScsJ3Byb2plY3Q6Y29uZmlnQ2hhbmdlZCcsJ2lzUXVva2thVml0ZScsJ2dldFVUQ01vbnRoJywnaGFzUmVwb3J0YWJsZUNvdmVyYWdlJywnX3RleHQnLCdhbGxMaW5lcycsJ3dpbGRjYXJkR2xvYlNhbWVBc1BhdHRlcm4nLCdsaWNlbnNlQ2hlY2snLCdvbmxpbmVMaWNlbnNlRGV0YWlscycsJ05vXHgyMGZpbGVceDIwd2l0aFx4MjBpZFx4MjAnLCdGaWxlXHgyMGNoYW5nZWRceDIwaW5ceDIwZWRpdG9yOlx4MjAlcycsJ2BgYFx4MGEnLCdceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMGFuXHgyMGVycm9yXHgyMG9jY3VycmVkXHgyMGF0dGVtcHRpbmdceDIwdG9ceDIwYWN0aXZhdGVceDIweW91clx4MjBsaWNlbnNlLlx4MjBZb3VceDIwbXVzdFx4MjBiZVx4MjBjb25uZWN0ZWRceDIwdG9ceDIwdGhlXHgyMGludGVybmV0XHgyMGluXHgyMG9yZGVyXHgyMHRvXHgyMGFjdGl2YXRlXHgyMHlvdXJceDIwbGljZW5zZS5ceDIwKCcsJ21pZGRsZXdhcmUnLCdvblVwZGF0ZScsJ190cnVuY2F0ZUNvbnNvbGVMb2dUZXh0JywnaGlkZGVuVGltZWxpbmVTdGVwcycsJ3BhY2thZ2UuanNvbicsJ193YWxsYWJ5RW1haWwnLCdhbGxvd1RvSW5zdGFsbEltcG9ydGVkTW9kdWxlcycsJ1x4MjA+XHgyMCcsJ2pzZG9tLXF1b2trYS1wbHVnaW4nLCdceDIyXHgyMGNsYXNzPVx4MjInLCd1cGRhdGVGcm9tJywncmVwbGFjZScsJ3N0ZEVzbScsJ3JpZ2h0JywnX2N1cnJlbnRTdGFydEZpbGUnLCdfY29ubmVjdGlvbnMnLCdzdGFydDEnLCdfZnJlc2gnLCc8aG9tZURpcj4nLCdUaHJvd1N0YXRlbWVudCcsJ2ZpbGVJZCcsJ1dhbGxhYnkuanNceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHlvdXJceDIwcHJvamVjdFx4MjBpc1x4MjBub3RceDIwYXNzb2NpYXRlZFx4MjB3aXRoXHgyMGFceDIwdmFsaWRceDIwR2l0SHViXHgyMHByb2plY3RceDIwKGVycjoxMDE2KS4nLCdyb3VuZCcsJ21vZGVsOnRlc3RGaWx0ZXJJbXBsaWNpdGx5Q2hhbmdlZCcsJ3N0YXRzTWF5YmVDaGFuZ2VkJywnX3N0YXJ0Q29sdW1uJywnbW9kZWw6ZmlsZUNoYW5nZWQnLCdyZW1vdGVzJywndGVzdFNuYXBzaG90Q29udGVudCcsJ3RyaW1MZWZ0JywnbGljZW5zZUNvbGxpc2lvbicsJ19kaWZmTWF0Y2hQYXRjaCcsJ0BjanMnLCdjYzQ4ZmRjOTFkODgyNWNhOTdiMzFjNTVjYTAzNGQ0NicsJ3N1YnN0cmluZycsJ19nZXRMaWNlbnNlS2luZCcsJ19sYXRlc3RSZXBvcnRlZENvdmVyYWdlVmFsdWUnLCdub2RlLWZldGNoJywndWk6dGVzdHM6cmVzdWx0c1JlcXVlc3RlZCcsJ25leHQnLCdub3RDb3ZlcmVkQnknLCdfY2hlY2tVcmwnLCd0ZXN0RmlsdGVyRXhwbGljaXRseUNoYW5nZWQnLCdwcm9qZWN0OnJ1bm5pbmdUZXN0cycsJ3JlbW92ZUNhdGVnb3J5JywnaG9zdG5hbWUnLCdMaWNlbnNlXHgyMHJlZnJlc2hceDIwcmVxdWlyZWQ6JywnXHgyMGVkaXRpb25ceDIwb2ZceDIwUXVva2thLmpzXHgyMHN1cHBvcnRzXHgyMExpdmVceDIwVmFsdWVceDIwRGlzcGxheVx4MjBmZWF0dXJlLicsJ2NyZWF0ZVNvY2tldCcsJ2NvZGVDbGlwU2hhcmluZycsJ193cml0ZUZpbGVTeW5jJywnX2FsbG93ZWRUb1NlbmRUZXN0UmVzdWx0cycsJ19lbWl0JywnX3NldHRpbmdzJywnc2VxJywnaXNTdHJpbmcnLCdfb3JpZ2luYWxSYW5nZUNvdW50JywnY2xvc2VzdFJhbmdlJywnamVzdCcsJ0Vycm9yXHgyMFJlcG9ydGluZycsJ2hhc093blByb3BlcnR5Jywnb3B0aW9uYWxDYXRjaEJpbmRpbmcnLCdlZGl0b3JUeXBlJywnX2V4dHJhY3RJbmNsdWRlRXhjbHVkZVBhdHRlcm5zJywnX2xvY2FsUm9vdCcsJ2hhc0FueVBlbmRpbmdJbkVkaXRvckZpbGVDaGFuZ2VzJywnX2VtaXRGaWxlc01lc3NhZ2VzJywnaXNUcmFjZScsJ1N1cHByZXNzaW9uRmlsdGVyJywnX2NvcHlTeW5jJywndGVzdCcsJ3RvZ2dsZScsJ21vZGVsOmRvY3VtZW50c1VwZGF0ZWQnLCdfY29tcGFjdExpbmUnLCdhbGxUZXN0cycsJ3RleHQnLCdfbm90aWZ5QWJvdXRTdGFydGVkTW9kdWxlJywnLS0tLS1CRUdJTlx4MjBQVUJMSUNceDIwS0VZLS0tLS1ceDBhTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtcXVrMEl1NVVQMmtBU0R3R2pORFx4MGFDa2t1bmVXUmVReHhTR1dQeDI4cSs1TVdFWG5pZ2o1a0dMSTE0MHphdnNHaE9JUFZET2JCN3A1cnUxN2dkOEw2XHgwYXhaZ0J1YXB5MkIyejVQbkJiQUdPcVpCRHdVQVNDaWJZdEo2TjR3ckx5VWxDRTNKYVJsTUR1KzRWWS95YnR6UENceDBheE1XemRTemtvSHBJbUQ0bm5NK0ZMSk83Z1VDcUF5MEpkRnlUOUw3T3dmbFpaYU12aG9uYks0akVIRG9sSzdsMlx4MGFFQlNQeFpPeGo1dzVWQmJubHFaQThlK3RLbUJJVVR0cm5oa3ptc0tGTHFWU3V6SndpMjgrdmVLL0F6T1cvRjFVXHgwYVFSeHNTdTg4Nmo0SVZ6M1Fkc3gzdGxEMXMreFp1WnBHWnQ0K3BtbmUwT25zMEtoUTBQTDVneDZabW9nV3E5ZHJceDBhbXdJREFRQUJceDBhLS0tLS1FTkRceDIwUFVCTElDXHgyMEtFWS0tLS0tJywnX2dldFJlbWFpbmluZ0xpbmVSYW5nZXMnLCd0cmlhbCcsJ1dhbGxhYnkuanNceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHRoZVx4MjBvcGVuXHgyMHNvdXJjZVx4MjBzdGF0dXNceDIwb2ZceDIweW91clx4MjBwcm9qZWN0XHgyMGNvdWxkXHgyMG5vdFx4MjBiZVx4MjB2ZXJpZmllZFx4MjAoZXJyOjEwMTApLicsJ3VpOnJ1bm5pbmdQcm9qZWN0cycsJy0tLS0tQkVHSU5ceDIwUFVCTElDXHgyMEtFWS0tLS0tXHgwYU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd2YwUm42cmdGTVZOdWFlZzNLZzlceDBha2pMTlVUOFoyZm5JcmpVaERHTThGUzdvNWs0TlQxRmR6bnFzb0JwckxkckxSZGtNempIOElQcnJFVTVyS2lXbFx4MGFWTzBpS1U3UTdBbU1mQVRTdGV6dmZ5czBBQWwrbzNmL2tRaVNaeEQyVTVQL0szOGtsWXB3ZjlMOE1NdGhBZUVGXHgwYXk0eHpBNWVCdVB6QmRSSHh2VXdVcWhDQjlvNzNaNE1heEhucmF6NWh4MGY2YWdFZExWVTZYc05rbzV3WG44Wk5ceDBhUDZCYmtPT20vSGdVOEtrV3VKYlU1OHlnWHhQZi9mblpIdTJndHZyei9yTmVtb1hZMWZEeWRpek54RHkrWlBnUFx4MGFpd2VTZHFuTGhsRm9KRXV4bkl3b1BsWU03SndLaDNKaWhPekFxUVE1VTVKa001ZS9tRlEvbEZxQ1Z4TWxtQlFXXHgwYVZ3SURBUUFCXHgwYS0tLS0tRU5EXHgyMFBVQkxJQ1x4MjBLRVktLS0tLScsJ19pc0ZpbGVXaXRoQ292ZXJhZ2VPclRlc3QnLCdmaWxlcycsJ05vXHgyMG1ldGFkYXRhXHgyMGZvclx4MjBjaGFuZ2VkXHgyMGZpbGVceDIwZm91bmQ6XHgyMCVzJywnZXJyb3JzJywnc2V0RmlsdGVyTG9ncG9pbnRzJywnX2RlY2xhcmF0aW9uTGluZScsJ190ZXN0c0NvdmVyaW5nUmFuZ2VzJywndmVyaWZpY2F0aW9uUmVzdWx0JywnbGFzdE1vZGlmaWVkJywncmVsZWFzZScsJ2RlY2xhcmF0aW9uQ29sdW1uJywnb3JpZ2luYWxMaW5lJywnPCFET0NUWVBFXHgyMGh0bWw+XHgwYTxodG1sXHgyMGxhbmc9XHgyMmVuXHgyMj5ceDBhPGhlYWQ+XHgwYVx4MjBceDIwXHgyMFx4MjA8bWV0YVx4MjBjaGFyc2V0PVx4MjJVVEYtOFx4MjI+XHgwYVx4MjBceDIwXHgyMFx4MjA8bGlua1x4MjBpZD1ceDIyZmF2aWNvblx4MjJceDIwcmVsPVx4MjJpY29uXHgyMlx4MjBocmVmPVx4MjJodHRwOi8vd2FsbGFieWpzLmNvbS9hcHAvZmF2aWNvbi5pY29ceDIyXHgyMHR5cGU9XHgyMmltYWdlL3gtaWNvblx4MjIvPlx4MGFceDIwXHgyMFx4MjBceDIwPGxpbmtceDIwaWQ9XHgyMnNob3J0Y3V0XHgyMlx4MjByZWw9XHgyMnNob3J0Y3V0XHgyMGljb25ceDIyXHgyMGhyZWY9XHgyMmh0dHA6Ly93YWxsYWJ5anMuY29tL2FwcC9mYXZpY29uLmljb1x4MjJceDIwdHlwZT1ceDIyaW1hZ2UveC1pY29uXHgyMi8+XHgwYVx4MjBceDIwXHgyMFx4MjA8c3R5bGU+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwaHRtbCxceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBib2R5XHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwd2lkdGg6XHgyMDEwMCU7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGhlaWdodDpceDIwMTAwJTtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB9XHgwYVx4MjBceDIwXHgyMFx4MjA8L3N0eWxlPlx4MGE8L2hlYWQ+XHgwYTxib2R5XHgyMG9ubG9hZD1ceDIyb25sb2FkKClceDIyXHgyMHN0eWxlPVx4MjJtYXJnaW46MHB4O3BhZGRpbmc6MHB4O292ZXJmbG93OmhpZGRlbjtceDIyPlx4MGE8c2NyaXB0Plx4MGFceDIwXHgyMGZ1bmN0aW9uXHgyMG9ubG9hZCgpXHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMHZhclx4MjBzZXJ2ZXI7XHgwYVx4MjBceDIwXHgyMFx4MjB2YXJceDIwcG9ydDtceDBhXHgyMFx4MjBceDIwXHgyMHRyeVx4MjB7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMHZhclx4MjB1cmxceDIwPVx4MjBuZXdceDIwVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwc2VydmVyXHgyMD1ceDIwdXJsLnNlYXJjaFBhcmFtcy5nZXQoXHgyN3NlcnZlclx4MjcpO1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBwb3J0XHgyMD1ceDIwdXJsLnNlYXJjaFBhcmFtcy5nZXQoXHgyN3BvcnRceDI3KTtceDBhXHgyMFx4MjBceDIwXHgyMH1ceDIwY2F0Y2hceDIwKGVycm9yKVx4MjB7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMHNlcnZlclx4MjA9XHgyMG51bGw7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMHBvcnRceDIwPVx4MjBudWxsO1x4MGFceDIwXHgyMFx4MjBceDIwfVx4MGFceDIwXHgyMFx4MjBceDIwaGlzdG9yeS5yZXBsYWNlU3RhdGUobnVsbCxceDIwXHgyN1x4MjcsXHgyMGRvY3VtZW50LlVSTC5zcGxpdChceDI3P1x4MjcpWzBdKTtceDBhXHgyMFx4MjBceDIwXHgyMHZhclx4MjBxc1x4MjA9XHgyMFx4MjdceDI3O1x4MGFceDIwXHgyMFx4MjBceDIwaWZceDIwKHNlcnZlcilceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBxc1x4MjA9XHgyMChxc1x4MjB8fFx4MjBceDI3P1x4MjcpXHgyMCtceDIwXHgyN3NlcnZlcj1ceDI3XHgyMCtceDIwc2VydmVyO1x4MGFceDIwXHgyMFx4MjBceDIwfVx4MGFceDIwXHgyMFx4MjBceDIwaWZceDIwKHBvcnQpXHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwcXNceDIwPVx4MjAocXNceDIwP1x4MjAocXNceDIwK1x4MjBceDI3Jlx4MjcpXHgyMDpceDIwXHgyNz9ceDI3KVx4MjArXHgyMFx4Mjdwb3J0PVx4MjdceDIwK1x4MjBwb3J0O1x4MGFceDIwXHgyMFx4MjBceDIwfVx4MGFceDIwXHgyMFx4MjBceDIwZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHgyN3dhbGxhYnlBcHBceDI3KS5zcmNceDIwPVx4MjBceDI3aHR0cDovL3dhbGxhYnlqcy5jb20vYXBwL1x4MjdceDIwK1x4MjBxcztceDBhXHgyMFx4MjB9XHgwYVx4MGFceDIwXHgyMHRyeVx4MjB7XHgwYVx4MjBceDIwXHgyMFx4MjB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihceDI3bWVzc2FnZVx4MjcsXHgyMGZ1bmN0aW9uXHgyMChtKVx4MjB7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMHRyeVx4MjB7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwaWZceDIwKG0uZGF0YS50aXRsZSlceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwZG9jdW1lbnQudGl0bGVceDIwPVx4MjBtLmRhdGEudGl0bGU7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwfVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGlmXHgyMChtLmRhdGEuc3RhdHVzKVx4MjB7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBpZlx4MjAobS5kYXRhLnN0YXR1cy5wYXNzaW5nKVx4MjB7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFx4MjdmYXZpY29uXHgyNykuc2V0QXR0cmlidXRlKFx4MjdocmVmXHgyNyxceDIwXHgyN2h0dHA6Ly93YWxsYWJ5anMuY29tL2FwcC9mYXZpY29uLmljb1x4MjcpO1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChceDI3c2hvcnRjdXRceDI3KS5zZXRBdHRyaWJ1dGUoXHgyN2hyZWZceDI3LFx4MjBceDI3aHR0cDovL3dhbGxhYnlqcy5jb20vYXBwL2Zhdmljb24uaWNvXHgyNyk7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB9XHgyMGVsc2VceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChceDI3ZmF2aWNvblx4MjcpLnNldEF0dHJpYnV0ZShceDI3aHJlZlx4MjcsXHgyMFx4MjdodHRwOi8vd2FsbGFieWpzLmNvbS9hcHAvZmF2aWNvbi1hbHQuaWNvXHgyNyk7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFx4MjdzaG9ydGN1dFx4MjcpLnNldEF0dHJpYnV0ZShceDI3aHJlZlx4MjcsXHgyMFx4MjdodHRwOi8vd2FsbGFieWpzLmNvbS9hcHAvZmF2aWNvbi1hbHQuaWNvXHgyNyk7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwfVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB9XHgyMGNhdGNoXHgyMChlKVx4MjB7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMH1ceDBhXHgyMFx4MjBceDIwXHgyMH0pO1x4MGFceDIwXHgyMH1ceDIwY2F0Y2hceDIwKGUpXHgyMHtceDBhXHgyMFx4MjB9XHgwYTwvc2NyaXB0Plx4MGE8aWZyYW1lXHgyMGlkPVx4MjJ3YWxsYWJ5QXBwXHgyMlx4MjBmcmFtZWJvcmRlcj1ceDIyMFx4MjJceDIwc3R5bGU9XHgyMm92ZXJmbG93OmhpZGRlbjtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlXHgyMlx4MjBoZWlnaHQ9XHgyMjEwMCVceDIyXHgyMHdpZHRoPVx4MjIxMDAlXHgyMj48L2lmcmFtZT5ceDBhPC9ib2R5Plx4MGE8L2h0bWw+XHgwYScsJ19lbWl0SW5zcGVjdGlvbnMnLCd1aTpjb3ZlcmFnZUNoYW5nZWQnLCd0b2RvVGVzdHNOdW1iZXInLCdpbmNsdWRlZEV4cGxpY2l0bHlUZXN0RmlsZScsJ3N0ZXBzJywnc3VwcHJlc3Npb25zJywnd2luMzInLCdwcmVzZXJ2ZVRlc3RMb2NhdGlvbnMnLCdfc3RhcnRSYW5nZScsJ2V4dHJhY3RDb21tZW50cycsJ2ZpbHRlcmVkJywnYWRkQ29uc29sZU1lc3NhZ2UnLCcoKVx4MjA9XHgyMCcsJ3NldFJhbmdlcycsJ1N3aXRjaFN0YXRlbWVudCcsJ3NldFByZWZlcmVuY2VzJywnZmFpbGVkVG9Mb2FkRnNldmVudHMnLCdfb25VcGRhdGUnLCdfX2VzTW9kdWxlJywnaXNGYWlsaW5nJywnYXRceDIwJywncmV2ZXJzZScsJ3Rlc3RJZCcsJ3N0YXJ0TGluZScsJ2dldE93blByb3BlcnR5U3ltYm9scycsJzZmYTZiODg3ZWRmZmIyYzExM2Y4NGYxNzk2NDljYmI5JywnQWN0aW9uXHgyMGlzXHgyMG5vdFx4MjBhdmFpbGFibGVceDIwZm9yXHgyMGZpbGVzXHgyMG91dHNpZGVceDIwd2FsbGFieS5qc1x4MjBzY29wZScsJ3N0YXJ0MicsJ190cmFjZScsJ2ZpbGVQYXRoJywndWk6b3BlbmVkSW5FZGl0b3InLCdvbGRDb250ZW50Jywnc2hvcnQnLCdfc3RhY2snLCdoYXNGaWxlJywnbG9jJywnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT5ceDIwdG9ceDIwdXBncmFkZVx4MjB5b3VyXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBwdXJjaGFzZWRceDIwYVx4MjByZW5ld2FsXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJywnbW9kZWw6bG9nc1JlbW92ZWQnLCdceDIyPmFjdGl2YXRlXHgyMGl0PC9hPi4nLCdzbWFydFN0YXJ0Jywnc291cmNlSWQnLCdfdXBkYXRlVG90YWxDb3ZlcmFnZScsJ3JlbG9hZFF1b2trYVNldHRpbmdzJywnZXZhbHVhdGVFeHByZXNzaW9uSW5FZGl0b3IuJywnc3RvcHBlZCcsJyoqLyonLCdmbGF0dGVuJywnbmV4dENoZWNrJywndHJhY2UnLCdub3RDb3ZlcmVkJywnLndhbGxhYnktdHV0b3JpYWwnLCdtb2RlbDpwYXVzZWQnLCdjaGFyYWN0ZXJPZmZzZXQnLCdzdHJpbmdpZnknLCdfdGVzdHMnLCdhZ2dyZWdhdGVGaWxlQ292ZXJhZ2UnLCdPcGVuXHgyMHR1dG9yaWFsXHgyMGluXHgyMGFceDIwbmV3XHgyMHRhYicsJ2Nsb3NlZEluQWxsRWRpdG9ycycsJ2lnbm9yZUNvdmVyYWdlRm9yRmlsZScsJ2Z1bGwnLCdXYWxsYWJ5LmpzXHgyMHdpbGxceDIwYmVceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHlvdXJceDIwcHJvamVjdFx4MjBpc1x4MjBub3RceDIwYXNzb2NpYXRlZFx4MjB3aXRoXHgyMGFceDIwdmFsaWRceDIwR2l0SHViXHgyMHByb2plY3RceDIwKGVycjoxMDAyKS4nLCdmaWxlOi8vLycsJ01heScsJ251bWJlck9mQWxsUmFuZ2VzJywnRmlsZVx4MjBzeXN0ZW1ceDIwZXJyb3I6XHgyMCcsJ2F1dG9Db25zb2xlTG9nJywnbGljZW5zZWVFbWFpbCcsJ210cycsJ2NvZmZlZScsJ1RpbWVvdXQnLCd1c2VyLmRhdGEnLCdleHRlbmQnLCdwcm9qZWN0OnN0YXJ0aW5nJywnQXByaWwnLCdfc3RvcHBlclRpbWVvdXQnLCdfc2VuZEFsbEZpbGVzV2l0aENvdmVyYWdlJywnX2VuZExpbmUnLCdtb2RlbDp0cmFjZU5hdmlnYXRlZCcsJ2Nvbm5lY3QnLCd3YXJuaW5nJywnc21hcnRNb2RlU3RhcnRUZXN0T25PcGVuJywnc2hhNTEyJywnY29udGludWUtdHJpYWwtbGluaycsJ19kZWJ1Z2dlclRlc3RDb3VudGVycycsJ2Z1bmN0aW9uQmluZCcsJ2FmZmVjdGVkRmlsZXMnLCd3YXJuJywnbG9kYXNoJywndG9kbycsJ19mYWlsZWRCeU1lVGVzdHMnLCcuLy4uLy4uL3V0aWxzJywnX2lzR2xvYicsJzc5NDc5ZmU5NGZjZDJiZDlmMTQxYWQxNzE3YzM1MjgyJywnZm9ybWF0QXJncycsJ3RyYWNlTmF2aWdhdGlvblJlc2V0JywnXHgyMGVkaXRpb25ceDIwb2ZceDIwUXVva2thLmpzXHgyMHN1cHBvcnRzXHgyMG1vcmVceDIwdGhhblx4MjAyXHgyMGV4cGFuZGVkXHgyMGxldmVsc1x4MjB3aXRoaW5ceDIwVmFsdWVceDIwRXhwbG9yZXIuJywnV2FsbGFieVx4MjB0dXRvcmlhbFx4MjBoYXNceDIwYmVlblx4MjBvcGVuZWRceDIwaW5ceDIweW91clx4MjBicm93c2VyLicsJ2xxMicsJ19scnVDYWNoZScsJ21vZHVsZScsJ1x4MjI+b3VyXHgyMHdlYnNpdGU8L2E+XHgyMHRvXHgyMHVwZ3JhZGVceDIweW91clx4MjBsaWNlbnNlLjxici8+SWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRceDIwdGhlXHgyMG5ld1x4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicsJ3dhbGxhYnktdHV0b3JpYWwtb3JpZ2luYWwnLCdyYW5nZXMnLCdkaWZmQXZhaWxhYmxlJywnV2FsbGFieVx4MjB0dXRvcmlhbFx4MjBpc1x4MjBhbHJlYWR5XHgyMG9wZW5lZFx4MjBpblx4MjBvbmVceDIwb2ZceDIweW91clx4MjBicm93c2VyXHgyMHRhYnMuXHgyMFlvdVx4MjBtYXlceDIwZmluZFx4MjB0aGVceDIwb3BlbmVkXHgyMHRhYlx4MjBhbmRceDIwdXNlXHgyMGl0LFx4MjBvclx4MjBvcGVuXHgyMHRoZVx4MjB0dXRvcmlhbFx4MjBpblx4MjBhXHgyMG5ld1x4MjB0YWIuJywnbWVzc2FnZXMnLCd1bnRyYWNrRXJyb3JzJywnbGluZUNvdmVyaW5nVGVzdHNPcmRlcmVkQnlGYWlsaW5nVGhlbkRhdGUnLCdwcm9qZWN0OmZpbGVzUmVxdWlyZWQnLCdjb3B5JywnLi9leGVjdXRlZFRlc3QnLCdvbmVycm9yJywnZmlsZUNvbnRlbnRCeVBhdGgnLCdsaW5lRGlmZmVyZW5jZScsJ1ZTQ29kZScsJ3VpOmNvZGVSZXF1ZXN0ZWQnLCdfd2F0Y2hlcicsJ2Z1bGxUZXN0UmVzdWx0c1JlcG9ydCcsJ19pbnN0cnVtZW50ZWRSb290JywnX2VtaXRUZXN0UnVuRXJyb3InLCdfYWxsb3dBcHByb3hpbWF0ZVJhbmdlU2VhcmNoJywncHJvamVjdDpmaWxlTWFya2Vyc0ludmFsaWQnLCdzZXRUZXN0TG9jYXRpb25zJywnaXNEaXJlY3RvcnknLCdfY29udGludWVUcmlhbFNlc3Npb24nLCcuL3NoYXJlZC91dGlscycsJ196ZXJvT3JPbmVUZXN0RmlsZXNDaGFuZ2VkU29GYXInLCdXYWxsYWJ5LmpzXHgyMGhhc1x4MjBiZWVuXHgyMHN0b3BwZWRceDIwYmVjYXVzZVx4MjBhblx4MjBvcGVuXHgyMHNvdXJjZVx4MjBsaWNlbnNlXHgyMHdhc1x4MjBub3RceDIwZm91bmRceDIwZm9yXHgyMHlvdXJceDIwZW1haWxceDIwYWRkcmVzcy4nLCdudW1iZXInLCdfc3RhcnQnLCdmaWxlQnlJZCcsJ1x4MjA9XHgyMGZ1bmN0aW9uKClceDIwe1x4MjByZXR1cm5ceDIwZGF0YTtceDIwfTtceDIwcmV0dXJuXHgyMGRhdGE7XHgyMH0nLCdceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjBwdXJjaGFzZVx4MjBhXHgyMGxpY2Vuc2UuJywnTW9kdWxlJywncmVhY3Qtc2NyaXB0cy9zY3JpcHRzL3V0aWxzL2NyZWF0ZUplc3RDb25maWcnLCdfY292ZXJhZ2UnLCdhdXRvTG9nJywnY29tcGFueScsJ1NldHRpbmdceDIwcHJlZmVyZW5jZXMnLCdfbW9kZWwnLCdfZG9jdW1lbnRJbkVkaXRvcicsJ29idHJ1c2l2ZScsJ3JhbmdlQ292ZXJhZ2VDaGFuZ2VkJywnbGFzdFByb2Nlc3NlZCcsJ19hZGRpdGlvbmFsSGVhZGVyTWVzc2FnZScsJ3JlYWN0LXNjcmlwdHMvY29uZmlnL2VudicsJ19sYXN0RWRpdGVkVGVzdEZpbGVJZCcsJ19yZWJ1aWxkQ29uc29sZUxvZ1RleHQnLCdFcnJvclx4MjBwcm9jZXNzaW5nXHgyMHJ1bm5pbmdQcm9qZWN0c1JlcXVlc3RlZFx4MjBtZXNzYWdlJywnc2lnbmFsSW5pdGlhbFJ1bicsJ3dzOi8vJywnXHgyMHJlcXVpcmVzXHgyMGFjdGl2YXRpb24uXHgyMFBsZWFzZVx4MjByZS1lbnRlclx4MjB5b3VyXHgyMGVtYWlsXHgyMGFkZHJlc3NceDIwdG9ceDIweW91clx4MjAnLCdyZWdleHAnLCdUaGVyZVx4MjBpc1x4MjBub1x4MjBjb2RlXHgyMHRvXHgyMHJ1bixceDIwcGxlYXNlXHgyMGFkZFx4MjBzb21lXHgyMGNvZGVceDIwYmVmb3JlXHgyMHNoYXJpbmcuJywnaXRlbXMnLCcvYXBpL3VzZXIvY2xpcHMvdXBsb2FkJywnY2xvc2UnLCdvc3NMaWNlbnNlQ2hlY2snLCdfb25saW5lVmVyaWZpY2F0aW9uUHJvY2Vzc2luZycsJ2RvdCcsJ2NvbnRlbnQnLCdjYXRjaCcsJ3Z1ZScsJ2NvcHlTeW5jJywnXyRfJHdfaWQnLCdmb2N1cycsJ0Nhbm5vdFx4MjBmaW5kXHgyMG1vZHVsZVx4MjBceDI3Jywnd2hvbGUnLCdfbWFwRXJyb3InLCdGYWlsZWRceDIwdG9ceDIwY2FsY3VsYXRlXHgyMG9yaWdpbmFsXHgyMHJhbmdlc1x4MjBmb3JceDIwJywnc2VxdWVuY2UnLCdfa2V5JywncG9zdHByb2Nlc3NvcicsJ2NyeXB0bycsJ1dhbGxhYnkuanNceDIwK1x4MjBRdW9ra2EuanMnLCdfaXNSZWFkeScsJ0lOVkFMSURfVVNFUicsJzl0aXknLCdfZW1pdE5vdGlmaWNhdGlvbicsJ09ubHlceDIwXHgyN1Byb1x4MjdceDIwZWRpdGlvblx4MjBvZlx4MjBRdW9ra2EuanNceDIwc3VwcG9ydHNceDIwcHJvamVjdFx4MjBmaWxlc1x4MjBpbXBvcnQuJywnLi4vLi4vLi4vbGliL3V0aWxzJywnX3F1b2trYUF1dG9Mb2cnLCdsaXN0ZW4nLCdzcGxpY2UnLCdceDIwZWRpdGlvblx4MjBvZlx4MjBRdW9ra2EuanNceDIwc3VwcG9ydHNceDIwRWRpdC1hbmQtQ29udGludWVceDIwdGltZVx4MjBtYWNoaW5lXHgyMGZlYXR1cmUsXHgyMGFzXHgyMHdlbGxceDIwYXNceDIwYVx4MjBmZXdceDIwb3RoZXJceDIwYXdlc29tZVx4MjBmZWF0dXJlcy5ceDIwWW91XHgyMGNhblx4MjB0cnlceDIwdGhlbVx4MjBvdXRceDIwZm9yXHgyMGZyZWUuJywnYWxsb3dBcHByb3hpbWF0ZVJhbmdlU2VhcmNoJywnRmVicnVhcnknLCdodHRwczovL3F1b2trYWpzLmNvbS9wcm8nLCdfZmlsZUZvclByb2plY3QnLCd2YWxpZFRvJywnV2FsbGFieS5qc1x4MjBpc1x4MjBvdXRceDIwb2ZceDIwZGF0ZVx4MjBhbmRceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZC5ceDIwUGxlYXNlXHgyMHVwZGF0ZVx4MjB0b1x4MjBjb250aW51ZVx4MjB1c2UuXHgyMElmXHgyMFdhbGxhYnlceDIwZG9lc1x4MjBub3RceDIwdXBkYXRlXHgyMGF1dG9tYXRpY2FsbHksXHgyMHBsZWFzZVx4MjBwZXJmb3JtXHgyMGFceDIwZm9yY2VceDIwY29yZVx4MjB1cGRhdGVceDIwKGVycjoxMDAzKS4nLCdsaW5lcycsJ3N0YXJ0UmFuZ2UnLCd3cml0ZUZpbGVTeW5jJywnKSlceDVjcyonLCdwcmludCcsJ2h0dHBzOi8vZ2l0aHViLmNvbScsJ29wZW5lZEluRWRpdG9yJywnX2xhc3RSZXBvcnRlZEdsb2JhbEVycm9ycycsJ2N1cnInLCdydW5PblNhdmUnLCdwaXBlbGluZU9wZXJhdG9yJywnX3ZhbHVlQmFnJywnY29sdW1uJywndWk6c3VtbWFyeScsJ3NwZWMnLCduYXZpZ2F0aW9uUmVxdWVzdGVkJywnYWN0aXZlTG9ncG9pbnRzJywnYmFja2dyb3VuZFRhc2tJZCcsJ19hY3RpdmVUZXN0RmlsZScsJ1x4MjB3aXRob3V0XHgyMHJlY2VpdmluZ1x4MjB0aGVzZVx4MjB3YXJuaW5ncyxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMicsJ2hvc3QnLCdjb25uZWN0aW9uJywndHV0b3JpYWw6c3RhcnRNb2R1bGUnLCdtb2RlbDppbnNwZWN0aW9ucycsJ3N0b3BOYXZpZ2F0aW9uJywnZW5kTGluZScsJ3Byb2plY3Q6YnVzeScsJ3NlcCcsJ2NvcHlEaWFnbm9zdGljc1JlcG9ydFRvQ2xpcGJvYXJkJywnYnJlYWtwb2ludHMnLCdhZGRpdGlvbmFsSGVhZGVyTWVzc2FnZScsJ29zcy5sb2cnLCd0ZXN0UmVzdWx0c0NoYW5nZWQnLCdfcmVjZW50QWN0aXZpdHknLCdleHBlY3RlZCcsJ3BhdXNlJywnYmFja2dyb3VuZFRhc2tQcm9ncmVzcycsJ0lmXHgyMHlvdVx4MjB3b3VsZFx4MjBsaWtlXHgyMHRvXHgyMHRyeVx4MjAnLCdjaG9raWRhcicsJ251bGwnLCdfcmFuZ2VUb0xvYycsJ2Zyb20nLCd1aTp0ZXN0czpyZXN1bHRzQWJhbmRvbmVkJywnb3JpZ2luYWxQb3NpdGlvbkZvcicsJ2h0dHBzOi8vd2FsbGFieWpzLmNvbS9wdXJjaGFzZScsJ2hpdHMnLCcwM19jb2RlX2NvdmVyYWdlJywnZXhjbHVzaW9ucycsJ3RyYWNrZWRMaW5lcycsJ2NsZWFyJywnLi9lcnJvckVudHJ5JywnX2lzQ292ZXJlZEJ5Tm90VGVzdHMnLCdfaXNGYWlsaW5nJywncGxhdGZvcm0nLCd0ZWxlbWV0cnknLCdsaW5lUmVwb3J0JywndHJhY2VJZCcsJ29ub3BlbicsJ19jbGVhblN0cmluZycsJ3RvdGFsVGVzdHNOdW1iZXInLCdzaWduYXR1cmUnLCdhdXRvRXhwYW5kJywnRmFpbGVkXHgyMHRvXHgyMHJlYWRceDIwSmVzdFx4MjBjb25maWd1cmF0aW9uXHgyMGZyb21ceDIwXHgyNycsJ2lzQXJyYXknLCdyZW1vdmUnLCdleGFjdFJhbmdlJywnbWluJywncHJvamVjdDp3YWxsYWJ5QXBwVXJsJywnMDBfYWJvdXQnLCdwcm9qZWN0TmFtZScsJ3dhbGxhYnknLCdjaGFuZ2VJZCcsJ19yZXNldFRyYWNlQ29udGV4dCcsJ19sb2dnZWQnLCdwb3AnLCd1aTpzdGFydCcsJ09ubHlceDIwSmVzdFx4MjB2MjQueFx4MjBvclx4MjBoaWdoZXJceDIwaXNceDIwc3VwcG9ydGVkLFx4MjBidXRceDIwZm91bmRceDIwdicsJ2ZpbHRlcicsJ2ludmFsaWRDb3JlVmVyc2lvbicsJ2Z1bmN0aW9uJywnX3JlcG9ydEdsb2JhbEVycm9ycycsJ3JlbW92ZUZpbGUnLCdfdGVzdENvdW50ZXJzJywnc21hcnRNb2RlU3RhcnQnLCdceDIwdHJpYWxceDIwcGVyaW9kXHgyMGlzXHgyMG92ZXIsXHgyMHRoYW5rc1x4MjBmb3JceDIwdHJ5aW5nXHgyMGl0XHgyMG91dC5ceDIwUGxlYXNlXHgyMHZpc2l0XHgyMDxhXHgyMGhyZWY9XHgyMicsJ3Byb2plY3Q6bGljZW5zZUNvbGxpc2lvbicsJ19uZXdSYW5nZXMnLCdlbnRyaWVzJywncGF0aHMnLCdnZXRWZXJzaW9uJywnX2ZpbGVzJywncHJvamVjdDp0ZXN0UnVuRXJyb3InLCdvcmRlcicsJ3N0YXRpYycsJ2phdmFzY3JpcHQnLCdzdXBwcmVzc2VzJywncmVxdWVzdCcsJ19ub2RlTW9kdWxlUGF0aHMnLCd0aHJvd0V4cHJlc3Npb25zJywncmFuZ2UnLCduZXQnLCdfcmVzZXRQcmV2aW91c1RyYWNlU3RhdGUnLCcuL2xvZ2dlcicsJ0ZhaWxlZFx4MjB0b1x4MjBkZXNlcmlhbGl6ZVx4MjBtZXNzYWdlXHgyMGZyb21ceDIwd2FsbGFieVx4MjB0dXRvcmlhbDpceDIwJywnVFJJQUwnLCdpbnN0cnVtZW50ZWRGaWxlJywnY2hhaW4nLCdJTlZBTElEX1NZTUxJTksnLCcuLi8uLi8uLi9saWIvYmFiZWxSYW5nZUNhbGN1bGF0b3InLCdfaW52YWxpZEZhaWxlZEJ5TWVUZXN0cycsJ190ZXN0RGVjbGFyYXRpb25MaW5lTWFwJywnc2NoZWR1bGVCYWNrZ3JvdW5kRmlsZXNMaW5lc1VudHJhY2tpbmcnLCdhdHRhY2hlZFRvU291cmNlRmlsZScsJ2hhc1BlbmRpbmdUcmFuc2llbnRGaWxlQ2hhbmdlc09ubHknLCcwN2VkMWZjNmEzYTMyZDY2MDk5ZmUxODcwYzgzYTBjZScsJ0xpbnV4L1VidW50dVx4MjBlbnZpcm9ubWVudHNceDIwcmVxdWlyZVx4MjBceDIyeGNsaXBceDIyXHgyMHRvXHgyMGJlXHgyMGluc3RhbGxlZC5ceDIwJ107XzB4NWNlND1mdW5jdGlvbigpe3JldHVybiBfMHgyYjEzNTA7fTtyZXR1cm4gXzB4NWNlNCgpO30=